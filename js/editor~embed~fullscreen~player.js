(window["webpackJsonpGUI"] = window["webpackJsonpGUI"] || []).push([[2],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_style_proptype__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(218);
/* harmony import */ var react_style_proptype__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_style_proptype__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _box_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(785);
/* harmony import */ var _box_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_box_css__WEBPACK_IMPORTED_MODULE_4__);
const _excluded = ["alignContent", "alignItems", "alignSelf", "basis", "children", "className", "componentRef", "direction", "element", "grow", "height", "justifyContent", "width", "wrap", "shrink", "style"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const getRandomColor = function () {
  // In "DEBUG" mode this is used to output a random background color for each
  // box. The function gives the same "random" set for each seed, allowing re-
  // renders of the same content to give the same random display.
  const random = function (seed) {
    let mW = seed;
    let mZ = 987654321;
    const mask = 0xffffffff;
    return function () {
      mZ = 36969 * (mZ & 65535) + (mZ >> 16) & mask;
      mW = 18000 * (mW & 65535) + (mW >> 16) & mask;
      let result = (mZ << 16) + mW & mask;
      result /= 4294967296;
      return result + 1;
    };
  }(601);
  return function () {
    const r = Math.max(parseInt(random() * 100, 10) % 256, 1);
    const g = Math.max(parseInt(random() * 100, 10) % 256, 1);
    const b = Math.max(parseInt(random() * 100, 10) % 256, 1);
    return "rgb(".concat(r, ",").concat(g, ",").concat(b, ")");
  };
}();
const Box = props => {
  const {
      alignContent,
      alignItems,
      alignSelf,
      basis,
      children,
      className,
      componentRef,
      direction,
      element,
      grow,
      height,
      justifyContent,
      width,
      wrap,
      shrink,
      style
    } = props,
    componentProps = _objectWithoutProperties(props, _excluded);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(element, _objectSpread({
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(className, _box_css__WEBPACK_IMPORTED_MODULE_4___default.a.box),
    ref: componentRef,
    style: Object.assign({
      alignContent: alignContent,
      alignItems: alignItems,
      alignSelf: alignSelf,
      flexBasis: basis,
      flexDirection: direction,
      flexGrow: grow,
      flexShrink: shrink,
      flexWrap: wrap,
      justifyContent: justifyContent,
      width: width,
      height: height
    },  false ? undefined : {}, style)
  }, componentProps), children);
};
Box.propTypes = {
  /** Defines how the browser distributes space between and around content items vertically within this box. */
  alignContent: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'stretch']),
  /** Defines how the browser distributes space between and around flex items horizontally within this box. */
  alignItems: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['flex-start', 'flex-end', 'center', 'baseline', 'stretch']),
  /** Specifies how this box should be aligned inside of its container (requires the container to be flexable). */
  alignSelf: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch']),
  /** Specifies the initial length of this box */
  basis: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['auto'])]),
  /** Specifies the the HTML nodes which will be child elements of this box. */
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node,
  /** Specifies the class name that will be set on this box */
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  /**
   * A callback function whose first parameter is the underlying dom elements.
   * This call back will be executed immediately after the component is mounted or unmounted
   */
  componentRef: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  /** https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction */
  direction: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
  /** Specifies the type of HTML element of this box. Defaults to div. */
  element: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  /** Specifies the flex grow factor of a flex item. */
  grow: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  /** The height in pixels (if specified as a number) or a string if different units are required. */
  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),
  /** https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content */
  justifyContent: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around']),
  /** Specifies the flex shrink factor of a flex item. */
  shrink: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
  /** An object whose keys are css property names and whose values correspond the the css property. */
  style: react_style_proptype__WEBPACK_IMPORTED_MODULE_3___default.a,
  /** The width in pixels (if specified as a number) or a string if different units are required. */
  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),
  /** How whitespace should wrap within this block. */
  wrap: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['nowrap', 'wrap', 'wrap-reverse'])
};
Box.defaultProps = {
  element: 'div',
  style: {}
};
/* harmony default export */ __webpack_exports__["a"] = (Box);

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1785);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 9 */,
/* 10 */,
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return initialState; });
/* unused harmony export LoadingState */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadingStates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return autoUpdateProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return defaultProjectId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return doneCreatingProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return doneUpdatingProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return getIsAnyCreatingNewState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return getIsCreatingCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return getIsCreatingNew; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return getIsError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return getIsFetchingWithId; });
/* unused harmony export getIsFetchingWithoutId */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return getIsLoading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return getIsLoadingWithId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return getIsLoadingUpload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return getIsManualUpdating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return getIsRemixing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return getIsShowingProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return getIsShowingWithId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return getIsShowingWithoutId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return getIsUpdating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return manualUpdateProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return onFetchedProjectData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return onLoadedProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return projectError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return remixProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return requestNewProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return requestProjectUpload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return saveProjectAsCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return setProjectId; });
/* harmony import */ var keymirror__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53);
/* harmony import */ var keymirror__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(keymirror__WEBPACK_IMPORTED_MODULE_0__);

const DONE_CREATING_COPY = 'scratch-gui/project-state/DONE_CREATING_COPY';
const DONE_CREATING_NEW = 'scratch-gui/project-state/DONE_CREATING_NEW';
const DONE_FETCHING_DEFAULT = 'scratch-gui/project-state/DONE_FETCHING_DEFAULT';
const DONE_FETCHING_WITH_ID = 'scratch-gui/project-state/DONE_FETCHING_WITH_ID';
const DONE_LOADING_VM_TO_SAVE = 'scratch-gui/project-state/DONE_LOADING_VM_TO_SAVE';
const DONE_LOADING_VM_WITH_ID = 'scratch-gui/project-state/DONE_LOADING_VM_WITH_ID';
const DONE_LOADING_VM_WITHOUT_ID = 'scratch-gui/project-state/DONE_LOADING_VM_WITHOUT_ID';
const DONE_REMIXING = 'scratch-gui/project-state/DONE_REMIXING';
const DONE_UPDATING = 'scratch-gui/project-state/DONE_UPDATING';
const DONE_UPDATING_BEFORE_COPY = 'scratch-gui/project-state/DONE_UPDATING_BEFORE_COPY';
const DONE_UPDATING_BEFORE_NEW = 'scratch-gui/project-state/DONE_UPDATING_BEFORE_NEW';
const RETURN_TO_SHOWING = 'scratch-gui/project-state/RETURN_TO_SHOWING';
const SET_PROJECT_ID = 'scratch-gui/project-state/SET_PROJECT_ID';
const START_AUTO_UPDATING = 'scratch-gui/project-state/START_AUTO_UPDATING';
const START_CREATING_NEW = 'scratch-gui/project-state/START_CREATING_NEW';
const START_ERROR = 'scratch-gui/project-state/START_ERROR';
const START_FETCHING_NEW = 'scratch-gui/project-state/START_FETCHING_NEW';
const START_LOADING_VM_FILE_UPLOAD = 'scratch-gui/project-state/START_LOADING_VM_FILE_UPLOAD';
const START_MANUAL_UPDATING = 'scratch-gui/project-state/START_MANUAL_UPDATING';
const START_REMIXING = 'scratch-gui/project-state/START_REMIXING';
const START_UPDATING_BEFORE_CREATING_COPY = 'scratch-gui/project-state/START_UPDATING_BEFORE_CREATING_COPY';
const START_UPDATING_BEFORE_CREATING_NEW = 'scratch-gui/project-state/START_UPDATING_BEFORE_CREATING_NEW';
const defaultProjectId = '0'; // hardcoded id of default project

const LoadingState = keymirror__WEBPACK_IMPORTED_MODULE_0___default()({
  NOT_LOADED: null,
  ERROR: null,
  AUTO_UPDATING: null,
  CREATING_COPY: null,
  CREATING_NEW: null,
  FETCHING_NEW_DEFAULT: null,
  FETCHING_WITH_ID: null,
  LOADING_VM_FILE_UPLOAD: null,
  LOADING_VM_NEW_DEFAULT: null,
  LOADING_VM_WITH_ID: null,
  MANUAL_UPDATING: null,
  REMIXING: null,
  SHOWING_WITH_ID: null,
  SHOWING_WITHOUT_ID: null,
  UPDATING_BEFORE_COPY: null,
  UPDATING_BEFORE_NEW: null
});
const LoadingStates = Object.keys(LoadingState);
const getIsFetchingWithoutId = loadingState =>
// LOADING_VM_FILE_UPLOAD is an honorary fetch, since there is no fetching step for file uploads
loadingState === LoadingState.LOADING_VM_FILE_UPLOAD || loadingState === LoadingState.FETCHING_NEW_DEFAULT;
const getIsFetchingWithId = loadingState => loadingState === LoadingState.FETCHING_WITH_ID || loadingState === LoadingState.FETCHING_NEW_DEFAULT;
const getIsLoadingWithId = loadingState => loadingState === LoadingState.LOADING_VM_WITH_ID || loadingState === LoadingState.LOADING_VM_NEW_DEFAULT;
const getIsLoading = loadingState => loadingState === LoadingState.LOADING_VM_FILE_UPLOAD || loadingState === LoadingState.LOADING_VM_WITH_ID || loadingState === LoadingState.LOADING_VM_NEW_DEFAULT;
const getIsLoadingUpload = loadingState => loadingState === LoadingState.LOADING_VM_FILE_UPLOAD;
const getIsCreatingNew = loadingState => loadingState === LoadingState.CREATING_NEW;
const getIsAnyCreatingNewState = loadingState => loadingState === LoadingState.FETCHING_NEW_DEFAULT || loadingState === LoadingState.LOADING_VM_NEW_DEFAULT || loadingState === LoadingState.CREATING_NEW;
const getIsCreatingCopy = loadingState => loadingState === LoadingState.CREATING_COPY;
const getIsManualUpdating = loadingState => loadingState === LoadingState.MANUAL_UPDATING;
const getIsRemixing = loadingState => loadingState === LoadingState.REMIXING;
const getIsUpdating = loadingState => loadingState === LoadingState.AUTO_UPDATING || loadingState === LoadingState.MANUAL_UPDATING || loadingState === LoadingState.UPDATING_BEFORE_COPY || loadingState === LoadingState.UPDATING_BEFORE_NEW;
const getIsShowingProject = loadingState => loadingState === LoadingState.SHOWING_WITH_ID || loadingState === LoadingState.SHOWING_WITHOUT_ID;
const getIsShowingWithId = loadingState => loadingState === LoadingState.SHOWING_WITH_ID;
const getIsShowingWithoutId = loadingState => loadingState === LoadingState.SHOWING_WITHOUT_ID;
const getIsError = loadingState => loadingState === LoadingState.ERROR;
const initialState = {
  error: null,
  projectData: null,
  projectId: null,
  loadingState: LoadingState.NOT_LOADED
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case DONE_CREATING_NEW:
      // We need to set project id since we just created new project on the server.
      // No need to load, we should have data already in vm.
      if (state.loadingState === LoadingState.CREATING_NEW) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID,
          projectId: action.projectId
        });
      }
      return state;
    case DONE_FETCHING_WITH_ID:
      if (state.loadingState === LoadingState.FETCHING_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.LOADING_VM_WITH_ID,
          projectData: action.projectData
        });
      }
      return state;
    case DONE_FETCHING_DEFAULT:
      if (state.loadingState === LoadingState.FETCHING_NEW_DEFAULT) {
        return Object.assign({}, state, {
          loadingState: LoadingState.LOADING_VM_NEW_DEFAULT,
          projectData: action.projectData
        });
      }
      return state;
    case DONE_LOADING_VM_WITHOUT_ID:
      if (state.loadingState === LoadingState.LOADING_VM_FILE_UPLOAD || state.loadingState === LoadingState.LOADING_VM_NEW_DEFAULT) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITHOUT_ID,
          projectId: defaultProjectId
        });
      }
      return state;
    case DONE_LOADING_VM_WITH_ID:
      if (state.loadingState === LoadingState.LOADING_VM_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID
        });
      }
      return state;
    case DONE_LOADING_VM_TO_SAVE:
      if (state.loadingState === LoadingState.LOADING_VM_FILE_UPLOAD) {
        return Object.assign({}, state, {
          loadingState: LoadingState.AUTO_UPDATING
        });
      }
      return state;
    case DONE_REMIXING:
      // We need to set project id since we just created new project on the server.
      // No need to load, we should have data already in vm.
      if (state.loadingState === LoadingState.REMIXING) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID,
          projectId: action.projectId
        });
      }
      return state;
    case DONE_CREATING_COPY:
      // We need to set project id since we just created new project on the server.
      // No need to load, we should have data already in vm.
      if (state.loadingState === LoadingState.CREATING_COPY) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID,
          projectId: action.projectId
        });
      }
      return state;
    case DONE_UPDATING:
      if (state.loadingState === LoadingState.AUTO_UPDATING || state.loadingState === LoadingState.MANUAL_UPDATING) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID
        });
      }
      return state;
    case DONE_UPDATING_BEFORE_COPY:
      if (state.loadingState === LoadingState.UPDATING_BEFORE_COPY) {
        return Object.assign({}, state, {
          loadingState: LoadingState.CREATING_COPY
        });
      }
      return state;
    case DONE_UPDATING_BEFORE_NEW:
      if (state.loadingState === LoadingState.UPDATING_BEFORE_NEW) {
        return Object.assign({}, state, {
          loadingState: LoadingState.FETCHING_NEW_DEFAULT,
          projectId: defaultProjectId
        });
      }
      return state;
    case RETURN_TO_SHOWING:
      if (state.projectId === null || state.projectId === defaultProjectId) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITHOUT_ID,
          projectId: defaultProjectId
        });
      }
      return Object.assign({}, state, {
        loadingState: LoadingState.SHOWING_WITH_ID
      });
    case SET_PROJECT_ID:
      // if the projectId hasn't actually changed do nothing
      if (state.projectId === action.projectId) {
        return state;
      }
      // if we were already showing a project, and a different projectId is set, only fetch that project if
      // projectId has changed. This prevents re-fetching projects unnecessarily.
      if (state.loadingState === LoadingState.SHOWING_WITH_ID) {
        // if setting the default project id, specifically fetch that project
        if (action.projectId === defaultProjectId || action.projectId === null) {
          return Object.assign({}, state, {
            loadingState: LoadingState.FETCHING_NEW_DEFAULT,
            projectId: defaultProjectId
          });
        }
        return Object.assign({}, state, {
          loadingState: LoadingState.FETCHING_WITH_ID,
          projectId: action.projectId
        });
      } else if (state.loadingState === LoadingState.SHOWING_WITHOUT_ID) {
        // if we were showing a project already, don't transition to default project.
        if (action.projectId !== defaultProjectId && action.projectId !== null) {
          return Object.assign({}, state, {
            loadingState: LoadingState.FETCHING_WITH_ID,
            projectId: action.projectId
          });
        }
      } else {
        // allow any other states to transition to fetching project
        // if setting the default project id, specifically fetch that project
        if (action.projectId === defaultProjectId || action.projectId === null) {
          return Object.assign({}, state, {
            loadingState: LoadingState.FETCHING_NEW_DEFAULT,
            projectId: defaultProjectId
          });
        }
        return Object.assign({}, state, {
          loadingState: LoadingState.FETCHING_WITH_ID,
          projectId: action.projectId
        });
      }
      return state;
    case START_AUTO_UPDATING:
      if (state.loadingState === LoadingState.SHOWING_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.AUTO_UPDATING
        });
      }
      return state;
    case START_CREATING_NEW:
      if (state.loadingState === LoadingState.SHOWING_WITHOUT_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.CREATING_NEW
        });
      }
      return state;
    case START_FETCHING_NEW:
      if ([LoadingState.SHOWING_WITH_ID, LoadingState.SHOWING_WITHOUT_ID].includes(state.loadingState)) {
        return Object.assign({}, state, {
          loadingState: LoadingState.FETCHING_NEW_DEFAULT,
          projectId: defaultProjectId
        });
      }
      return state;
    case START_LOADING_VM_FILE_UPLOAD:
      if ([LoadingState.NOT_LOADED, LoadingState.SHOWING_WITH_ID, LoadingState.SHOWING_WITHOUT_ID].includes(state.loadingState)) {
        return Object.assign({}, state, {
          loadingState: LoadingState.LOADING_VM_FILE_UPLOAD
        });
      }
      return state;
    case START_MANUAL_UPDATING:
      if (state.loadingState === LoadingState.SHOWING_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.MANUAL_UPDATING
        });
      }
      return state;
    case START_REMIXING:
      if (state.loadingState === LoadingState.SHOWING_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.REMIXING
        });
      }
      return state;
    case START_UPDATING_BEFORE_CREATING_COPY:
      if (state.loadingState === LoadingState.SHOWING_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.UPDATING_BEFORE_COPY
        });
      }
      return state;
    case START_UPDATING_BEFORE_CREATING_NEW:
      if (state.loadingState === LoadingState.SHOWING_WITH_ID) {
        return Object.assign({}, state, {
          loadingState: LoadingState.UPDATING_BEFORE_NEW
        });
      }
      return state;
    case START_ERROR:
      // fatal errors: there's no correct editor state for us to show
      if ([LoadingState.FETCHING_NEW_DEFAULT, LoadingState.FETCHING_WITH_ID, LoadingState.LOADING_VM_NEW_DEFAULT, LoadingState.LOADING_VM_WITH_ID].includes(state.loadingState)) {
        return Object.assign({}, state, {
          loadingState: LoadingState.ERROR,
          error: action.error
        });
      }
      // non-fatal errors: can keep showing editor state fine
      if ([LoadingState.AUTO_UPDATING, LoadingState.CREATING_COPY, LoadingState.MANUAL_UPDATING, LoadingState.REMIXING, LoadingState.UPDATING_BEFORE_COPY, LoadingState.UPDATING_BEFORE_NEW].includes(state.loadingState)) {
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID,
          error: action.error
        });
      }
      // non-fatal error; state to show depends on whether project we're showing
      // has an id or not
      if (state.loadingState === LoadingState.CREATING_NEW) {
        if (state.projectId === defaultProjectId || state.projectId === null) {
          return Object.assign({}, state, {
            loadingState: LoadingState.SHOWING_WITHOUT_ID,
            error: action.error
          });
        }
        return Object.assign({}, state, {
          loadingState: LoadingState.SHOWING_WITH_ID,
          error: action.error
        });
      }
      return state;
    default:
      return state;
  }
};
const createProject = () => ({
  type: START_CREATING_NEW
});
const doneCreatingProject = (id, loadingState) => {
  switch (loadingState) {
    case LoadingState.CREATING_NEW:
      return {
        type: DONE_CREATING_NEW,
        projectId: id
      };
    case LoadingState.CREATING_COPY:
      return {
        type: DONE_CREATING_COPY,
        projectId: id
      };
    case LoadingState.REMIXING:
      return {
        type: DONE_REMIXING,
        projectId: id
      };
    default:
      break;
  }
};
const onFetchedProjectData = (projectData, loadingState) => {
  switch (loadingState) {
    case LoadingState.FETCHING_WITH_ID:
      return {
        type: DONE_FETCHING_WITH_ID,
        projectData: projectData
      };
    case LoadingState.FETCHING_NEW_DEFAULT:
      return {
        type: DONE_FETCHING_DEFAULT,
        projectData: projectData
      };
    default:
      break;
  }
};
const onLoadedProject = (loadingState, canSave, success) => {
  switch (loadingState) {
    case LoadingState.LOADING_VM_WITH_ID:
      if (success) {
        return {
          type: DONE_LOADING_VM_WITH_ID
        };
      }
      // failed to load project; just keep showing current project
      return {
        type: RETURN_TO_SHOWING
      };
    case LoadingState.LOADING_VM_FILE_UPLOAD:
      if (success) {
        if (canSave) {
          return {
            type: DONE_LOADING_VM_TO_SAVE
          };
        }
        return {
          type: DONE_LOADING_VM_WITHOUT_ID
        };
      }
      // failed to load project; just keep showing current project
      return {
        type: RETURN_TO_SHOWING
      };
    case LoadingState.LOADING_VM_NEW_DEFAULT:
      if (success) {
        return {
          type: DONE_LOADING_VM_WITHOUT_ID
        };
      }
      // failed to load default project; show error
      return {
        type: START_ERROR
      };
    default:
      return;
  }
};
const doneUpdatingProject = loadingState => {
  switch (loadingState) {
    case LoadingState.AUTO_UPDATING:
    case LoadingState.MANUAL_UPDATING:
      return {
        type: DONE_UPDATING
      };
    case LoadingState.UPDATING_BEFORE_COPY:
      return {
        type: DONE_UPDATING_BEFORE_COPY
      };
    case LoadingState.UPDATING_BEFORE_NEW:
      return {
        type: DONE_UPDATING_BEFORE_NEW
      };
    default:
      break;
  }
};
const projectError = error => ({
  type: START_ERROR,
  error: error
});
const setProjectId = id => ({
  type: SET_PROJECT_ID,
  projectId: id
});
const requestNewProject = needSave => {
  if (needSave) return {
    type: START_UPDATING_BEFORE_CREATING_NEW
  };
  return {
    type: START_FETCHING_NEW
  };
};
const requestProjectUpload = loadingState => {
  switch (loadingState) {
    case LoadingState.NOT_LOADED:
    case LoadingState.SHOWING_WITH_ID:
    case LoadingState.SHOWING_WITHOUT_ID:
      return {
        type: START_LOADING_VM_FILE_UPLOAD
      };
    default:
      break;
  }
};
const autoUpdateProject = () => ({
  type: START_AUTO_UPDATING
});
const manualUpdateProject = () => ({
  type: START_MANUAL_UPDATING
});
const saveProjectAsCopy = () => ({
  type: START_UPDATING_BEFORE_CREATING_COPY
});
const remixProject = () => ({
  type: START_REMIXING
});


/***/ }),
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1773);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 16 */,
/* 17 */,
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var minilog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(138);
/* harmony import */ var minilog__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(minilog__WEBPACK_IMPORTED_MODULE_0__);

var ogconsoleerror = console.error;
minilog__WEBPACK_IMPORTED_MODULE_0___default.a.enable();
/* harmony default export */ __webpack_exports__["default"] = (minilog__WEBPACK_IMPORTED_MODULE_0___default()('gui'));

/***/ }),
/* 19 */,
/* 20 */,
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return openBackdropLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return openCostumeLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return openExtensionLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return openLoadingProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return openSoundLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return openSpriteLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return openSoundRecorder; });
/* unused harmony export openTelemetryModal */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return openTipsLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return openConnectionModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return openUsernameModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return openSettingsModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return openCustomExtModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return closeBackdropLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return closeCostumeLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return closeExtensionLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return closeLoadingProject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return closeSpriteLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return closeSoundLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return closeSoundRecorder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return closeTelemetryModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return closeTipsLibrary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return closeConnectionModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return closeUsernameModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return closeSettingsModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return closeCustomExtModal; });
const OPEN_MODAL = 'scratch-gui/modals/OPEN_MODAL';
const CLOSE_MODAL = 'scratch-gui/modals/CLOSE_MODAL';
const MODAL_BACKDROP_LIBRARY = 'backdropLibrary';
const MODAL_COSTUME_LIBRARY = 'costumeLibrary';
const MODAL_EXTENSION_LIBRARY = 'extensionLibrary';
const MODAL_LOADING_PROJECT = 'loadingProject';
const MODAL_TELEMETRY = 'telemetryModal';
const MODAL_SOUND_LIBRARY = 'soundLibrary';
const MODAL_SPRITE_LIBRARY = 'spriteLibrary';
const MODAL_SOUND_RECORDER = 'soundRecorder';
const MODAL_CONNECTION = 'connectionModal';
const MODAL_TIPS_LIBRARY = 'tipsLibrary';
const MODAL_USERNAME = 'usernameModal';
const MODAL_SETTINGS = 'settingsModal';
const MODAL_CUSTOM_EXTENSION = 'gmCustomExtension';
const initialState = {
  [MODAL_BACKDROP_LIBRARY]: false,
  [MODAL_COSTUME_LIBRARY]: false,
  [MODAL_EXTENSION_LIBRARY]: false,
  [MODAL_LOADING_PROJECT]: false,
  [MODAL_TELEMETRY]: false,
  [MODAL_SOUND_LIBRARY]: false,
  [MODAL_SPRITE_LIBRARY]: false,
  [MODAL_SOUND_RECORDER]: false,
  [MODAL_CONNECTION]: false,
  [MODAL_TIPS_LIBRARY]: false,
  [MODAL_USERNAME]: false,
  [MODAL_SETTINGS]: false,
  [MODAL_CUSTOM_EXTENSION]: false
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case OPEN_MODAL:
      return Object.assign({}, state, {
        [action.modal]: true
      });
    case CLOSE_MODAL:
      return Object.assign({}, state, {
        [action.modal]: false
      });
    default:
      return state;
  }
};
const openModal = function openModal(modal) {
  return {
    type: OPEN_MODAL,
    modal: modal
  };
};
const closeModal = function closeModal(modal) {
  return {
    type: CLOSE_MODAL,
    modal: modal
  };
};
const openBackdropLibrary = function openBackdropLibrary() {
  return openModal(MODAL_BACKDROP_LIBRARY);
};
const openCostumeLibrary = function openCostumeLibrary() {
  return openModal(MODAL_COSTUME_LIBRARY);
};
const openExtensionLibrary = function openExtensionLibrary() {
  return openModal(MODAL_EXTENSION_LIBRARY);
};
const openLoadingProject = function openLoadingProject() {
  return openModal(MODAL_LOADING_PROJECT);
};
const openTelemetryModal = function openTelemetryModal() {
  return openModal(MODAL_TELEMETRY);
};
const openSoundLibrary = function openSoundLibrary() {
  return openModal(MODAL_SOUND_LIBRARY);
};
const openSpriteLibrary = function openSpriteLibrary() {
  return openModal(MODAL_SPRITE_LIBRARY);
};
const openSoundRecorder = function openSoundRecorder() {
  return openModal(MODAL_SOUND_RECORDER);
};
const openConnectionModal = function openConnectionModal() {
  return openModal(MODAL_CONNECTION);
};
const openTipsLibrary = function openTipsLibrary() {
  return openModal(MODAL_TIPS_LIBRARY);
};
const openUsernameModal = function openUsernameModal() {
  return openModal(MODAL_USERNAME);
};
const openSettingsModal = function openSettingsModal() {
  return openModal(MODAL_SETTINGS);
};
const openCustomExtModal = function openCustomExtModal() {
  return openModal(MODAL_CUSTOM_EXTENSION);
};
const closeBackdropLibrary = function closeBackdropLibrary() {
  return closeModal(MODAL_BACKDROP_LIBRARY);
};
const closeCostumeLibrary = function closeCostumeLibrary() {
  return closeModal(MODAL_COSTUME_LIBRARY);
};
const closeExtensionLibrary = function closeExtensionLibrary() {
  return closeModal(MODAL_EXTENSION_LIBRARY);
};
const closeLoadingProject = function closeLoadingProject() {
  return closeModal(MODAL_LOADING_PROJECT);
};
const closeTelemetryModal = function closeTelemetryModal() {
  return closeModal(MODAL_TELEMETRY);
};
const closeSpriteLibrary = function closeSpriteLibrary() {
  return closeModal(MODAL_SPRITE_LIBRARY);
};
const closeSoundLibrary = function closeSoundLibrary() {
  return closeModal(MODAL_SOUND_LIBRARY);
};
const closeSoundRecorder = function closeSoundRecorder() {
  return closeModal(MODAL_SOUND_RECORDER);
};
const closeTipsLibrary = function closeTipsLibrary() {
  return closeModal(MODAL_TIPS_LIBRARY);
};
const closeConnectionModal = function closeConnectionModal() {
  return closeModal(MODAL_CONNECTION);
};
const closeUsernameModal = function closeUsernameModal() {
  return closeModal(MODAL_USERNAME);
};
const closeSettingsModal = function closeSettingsModal() {
  return closeModal(MODAL_SETTINGS);
};
const closeCustomExtModal = function closeCustomExtModal() {
  return closeModal(MODAL_CUSTOM_EXTENSION);
};


/***/ }),
/* 22 */,
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BLOCKS_DEFAULT_SCALE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return STAGE_DISPLAY_SCALES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return STAGE_DISPLAY_SIZES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return STAGE_SIZE_MODES; });
/* harmony import */ var keymirror__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53);
/* harmony import */ var keymirror__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(keymirror__WEBPACK_IMPORTED_MODULE_0__);


/**
 * Names for each state of the stage size toggle
 * @enum {string}
 */
const STAGE_SIZE_MODES = keymirror__WEBPACK_IMPORTED_MODULE_0___default()({
  /**
   * The "large stage" button is pressed; the user would like a large stage.
   */
  large: null,
  /**
   * The "small stage" button is pressed; the user would like a small stage.
   */
  small: null
});

/**
 * Names for each stage render size
 * @enum {string}
 */
const STAGE_DISPLAY_SIZES = keymirror__WEBPACK_IMPORTED_MODULE_0___default()({
  /**
   * Large stage with wide browser
   */
  large: null,
  /**
   * Large stage with narrow browser
   */
  largeConstrained: null,
  /**
   * Small stage (ignores browser width)
   */
  small: null
});

// zoom level to start with
const BLOCKS_DEFAULT_SCALE = 0.675;
const STAGE_DISPLAY_SCALES = {};
STAGE_DISPLAY_SCALES[STAGE_DISPLAY_SIZES.large] = 1; // large mode, wide browser (standard)
STAGE_DISPLAY_SCALES[STAGE_DISPLAY_SIZES.largeConstrained] = 0.85; // large mode but narrow browser
STAGE_DISPLAY_SCALES[STAGE_DISPLAY_SIZES.small] = 0.5; // small mode, regardless of browser size

/* harmony default export */ __webpack_exports__["e"] = ({
  fullSizeMinWidth: 1096,
  referenceWidth: 480
});


/***/ }),
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/scratch-storage/src/index.js
var src = __webpack_require__(740);
var src_default = /*#__PURE__*/__webpack_require__.n(src);

// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.es.js + 1 modules
var index_es = __webpack_require__(2);

// EXTERNAL MODULE: ./src/lib/shared-messages.js
var shared_messages = __webpack_require__(84);

// CONCATENATED MODULE: ./src/lib/default-project/project-data.js
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


let messages = Object(index_es["d" /* defineMessages */])({
  variable: {
    "id": "gui.defaultProject.variable",
    "defaultMessage": "my variable"
  }
});
messages = _objectSpread(_objectSpread({}, messages), shared_messages["a" /* default */]);

// use the default message if a translation function is not passed
const defaultTranslator = msgObj => msgObj.defaultMessage;

/**
 * Generate a localized version of the default project
 * @param {function} translateFunction a function to use for translating the default names
 * @return {object} the project data json for the default project
 */
const projectData = translateFunction => {
  const translator = translateFunction || defaultTranslator;
  return {
    targets: [{
      isStage: true,
      name: 'Stage',
      variables: {
        '`jEk@4|i[#Fk?(8x)AV.-my variable': [translator(messages.variable), 0]
      },
      lists: {},
      broadcasts: {},
      blocks: {},
      currentCostume: 0,
      costumes: [{
        assetId: 'cd21514d0531fdffb22204e0ec5ed84a',
        name: translator(messages.backdrop, {
          index: 1
        }),
        md5ext: 'cd21514d0531fdffb22204e0ec5ed84a.svg',
        dataFormat: 'svg',
        rotationCenterX: 240,
        rotationCenterY: 180
      }],
      sounds: [],
      volume: 100
    }, {
      isStage: false,
      name: translator(messages.sprite, {
        index: 1
      }),
      variables: {},
      lists: {},
      broadcasts: {},
      blocks: {},
      comments: {},
      currentCostume: 0,
      costumes: [{
        assetId: 'b4ab6b3b69de1bc3ed6a94ace172a0b0',
        name: translator(messages.costume, {
          index: 1
        }),
        bitmapResolution: 1,
        md5ext: 'b4ab6b3b69de1bc3ed6a94ace172a0b0.svg',
        dataFormat: 'svg',
        rotationCenterX: 44,
        rotationCenterY: 44
      }],
      sounds: [],
      volume: 100,
      visible: true,
      x: 0,
      y: 0,
      size: 100,
      direction: 90,
      draggable: false,
      rotationStyle: 'all around'
    }],
    meta: {
      semver: '3.0.0',
      vm: '0.1.0',
      agent: ''
    }
  };
};
/* harmony default export */ var project_data = (projectData);
// EXTERNAL MODULE: ./node_modules/raw-loader!./src/lib/default-project/cd21514d0531fdffb22204e0ec5ed84a.svg
var cd21514d0531fdffb22204e0ec5ed84a = __webpack_require__(741);
var cd21514d0531fdffb22204e0ec5ed84a_default = /*#__PURE__*/__webpack_require__.n(cd21514d0531fdffb22204e0ec5ed84a);

// EXTERNAL MODULE: ./node_modules/raw-loader!./src/lib/default-project/dango.svg
var dango = __webpack_require__(742);
var dango_default = /*#__PURE__*/__webpack_require__.n(dango);

// EXTERNAL MODULE: ./src/lib/tw-text-encoder.js
var tw_text_encoder = __webpack_require__(114);

// CONCATENATED MODULE: ./src/lib/default-project/index.js


/* eslint-disable import/no-unresolved */


/* eslint-enable import/no-unresolved */

const defaultProject = translator => {
  const encoder = new tw_text_encoder["TextEncoder"]();
  const projectJson = project_data(translator);
  return [{
    id: 0,
    assetType: 'Project',
    dataFormat: 'JSON',
    data: JSON.stringify(projectJson)
  }, {
    id: 'cd21514d0531fdffb22204e0ec5ed84a',
    assetType: 'ImageVector',
    dataFormat: 'SVG',
    data: encoder.encode(cd21514d0531fdffb22204e0ec5ed84a_default.a)
  }, {
    id: 'b4ab6b3b69de1bc3ed6a94ace172a0b0',
    assetType: 'ImageVector',
    dataFormat: 'SVG',
    data: encoder.encode(dango_default.a)
  }];
};
/* harmony default export */ var default_project = (defaultProject);
// EXTERNAL MODULE: ./src/lib/tw-missing-project/index.js + 1 modules
var tw_missing_project = __webpack_require__(361);

// CONCATENATED MODULE: ./src/lib/storage.js




/**
 * Wrapper for ScratchStorage which adds default web sources.
 * @todo make this more configurable
 */
class storage_Storage extends src_default.a {
  constructor() {
    super();
    this.cacheDefaultProject();
  }
  addOfficialScratchWebStores() {
    this.addWebStore([this.AssetType.Project], this.getProjectGetConfig.bind(this), this.getProjectCreateConfig.bind(this), this.getProjectUpdateConfig.bind(this));
    this.addWebStore([this.AssetType.ImageVector, this.AssetType.ImageBitmap, this.AssetType.Sound], this.getAssetGetConfig.bind(this),
    // We set both the create and update configs to the same method because
    // storage assumes it should update if there is an assetId, but the
    // asset store uses the assetId as part of the create URI.
    this.getAssetCreateConfig.bind(this), this.getAssetCreateConfig.bind(this));
  }
  setProjectHost(projectHost) {
    this.projectHost = projectHost;
  }
  setProjectToken(projectToken) {
    this.projectToken = projectToken;
  }
  getProjectGetConfig(projectAsset) {
    const path = "".concat(this.projectHost, "/").concat(projectAsset.assetId);
    const qs = this.projectToken ? "?token=".concat(this.projectToken) : '';
    return path + qs;
  }
  getProjectCreateConfig() {
    return {
      url: "".concat(this.projectHost, "/"),
      withCredentials: true
    };
  }
  getProjectUpdateConfig(projectAsset) {
    return {
      url: "".concat(this.projectHost, "/").concat(projectAsset.assetId),
      withCredentials: true
    };
  }
  setAssetHost(assetHost) {
    this.assetHost = assetHost;
  }
  getAssetGetConfig(asset) {
    return "".concat(this.assetHost, "/internalapi/asset/").concat(asset.assetId, ".").concat(asset.dataFormat, "/get/");
  }
  getAssetCreateConfig(asset) {
    return {
      // There is no such thing as updating assets, but storage assumes it
      // should update if there is an assetId, and the asset store uses the
      // assetId as part of the create URI. So, force the method to POST.
      // Then when storage finds this config to use for the "update", still POSTs
      method: 'post',
      url: "".concat(this.assetHost, "/").concat(asset.assetId, ".").concat(asset.dataFormat),
      withCredentials: true
    };
  }
  setTranslatorFunction(translator) {
    this.translator = translator;
    this.cacheDefaultProject();
  }
  cacheDefaultProject() {
    const defaultProjectAssets = default_project(this.translator);
    defaultProjectAssets.forEach(asset => this.builtinHelper._store(this.AssetType[asset.assetType], this.DataFormat[asset.dataFormat], asset.data, asset.id));
    const missingProjectAssets = Object(tw_missing_project["b" /* default */])(this.translator);
    missingProjectAssets.forEach(asset => this.builtinHelper._store(this.AssetType[asset.assetType], this.DataFormat[asset.dataFormat], asset.data, asset.id));
  }
}
const storage = new storage_Storage();
/* harmony default export */ var lib_storage = __webpack_exports__["a"] = (storage);

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1677);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return closeAlert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return closeAlertWithId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return filterInlineAlerts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return filterPopupAlerts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return showAlertWithTimeout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return showExtensionAlert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return showStandardAlert; });
/* harmony import */ var _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
/* harmony import */ var _lib_libraries_extensions_index_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(161);


const SHOW_ALERT = 'scratch-gui/alerts/SHOW_ALERT';
const SHOW_EXTENSION_ALERT = 'scratch-gui/alerts/SHOW_EXTENSION_ALERT';
const CLOSE_ALERT = 'scratch-gui/alerts/CLOSE_ALERT';
const CLOSE_ALERTS_WITH_ID = 'scratch-gui/alerts/CLOSE_ALERTS_WITH_ID';
const CLOSE_ALERT_WITH_ID = 'scratch-gui/alerts/CLOSE_ALERT_WITH_ID';

/**
 * Initial state of alerts reducer
 *
 * {bool} visible - whether the alerts are visible
 * {array} alertsList - list of alerts, each with properties:
 *  * alertType (required): one of AlertTypes
 *  * closeButton (optional): bool indicating that we should show close button
 *  * content (optional): react element (a <FormattedMessage />)
 *  * extentionId (optional): id string that identifies the extension
 *  * iconURL (optional): string
 *  * level (required): string, one of AlertLevels
 *  * message (optional): string
 *  * showReconnect (optional): bool
 */
const initialState = {
  visible: true,
  alertsList: []
};
const filterPopupAlerts = alertsList => alertsList.filter(curAlert => curAlert.alertType === _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertTypes */ "b"].STANDARD || curAlert.alertType === _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertTypes */ "b"].EXTENSION);
const filterInlineAlerts = alertsList => alertsList.filter(curAlert => curAlert.alertType === _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertTypes */ "b"].INLINE);
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SHOW_ALERT:
      {
        // intended to show standard and inline alerts, but not extensions
        const alertId = action.alertId;
        if (alertId) {
          const newAlert = {
            alertId: alertId,
            level: _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertLevels */ "a"].WARN // default level
          };

          const alertData = _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* default */ "c"].find(thisAlertData => thisAlertData.alertId === alertId);
          if (alertData) {
            const newList = state.alertsList.filter(curAlert => !alertData.clearList || alertData.clearList.indexOf(curAlert.alertId) === -1);
            if (action.data && action.data.message) {
              newAlert.message = action.data.message;
            }
            newAlert.alertType = alertData.alertType || _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertTypes */ "b"].STANDARD;
            newAlert.closeButton = alertData.closeButton;
            newAlert.content = alertData.content;
            newAlert.iconURL = alertData.iconURL;
            newAlert.iconSpinner = alertData.iconSpinner;
            newAlert.level = alertData.level;
            newAlert.showDownload = alertData.showDownload;
            newAlert.showSaveNow = alertData.showSaveNow;
            newList.push(newAlert);
            return Object.assign({}, state, {
              alertsList: newList
            });
          }
        }
        return state; // if alert not found, show nothing
      }

    case SHOW_EXTENSION_ALERT:
      {
        const extensionId = action.data.extensionId;
        if (extensionId) {
          const extension = _lib_libraries_extensions_index_jsx__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].find(ext => ext.extensionId === extensionId);
          if (extension) {
            const newList = state.alertsList.slice();
            const newAlert = {
              alertType: _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertTypes */ "b"].EXTENSION,
              closeButton: true,
              extensionId: extensionId,
              extensionName: extension.name,
              iconURL: extension.connectionSmallIconURL,
              level: _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* AlertLevels */ "a"].WARN,
              showReconnect: true
            };
            newList.push(newAlert);
            return Object.assign({}, state, {
              alertsList: newList
            });
          }
        }
        return state; // if alert not found, show nothing
      }

    case CLOSE_ALERT_WITH_ID:
    case CLOSE_ALERT:
      {
        if (action.alertId) {
          action.index = state.alertsList.findIndex(a => a.alertId === action.alertId);
          if (action.index === -1) return state;
        }
        const newList = state.alertsList.slice();
        newList.splice(action.index, 1);
        return Object.assign({}, state, {
          alertsList: newList
        });
      }
    case CLOSE_ALERTS_WITH_ID:
      {
        return Object.assign({}, state, {
          alertsList: state.alertsList.filter(curAlert => curAlert.alertId !== action.alertId)
        });
      }
    default:
      return state;
  }
};

/**
 * Action creator to close an alert with the given index.
 *
 * @param {object} index - the index of the alert to close.
 * @return {object} - an object to be passed to the reducer.
 */
const closeAlert = function closeAlert(index) {
  return {
    type: CLOSE_ALERT,
    index
  };
};

/**
 * Action creator to close all alerts with a given ID.
 *
 * @param {string} alertId - id string of the alert to close
 * @return {object} - an object to be passed to the reducer.
 */
const closeAlertsWithId = function closeAlertsWithId(alertId) {
  return {
    type: CLOSE_ALERTS_WITH_ID,
    alertId
  };
};

/**
 * Action creator to close a single alert with a given ID.
 *
 * @param {string} alertId - id string of the alert to close
 * @return {object} - an object to be passed to the reducer.
 */
const closeAlertWithId = function closeAlertWithId(alertId) {
  return {
    type: CLOSE_ALERT_WITH_ID,
    alertId
  };
};

/**
 * Action creator to show an alert with the given alertId.
 *
 * @param {string} alertId - id string of the alert to show
 * @return {object} - an object to be passed to the reducer.
 */
const showStandardAlert = function showStandardAlert(alertId) {
  return {
    type: SHOW_ALERT,
    alertId
  };
};

/**
 * Action creator to show an alert with the given input data.
 *
 * @param {object} data - data for the alert
 * @param {string} data.message - message for the alert
 * @param {string} data.extensionId - extension ID for the alert
 * @return {object} - an object to be passed to the reducer.
 */
const showExtensionAlert = function showExtensionAlert(data) {
  return {
    type: SHOW_EXTENSION_ALERT,
    data
  };
};

/**
 * Function to dispatch showing an alert, with optional
 * timeout to make it close/go away.
 *
 * @param {object} dispatch - dispatch function
 * @param {string} alertId - the ID of the alert
 */
const showAlertWithTimeout = function showAlertWithTimeout(dispatch, alertId) {
  const alertData = _lib_alerts_index_jsx__WEBPACK_IMPORTED_MODULE_0__[/* default */ "c"].find(thisAlertData => thisAlertData.alertId === alertId);
  if (alertData) {
    dispatch(showStandardAlert(alertId));
    if (alertData.maxDisplaySecs) {
      setTimeout(() => {
        dispatch(closeAlertsWithId(alertId));
      }, alertData.maxDisplaySecs * 1000);
    }
  }
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1783);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twInitialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setFramerateState", function() { return setFramerateState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setInterpolationState", function() { return setInterpolationState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCompilerOptionsState", function() { return setCompilerOptionsState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setRuntimeOptionsState", function() { return setRuntimeOptionsState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUsername", function() { return setUsername; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCloud", function() { return setCloud; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setHighQualityPenState", function() { return setHighQualityPenState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIsWindowFullScreen", function() { return setIsWindowFullScreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDimensions", function() { return setDimensions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAuthor", function() { return setAuthor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDescription", function() { return setDescription; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCompileError", function() { return addCompileError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearCompileErrors", function() { return clearCompileErrors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setFileHandle", function() { return setFileHandle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUsernameInvalid", function() { return setUsernameInvalid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setHasCloudVariables", function() { return setHasCloudVariables; });
const SET_FRAMERATE = 'tw/SET_FRAMERATE';
const SET_INTERPOLATION = 'tw/SET_INTERPOLATION';
const SET_COMPILER_OPTIONS = 'tw/SET_COMPILER_OPTIONS';
const SET_RUNTIME_OPTIONS = 'tw/SET_RUNTIME_OPTIONS';
const SET_USERNAME = 'tw/SET_USERNAME';
const SET_CLOUD = 'tw/SET_CLOUD';
const SET_HIGH_QUALITY_PEN = 'tw/SET_HIGH_QUALITY_PEN';
const SET_WINDOW_FULLSCREEN = 'tw/SET_WINDOW_FULLSCREEN';
const SET_DIMENSIONS = 'tw/SET_DIMENSIONS';
const SET_AUTHOR = 'tw/SET_AUTHOR';
const SET_DESCRIPTION = 'tw/SET_DESCRIPTION';
const ADD_COMPILE_ERROR = 'tw/ADD_COMPILE_ERROR';
const CLEAR_COMPILE_ERRORS = 'tw/CLEAR_COMPILE_ERRORS';
const SET_FILE_HANDLE = 'tw/SET_FILE_HANDLE';
const SET_USERNAME_INVALID = 'tw/SET_USERNAME_INVALID';
const SET_HAS_CLOUD_VARIABLES = 'tw/SET_HAS_CLOUD_VARIABLES';
const initialState = {
  framerate: 30,
  interpolation: false,
  cloud: true,
  username: '',
  highQualityPen: false,
  compilerOptions: {
    enabled: true,
    warpTimer: false
  },
  runtimeOptions: {
    maxClones: 300,
    miscLimits: true,
    fencing: true
  },
  isWindowFullScreen: false,
  dimensions: [0, 0],
  author: {
    username: '',
    thumbnail: ''
  },
  description: {
    instructions: '',
    credits: ''
  },
  compileErrors: [],
  fileHandle: null,
  usernameInvalid: false,
  hasCloudVariables: false
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_FRAMERATE:
      return Object.assign({}, state, {
        framerate: action.framerate
      });
    case SET_INTERPOLATION:
      return Object.assign({}, state, {
        interpolation: action.interpolation
      });
    case SET_COMPILER_OPTIONS:
      return Object.assign({}, state, {
        compilerOptions: action.compilerOptions
      });
    case SET_RUNTIME_OPTIONS:
      return Object.assign({}, state, {
        runtimeOptions: action.runtimeOptions
      });
    case SET_USERNAME:
      return Object.assign({}, state, {
        username: action.username
      });
    case SET_CLOUD:
      return Object.assign({}, state, {
        cloud: action.cloud
      });
    case SET_HIGH_QUALITY_PEN:
      return Object.assign({}, state, {
        highQualityPen: action.highQualityPen
      });
    case SET_WINDOW_FULLSCREEN:
      return Object.assign({}, state, {
        isWindowFullScreen: action.isWindowFullScreen
      });
    case SET_DIMENSIONS:
      return Object.assign({}, state, {
        dimensions: action.dimensions
      });
    case SET_AUTHOR:
      return Object.assign({}, state, {
        author: action.author
      });
    case SET_DESCRIPTION:
      return Object.assign({}, state, {
        description: action.description
      });
    case ADD_COMPILE_ERROR:
      return Object.assign({}, state, {
        compileErrors: [action.error, ...state.compileErrors.slice(0, 4)]
      });
    case CLEAR_COMPILE_ERRORS:
      return Object.assign({}, state, {
        compileErrors: []
      });
    case SET_FILE_HANDLE:
      return Object.assign({}, state, {
        fileHandle: action.fileHandle
      });
    case SET_USERNAME_INVALID:
      return Object.assign({}, state, {
        usernameInvalid: action.usernameInvalid
      });
    case SET_HAS_CLOUD_VARIABLES:
      return Object.assign({}, state, {
        hasCloudVariables: action.hasCloudVariables
      });
    default:
      return state;
  }
};
const setFramerateState = function setFramerateState(framerate) {
  return {
    type: SET_FRAMERATE,
    framerate: framerate
  };
};
const setInterpolationState = function setInterpolationState(interpolation) {
  return {
    type: SET_INTERPOLATION,
    interpolation: interpolation
  };
};
const setCompilerOptionsState = function setCompilerOptionsState(compilerOptions) {
  return {
    type: SET_COMPILER_OPTIONS,
    compilerOptions: compilerOptions
  };
};
const setRuntimeOptionsState = function setRuntimeOptionsState(runtimeOptions) {
  return {
    type: SET_RUNTIME_OPTIONS,
    runtimeOptions: runtimeOptions
  };
};
const setUsername = function setUsername(username) {
  return {
    type: SET_USERNAME,
    username: username
  };
};
const setCloud = function setCloud(cloud) {
  return {
    type: SET_CLOUD,
    cloud: cloud
  };
};
const setHighQualityPenState = function setHighQualityPenState(highQualityPen) {
  return {
    type: SET_HIGH_QUALITY_PEN,
    highQualityPen: highQualityPen
  };
};
const setIsWindowFullScreen = function setIsWindowFullScreen(isWindowFullScreen) {
  return {
    type: SET_WINDOW_FULLSCREEN,
    isWindowFullScreen: isWindowFullScreen
  };
};
const setDimensions = function setDimensions(dimensions) {
  return {
    type: SET_DIMENSIONS,
    dimensions: dimensions
  };
};
const setAuthor = function setAuthor(author) {
  return {
    type: SET_AUTHOR,
    author: author
  };
};
const setDescription = function setDescription(description) {
  return {
    type: SET_DESCRIPTION,
    description: description
  };
};
const addCompileError = function addCompileError(error) {
  return {
    type: ADD_COMPILE_ERROR,
    error: error
  };
};
const clearCompileErrors = function clearCompileErrors() {
  return {
    type: CLEAR_COMPILE_ERRORS
  };
};
const setFileHandle = function setFileHandle(fileHandle) {
  return {
    type: SET_FILE_HANDLE,
    fileHandle: fileHandle
  };
};
const setUsernameInvalid = function setUsernameInvalid(usernameInvalid) {
  return {
    type: SET_USERNAME_INVALID,
    usernameInvalid: usernameInvalid
  };
};
const setHasCloudVariables = function setHasCloudVariables(hasCloudVariables) {
  return {
    type: SET_HAS_CLOUD_VARIABLES,
    hasCloudVariables: hasCloudVariables
  };
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1688);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 36 */,
/* 37 */,
/* 38 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1696);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return openAboutMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return closeAboutMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return aboutMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return openAccountMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return closeAccountMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return accountMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return openFileMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return closeFileMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return fileMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return openEditMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return closeEditMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return editMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return openLanguageMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return closeLanguageMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return languageMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return openLoginMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return closeLoginMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return loginMenuOpen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return openErrorsMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return closeErrorsMenu; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return errorsMenuOpen; });
const OPEN_MENU = 'scratch-gui/menus/OPEN_MENU';
const CLOSE_MENU = 'scratch-gui/menus/CLOSE_MENU';
const MENU_ABOUT = 'aboutMenu';
const MENU_ACCOUNT = 'accountMenu';
const MENU_FILE = 'fileMenu';
const MENU_EDIT = 'editMenu';
const MENU_LANGUAGE = 'languageMenu';
const MENU_LOGIN = 'loginMenu';
const MENU_ERRORS = 'errorMenu';
const initialState = {
  [MENU_ABOUT]: false,
  [MENU_ACCOUNT]: false,
  [MENU_FILE]: false,
  [MENU_EDIT]: false,
  [MENU_LANGUAGE]: false,
  [MENU_LOGIN]: false,
  [MENU_ERRORS]: false
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case OPEN_MENU:
      return Object.assign({}, state, {
        [action.menu]: true
      });
    case CLOSE_MENU:
      return Object.assign({}, state, {
        [action.menu]: false
      });
    default:
      return state;
  }
};
const openMenu = menu => ({
  type: OPEN_MENU,
  menu: menu
});
const closeMenu = menu => ({
  type: CLOSE_MENU,
  menu: menu
});
const openAboutMenu = () => openMenu(MENU_ABOUT);
const closeAboutMenu = () => closeMenu(MENU_ABOUT);
const aboutMenuOpen = state => state.scratchGui.menus[MENU_ABOUT];
const openAccountMenu = () => openMenu(MENU_ACCOUNT);
const closeAccountMenu = () => closeMenu(MENU_ACCOUNT);
const accountMenuOpen = state => state.scratchGui.menus[MENU_ACCOUNT];
const openFileMenu = () => openMenu(MENU_FILE);
const closeFileMenu = () => closeMenu(MENU_FILE);
const fileMenuOpen = state => state.scratchGui.menus[MENU_FILE];
const openEditMenu = () => openMenu(MENU_EDIT);
const closeEditMenu = () => closeMenu(MENU_EDIT);
const editMenuOpen = state => state.scratchGui.menus[MENU_EDIT];
const openLanguageMenu = () => openMenu(MENU_LANGUAGE);
const closeLanguageMenu = () => closeMenu(MENU_LANGUAGE);
const languageMenuOpen = state => state.scratchGui.menus[MENU_LANGUAGE];
const openLoginMenu = () => openMenu(MENU_LOGIN);
const closeLoginMenu = () => closeMenu(MENU_LOGIN);
const loginMenuOpen = state => state.scratchGui.menus[MENU_LOGIN];
const openErrorsMenu = () => openMenu(MENU_ERRORS);
const closeErrorsMenu = () => closeMenu(MENU_ERRORS);
const errorsMenuOpen = state => state.scratchGui.menus[MENU_ERRORS];


/***/ }),
/* 40 */,
/* 41 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1686);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 42 */,
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return activateTab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BLOCKS_TAB_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return COSTUMES_TAB_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return SOUNDS_TAB_INDEX; });
const ACTIVATE_TAB = 'scratch-gui/navigation/ACTIVATE_TAB';

// Constants use numbers to make it easier to work with react-tabs
const BLOCKS_TAB_INDEX = 0;
const COSTUMES_TAB_INDEX = 1;
const SOUNDS_TAB_INDEX = 2;
const initialState = {
  activeTabIndex: BLOCKS_TAB_INDEX
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case ACTIVATE_TAB:
      return Object.assign({}, state, {
        activeTabIndex: action.activeTabIndex
      });
    default:
      return state;
  }
};
const activateTab = function activateTab(tab) {
  return {
    type: ACTIVATE_TAB,
    activeTabIndex: tab
  };
};


/***/ }),
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1645);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 48 */,
/* 49 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1683);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1795);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _button_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(368);
/* harmony import */ var _button_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_button_css__WEBPACK_IMPORTED_MODULE_3__);
const _excluded = ["className", "disabled", "iconClassName", "iconSrc", "iconWidth", "iconHeight", "onClick", "children"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




const ButtonComponent = _ref => {
  let {
      className,
      disabled,
      iconClassName,
      iconSrc,
      iconWidth,
      iconHeight,
      onClick,
      children
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  if (disabled) {
    onClick = function onClick() {};
  }
  const icon = iconSrc && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("img", {
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(iconClassName, _button_css__WEBPACK_IMPORTED_MODULE_3___default.a.icon),
    draggable: false,
    src: iconSrc,
    height: iconHeight,
    width: iconWidth
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("span", _extends({
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(_button_css__WEBPACK_IMPORTED_MODULE_3___default.a.outlinedButton, className),
    role: "button",
    onClick: onClick
  }, props), icon, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: _button_css__WEBPACK_IMPORTED_MODULE_3___default.a.content
  }, children));
};
ButtonComponent.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node,
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  disabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  iconClassName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  iconSrc: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  iconHeight: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  iconWidth: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func
};
/* harmony default export */ __webpack_exports__["a"] = (ButtonComponent);

/***/ }),
/* 57 */,
/* 58 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1694);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1653);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const appTarget = document.getElementById('app');

// Remove everything from the target to fix macOS Safari "Save Page As",
while (appTarget.firstChild) {
  appTarget.removeChild(appTarget.firstChild);
}
document.body.classList.add('tw-loaded');
/* harmony default export */ __webpack_exports__["a"] = (appTarget);

/***/ }),
/* 68 */,
/* 69 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1760);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setFullScreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return setPlayer; });
const SET_FULL_SCREEN = 'scratch-gui/mode/SET_FULL_SCREEN';
const SET_PLAYER = 'scratch-gui/mode/SET_PLAYER';
const initialState = {
  isEmbedded: false,
  isFullScreen: false,
  isPlayerOnly: false,
  hasEverEnteredEditor: true
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_FULL_SCREEN:
      return Object.assign({}, state, {
        isFullScreen: action.isFullScreen
      });
    case SET_PLAYER:
      return Object.assign({}, state, {
        isPlayerOnly: action.isPlayerOnly,
        hasEverEnteredEditor: state.hasEverEnteredEditor || !action.isPlayerOnly
      });
    default:
      return state;
  }
};
const setFullScreen = function setFullScreen(isFullScreen) {
  return {
    type: SET_FULL_SCREEN,
    isFullScreen: isFullScreen
  };
};
const setPlayer = function setPlayer(isPlayerOnly) {
  return {
    type: SET_PLAYER,
    isPlayerOnly: isPlayerOnly
  };
};


/***/ }),
/* 74 */,
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return activateDeck; });
/* unused harmony export viewCards */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return closeCards; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return shrinkExpandCards; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return nextStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return prevStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return dragCard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return startDrag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return endDrag; });
/* harmony import */ var _lib_analytics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(117);
/* harmony import */ var _lib_libraries_decks_index_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);


const CLOSE_CARDS = 'scratch-gui/cards/CLOSE_CARDS';
const SHRINK_EXPAND_CARDS = 'scratch-gui/cards/SHRINK_EXPAND_CARDS';
const VIEW_CARDS = 'scratch-gui/cards/VIEW_CARDS';
const ACTIVATE_DECK = 'scratch-gui/cards/ACTIVATE_DECK';
const NEXT_STEP = 'scratch-gui/cards/NEXT_STEP';
const PREV_STEP = 'scratch-gui/cards/PREV_STEP';
const DRAG_CARD = 'scratch-gui/cards/DRAG_CARD';
const START_DRAG = 'scratch-gui/cards/START_DRAG';
const END_DRAG = 'scratch-gui/cards/END_DRAG';
const initialState = {
  visible: false,
  content: _lib_libraries_decks_index_jsx__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"],
  activeDeckId: null,
  step: 0,
  x: 0,
  y: 0,
  expanded: true,
  dragging: false
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case CLOSE_CARDS:
      return Object.assign({}, state, {
        visible: false
      });
    case SHRINK_EXPAND_CARDS:
      return Object.assign({}, state, {
        expanded: !state.expanded
      });
    case VIEW_CARDS:
      return Object.assign({}, state, {
        visible: true
      });
    case ACTIVATE_DECK:
      return Object.assign({}, state, {
        activeDeckId: action.activeDeckId,
        step: 0,
        x: 0,
        y: 0,
        expanded: true,
        visible: true
      });
    case NEXT_STEP:
      if (state.activeDeckId !== null) {
        _lib_analytics__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].event({
          category: 'how-to',
          action: 'next step',
          label: "".concat(state.activeDeckId, " - ").concat(state.step)
        });
        return Object.assign({}, state, {
          step: state.step + 1
        });
      }
      return state;
    case PREV_STEP:
      if (state.activeDeckId !== null) {
        if (state.step > 0) {
          return Object.assign({}, state, {
            step: state.step - 1
          });
        }
      }
      return state;
    case DRAG_CARD:
      return Object.assign({}, state, {
        x: action.x,
        y: action.y
      });
    case START_DRAG:
      return Object.assign({}, state, {
        dragging: true
      });
    case END_DRAG:
      return Object.assign({}, state, {
        dragging: false
      });
    default:
      return state;
  }
};
const activateDeck = function activateDeck(activeDeckId) {
  return {
    type: ACTIVATE_DECK,
    activeDeckId
  };
};
const viewCards = function viewCards() {
  return {
    type: VIEW_CARDS
  };
};
const closeCards = function closeCards() {
  return {
    type: CLOSE_CARDS
  };
};
const shrinkExpandCards = function shrinkExpandCards() {
  return {
    type: SHRINK_EXPAND_CARDS
  };
};
const nextStep = function nextStep() {
  return {
    type: NEXT_STEP
  };
};
const prevStep = function prevStep() {
  return {
    type: PREV_STEP
  };
};
const dragCard = function dragCard(x, y) {
  return {
    type: DRAG_CARD,
    x,
    y
  };
};
const startDrag = function startDrag() {
  return {
    type: START_DRAG
  };
};
const endDrag = function endDrag() {
  return {
    type: END_DRAG
  };
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1670);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1791);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(1);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(0);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./src/components/crash-message/crash-message.jsx
var crash_message = __webpack_require__(343);

// EXTERNAL MODULE: ./src/lib/log.js
var log = __webpack_require__(18);

// CONCATENATED MODULE: ./src/lib/supported-browser.js
// tw: If the browser can parse the JS we generate, we support it.

/**
 * Helper function to determine if the browser is supported at all.
 * @returns {boolean} False if the platform is definitely not supported.
 */
const supportedBrowser = () => true;

/**
 * Helper function to determine if the browser meets the minimum recommended version
 * @returns {boolean} False if the browser isn't a recommended browser, or doesn't
 * meet the minimum version for recommended browsers.
 * NOTE: uses strict_mode==true so that any browser not listed in the minVersions
 *   always returns false
 */

const recommendedBrowser = () => true;

// CONCATENATED MODULE: ./src/containers/error-boundary.jsx





class error_boundary_ErrorBoundary extends react_default.a.Component {
  constructor(props) {
    super(props);
    this.state = {
      hasError: false,
      errorId: null
    };
  }
  componentDidCatch(error, info) {
    // Error object may be undefined (IE?)
    error = error || {
      stack: 'Unknown stack',
      message: 'Unknown error'
    };

    // Log errors to analytics, leaving out browsers that are not in our recommended set
    if (recommendedBrowser() && window.Sentry) {
      window.Sentry.withScope(scope => {
        Object.keys(info).forEach(key => {
          scope.setExtra(key, info[key]);
        });
        scope.setExtra('action', this.props.action);
        window.Sentry.captureException(error);
      });
    }

    // Display fallback UI
    this.setState({
      hasError: true,
      errorId: window.Sentry ? window.Sentry.lastEventId() : null,
      errorMessage: "".concat(error && error.message || error)
    });

    // Log error locally for debugging as well.
    log["default"].error("Unhandled Error: ".concat(error.stack, "\nComponent stack: ").concat(info.componentStack));
  }
  handleBack() {
    window.history.back();
  }
  handleReload() {
    window.location.replace(window.location.origin + window.location.pathname);
  }
  render() {
    if (this.state.hasError) {
      return /*#__PURE__*/react_default.a.createElement(crash_message["a" /* default */], {
        eventId: this.state.errorId,
        errorMessage: this.state.errorMessage,
        onReload: this.handleReload
      });
    }
    return this.props.children;
  }
}
error_boundary_ErrorBoundary.propTypes = {
  action: prop_types_default.a.string.isRequired,
  // Used for defining tracking action
  children: prop_types_default.a.node
};
/* harmony default export */ var error_boundary = (error_boundary_ErrorBoundary);
// CONCATENATED MODULE: ./src/lib/error-boundary-hoc.jsx



/*
 * Higher Order Component to provide error boundary for wrapped component.
 * A curried function, call like errorHOC(<tracking label>)(<Component>).
 * @param {string} action - Label for GA tracking of errors.
 * @returns {function} a function that accepts a component to wrap.
 */
const error_boundary_hoc_ErrorBoundaryHOC = function ErrorBoundaryHOC(action) {
  /**
   * The function to be called with a React component to wrap it.
   * @param {React.Component} WrappedComponent - Component to wrap with an error boundary.
   * @returns {React.Component} the component wrapped with an error boundary.
   */
  return function (WrappedComponent) {
    const ErrorBoundaryWrapper = props => /*#__PURE__*/react_default.a.createElement(error_boundary, {
      action: action
    }, /*#__PURE__*/react_default.a.createElement(WrappedComponent, props));
    return ErrorBoundaryWrapper;
  };
};
/* harmony default export */ var error_boundary_hoc = __webpack_exports__["a"] = (error_boundary_hoc_ErrorBoundaryHOC);

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return isRendererSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return canConstructNewFunctions; });
/* unused harmony export isAudioContextSupported */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return isBrowserSupported; });
/* harmony import */ var scratch_render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(280);
/* harmony import */ var scratch_render__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(scratch_render__WEBPACK_IMPORTED_MODULE_0__);

let _isRendererSupported = null;
const isRendererSupported = () => {
  if (_isRendererSupported === null) {
    _isRendererSupported = scratch_render__WEBPACK_IMPORTED_MODULE_0___default.a.isSupported();
  }
  return _isRendererSupported;
};
let _canConstructNewFunctions = null;
const canConstructNewFunctions = () => {
  if (_canConstructNewFunctions === null) {
    try {
      // This will throw if blocked by CSP
      // eslint-disable-next-line no-new
      new Function('');
      _canConstructNewFunctions = true;
    } catch (e) {
      _canConstructNewFunctions = true;
    }
  }
  return _canConstructNewFunctions;
};
const isAudioContextSupported = () => !!(window.AudioContext || window.webkitAudioContext);
const isBrowserSupported = () => canConstructNewFunctions() && isAudioContextSupported();

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  // tw: remove decks. we don't use them.
});

/***/ }),
/* 81 */,
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return alerts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AlertLevels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return AlertTypes; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var keymirror__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(53);
/* harmony import */ var keymirror__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(keymirror__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(229);
/* harmony import */ var _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3__);




const AlertTypes = keymirror__WEBPACK_IMPORTED_MODULE_2___default()({
  STANDARD: null,
  EXTENSION: null,
  INLINE: null
});
const AlertLevels = {
  SUCCESS: 'success',
  INFO: 'info',
  WARN: 'warn'
};
const alerts = [{
  alertId: 'createSuccess',
  alertType: AlertTypes.STANDARD,
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "New project created.",
    id: "gui.alerts.createsuccess"
  }),
  iconURL: _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3___default.a,
  level: AlertLevels.SUCCESS,
  maxDisplaySecs: 5
}, {
  alertId: 'createCopySuccess',
  alertType: AlertTypes.STANDARD,
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Project saved as a copy.",
    id: "gui.alerts.createcopysuccess"
  }),
  iconURL: _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3___default.a,
  level: AlertLevels.SUCCESS,
  maxDisplaySecs: 5
}, {
  alertId: 'createRemixSuccess',
  alertType: AlertTypes.STANDARD,
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Project saved as a remix.",
    id: "gui.alerts.createremixsuccess"
  }),
  iconURL: _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3___default.a,
  level: AlertLevels.SUCCESS,
  maxDisplaySecs: 5
}, {
  alertId: 'creating',
  alertType: AlertTypes.STANDARD,
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Creating new\u2026",
    id: "gui.alerts.creating"
  }),
  iconSpinner: true,
  level: AlertLevels.SUCCESS
}, {
  alertId: 'creatingCopy',
  alertType: AlertTypes.STANDARD,
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Copying project\u2026",
    id: "gui.alerts.creatingCopy"
  }),
  iconSpinner: true,
  level: AlertLevels.SUCCESS
}, {
  alertId: 'creatingRemix',
  alertType: AlertTypes.STANDARD,
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Remixing project\u2026",
    id: "gui.alerts.creatingRemix"
  }),
  iconSpinner: true,
  level: AlertLevels.SUCCESS
}, {
  alertId: 'creatingError',
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  closeButton: true,
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Could not create the project. Please try again!",
    id: "gui.alerts.creatingError"
  }),
  level: AlertLevels.WARN
}, {
  alertId: 'savingError',
  clearList: ['createSuccess', 'creating', 'createCopySuccess', 'creatingCopy', 'createRemixSuccess', 'creatingRemix', 'saveSuccess', 'saving'],
  showDownload: true,
  // showSaveNow: true,
  closeButton: true,
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Project could not save.",
    id: "gui.alerts.savingError"
  }),
  level: AlertLevels.WARN
}, {
  alertId: 'saveSuccess',
  alertType: AlertTypes.INLINE,
  clearList: ['saveSuccess', 'saving', 'savingError', 'twSaveToDiskSuccess'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Project saved.",
    id: "gui.alerts.savesuccess"
  }),
  iconURL: _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3___default.a,
  level: AlertLevels.SUCCESS,
  maxDisplaySecs: 3
}, {
  alertId: 'twSaveToDiskSuccess',
  alertType: AlertTypes.INLINE,
  clearList: ['saveSuccess', 'saving', 'savingError', 'twSaveToDiskSuccess'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Saved to your computer.",
    id: "tw.alerts.savedToDisk"
  }),
  iconURL: _assets_icon_success_svg__WEBPACK_IMPORTED_MODULE_3___default.a,
  level: AlertLevels.SUCCESS,
  maxDisplaySecs: 3
}, {
  alertId: 'saving',
  alertType: AlertTypes.INLINE,
  clearList: ['saveSuccess', 'saving', 'savingError', 'twSaveToDiskSuccess'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Saving project\u2026",
    id: "gui.alerts.saving"
  }),
  iconSpinner: true,
  level: AlertLevels.INFO
}, {
  alertId: 'twAutosaving',
  alertType: AlertTypes.INLINE,
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Creating restore point\u2026",
    id: "tw.alerts.autosaving"
  }),
  iconSpinner: true,
  level: AlertLevels.INFO
}, {
  alertId: 'cloudInfo',
  alertType: AlertTypes.STANDARD,
  clearList: ['cloudInfo'],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Please note, cloud variables only support numbers, not letters or symbols. {learnMoreLink}" // eslint-disable-line max-len
    ,

    id: "gui.alerts.cloudInfo",
    values: {
      learnMoreLink: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {
        href: "https://scratch.mit.edu/info/faq/#clouddata",
        rel: "noopener noreferrer",
        target: "_blank"
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
        defaultMessage: "Learn more.",
        id: "gui.alerts.cloudInfoLearnMore"
      }))
    }
  }),
  closeButton: true,
  level: AlertLevels.SUCCESS,
  maxDisplaySecs: 15
}, {
  alertId: 'importingAsset',
  alertType: AlertTypes.STANDARD,
  clearList: [],
  content: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_1__[/* FormattedMessage */ "a"], {
    defaultMessage: "Importing\u2026",
    id: "gui.alerts.importing"
  }),
  iconSpinner: true,
  level: AlertLevels.SUCCESS
}];


/***/ }),
/* 83 */,
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);

/* harmony default export */ __webpack_exports__["a"] = (Object(react_intl__WEBPACK_IMPORTED_MODULE_0__[/* defineMessages */ "d"])({
  backdrop: {
    "id": "gui.sharedMessages.backdrop",
    "defaultMessage": "backdrop{index}"
  },
  costume: {
    "id": "gui.sharedMessages.costume",
    "defaultMessage": "costume{index}"
  },
  sprite: {
    "id": "gui.sharedMessages.sprite",
    "defaultMessage": "Sprite{index}"
  },
  pop: {
    "id": "gui.sharedMessages.pop",
    "defaultMessage": "pop"
  },
  replaceProjectWarning: {
    "id": "gui.sharedMessages.replaceProjectWarning",
    "defaultMessage": "Replace contents of the current project?"
  },
  loadFromComputerTitle: {
    "id": "gui.sharedMessages.loadFromComputerTitle",
    "defaultMessage": "Load from your computer"
  }
}));

/***/ }),
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return setProjectId; });
/* unused harmony export searchParamsToString */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return setSearchParams; });
/* harmony import */ var _reducers_project_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);

const setProjectId = (dispatch, projectId) => {
  if (false) {}
  dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_0__[/* setProjectId */ "E"])(projectId));
};
const searchParamsToString = params => {
  let newSearch = params.toString();
  if (newSearch.length > 0) {
    // Add leading question mark
    newSearch = "?".concat(newSearch);
    newSearch = newSearch
    // Remove '=' from empty values
    // eslint-disable-next-line no-div-regex
    .replace(/=(?=$|&)/g, '')
    // Decode / and : (common in project_url setting)
    .replace(/%2F/g, '/').replace(/%3A/g, ':');
  }
  return newSearch;
};

/**
 * Change URL search params to something else in place
 * @param {URLSearchParams} params New URLSearchParams
 */
const setSearchParams = params => {
  const newSearch = searchParamsToString(params);
  if (location.search !== newSearch) {
    history.replaceState(null, null, "".concat(location.pathname).concat(newSearch).concat(location.hash));
  }
};


/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setProjectChanged; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return setProjectUnchanged; });
const SET_PROJECT_CHANGED = 'scratch-gui/project-changed/SET_PROJECT_CHANGED';
const initialState = false;
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_PROJECT_CHANGED:
      return action.changed;
    default:
      return state;
  }
};
const setProjectChanged = () => ({
  type: SET_PROJECT_CHANGED,
  changed: true
});
const setProjectUnchanged = () => ({
  type: SET_PROJECT_CHANGED,
  changed: false
});


/***/ }),
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setProjectTitle; });
const SET_PROJECT_TITLE = 'projectTitle/SET_PROJECT_TITLE';

// we are initializing to a blank string instead of an actual title,
// because it would be hard to localize here
const initialState = '';
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_PROJECT_TITLE:
      return action.title;
    default:
      return state;
  }
};
const setProjectTitle = title => ({
  type: SET_PROJECT_TITLE,
  title: title
});


/***/ }),
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1641);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1642);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ((filename, blob) => {
  const downloadLink = document.createElement('a');
  document.body.appendChild(downloadLink);

  // Use special ms version if available to get it working on Edge.
  if (navigator.msSaveOrOpenBlob) {
    navigator.msSaveOrOpenBlob(blob, filename);
    return;
  }
  if ('download' in HTMLAnchorElement.prototype) {
    const url = window.URL.createObjectURL(blob);
    downloadLink.href = url;
    downloadLink.download = filename;
    downloadLink.type = blob.type;
    downloadLink.click();
    // remove the link after a timeout to prevent a crash on iOS 13 Safari
    window.setTimeout(() => {
      document.body.removeChild(downloadLink);
      window.URL.revokeObjectURL(url);
    }, 1000);
  } else {
    // iOS 12 Safari, open a new page and set href to data-uri
    let popup = window.open('', '_blank');
    const reader = new FileReader();
    reader.onloadend = function () {
      popup.location.href = reader.result;
      popup = null;
    };
    reader.readAsDataURL(blob);
  }
});

/***/ }),
/* 101 */,
/* 102 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1650);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1651);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1761);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1788);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 106 */,
/* 107 */,
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _input_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(461);
/* harmony import */ var _input_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_input_css__WEBPACK_IMPORTED_MODULE_3__);
const _excluded = ["small"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




const Input = props => {
  const {
      small
    } = props,
    componentProps = _objectWithoutProperties(props, _excluded);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("input", _extends({}, componentProps, {
    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(_input_css__WEBPACK_IMPORTED_MODULE_3___default.a.inputForm, props.className, {
      [_input_css__WEBPACK_IMPORTED_MODULE_3___default.a.inputSmall]: small
    })
  }));
};
Input.propTypes = {
  className: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  small: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool
};
Input.defaultProps = {
  small: false
};
/* harmony default export */ __webpack_exports__["a"] = (Input);

/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
let _ScratchBlocks = null;
const isLoaded = () => !!_ScratchBlocks;
const get = () => {
  if (!isLoaded()) {
    throw new Error('scratch-blocks is not loaded yet');
  }
  return _ScratchBlocks;
};
const load = () => {
  if (_ScratchBlocks) {
    return Promise.resolve();
  }
  return __webpack_require__.e(/* import() | sb */ 84).then(__webpack_require__.t.bind(null, 1823, 7)).then(m => {
    _ScratchBlocks = m.default;
    return _ScratchBlocks;
  });
};
/* harmony default export */ __webpack_exports__["a"] = ({
  get,
  isLoaded,
  load
});

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1678);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1786);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 112 */,
/* 113 */,
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextEncoder", function() { return _TextEncoder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextDecoder", function() { return _TextDecoder; });
const _TextEncoder = typeof TextEncoder === 'function' ? TextEncoder : class TextEncoder {
  constructor(encoding) {
    if (typeof encoding !== 'undefined' && encoding !== null && encoding !== 'utf-8' && encoding !== 'utf8') {
      throw new Error('Encoding is not supported');
    }
    this.encoding = 'utf-8';
  }
  encode(str) {
    if (typeof str !== 'string') {
      throw new TypeError('Argument is not a string');
    }
    str = unescape(encodeURIComponent(str));
    const arr = new Uint8Array(str.length);
    for (let i = 0; i < str.length; i++) {
      arr[i] = str.charCodeAt(i);
    }
    return arr;
  }
};
const _TextDecoder = typeof TextDecoder === 'function' ? TextDecoder : class TextDecoder {
  constructor(encoding) {
    if (typeof encoding !== 'undefined' && encoding !== null && encoding !== 'utf-8' && encoding !== 'utf8') {
      throw new Error('Encoding is not supported');
    }
    this.encoding = 'utf-8';
  }
  decode(view) {
    const array = new Uint8Array(view.buffer, view.byteOffset, view.byteLength);
    let result = '';
    for (let i = 0; i < array.length; i++) {
      result += String.fromCharCode(array[i]);
    }
    return decodeURIComponent(escape(result));
  }
};


/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setRestore; });
const RESTORE_UPDATE = 'scratch-gui/restore-deletion/RESTORE_UPDATE';
const initialState = {
  restoreFun: null,
  deletedItem: ''
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case RESTORE_UPDATE:
      return Object.assign({}, state, action.state);
    default:
      return state;
  }
};
const setRestore = function setRestore(state) {
  return {
    type: RESTORE_UPDATE,
    state: {
      restoreFun: state.restoreFun,
      deletedItem: state.deletedItem
    }
  };
};


/***/ }),
/* 116 */,
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const GoogleAnalytics = {
  // Disable Scratch's analytics
  event() {}
};
/* harmony default export */ __webpack_exports__["a"] = (GoogleAnalytics);

/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return defaultStageSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return setCustomStageSize; });
const SET_CUSTOM_STAGE_SIZE = 'tw/custom-stage-size/SET';
const getDimensions = () => {
  // Running in node.js
  if (typeof URLSearchParams === 'undefined') {
    return null;
  }
  const urlParameters = new URLSearchParams(location.search);
  const dimensionsQuery = urlParameters.get('size');
  if (dimensionsQuery === null) {
    return null;
  }
  const match = dimensionsQuery.match(/^(\d+)[^\d]+(\d+)$/);
  if (!match) {
    // eslint-disable-next-line no-alert
    alert('Could not parse custom stage size');
    return null;
  }
  const [_, widthText, heightText] = match;
  if (!widthText || !heightText) {
    return null;
  }
  const width = Math.max(0, Math.min(4096, +widthText));
  const height = Math.max(0, Math.min(4096, +heightText));
  return {
    width,
    height
  };
};
const defaultStageSize = {
  width: 480,
  height: 360
};
const initialState = getDimensions() || defaultStageSize;
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_CUSTOM_STAGE_SIZE:
      return Object.assign({}, state, {
        width: action.width,
        height: action.height
      });
    default:
      return state;
  }
};
const setCustomStageSize = function setCustomStageSize(width, height) {
  return {
    type: SET_CUSTOM_STAGE_SIZE,
    width,
    height
  };
};


/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addMonitorRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getInitialPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return moveMonitorRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return resizeMonitorRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return removeMonitorRect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return resetMonitorLayout; });
/* unused harmony export PADDING */
/* unused harmony export SCREEN_HEIGHT */
/* unused harmony export SCREEN_WIDTH */
/* harmony import */ var _lib_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

const ADD_MONITOR_RECT = 'scratch-gui/monitors/ADD_MONITOR_RECT';
const MOVE_MONITOR_RECT = 'scratch-gui/monitors/MOVE_MONITOR_RECT';
const RESIZE_MONITOR_RECT = 'scratch-gui/monitors/RESIZE_MONITOR_RECT';
const REMOVE_MONITOR_RECT = 'scratch-gui/monitors/REMOVE_MONITOR_RECT';
const RESET_MONITOR_LAYOUT = 'scratch-gui/monitors/RESET_MONITOR_LAYOUT';
const initialState = {
  monitors: {},
  savedMonitorPositions: {}
};

// Verify that the rectangle formed by the 2 points is well-formed
const _verifyRect = function _verifyRect(upperStart, lowerEnd) {
  if (isNaN(upperStart.x) || isNaN(upperStart.y) || isNaN(lowerEnd.x) || isNaN(lowerEnd.y)) {
    return false;
  }
  if (!(upperStart.x < lowerEnd.x)) {
    return false;
  }
  if (!(upperStart.y < lowerEnd.y)) {
    return false;
  }
  return true;
};
const _addMonitorRect = function _addMonitorRect(state, action) {
  if (state.monitors.hasOwnProperty(action.monitorId)) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Can't add monitor, monitor with id ".concat(action.monitorId, " already exists."));
    return state;
  }
  if (!_verifyRect(action.upperStart, action.lowerEnd)) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Monitor rectangle not formatted correctly");
    return state;
  }
  return {
    monitors: Object.assign({}, state.monitors, {
      [action.monitorId]: {
        upperStart: action.upperStart,
        lowerEnd: action.lowerEnd
      }
    }),
    savedMonitorPositions: action.savePosition ? Object.assign({}, state.savedMonitorPositions, {
      [action.monitorId]: {
        x: action.upperStart.x,
        y: action.upperStart.y
      }
    }) : state.savedMonitorPositions
  };
};
const _moveMonitorRect = function _moveMonitorRect(state, action) {
  if (!state.monitors.hasOwnProperty(action.monitorId)) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Can't move monitor, monitor with id ".concat(action.monitorId, " does not exist."));
    return state;
  }
  if (isNaN(action.newX) || isNaN(action.newY)) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Monitor rectangle not formatted correctly");
    return state;
  }
  const oldMonitor = state.monitors[action.monitorId];
  if (oldMonitor.upperStart.x === action.newX && oldMonitor.upperStart.y === action.newY) {
    // Hasn't moved
    return state;
  }
  const monitorWidth = oldMonitor.lowerEnd.x - oldMonitor.upperStart.x;
  const monitorHeight = oldMonitor.lowerEnd.y - oldMonitor.upperStart.y;
  return {
    monitors: Object.assign({}, state.monitors, {
      [action.monitorId]: {
        upperStart: {
          x: action.newX,
          y: action.newY
        },
        lowerEnd: {
          x: action.newX + monitorWidth,
          y: action.newY + monitorHeight
        }
      }
    }),
    // User generated position is saved
    savedMonitorPositions: Object.assign({}, state.savedMonitorPositions, {
      [action.monitorId]: {
        x: action.newX,
        y: action.newY
      }
    })
  };
};
const _resizeMonitorRect = function _resizeMonitorRect(state, action) {
  if (!state.monitors.hasOwnProperty(action.monitorId)) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Can't resize monitor, monitor with id ".concat(action.monitorId, " does not exist."));
    return state;
  }
  if (isNaN(action.newWidth) || isNaN(action.newHeight) || action.newWidth <= 0 || action.newHeight <= 0) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Monitor rectangle not formatted correctly");
    return state;
  }
  const oldMonitor = state.monitors[action.monitorId];
  const newMonitor = {
    upperStart: oldMonitor.upperStart,
    lowerEnd: {
      x: oldMonitor.upperStart.x + action.newWidth,
      y: oldMonitor.upperStart.y + action.newHeight
    }
  };
  if (newMonitor.lowerEnd.x === oldMonitor.lowerEnd.x && newMonitor.lowerEnd.y === oldMonitor.lowerEnd.y) {
    // no change
    return state;
  }
  return {
    monitors: Object.assign({}, state.monitors, {
      [action.monitorId]: newMonitor
    }),
    savedMonitorPositions: state.savedMonitorPositions
  };
};
const _removeMonitorRect = function _removeMonitorRect(state, action) {
  if (!state.monitors.hasOwnProperty(action.monitorId)) {
    _lib_log__WEBPACK_IMPORTED_MODULE_0__["default"].error("Can't remove monitor, monitor with id ".concat(action.monitorId, " does not exist."));
    return state;
  }
  const newMonitors = Object.assign({}, state.monitors);
  delete newMonitors[action.monitorId];
  return {
    monitors: newMonitors,
    savedMonitorPositions: state.savedMonitorPositions
  };
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case ADD_MONITOR_RECT:
      return _addMonitorRect(state, action);
    case MOVE_MONITOR_RECT:
      return _moveMonitorRect(state, action);
    case RESIZE_MONITOR_RECT:
      return _resizeMonitorRect(state, action);
    case REMOVE_MONITOR_RECT:
      return _removeMonitorRect(state, action);
    case RESET_MONITOR_LAYOUT:
      return initialState;
    default:
      return state;
  }
};

// Init position --------------------------
const PADDING = 5;
// @todo fix these numbers when we fix https://github.com/LLK/scratch-gui/issues/980
const SCREEN_WIDTH = 400;
const SCREEN_HEIGHT = 300;
const SCREEN_EDGE_BUFFER = 40;
const _rectsIntersect = function _rectsIntersect(rect1, rect2) {
  // If one rectangle is on left side of other
  if (rect1.upperStart.x >= rect2.lowerEnd.x || rect2.upperStart.x >= rect1.lowerEnd.x) return false;
  // If one rectangle is above other
  if (rect1.upperStart.y >= rect2.lowerEnd.y || rect2.upperStart.y >= rect1.lowerEnd.y) return false;
  return true;
};

// We need to place a monitor with the given width and height. Return a rect defining where it should be placed.
const getInitialPosition = function getInitialPosition(state, monitorId, eltWidth, eltHeight) {
  // If this monitor was purposefully moved to a certain position before, put it back in that position
  if (state.savedMonitorPositions.hasOwnProperty(monitorId)) {
    const saved = state.savedMonitorPositions[monitorId];
    return {
      upperStart: saved,
      lowerEnd: {
        x: saved.x + eltWidth,
        y: saved.y + eltHeight
      }
    };
  }

  // Try all starting positions for the new monitor to find one that doesn't intersect others
  const endXs = [0];
  const endYs = [0];
  let lastX = null;
  let lastY = null;
  for (const monitor in state.monitors) {
    let x = state.monitors[monitor].lowerEnd.x;
    x = Math.ceil(x / 50) * 50; // Try to choose a sensible "tab width" so more monitors line up
    endXs.push(x);
    endYs.push(Math.ceil(state.monitors[monitor].lowerEnd.y));
  }
  endXs.sort((a, b) => a - b);
  endYs.sort((a, b) => a - b);
  // We'll use plan B if the monitor doesn't fit anywhere (too long or tall)
  let planB = null;
  for (const x of endXs) {
    if (x === lastX) {
      continue;
    }
    lastX = x;
    outer: for (const y of endYs) {
      if (y === lastY) {
        continue;
      }
      lastY = y;
      const monitorRect = {
        upperStart: {
          x: x + PADDING,
          y: y + PADDING
        },
        lowerEnd: {
          x: x + PADDING + eltWidth,
          y: y + PADDING + eltHeight
        }
      };
      // Intersection testing rect that includes padding
      const rect = {
        upperStart: {
          x,
          y
        },
        lowerEnd: {
          x: x + eltWidth + 2 * PADDING,
          y: y + eltHeight + 2 * PADDING
        }
      };
      for (const monitor in state.monitors) {
        if (_rectsIntersect(state.monitors[monitor], rect)) {
          continue outer;
        }
      }
      // If the rect overlaps the ends of the screen
      if (rect.lowerEnd.x > SCREEN_WIDTH || rect.lowerEnd.y > SCREEN_HEIGHT) {
        // If rect is not too close to completely off screen, set it as plan B
        if (!planB && !(rect.upperStart.x + SCREEN_EDGE_BUFFER > SCREEN_WIDTH || rect.upperStart.y + SCREEN_EDGE_BUFFER > SCREEN_HEIGHT)) {
          planB = monitorRect;
        }
        continue;
      }
      return monitorRect;
    }
  }
  // If the monitor is too long to fit anywhere, put it in the leftmost spot available
  // that intersects the right or bottom edge and isn't too close to the edge.
  if (planB) {
    return planB;
  }

  // If plan B fails and there's nowhere reasonable to put it, plan C is to place the monitor randomly
  const randX = Math.ceil(Math.random() * (SCREEN_WIDTH / 2));
  const randY = Math.ceil(Math.random() * (SCREEN_HEIGHT - SCREEN_EDGE_BUFFER));
  return {
    upperStart: {
      x: randX,
      y: randY
    },
    lowerEnd: {
      x: randX + eltWidth,
      y: randY + eltHeight
    }
  };
};

// Action creators ------------------------
/**
 * @param {!string} monitorId Id to add
 * @param {!object} upperStart upper point defining the rectangle
 * @param {!number} upperStart.x X of top point that defines the monitor location
 * @param {!number} upperStart.y Y of top point that defines the monitor location
 * @param {!object} lowerEnd lower point defining the rectangle
 * @param {!number} lowerEnd.x X of bottom point that defines the monitor location
 * @param {!number} lowerEnd.y Y of bottom point that defines the monitor location
 * @param {?boolean} savePosition True if the placement should be saved when adding the monitor
 * @returns {object} action to add a new monitor at the location
 */
const addMonitorRect = function addMonitorRect(monitorId, upperStart, lowerEnd, savePosition) {
  return {
    type: ADD_MONITOR_RECT,
    monitorId: monitorId,
    upperStart: upperStart,
    lowerEnd: lowerEnd,
    savePosition: savePosition
  };
};

/**
 * @param {!string} monitorId Id for monitor to move
 * @param {!number} newX X of top point that defines the monitor location
 * @param {!number} newY Y of top point that defines the monitor location
 * @returns {object} action to move an existing monitor to the location
 */
const moveMonitorRect = function moveMonitorRect(monitorId, newX, newY) {
  return {
    type: MOVE_MONITOR_RECT,
    monitorId: monitorId,
    newX: newX,
    newY: newY
  };
};

/**
 * @param {!string} monitorId Id for monitor to resize
 * @param {!number} newWidth Width to set monitor to
 * @param {!number} newHeight Height to set monitor to
 * @returns {object} action to resize an existing monitor to the given dimensions
 */
const resizeMonitorRect = function resizeMonitorRect(monitorId, newWidth, newHeight) {
  return {
    type: RESIZE_MONITOR_RECT,
    monitorId: monitorId,
    newWidth: newWidth,
    newHeight: newHeight
  };
};

/**
 * @param {!string} monitorId Id for monitor to remove
 * @returns {object} action to remove an existing monitor
 */
const removeMonitorRect = function removeMonitorRect(monitorId) {
  return {
    type: REMOVE_MONITOR_RECT,
    monitorId: monitorId
  };
};
const resetMonitorLayout = function resetMonitorLayout() {
  return {
    type: RESET_MONITOR_LAYOUT
  };
};


/***/ }),
/* 120 */,
/* 121 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1656);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1679);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1779);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_bindall__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }




/**
 * Higher Order Component to manage inputs that submit on blur and <enter>
 * @param {React.Component} Input text input that consumes onChange, onBlur, onKeyPress
 * @returns {React.Component} Buffered input that calls onSubmit on blur and <enter>
 */
/* harmony default export */ __webpack_exports__["a"] = (function (Input) {
  class BufferedInput extends react__WEBPACK_IMPORTED_MODULE_2___default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default()(this, ['handleChange', 'handleKeyPress', 'handleFlush']);
      this.state = {
        value: null
      };
    }
    handleKeyPress(e) {
      if (e.key === 'Enter') {
        this.handleFlush();
        e.target.blur();
      }
    }
    handleFlush() {
      const isNumeric = typeof this.props.value === 'number';
      const validatesNumeric = isNumeric ? !isNaN(this.state.value) : true;
      if (this.state.value !== null && validatesNumeric) {
        this.props.onSubmit(isNumeric ? Number(this.state.value) : this.state.value);
      }
      this.setState({
        value: null
      });
    }
    handleChange(e) {
      this.setState({
        value: e.target.value
      });
    }
    render() {
      const bufferedValue = this.state.value === null ? this.props.value : this.state.value;
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(Input, _extends({}, this.props, {
        value: bufferedValue,
        onBlur: this.handleFlush,
        onChange: this.handleChange,
        onKeyPress: this.handleKeyPress
      }));
    }
  }
  BufferedInput.propTypes = {
    onSubmit: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
    value: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number])
  };
  return BufferedInput;
});

/***/ }),
/* 130 */,
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return setRunningState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setStartedState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return setTurboState; });
const SET_RUNNING_STATE = 'scratch-gui/vm-status/SET_RUNNING_STATE';
const SET_TURBO_STATE = 'scratch-gui/vm-status/SET_TURBO_STATE';
const SET_STARTED_STATE = 'scratch-gui/vm-status/SET_STARTED_STATE';
const initialState = {
  running: false,
  started: false,
  turbo: false
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_STARTED_STATE:
      return Object.assign({}, state, {
        started: action.started
      });
    case SET_RUNNING_STATE:
      return Object.assign({}, state, {
        running: action.running
      });
    case SET_TURBO_STATE:
      return Object.assign({}, state, {
        turbo: action.turbo
      });
    default:
      return state;
  }
};
const setStartedState = function setStartedState(started) {
  return {
    type: SET_STARTED_STATE,
    started: started
  };
};
const setRunningState = function setRunningState(running) {
  return {
    type: SET_RUNNING_STATE,
    running: running
  };
};
const setTurboState = function setTurboState(turbo) {
  return {
    type: SET_TURBO_STATE,
    turbo: turbo
  };
};


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1756);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isScratchDesktop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return notScratchDesktop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setIsScratchDesktop; });
/**
 * Internal stored state. Not valid until after at least one call to `setIsScratchDesktop()`.
 * @type {boolean}
 */
let _isScratchDesktop; // undefined = not ready yet

/**
 * Tell the `isScratchDesktop()` whether or not the GUI is running under Scratch Desktop.
 * @param {boolean} value - the new value which `isScratchDesktop()` should return in the future.
 */
const setIsScratchDesktop = function setIsScratchDesktop(value) {
  _isScratchDesktop = value;
};

/**
 * @returns {boolean} - true if it seems like the GUI is running under Scratch Desktop; false otherwise.
 * If `setIsScratchDesktop()` has not yet been called, this can return `undefined`.
 */
const isScratchDesktop = function isScratchDesktop() {
  return _isScratchDesktop;
};

/**
 * @returns {boolean} - false if it seems like the GUI is running under Scratch Desktop; true otherwise.
 */
const notScratchDesktop = function notScratchDesktop() {
  return !isScratchDesktop();
};
/* unused harmony default export */ var _unused_webpack_default_export = (isScratchDesktop);


/***/ }),
/* 140 */,
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash_omit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var lodash_omit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_omit__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var to_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(623);
/* harmony import */ var to_style__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(to_style__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_style_proptype__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(218);
/* harmony import */ var react_style_proptype__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_style_proptype__WEBPACK_IMPORTED_MODULE_4__);






/*
 * DOMElementRenderer wraps a DOM element, allowing it to be
 * rendered by React. It's up to the containing component
 * to retain a reference to the element prop, or else it
 * will be garbage collected after unmounting.
 *
 * Props passed to the DOMElementRenderer will be set on the
 * DOM element like it's a normal component.
 */
class DOMElementRenderer extends react__WEBPACK_IMPORTED_MODULE_2___default.a.Component {
  constructor(props) {
    super(props);
    this.setContainer = this.setContainer.bind(this);
  }
  componentDidMount() {
    this.container.appendChild(this.props.domElement);
  }
  componentWillUnmount() {
    this.container.removeChild(this.props.domElement);
  }
  setContainer(c) {
    this.container = c;
  }
  render() {
    // Apply props to the DOM element, so its attributes
    // are updated as if it were a normal component.
    // Look at me, I'm the React now!
    Object.assign(this.props.domElement, lodash_omit__WEBPACK_IMPORTED_MODULE_0___default()(this.props, ['domElement', 'children', 'style']));

    // Convert react style prop to dom element styling.
    if (this.props.style) {
      this.props.domElement.style.cssText = to_style__WEBPACK_IMPORTED_MODULE_3___default.a.string(this.props.style);
    }
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
      ref: this.setContainer
    });
  }
}
DOMElementRenderer.propTypes = {
  domElement: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.instanceOf(Element).isRequired,
  style: react_style_proptype__WEBPACK_IMPORTED_MODULE_4___default.a
};
/* harmony default export */ __webpack_exports__["a"] = (DOMElementRenderer);

/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setHoveredSprite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return setReceivedBlocks; });
const SET_HOVERED_SPRITE = 'scratch-gui/hovered-target/SET_HOVERED_SPRITE';
const SET_RECEIVED_BLOCKS = 'scratch-gui/hovered-target/SET_RECEIVED_BLOCKS';
const initialState = {
  sprite: null,
  receivedBlocks: false
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_HOVERED_SPRITE:
      return {
        sprite: action.spriteId,
        receivedBlocks: false
      };
    case SET_RECEIVED_BLOCKS:
      return {
        sprite: state.sprite,
        receivedBlocks: action.receivedBlocks
      };
    default:
      return state;
  }
};
const setHoveredSprite = function setHoveredSprite(spriteId) {
  return {
    type: SET_HOVERED_SPRITE,
    spriteId: spriteId,
    meta: {
      throttle: 30
    }
  };
};
const setReceivedBlocks = function setReceivedBlocks(receivedBlocks) {
  return {
    type: SET_RECEIVED_BLOCKS,
    receivedBlocks: receivedBlocks
  };
};


/***/ }),
/* 143 */,
/* 144 */,
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const available = () => !!window.showSaveFilePicker;
const showSaveFilePicker = fileName => window.showSaveFilePicker({
  suggestedName: fileName,
  types: [{
    description: 'Scratch 3 Project/Gvbvdxx Mod 2 Project',
    accept: {
      'application/x.scratch.sb3': '.sb3'
    }
  }],
  excludeAcceptAllOption: true
});
const showOpenFilePicker = async () => {
  const [handle] = await window.showOpenFilePicker({
    multiple: false,
    types: [{
      description: 'Scratch 3 Project/Gvbvdxx Mod 2 Project',
      accept: {
        'application/x.scratch.sb3': ['.sb', '.sb2', '.sb3']
      }
    }]
  });
  return handle;
};
const createWritable = handle => handle.createWritable();
const closeWritable = async writable => {
  await writable.close();
};
const writeToWritable = async (writable, content) => {
  await writable.write(content);
};
/* harmony default export */ __webpack_exports__["a"] = ({
  available,
  showOpenFilePicker,
  showSaveFilePicker,
  createWritable,
  closeWritable,
  writeToWritable
});

/***/ }),
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(42);
/* harmony import */ var _connected_intl_provider_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(328);
/* harmony import */ var _addons_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(192);
/* harmony import */ var _reducers_locales__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(195);
/* harmony import */ var _reducers_mode_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(73);
/* harmony import */ var _turbowarp_scratch_l10n__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(101);
/* harmony import */ var _detect_locale__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(191);
const _excluded = ["isFullScreen", "isPlayerOnly", "showTelemetryModal"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }










const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || redux__WEBPACK_IMPORTED_MODULE_3__[/* compose */ "d"];

/*
 * Higher Order Component to provide redux state. If an `intl` prop is provided
 * it will override the internal `intl` redux state
 * @param {React.Component} WrappedComponent - component to provide state for
 * @param {boolean} localesOnly - only provide the locale state, not everything
 *                      required by the GUI. Used to exclude excess state when
                        only rendering modals, not the GUI.
 * @returns {React.Component} component with redux and intl state provided
 */
const AppStateHOC = function AppStateHOC(WrappedComponent, localesOnly) {
  class AppStateWrapper extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {
    constructor(props) {
      super(props);
      let initialState = {};
      let reducers = {};
      let enhancer;
      let initializedLocales = _reducers_locales__WEBPACK_IMPORTED_MODULE_6__[/* localesInitialState */ "c"];
      const locale = Object(_detect_locale__WEBPACK_IMPORTED_MODULE_9__[/* detectLocale */ "b"])(Object.keys(_turbowarp_scratch_l10n__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"]));
      if (locale !== 'en') {
        initializedLocales = Object(_reducers_locales__WEBPACK_IMPORTED_MODULE_6__[/* initLocale */ "b"])(initializedLocales, locale);
      }
      if (localesOnly) {
        // Used for instantiating minimal state for the unsupported
        // browser modal
        reducers = {
          locales: _reducers_locales__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"]
        };
        initialState = {
          locales: initializedLocales
        };
        enhancer = composeEnhancers();
      } else {
        // You are right, this is gross. But it's necessary to avoid
        // importing unneeded code that will crash unsupported browsers.
        const guiRedux = __webpack_require__(495);
        const guiReducer = guiRedux.default;
        const {
          guiInitialState,
          guiMiddleware,
          initFullScreen,
          initPlayer,
          initEmbedded,
          initTelemetryModal
        } = guiRedux;
        const {
          ScratchPaintReducer
        } = __webpack_require__(445);
        let initializedGui = guiInitialState;
        if (props.isFullScreen || props.isPlayerOnly) {
          if (props.isFullScreen) {
            initializedGui = initFullScreen(initializedGui);
          }
          if (props.isPlayerOnly) {
            initializedGui = initPlayer(initializedGui);
          }
        } else if (props.showTelemetryModal) {
          initializedGui = initTelemetryModal(initializedGui);
        }
        if (props.isEmbedded) {
          initializedGui = initEmbedded(initializedGui);
        }
        reducers = {
          locales: _reducers_locales__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"],
          scratchGui: guiReducer,
          scratchPaint: ScratchPaintReducer
        };
        initialState = {
          locales: initializedLocales,
          scratchGui: initializedGui
        };
        enhancer = composeEnhancers(guiMiddleware);
      }
      const reducer = Object(redux__WEBPACK_IMPORTED_MODULE_3__[/* combineReducers */ "c"])(reducers);
      const reducer2 = (previousState, action) => {
        const nextState = reducer(previousState, action);
        _addons_hooks__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"].appStateReducer(action, previousState, nextState);
        return nextState;
      };
      this.store = Object(redux__WEBPACK_IMPORTED_MODULE_3__[/* createStore */ "e"])(reducer2, initialState, enhancer);
      window.ReduxStore = this.store;
      _addons_hooks__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"].appStateStore = this.store;
    }
    componentDidUpdate(prevProps) {
      if (localesOnly) return;
      if (prevProps.isPlayerOnly !== this.props.isPlayerOnly) {
        this.store.dispatch(Object(_reducers_mode_js__WEBPACK_IMPORTED_MODULE_7__[/* setPlayer */ "d"])(this.props.isPlayerOnly));
      }
      if (prevProps.isFullScreen !== this.props.isFullScreen) {
        this.store.dispatch(Object(_reducers_mode_js__WEBPACK_IMPORTED_MODULE_7__[/* setFullScreen */ "c"])(this.props.isFullScreen));
      }
    }
    render() {
      const _this$props = this.props,
        {
          isFullScreen,
          // eslint-disable-line no-unused-vars
          isPlayerOnly,
          // eslint-disable-line no-unused-vars
          showTelemetryModal // eslint-disable-line no-unused-vars
        } = _this$props,
        componentProps = _objectWithoutProperties(_this$props, _excluded);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_redux__WEBPACK_IMPORTED_MODULE_2__[/* Provider */ "a"], {
        store: this.store
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_connected_intl_provider_jsx__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(WrappedComponent, componentProps)));
    }
  }
  AppStateWrapper.propTypes = {
    isFullScreen: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    isPlayerOnly: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    isTelemetryEnabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    showTelemetryModal: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    isEmbedded: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool
  };
  return AppStateWrapper;
};
/* harmony default export */ __webpack_exports__["a"] = (AppStateHOC);

/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _tw_extensions_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(694);
var _tw_extensions_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(694, 1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var _music_music_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(695);
/* harmony import */ var _music_music_png__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_music_music_png__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _music_music_small_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(696);
/* harmony import */ var _music_music_small_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_music_music_small_svg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _pen_pen_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(697);
/* harmony import */ var _pen_pen_png__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_pen_pen_png__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _pen_pen_small_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(698);
/* harmony import */ var _pen_pen_small_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_pen_pen_small_svg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _videoSensing_video_sensing_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(699);
/* harmony import */ var _videoSensing_video_sensing_png__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_videoSensing_video_sensing_png__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _videoSensing_video_sensing_small_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(700);
/* harmony import */ var _videoSensing_video_sensing_small_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_videoSensing_video_sensing_small_svg__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _text2speech_text2speech_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(701);
/* harmony import */ var _text2speech_text2speech_png__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_text2speech_text2speech_png__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _text2speech_text2speech_small_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(702);
/* harmony import */ var _text2speech_text2speech_small_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_text2speech_text2speech_small_svg__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _translate_translate_png__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(703);
/* harmony import */ var _translate_translate_png__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_translate_translate_png__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _translate_translate_small_png__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(704);
/* harmony import */ var _translate_translate_small_png__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_translate_translate_small_png__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _makeymakey_makeymakey_png__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(705);
/* harmony import */ var _makeymakey_makeymakey_png__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_makeymakey_makeymakey_png__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _makeymakey_makeymakey_small_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(706);
/* harmony import */ var _makeymakey_makeymakey_small_svg__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_makeymakey_makeymakey_small_svg__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _microbit_microbit_png__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(707);
/* harmony import */ var _microbit_microbit_png__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_microbit_microbit_png__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _microbit_microbit_small_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(329);
/* harmony import */ var _microbit_microbit_small_svg__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_microbit_microbit_small_svg__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _microbit_microbit_illustration_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(708);
/* harmony import */ var _microbit_microbit_illustration_svg__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_microbit_microbit_illustration_svg__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _ev3_ev3_png__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(709);
/* harmony import */ var _ev3_ev3_png__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_ev3_ev3_png__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _ev3_ev3_small_svg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(330);
/* harmony import */ var _ev3_ev3_small_svg__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_ev3_ev3_small_svg__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _ev3_ev3_hub_illustration_svg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(710);
/* harmony import */ var _ev3_ev3_hub_illustration_svg__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_ev3_ev3_hub_illustration_svg__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _wedo2_wedo_png__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(711);
/* harmony import */ var _wedo2_wedo_png__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_wedo2_wedo_png__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _wedo2_wedo_small_svg__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(331);
/* harmony import */ var _wedo2_wedo_small_svg__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_wedo2_wedo_small_svg__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _wedo2_wedo_illustration_svg__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(712);
/* harmony import */ var _wedo2_wedo_illustration_svg__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_wedo2_wedo_illustration_svg__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _wedo2_wedo_button_illustration_svg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(713);
/* harmony import */ var _wedo2_wedo_button_illustration_svg__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_wedo2_wedo_button_illustration_svg__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var _boost_boost_png__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(714);
/* harmony import */ var _boost_boost_png__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_boost_boost_png__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _boost_boost_small_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(332);
/* harmony import */ var _boost_boost_small_svg__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_boost_boost_small_svg__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var _boost_boost_illustration_svg__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(715);
/* harmony import */ var _boost_boost_illustration_svg__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_boost_boost_illustration_svg__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var _boost_boost_button_illustration_svg__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(716);
/* harmony import */ var _boost_boost_button_illustration_svg__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_boost_boost_button_illustration_svg__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var _gdxfor_gdxfor_png__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(717);
/* harmony import */ var _gdxfor_gdxfor_png__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_gdxfor_gdxfor_png__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var _gdxfor_gdxfor_small_svg__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(333);
/* harmony import */ var _gdxfor_gdxfor_small_svg__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_gdxfor_gdxfor_small_svg__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var _gdxfor_gdxfor_illustration_svg__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(718);
/* harmony import */ var _gdxfor_gdxfor_illustration_svg__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_gdxfor_gdxfor_illustration_svg__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var _tw_tw_svg__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(719);
/* harmony import */ var _tw_tw_svg__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_tw_tw_svg__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var _custom_custom_gm2_svg__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(720);
/* harmony import */ var _custom_custom_gm2_svg__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_custom_custom_gm2_svg__WEBPACK_IMPORTED_MODULE_33__);
/* harmony import */ var _dialog_dialogs_png__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(451);
/* harmony import */ var _dialog_dialogs_png__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_dialog_dialogs_png__WEBPACK_IMPORTED_MODULE_34__);
/* harmony import */ var _dialog_small_png__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(721);
/* harmony import */ var _dialog_small_png__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_dialog_small_png__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var _speech4pc_speech_png__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(722);
/* harmony import */ var _speech4pc_speech_png__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_speech4pc_speech_png__WEBPACK_IMPORTED_MODULE_36__);
/* harmony import */ var _speech4pc_small_png__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(723);
/* harmony import */ var _speech4pc_small_png__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_speech4pc_small_png__WEBPACK_IMPORTED_MODULE_37__);
/* harmony import */ var _websites_websites_png__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(724);
/* harmony import */ var _websites_websites_png__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_websites_websites_png__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var _websites_small_png__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(725);
/* harmony import */ var _websites_small_png__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_websites_small_png__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var _control_scratch_png__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(944);
/* harmony import */ var _control_scratch_png__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_control_scratch_png__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var _control_small_png__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(945);
/* harmony import */ var _control_small_png__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_control_small_png__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var _better_audio_big_png__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(726);
/* harmony import */ var _better_audio_big_png__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_better_audio_big_png__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var _better_audio_small_png__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(727);
/* harmony import */ var _better_audio_small_png__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_better_audio_small_png__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var _speech2text_speech_png__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(946);
/* harmony import */ var _speech2text_speech_png__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_speech2text_speech_png__WEBPACK_IMPORTED_MODULE_44__);
/* harmony import */ var _gamepad_big_png__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(728);
/* harmony import */ var _gamepad_big_png__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_gamepad_big_png__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var _gamepad_small_png__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(729);
/* harmony import */ var _gamepad_small_png__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_gamepad_small_png__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var _webmidi_small_png__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(730);
/* harmony import */ var _webmidi_small_png__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_webmidi_small_png__WEBPACK_IMPORTED_MODULE_47__);
/* harmony import */ var _webmidi_big_png__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(731);
/* harmony import */ var _webmidi_big_png__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_webmidi_big_png__WEBPACK_IMPORTED_MODULE_48__);
/* harmony import */ var _beepbox_synth_small_png__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(732);
/* harmony import */ var _beepbox_synth_small_png__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_beepbox_synth_small_png__WEBPACK_IMPORTED_MODULE_49__);
/* harmony import */ var _beepbox_synth_big_png__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(733);
/* harmony import */ var _beepbox_synth_big_png__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_beepbox_synth_big_png__WEBPACK_IMPORTED_MODULE_50__);
/* harmony import */ var _websockets_small_png__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(734);
/* harmony import */ var _websockets_small_png__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_websockets_small_png__WEBPACK_IMPORTED_MODULE_51__);
/* harmony import */ var _websockets_big_png__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(735);
/* harmony import */ var _websockets_big_png__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_websockets_big_png__WEBPACK_IMPORTED_MODULE_52__);
/* harmony import */ var _audio_context_small_png__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(452);
/* harmony import */ var _audio_context_small_png__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_audio_context_small_png__WEBPACK_IMPORTED_MODULE_53__);
/* harmony import */ var _audio_context_big_png__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(453);
/* harmony import */ var _audio_context_big_png__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_audio_context_big_png__WEBPACK_IMPORTED_MODULE_54__);
/* harmony import */ var _userdata_small_png__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(736);
/* harmony import */ var _userdata_small_png__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_userdata_small_png__WEBPACK_IMPORTED_MODULE_55__);
/* harmony import */ var _userdata_big_png__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(737);
/* harmony import */ var _userdata_big_png__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_userdata_big_png__WEBPACK_IMPORTED_MODULE_56__);
/* harmony import */ var _roku_small_png__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(738);
/* harmony import */ var _roku_small_png__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(_roku_small_png__WEBPACK_IMPORTED_MODULE_57__);
/* harmony import */ var _roku_big_png__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(739);
/* harmony import */ var _roku_big_png__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_roku_big_png__WEBPACK_IMPORTED_MODULE_58__);























 // TODO: Rename file names to match variable/prop names?








































var twExtensionList = [];
for (var ext of _tw_extensions_json__WEBPACK_IMPORTED_MODULE_0__.extensions) {
  if (!(ext.id.toLowerCase() == "gamepad")) {
    twExtensionList.push({
      name: ext.name,
      extensionId: ext.id,
      iconURL: "https://extensions.turbowarp.org/" + ext.image,
      insetIconURL: null,
      description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", null, ext.description),
      featured: true,
      disabled: false,
      internetConnectionRequired: false,
      bluetoothRequired: false,
      helpLink: ''
    });
  }
}
/* harmony default export */ __webpack_exports__["a"] = ([{
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Custom Extension",
    id: "tw.customExtension.name"
  }),
  extensionId: '',
  iconURL: _custom_custom_gm2_svg__WEBPACK_IMPORTED_MODULE_33___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Load custom extensions, without modifing code. Supporting the new TurboWarp extension libary.",
    id: "tw.customExtension.description"
  }),
  featured: true
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "HTML5 Elements",
    id: "tw.html5.name"
  }),
  extensionId: 'html5',
  iconURL: _dialog_dialogs_png__WEBPACK_IMPORTED_MODULE_34___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Create HTMl5 elements. Display sprite costumes out of the stage!",
    id: "tw.html5.description"
  }),
  featured: true
}, {
  name: 'Roku',
  extensionId: 'roku',
  iconURL: _roku_big_png__WEBPACK_IMPORTED_MODULE_58___default.a,
  insetIconURL: _roku_small_png__WEBPACK_IMPORTED_MODULE_57___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Control your roku tv, player, and more, with this extension.",
    id: "gui.extension.roku.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: true,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'User Data',
  extensionId: 'userdata',
  iconURL: _userdata_big_png__WEBPACK_IMPORTED_MODULE_56___default.a,
  insetIconURL: _userdata_small_png__WEBPACK_IMPORTED_MODULE_55___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Get The User's Data",
    id: "gui.extension.userdata.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'Extra',
  extensionId: 'extra',
  iconURL: _audio_context_big_png__WEBPACK_IMPORTED_MODULE_54___default.a,
  insetIconURL: _audio_context_small_png__WEBPACK_IMPORTED_MODULE_53___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Gvbvdxx Mod Helper App, Unfinished.",
    id: "gui.extension.extra.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'Audio Context',
  extensionId: 'audioctx',
  iconURL: _audio_context_big_png__WEBPACK_IMPORTED_MODULE_54___default.a,
  insetIconURL: _audio_context_small_png__WEBPACK_IMPORTED_MODULE_53___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Play 8-bit sounds",
    id: "gui.extension.audioctx.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'Websockets',
  extensionId: 'websocket',
  iconURL: _websockets_big_png__WEBPACK_IMPORTED_MODULE_52___default.a,
  insetIconURL: _websockets_small_png__WEBPACK_IMPORTED_MODULE_51___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connect to servers!",
    id: "gui.extension.websocket.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'Beepbox',
  extensionId: 'beepboxsynth',
  iconURL: _beepbox_synth_big_png__WEBPACK_IMPORTED_MODULE_50___default.a,
  insetIconURL: _beepbox_synth_small_png__WEBPACK_IMPORTED_MODULE_49___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Play beepbox songs",
    id: "gui.extension.beepboxsynth.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "WebMIDI",
    id: "gui.extension.webmidi.name"
  }),
  extensionId: 'webmidi',
  iconURL: _webmidi_big_png__WEBPACK_IMPORTED_MODULE_48___default.a,
  insetIconURL: _webmidi_small_png__WEBPACK_IMPORTED_MODULE_47___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Web MIDI for Musical Instrument",
    id: "gui.extension.webmidi.description"
  }),
  featured: true
}, {
  name: 'Gamepad',
  extensionId: 'gamepad',
  iconURL: _gamepad_big_png__WEBPACK_IMPORTED_MODULE_45___default.a,
  insetIconURL: _gamepad_small_png__WEBPACK_IMPORTED_MODULE_46___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Gamepad Support For Scratch",
    id: "gui.extension.gamepad.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'Better Audio',
  extensionId: 'betteraudio',
  iconURL: _better_audio_big_png__WEBPACK_IMPORTED_MODULE_42___default.a,
  insetIconURL: _better_audio_small_png__WEBPACK_IMPORTED_MODULE_43___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Better Audio",
    id: "gui.extension.betteraudio.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
},
/**    {
        name: 'Scratch Control',
        extensionId: 'scratch',
        collaborator: 'gvbvdxx',
        iconURL: scratchBigIcon,
        insetIconURL: scratchSmallIcon,
        description: (
            <FormattedMessage
                defaultMessage="Scratch Control"
                description="Control Scratch Stuff"
                id="gui.extension.scratchcontrol.description"
            />
        ),
        featured: true,
        disabled: false,
        internetConnectionRequired: false,
        bluetoothRequired: false,
        helpLink: ''
	},*/
{
  name: 'Website API',
  extensionId: 'websites',
  iconURL: _websites_websites_png__WEBPACK_IMPORTED_MODULE_38___default.a,
  insetIconURL: _websites_small_png__WEBPACK_IMPORTED_MODULE_39___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Website API",
    id: "gui.extension.websites.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'JS',
  extensionId: 'dialogs',
  iconURL: _dialog_dialogs_png__WEBPACK_IMPORTED_MODULE_34___default.a,
  insetIconURL: _dialog_small_png__WEBPACK_IMPORTED_MODULE_35___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "JS",
    id: "gui.extension.newblocks.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: 'speech4pc',
  extensionId: 'speech4pc',
  iconURL: _speech4pc_speech_png__WEBPACK_IMPORTED_MODULE_36___default.a,
  insetIconURL: _speech4pc_small_png__WEBPACK_IMPORTED_MODULE_37___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Pc Version Of Text To Speech.",
    id: "gui.extension.speech4pc.description"
  }),
  featured: true,
  disabled: false,
  internetConnectionRequired: false,
  bluetoothRequired: false,
  helpLink: ''
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Music",
    id: "gui.extension.music.name"
  }),
  extensionId: 'music',
  iconURL: _music_music_png__WEBPACK_IMPORTED_MODULE_3___default.a,
  insetIconURL: _music_music_small_svg__WEBPACK_IMPORTED_MODULE_4___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Play instruments and drums.",
    id: "gui.extension.music.description"
  }),
  featured: true
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Pen",
    id: "gui.extension.pen.name"
  }),
  extensionId: 'pen',
  iconURL: _pen_pen_png__WEBPACK_IMPORTED_MODULE_5___default.a,
  insetIconURL: _pen_pen_small_svg__WEBPACK_IMPORTED_MODULE_6___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Draw with your sprites.",
    id: "gui.extension.pen.description"
  }),
  featured: true
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Video Sensing",
    id: "gui.extension.videosensing.name"
  }),
  extensionId: 'videoSensing',
  iconURL: _videoSensing_video_sensing_png__WEBPACK_IMPORTED_MODULE_7___default.a,
  insetIconURL: _videoSensing_video_sensing_small_svg__WEBPACK_IMPORTED_MODULE_8___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Sense motion with the camera.",
    id: "gui.extension.videosensing.description"
  }),
  featured: true
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Text to Speech",
    id: "gui.extension.text2speech.name"
  }),
  extensionId: 'text2speech',
  collaborator: 'Amazon Web Services',
  iconURL: _text2speech_text2speech_png__WEBPACK_IMPORTED_MODULE_9___default.a,
  insetIconURL: _text2speech_text2speech_small_svg__WEBPACK_IMPORTED_MODULE_10___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Make your projects talk.",
    id: "gui.extension.text2speech.description"
  }),
  featured: true,
  internetConnectionRequired: true
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Translate",
    id: "gui.extension.translate.name"
  }),
  extensionId: 'translate',
  collaborator: 'Google',
  iconURL: _translate_translate_png__WEBPACK_IMPORTED_MODULE_11___default.a,
  insetIconURL: _translate_translate_small_png__WEBPACK_IMPORTED_MODULE_12___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Translate text into many languages.",
    id: "gui.extension.translate.description"
  }),
  featured: true,
  internetConnectionRequired: true
}, {
  name: 'Makey Makey',
  extensionId: 'makeymakey',
  collaborator: 'JoyLabz',
  iconURL: _makeymakey_makeymakey_png__WEBPACK_IMPORTED_MODULE_13___default.a,
  insetIconURL: _makeymakey_makeymakey_small_svg__WEBPACK_IMPORTED_MODULE_14___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Make anything into a key.",
    id: "gui.extension.makeymakey.description"
  }),
  featured: true
}, {
  name: 'micro:bit',
  extensionId: 'microbit',
  collaborator: 'micro:bit',
  iconURL: _microbit_microbit_png__WEBPACK_IMPORTED_MODULE_15___default.a,
  insetIconURL: _microbit_microbit_small_svg__WEBPACK_IMPORTED_MODULE_16___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connect your projects with the world.",
    id: "gui.extension.microbit.description"
  }),
  featured: true,
  disabled: false,
  bluetoothRequired: true,
  internetConnectionRequired: true,
  launchPeripheralConnectionFlow: true,
  useAutoScan: false,
  connectionIconURL: _microbit_microbit_illustration_svg__WEBPACK_IMPORTED_MODULE_17___default.a,
  connectionSmallIconURL: _microbit_microbit_small_svg__WEBPACK_IMPORTED_MODULE_16___default.a,
  connectingMessage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connecting",
    id: "gui.extension.microbit.connectingMessage"
  }),
  helpLink: 'https://scratch.mit.edu/microbit'
}, {
  name: 'LEGO MINDSTORMS EV3',
  extensionId: 'ev3',
  collaborator: 'LEGO',
  iconURL: _ev3_ev3_png__WEBPACK_IMPORTED_MODULE_18___default.a,
  insetIconURL: _ev3_ev3_small_svg__WEBPACK_IMPORTED_MODULE_19___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Build interactive robots and more.",
    id: "gui.extension.ev3.description"
  }),
  featured: true,
  disabled: false,
  bluetoothRequired: true,
  internetConnectionRequired: true,
  launchPeripheralConnectionFlow: true,
  useAutoScan: false,
  connectionIconURL: _ev3_ev3_hub_illustration_svg__WEBPACK_IMPORTED_MODULE_20___default.a,
  connectionSmallIconURL: _ev3_ev3_small_svg__WEBPACK_IMPORTED_MODULE_19___default.a,
  connectingMessage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connecting. Make sure the pin on your EV3 is set to 1234.",
    id: "gui.extension.ev3.connectingMessage"
  }),
  helpLink: 'https://scratch.mit.edu/ev3'
}, {
  name: 'LEGO BOOST',
  extensionId: 'boost',
  collaborator: 'LEGO',
  iconURL: _boost_boost_png__WEBPACK_IMPORTED_MODULE_25___default.a,
  insetIconURL: _boost_boost_small_svg__WEBPACK_IMPORTED_MODULE_26___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Bring robotic creations to life.",
    id: "gui.extension.boost.description"
  }),
  featured: true,
  disabled: false,
  bluetoothRequired: true,
  internetConnectionRequired: true,
  launchPeripheralConnectionFlow: true,
  useAutoScan: true,
  connectionIconURL: _boost_boost_illustration_svg__WEBPACK_IMPORTED_MODULE_27___default.a,
  connectionSmallIconURL: _boost_boost_small_svg__WEBPACK_IMPORTED_MODULE_26___default.a,
  connectionTipIconURL: _boost_boost_button_illustration_svg__WEBPACK_IMPORTED_MODULE_28___default.a,
  connectingMessage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connecting",
    id: "gui.extension.boost.connectingMessage"
  }),
  helpLink: 'https://scratch.mit.edu/boost'
}, {
  name: 'LEGO Education WeDo 2.0',
  extensionId: 'wedo2',
  collaborator: 'LEGO',
  iconURL: _wedo2_wedo_png__WEBPACK_IMPORTED_MODULE_21___default.a,
  insetIconURL: _wedo2_wedo_small_svg__WEBPACK_IMPORTED_MODULE_22___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Build with motors and sensors.",
    id: "gui.extension.wedo2.description"
  }),
  featured: true,
  disabled: false,
  bluetoothRequired: true,
  internetConnectionRequired: true,
  launchPeripheralConnectionFlow: true,
  useAutoScan: true,
  connectionIconURL: _wedo2_wedo_illustration_svg__WEBPACK_IMPORTED_MODULE_23___default.a,
  connectionSmallIconURL: _wedo2_wedo_small_svg__WEBPACK_IMPORTED_MODULE_22___default.a,
  connectionTipIconURL: _wedo2_wedo_button_illustration_svg__WEBPACK_IMPORTED_MODULE_24___default.a,
  connectingMessage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connecting",
    id: "gui.extension.wedo2.connectingMessage"
  }),
  helpLink: 'https://scratch.mit.edu/wedo'
}, {
  name: 'Go Direct Force & Acceleration',
  extensionId: 'gdxfor',
  collaborator: 'Vernier',
  iconURL: _gdxfor_gdxfor_png__WEBPACK_IMPORTED_MODULE_29___default.a,
  insetIconURL: _gdxfor_gdxfor_small_svg__WEBPACK_IMPORTED_MODULE_30___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Sense push, pull, motion, and spin.",
    id: "gui.extension.gdxfor.description"
  }),
  featured: true,
  disabled: false,
  bluetoothRequired: true,
  internetConnectionRequired: true,
  launchPeripheralConnectionFlow: true,
  useAutoScan: false,
  connectionIconURL: _gdxfor_gdxfor_illustration_svg__WEBPACK_IMPORTED_MODULE_31___default.a,
  connectionSmallIconURL: _gdxfor_gdxfor_small_svg__WEBPACK_IMPORTED_MODULE_30___default.a,
  connectingMessage: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Connecting",
    id: "gui.extension.gdxfor.connectingMessage"
  }),
  helpLink: 'https://scratch.mit.edu/vernier'
}, {
  name: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "TurboWarp Blocks",
    id: "tw.twExtension.name"
  }),
  extensionId: 'tw',
  iconURL: _tw_tw_svg__WEBPACK_IMPORTED_MODULE_32___default.a,
  description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], {
    defaultMessage: "Weird new blocks. Not compatible with Scratch.",
    id: "tw.twExtension.description"
  }),
  featured: true,
  incompatibleWithScratch: true
}].concat(twExtensionList));

/***/ }),
/* 162 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return fetchProjectMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TWProjectMetaFetcherHOC; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);
/* harmony import */ var _reducers_project_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94);
/* harmony import */ var _reducers_tw__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(34);
const _excluded = ["projectId", "onSetAuthor", "onSetDescription", "onSetProjectTitle"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const fetchProjectMeta = async projectId => {
  const urls = ["https://trampoline.turbowarp.org/api/projects/".concat(projectId), "https://trampoline.turbowarp.xyz/api/projects/".concat(projectId)];
  let firstError;
  for (const url of urls) {
    try {
      const res = await fetch(url);
      const data = await res.json();
      if (res.ok) {
        return data;
      }
      if (res.status === 404) {
        throw new Error('Project is probably unshared');
      }
      throw new Error("Unexpected status code: ".concat(res.status));
    } catch (err) {
      if (!firstError) {
        firstError = err;
      }
    }
  }
  throw firstError;
};
const getNoIndexTag = () => document.querySelector('meta[name="robots"][content="noindex"]');
const setIndexable = indexable => {
  if (indexable) {
    const tag = getNoIndexTag();
    if (tag) {
      tag.remove();
    }
  } else if (!getNoIndexTag()) {
    const tag = document.createElement('meta');
    tag.name = 'robots';
    tag.content = 'noindex';
    document.head.appendChild(tag);
  }
};
const TWProjectMetaFetcherHOC = function TWProjectMetaFetcherHOC(WrappedComponent) {
  class ProjectMetaFetcherComponent extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {
    shouldComponentUpdate(nextProps) {
      return this.props.projectId !== nextProps.projectId;
    }
    componentDidUpdate() {
      // project title resetting is handled in titled-hoc.jsx
      this.props.onSetAuthor('', '');
      this.props.onSetDescription('', '');
      const projectId = this.props.projectId;
      // Don't try to load metadata for empty projects.
      if (projectId === '0') {
        return;
      }
      fetchProjectMeta(projectId).then(data => {
        // If project ID changed, ignore the results.
        if (this.props.projectId !== projectId) {
          return;
        }
        const title = data.title;
        if (title) {
          this.props.onSetProjectTitle(title);
        }
        const authorName = data.author.username;
        const authorThumbnail = "https://trampoline.turbowarp.org/avatars/".concat(data.author.id);
        this.props.onSetAuthor(authorName, authorThumbnail);
        const instructions = data.instructions || '';
        const credits = data.description || '';
        if (instructions || credits) {
          this.props.onSetDescription(instructions, credits);
        }
        setIndexable(true);
      }).catch(err => {
        setIndexable(false);
        if ("".concat(err).includes('unshared')) {
          this.props.onSetDescription('unshared', 'unshared');
        }
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('cannot fetch project meta', err);
      });
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          projectId,
          onSetAuthor,
          onSetDescription,
          onSetProjectTitle
          /* eslint-enable no-unused-vars */
        } = _this$props,
        props = _objectWithoutProperties(_this$props, _excluded);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(WrappedComponent, props);
    }
  }
  ProjectMetaFetcherComponent.propTypes = {
    projectId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
    onSetAuthor: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
    onSetDescription: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
    onSetProjectTitle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func
  };
  const mapStateToProps = state => ({
    projectId: state.scratchGui.projectState.projectId
  });
  const mapDispatchToProps = dispatch => ({
    onSetAuthor: (username, thumbnail) => dispatch(Object(_reducers_tw__WEBPACK_IMPORTED_MODULE_5__["setAuthor"])({
      username,
      thumbnail
    })),
    onSetDescription: (instructions, credits) => dispatch(Object(_reducers_tw__WEBPACK_IMPORTED_MODULE_5__["setDescription"])({
      instructions,
      credits
    })),
    onSetProjectTitle: title => dispatch(Object(_reducers_project_title__WEBPACK_IMPORTED_MODULE_4__[/* setProjectTitle */ "c"])(title))
  });
  return Object(react_redux__WEBPACK_IMPORTED_MODULE_2__[/* connect */ "b"])(mapStateToProps, mapDispatchToProps)(ProjectMetaFetcherComponent);
};


/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TWStateManager; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_bindall__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var scratch_vm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(12);
/* harmony import */ var scratch_vm__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(scratch_vm__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2);
/* harmony import */ var _reducers_tw__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(34);
/* harmony import */ var _reducers_project_state__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(11);
/* harmony import */ var _reducers_mode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(73);
/* harmony import */ var _tw_username__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(344);
/* harmony import */ var _tw_navigation_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(92);
/* harmony import */ var _reducers_custom_stage_size__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(118);
const _excluded = ["intl", "customStageSize", "isFullScreen", "isPlayerOnly", "isEmbedded", "projectChanged", "compilerOptions", "runtimeOptions", "highQualityPen", "framerate", "interpolation", "turbo", "onSetIsFullScreen", "onSetIsPlayerOnly", "onSetProjectId", "onSetUsername", "reduxProjectId", "routingStyle", "username", "vm"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














/* eslint-disable no-alert */

const messages = Object(react_intl__WEBPACK_IMPORTED_MODULE_6__[/* defineMessages */ "d"])({
  invalidFPS: {
    "id": "tw.invalidParameters.fps",
    "defaultMessage": "\"fps\" URL parameter is invalid"
  },
  invalidClones: {
    "id": "tw.invalidParameters.clones",
    "defaultMessage": "\"clone\" URL parameter is invalid"
  }
});
const USERNAME_KEY = 'tw:username';

/**
 * The State Manager is responsible for managing persistent state and the URL.
 */

const setLocalStorage = (key, value) => {
  try {
    localStorage.setItem(key, value);
  } catch (e) {
    // ignore
  }
};
const getLocalStorage = key => {
  try {
    return localStorage.getItem(key);
  } catch (e) {
    // ignore
  }
  return null;
};
const readHashProjectId = () => {
  const match = location.hash.match(/#(\d+)/);
  return match === null ? null : match[1];
};
class Router {
  constructor(_ref) {
    let {
      onSetProjectId,
      onSetIsPlayerOnly,
      onSetIsFullScreen
    } = _ref;
    this.onSetProjectId = onSetProjectId;
    this.onSetIsPlayerOnly = onSetIsPlayerOnly;
    this.onSetIsFullScreen = onSetIsFullScreen;
  }
  onhashchange() {}
  onpathchange() {}
  generateURL() {
    return '';
  }
}
class HashRouter extends Router {
  onhashchange() {
    this.onSetProjectId(readHashProjectId() || _reducers_project_state__WEBPACK_IMPORTED_MODULE_8__[/* defaultProjectId */ "e"]);
  }
  generateURL(_ref2) {
    let {
      projectId
    } = _ref2;
    return "".concat(location.pathname).concat(location.search, "#").concat(projectId);
  }
}
class FileHashRouter extends HashRouter {
  constructor(callbacks) {
    super(callbacks);
    this.playerPath = location.pathname.substring(0, location.pathname.lastIndexOf('/') + 1);
    this.editorPath = "".concat(this.playerPath, "editor.html");
    this.fullscreenPath = "".concat(this.playerPath, "fullscreen.html");
  }
  onpathchange() {
    const pathName = location.pathname;
    if (pathName === this.playerPath) {
      this.onSetIsPlayerOnly(true);
      this.onSetIsFullScreen(false);
    } else if (pathName === this.editorPath) {
      this.onSetIsPlayerOnly(false);
      this.onSetIsFullScreen(false);
    } else if (pathName === this.fullscreenPath) {
      this.onSetIsFullScreen(true);
    }
  }
  generateURL(_ref3) {
    let {
      projectId,
      isPlayerOnly,
      isFullScreen
    } = _ref3;
    let newPathname = '';
    let newHash = '';
    if (projectId !== '0') {
      newHash = "#".concat(projectId);
    }
    if (isFullScreen) {
      newPathname = this.fullscreenPath;
    } else if (isPlayerOnly) {
      newPathname = this.playerPath;
    } else {
      newPathname = this.editorPath;
    }
    return "".concat(newPathname).concat(location.search).concat(newHash);
  }
}
const getCanonicalLinkElement = () => {
  let el = document.querySelector('link[rel=canonical]');
  if (!el) {
    el = document.createElement('link');
    el.rel = 'canonical';
    document.head.appendChild(el);
  }
  return el;
};
class WildcardRouter extends Router {
  constructor(callbacks) {
    super(callbacks);
    this.root = "";
  }
  onhashchange() {
    const hashProjectId = readHashProjectId();
    if (hashProjectId) {
      const ok = this.onSetProjectId(hashProjectId);
      if (ok) {
        // Completely remove the hash
        history.replaceState(null, null, "".concat(location.pathname).concat(location.search));
      }
    } else {
      // Do not detect page type here as it is already setup by index.html, editor.html, etc.
      this.parseURL(false);
    }
  }
  onpathchange() {
    this.parseURL(true);
  }
  parseURL(detectPageType) {
    const path = location.pathname.substr(this.root.length);
    const parts = path.split('/');
    const parseProjectId = id => {
      if (id) {
        this.onSetProjectId(id);
      } else {
        this.onSetProjectId(_reducers_project_state__WEBPACK_IMPORTED_MODULE_8__[/* defaultProjectId */ "e"]);
      }
    };
    const parsePageType = type => {
      if (!detectPageType) {
        return;
      }
      if (type === 'fullscreen') {
        this.onSetIsFullScreen(true);
      } else if (type === 'editor') {
        this.onSetIsPlayerOnly(false);
        this.onSetIsFullScreen(false);
      } else {
        this.onSetIsPlayerOnly(true);
        this.onSetIsFullScreen(false);
      }
    };
    if (+parts[0] && Number.isFinite(+parts[0])) {
      parseProjectId(parts[0]);
      parsePageType(parts[1]);
    } else {
      this.onSetProjectId(_reducers_project_state__WEBPACK_IMPORTED_MODULE_8__[/* defaultProjectId */ "e"]);
      parsePageType(parts[0]);
    }
  }
  generateURL(_ref4) {
    let {
      projectId,
      isPlayerOnly,
      isFullScreen
    } = _ref4;
    const parts = [];
    if (projectId !== '0') {
      parts.push(projectId);
    }
    if (isFullScreen) {
      parts.push('fullscreen');
    } else if (!isPlayerOnly) {
      parts.push('editor');
    }
    const path = "".concat(this.root).concat(parts.join('/'));
    const canonical = "".concat(location.origin).concat(this.root).concat(projectId === '0' ? '' : projectId);
    getCanonicalLinkElement().href = canonical;
    return "".concat(path).concat(location.search).concat(location.hash);
  }
}
const routers = {
  none: Router,
  hash: HashRouter,
  filehash: FileHashRouter,
  wildcard: WildcardRouter
};

/**
 * Return the optimal Router for the current environment
 * @param {string} style Routing style name
 * @param {*} callbacks Redux callbacks
 * @returns {Router} The optimal router for the current environment
 */
const createRouter = (style, callbacks) => {
  const supportedStyles = ['none', 'hash'];

  // FileHashRouter is not supported on non-http(s) protocols.
  const isHTTP = location.protocol === 'http:' || location.protocol === 'https:';
  if (isHTTP) {
    supportedStyles.push('filehash');
  }

  // WildcardRouter is not supported if ROOT is not set.
  if (false) {}
  if (!supportedStyles.includes(style)) {
    _log__WEBPACK_IMPORTED_MODULE_5__["default"].warn("routing style is unknown or not supported: ".concat(style, ", falling back to hash"));
    style = 'hash';
  }
  if (routers.hasOwnProperty(style)) {
    return new routers[style](callbacks);
  }
  throw new Error("unknown router: ".concat(style));
};
const TWStateManager = function TWStateManager(WrappedComponent) {
  class StateManagerComponent extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall__WEBPACK_IMPORTED_MODULE_3___default()(this, ['handleHashChange', 'handlePopState', 'onSetProjectId', 'onSetIsPlayerOnly', 'onSetIsFullScreen']);
    }
    componentDidMount() {
      const urlParams = new URLSearchParams(location.search);
      if (urlParams.has('fps')) {
        const fps = +urlParams.get('fps');
        if (Number.isNaN(fps) || fps < 0) {
          alert(this.props.intl.formatMessage(messages.invalidFPS));
        } else {
          this.props.vm.setFramerate(fps);
        }
      } else if (urlParams.has('60fps')) {
        this.props.vm.setFramerate(60);
      }
      if (urlParams.has('interpolate')) {
        this.props.vm.setInterpolation(true);
      }
      if (urlParams.has('username')) {
        const username = urlParams.get('username');
        // Do not save username when loaded from URL
        this.doNotPersistUsername = username;
        this.props.onSetUsername(username);
      } else {
        const persistentUsername = this.props.isEmbedded ? null : getLocalStorage(USERNAME_KEY);
        if (persistentUsername === null) {
          const randomUsername = Object(_tw_username__WEBPACK_IMPORTED_MODULE_10__[/* generateRandomUsername */ "a"])();
          this.props.onSetUsername(randomUsername);
          if (this.props.isEmbedded) {
            this.doNotPersistUsername = randomUsername;
          }
        } else {
          this.props.onSetUsername(persistentUsername);
        }
      }
      if (urlParams.has('hqpen')) {
        this.props.vm.renderer.setUseHighQualityRender(true);
      }
      if (urlParams.has('turbo')) {
        this.props.vm.setTurboMode(true);
      }
      if (urlParams.has('stuck') || urlParams.has('warp_timer')) {
        this.props.vm.setCompilerOptions({
          warpTimer: true
        });
      }
      if (urlParams.has('nocompile')) {
        this.props.vm.setCompilerOptions({
          enabled: false
        });
      }
      if (urlParams.has('clones')) {
        const clones = +urlParams.get('clones');
        if (Number.isNaN(clones) || clones < 0) {
          alert(this.props.intl.formatMessage(messages.invalidClones));
        } else {
          this.props.vm.setRuntimeOptions({
            maxClones: clones
          });
        }
      }
      if (urlParams.has('offscreen')) {
        this.props.vm.setRuntimeOptions({
          fencing: false
        });
      }
      if (urlParams.has('limitless')) {
        this.props.vm.setRuntimeOptions({
          miscLimits: false
        });
      }
      for (const extension of urlParams.getAll('extension')) {
        this.props.vm.extensionManager.loadExtensionURL(extension);
      }
      const routerCallbacks = {
        onSetProjectId: this.onSetProjectId,
        onSetIsPlayerOnly: this.onSetIsPlayerOnly,
        onSetIsFullScreen: this.onSetIsFullScreen
      };
      this.router = createRouter(this.props.routingStyle, routerCallbacks);
      this.router.onhashchange();
      window.addEventListener('hashchange', this.handleHashChange);
      window.addEventListener('popstate', this.handlePopState);
    }
    componentDidUpdate(prevProps) {
      if (this.props.username !== prevProps.username && this.props.username !== this.doNotPersistUsername) {
        // TODO: this always restores the current username once at startup, which is unnecessary
        setLocalStorage(USERNAME_KEY, this.props.username);
      }
      if (this.props.reduxProjectId !== prevProps.reduxProjectId || this.props.isPlayerOnly !== prevProps.isPlayerOnly || this.props.isFullScreen !== prevProps.isFullScreen) {
        const oldPath = "".concat(location.pathname).concat(location.search).concat(location.hash);
        const routerState = {
          projectId: this.props.reduxProjectId,
          isPlayerOnly: this.props.isPlayerOnly,
          isFullScreen: this.props.isFullScreen
        };
        const newPath = this.router.generateURL(routerState);
        if (newPath && newPath !== oldPath) {
          history.pushState(null, null, newPath);
        }
      }
      if (this.props.customStageSize !== prevProps.customStageSize || this.props.runtimeOptions !== prevProps.runtimeOptions || this.props.compilerOptions !== prevProps.compilerOptions || this.props.highQualityPen !== prevProps.highQualityPen || this.props.framerate !== prevProps.framerate || this.props.interpolation !== prevProps.interpolation || this.props.turbo !== prevProps.turbo) {
        const searchParams = new URLSearchParams(location.search);
        const runtimeOptions = this.props.runtimeOptions;
        const compilerOptions = this.props.compilerOptions;

        // Always remove legacy parameter
        searchParams.delete('60fps');
        const {
          width,
          height
        } = this.props.customStageSize;
        if (width === _reducers_custom_stage_size__WEBPACK_IMPORTED_MODULE_12__[/* defaultStageSize */ "c"].width && height === _reducers_custom_stage_size__WEBPACK_IMPORTED_MODULE_12__[/* defaultStageSize */ "c"].height) {
          searchParams.delete('size');
        } else {
          searchParams.set('size', "".concat(width, "x").concat(height));
        }
        if (this.props.framerate === 30) {
          searchParams.delete('fps');
        } else {
          searchParams.set('fps', this.props.framerate);
        }
        if (this.props.interpolation) {
          searchParams.set('interpolate', '');
        } else {
          searchParams.delete('interpolate');
        }
        if (this.props.turbo) {
          searchParams.set('turbo', '');
        } else {
          searchParams.delete('turbo');
        }
        if (this.props.highQualityPen) {
          searchParams.set('hqpen', '');
        } else {
          searchParams.delete('hqpen');
        }
        if (compilerOptions.enabled) {
          searchParams.delete('nocompile');
        }
        if (this.props.isPlayerOnly) {
          if (compilerOptions.warpTimer) {
            searchParams.set('stuck', '');
          } else {
            searchParams.delete('stuck');
          }
        } else {
          // Leave ?stuck as-is when in editor
        }
        if (runtimeOptions.maxClones === 300) {
          searchParams.delete('clones');
        } else {
          searchParams.set('clones', runtimeOptions.maxClones);
        }
        if (runtimeOptions.fencing) {
          searchParams.delete('offscreen');
        } else {
          searchParams.set('offscreen', '');
        }
        if (runtimeOptions.miscLimits) {
          searchParams.delete('limitless');
        } else {
          searchParams.set('limitless', '');
        }
        Object(_tw_navigation_utils__WEBPACK_IMPORTED_MODULE_11__[/* setSearchParams */ "b"])(searchParams);
      }
    }
    componentWillUnmount() {
      window.removeEventListener('hashchange', this.handleHashChange);
      window.removeEventListener('popstate', this.handlePopState);
    }
    handleHashChange() {
      this.router.onhashchange();
    }
    handlePopState() {
      this.router.onpathchange();
    }
    onSetProjectId(id) {
      if ("".concat(id) === "".concat(this.props.reduxProjectId)) {
        return true;
      }
      if (this.props.projectChanged) {
        if (!confirm('Are you sure you want to switch project?')) {
          return false;
        }
      }
      this.props.onSetProjectId(id);
      return true;
    }
    onSetIsPlayerOnly(isPlayerOnly) {
      this.props.onSetIsPlayerOnly(isPlayerOnly);
    }
    onSetIsFullScreen(isFullScreen) {
      this.props.onSetIsFullScreen(isFullScreen);
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          intl,
          customStageSize,
          isFullScreen,
          isPlayerOnly,
          isEmbedded,
          projectChanged,
          compilerOptions,
          runtimeOptions,
          highQualityPen,
          framerate,
          interpolation,
          turbo,
          onSetIsFullScreen,
          onSetIsPlayerOnly,
          onSetProjectId,
          onSetUsername,
          reduxProjectId,
          routingStyle,
          username,
          vm
          /* eslint-enable no-unused-vars */
        } = _this$props,
        props = _objectWithoutProperties(_this$props, _excluded);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(WrappedComponent, props);
    }
  }
  StateManagerComponent.propTypes = {
    intl: react_intl__WEBPACK_IMPORTED_MODULE_6__[/* intlShape */ "f"],
    customStageSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
      width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
      height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number
    }),
    isFullScreen: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    isPlayerOnly: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    isEmbedded: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    projectChanged: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    projectId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
    compilerOptions: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
      enabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
      warpTimer: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool
    }),
    runtimeOptions: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
      miscLimits: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
      fencing: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
      maxClones: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number
    }),
    highQualityPen: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    framerate: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,
    interpolation: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    turbo: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
    onSetIsFullScreen: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
    onSetIsPlayerOnly: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
    onSetProjectId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
    onSetUsername: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
    reduxProjectId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number]),
    routingStyle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(Object.keys(routers)),
    username: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
    vm: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.instanceOf(scratch_vm__WEBPACK_IMPORTED_MODULE_4___default.a)
  };
  StateManagerComponent.defaultProps = {
    routingStyle: "filehash"
  };
  const mapStateToProps = state => ({
    customStageSize: state.scratchGui.customStageSize,
    isFullScreen: state.scratchGui.mode.isFullScreen,
    isPlayerOnly: state.scratchGui.mode.isPlayerOnly,
    isEmbedded: state.scratchGui.mode.isEmbedded,
    projectChanged: state.scratchGui.projectChanged,
    reduxProjectId: state.scratchGui.projectState.projectId,
    compilerOptions: state.scratchGui.tw.compilerOptions,
    runtimeOptions: state.scratchGui.tw.runtimeOptions,
    highQualityPen: state.scratchGui.tw.highQualityPen,
    framerate: state.scratchGui.tw.framerate,
    interpolation: state.scratchGui.tw.interpolation,
    turbo: state.scratchGui.vmStatus.turbo,
    username: state.scratchGui.tw.username,
    vm: state.scratchGui.vm
  });
  const mapDispatchToProps = dispatch => ({
    onSetIsFullScreen: isFullScreen => dispatch(Object(_reducers_mode__WEBPACK_IMPORTED_MODULE_9__[/* setFullScreen */ "c"])(isFullScreen)),
    onSetIsPlayerOnly: isPlayerOnly => dispatch(Object(_reducers_mode__WEBPACK_IMPORTED_MODULE_9__[/* setPlayer */ "d"])(isPlayerOnly)),
    onSetProjectId: projectId => dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_8__[/* setProjectId */ "E"])(projectId)),
    onSetUsername: username => dispatch(Object(_reducers_tw__WEBPACK_IMPORTED_MODULE_7__["setUsername"])(username))
  });
  return Object(react_intl__WEBPACK_IMPORTED_MODULE_6__[/* injectIntl */ "e"])(Object(react_redux__WEBPACK_IMPORTED_MODULE_2__[/* connect */ "b"])(mapStateToProps, mapDispatchToProps)(StateManagerComponent));
};


/***/ }),
/* 164 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SBFileUploaderHOC; });
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_bindall__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony import */ var _lib_log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(18);
/* harmony import */ var _shared_messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84);
/* harmony import */ var _tw_filesystem_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(145);
/* harmony import */ var _reducers_tw__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(34);
/* harmony import */ var _reducers_project_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(11);
/* harmony import */ var _reducers_project_title__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(94);
/* harmony import */ var _reducers_modals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(21);
/* harmony import */ var _reducers_menus__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(39);
const _excluded = ["cancelFileUpload", "closeFileMenu", "isLoadingUpload", "isShowingWithoutId", "loadingState", "onLoadingFinished", "onLoadingStarted", "onSetFileHandle", "onSetProjectTitle", "projectChanged", "requestProjectUpload", "userOwnsProject"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













const messages = Object(react_intl__WEBPACK_IMPORTED_MODULE_3__[/* defineMessages */ "d"])({
  loadError: {
    "id": "tw.loadError",
    "defaultMessage": "Could not load project: {error}"
  }
});

/**
 * Higher Order Component to provide behavior for loading local project files into editor.
 * @param {React.Component} WrappedComponent the component to add project file loading functionality to
 * @returns {React.Component} WrappedComponent with project file loading functionality added
 *
 * <SBFileUploaderHOC>
 *     <WrappedComponent />
 * </SBFileUploaderHOC>
 */
const SBFileUploaderHOC = function SBFileUploaderHOC(WrappedComponent) {
  class SBFileUploaderComponent extends react__WEBPACK_IMPORTED_MODULE_1___default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default()(this, ['createFileObjects', 'getProjectTitleFromFilename', 'handleFinishedLoadingUpload', 'handleStartSelectingFileUpload', 'handleChange', 'onload', 'removeFileObjects']);
      // tw: We have multiple instances of this HOC alive at a time. This flag fixes issues that arise from that.
      this.expectingFileUploadFinish = false;
    }
    componentDidUpdate(prevProps) {
      if (this.props.isLoadingUpload && !prevProps.isLoadingUpload && this.expectingFileUploadFinish) {
        this.handleFinishedLoadingUpload(); // cue step 5 below
      }
    }

    componentWillUnmount() {
      this.removeFileObjects();
    }
    // step 1: this is where the upload process begins
    handleStartSelectingFileUpload() {
      this.expectingFileUploadFinish = true;
      this.createFileObjects(); // go to step 2
    }
    // step 2: create a FileReader and an <input> element, and issue a
    // pseudo-click to it. That will open the file chooser dialog.
    createFileObjects() {
      // redo step 7, in case it got skipped last time and its objects are
      // still in memory
      this.removeFileObjects();
      // create fileReader
      this.fileReader = new FileReader();
      this.fileReader.onload = this.onload;
      // tw: Use FS API when available
      if (_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"].available()) {
        (async () => {
          try {
            const handle = await _tw_filesystem_api__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"].showOpenFilePicker();
            const file = await handle.getFile();
            this.handleChange({
              target: {
                files: [file]
              }
            });
            if (file.name.endsWith('.sb3')) {
              this.props.onSetFileHandle(handle);
            } else {
              this.props.onSetFileHandle(null);
            }
          } catch (err) {
            // If user aborted process, do not show an error.
            if (err && err.name === 'AbortError') {
              return;
            }
            // eslint-disable-next-line no-console
            console.error(err);
          }
        })();
      } else {
        // create <input> element and add it to DOM
        this.inputElement = document.createElement('input');
        this.inputElement.accept = '.sb,.sb2,.sb3';
        this.inputElement.style = 'display: none;';
        this.inputElement.type = 'file';
        this.inputElement.onchange = this.handleChange; // connects to step 3
        document.body.appendChild(this.inputElement);
        // simulate a click to open file chooser dialog
        this.inputElement.click();
      }
    }
    // step 3: user has picked a file using the file chooser dialog.
    // We don't actually load the file here, we only decide whether to do so.
    handleChange(e) {
      const {
        intl,
        isShowingWithoutId,
        loadingState,
        projectChanged,
        userOwnsProject
      } = this.props;
      const thisFileInput = e.target;
      if (thisFileInput.files) {
        // Don't attempt to load if no file was selected
        this.fileToUpload = thisFileInput.files[0];

        // If user owns the project, or user has changed the project,
        // we must confirm with the user that they really intend to
        // replace it. (If they don't own the project and haven't
        // changed it, no need to confirm.)
        let uploadAllowed = true;
        if (userOwnsProject || projectChanged && isShowingWithoutId) {
          uploadAllowed = confirm(
          // eslint-disable-line no-alert
          intl.formatMessage(_shared_messages__WEBPACK_IMPORTED_MODULE_6__[/* default */ "a"].replaceProjectWarning));
        }
        if (uploadAllowed) {
          // cues step 4
          this.props.requestProjectUpload(loadingState);
        } else {
          // skips ahead to step 7
          this.removeFileObjects();
        }
        this.props.closeFileMenu();
      }
    }
    // step 4 is below, in mapDispatchToProps

    // step 5: called from componentDidUpdate when project state shows
    // that project data has finished "uploading" into the browser
    handleFinishedLoadingUpload() {
      this.expectingFileUploadFinish = false;
      if (this.fileToUpload && this.fileReader) {
        // begin to read data from the file. When finished,
        // cues step 6 using the reader's onload callback
        this.fileReader.readAsArrayBuffer(this.fileToUpload);
      } else {
        this.props.cancelFileUpload(this.props.loadingState);
        // skip ahead to step 7
        this.removeFileObjects();
      }
    }
    // used in step 6 below
    getProjectTitleFromFilename(fileInputFilename) {
      if (!fileInputFilename) return '';
      // only parse title with valid scratch project extensions
      // (.sb, .sb2, and .sb3)
      const matches = fileInputFilename.match(/^(.*)\.sb[23]?$/);
      if (!matches) return '';
      return matches[1].substring(0, 100); // truncate project title to max 100 chars
    }
    // step 6: attached as a handler on our FileReader object; called when
    // file upload raw data is available in the reader
    onload() {
      if (this.fileReader) {
        this.props.onLoadingStarted();
        const filename = this.fileToUpload && this.fileToUpload.name;
        let loadingSuccess = false;
        // tw: stop when loading new project
        this.props.vm.stop();
        this.props.vm.loadProject(this.fileReader.result).then(() => {
          if (filename) {
            const uploadedProjectTitle = this.getProjectTitleFromFilename(filename);
            this.props.onSetProjectTitle(uploadedProjectTitle);
          }
          this.props.vm.renderer.draw();
          loadingSuccess = true;
        }).catch(error => {
          _lib_log__WEBPACK_IMPORTED_MODULE_5__["default"].warn(error);
          // eslint-disable-next-line no-alert
          alert(this.props.intl.formatMessage(messages.loadError, {
            error: "".concat(error)
          }));
        }).then(() => {
          this.props.onLoadingFinished(this.props.loadingState, loadingSuccess);
          // go back to step 7: whether project loading succeeded
          // or failed, reset file objects
          this.removeFileObjects();
        });
      }
    }
    // step 7: remove the <input> element from the DOM and clear reader and
    // fileToUpload reference, so those objects can be garbage collected
    removeFileObjects() {
      if (this.inputElement) {
        this.inputElement.value = null;
        document.body.removeChild(this.inputElement);
      }
      this.inputElement = null;
      this.fileReader = null;
      this.fileToUpload = null;
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          cancelFileUpload,
          closeFileMenu: closeFileMenuProp,
          isLoadingUpload,
          isShowingWithoutId,
          loadingState,
          onLoadingFinished,
          onLoadingStarted,
          onSetFileHandle,
          onSetProjectTitle,
          projectChanged,
          requestProjectUpload: requestProjectUploadProp,
          userOwnsProject
          /* eslint-enable no-unused-vars */
        } = _this$props,
        componentProps = _objectWithoutProperties(_this$props, _excluded);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WrappedComponent, _extends({
        onStartSelectingFileUpload: this.handleStartSelectingFileUpload
      }, componentProps)));
    }
  }
  SBFileUploaderComponent.propTypes = {
    canSave: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,
    cancelFileUpload: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
    closeFileMenu: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
    intl: react_intl__WEBPACK_IMPORTED_MODULE_3__[/* intlShape */ "f"].isRequired,
    isLoadingUpload: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,
    isShowingProject: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,
    isShowingWithoutId: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,
    loadingState: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.oneOf(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* LoadingStates */ "a"]),
    onLoadingFinished: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
    onLoadingStarted: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
    onSetProjectTitle: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
    projectChanged: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,
    requestProjectUpload: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
    userOwnsProject: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,
    vm: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.shape({
      loadProject: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,
      stop: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func
    }),
    onSetFileHandle: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func
  };
  const mapStateToProps = (state, ownProps) => {
    const loadingState = state.scratchGui.projectState.loadingState;
    const user = state.session && state.session.session && state.session.session.user;
    return {
      isLoadingUpload: Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* getIsLoadingUpload */ "n"])(loadingState),
      isShowingProject: Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* getIsShowingProject */ "r"])(loadingState),
      isShowingWithoutId: Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* getIsShowingWithoutId */ "t"])(loadingState),
      loadingState: loadingState,
      projectChanged: state.scratchGui.projectChanged,
      userOwnsProject: ownProps.authorUsername && user && ownProps.authorUsername === user.username,
      vm: state.scratchGui.vm
    };
  };
  const mapDispatchToProps = (dispatch, ownProps) => ({
    cancelFileUpload: loadingState => dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* onLoadedProject */ "x"])(loadingState, false, false)),
    closeFileMenu: () => dispatch(Object(_reducers_menus__WEBPACK_IMPORTED_MODULE_12__[/* closeFileMenu */ "g"])()),
    // transition project state from loading to regular, and close
    // loading screen and file menu
    onLoadingFinished: (loadingState, success) => {
      dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* onLoadedProject */ "x"])(loadingState, ownProps.canSave, success));
      dispatch(Object(_reducers_modals__WEBPACK_IMPORTED_MODULE_11__[/* closeLoadingProject */ "f"])());
      dispatch(Object(_reducers_menus__WEBPACK_IMPORTED_MODULE_12__[/* closeFileMenu */ "g"])());
    },
    // show project loading screen
    onLoadingStarted: () => dispatch(Object(_reducers_modals__WEBPACK_IMPORTED_MODULE_11__[/* openLoadingProject */ "v"])()),
    onSetProjectTitle: title => dispatch(Object(_reducers_project_title__WEBPACK_IMPORTED_MODULE_10__[/* setProjectTitle */ "c"])(title)),
    // step 4: transition the project state so we're ready to handle the new
    // project data. When this is done, the project state transition will be
    // noticed by componentDidUpdate()
    requestProjectUpload: loadingState => dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_9__[/* requestProjectUpload */ "C"])(loadingState)),
    onSetFileHandle: fileHandle => dispatch(Object(_reducers_tw__WEBPACK_IMPORTED_MODULE_8__["setFileHandle"])(fileHandle))
  });
  // Allow incoming props to override redux-provided props. Used to mock in tests.
  const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign({}, stateProps, dispatchProps, ownProps);
  return Object(react_intl__WEBPACK_IMPORTED_MODULE_3__[/* injectIntl */ "e"])(Object(react_redux__WEBPACK_IMPORTED_MODULE_4__[/* connect */ "b"])(mapStateToProps, mapDispatchToProps, mergeProps)(SBFileUploaderComponent));
};


/***/ }),
/* 165 */,
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/cb666b99d3528f91b52f985dfb102afa.svg";

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_bindall__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
/* harmony import */ var _reducers_project_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94);
/* harmony import */ var _lib_download_blob__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(100);
/* harmony import */ var _reducers_project_changed__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(93);
/* harmony import */ var _reducers_alerts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29);
/* harmony import */ var _reducers_tw__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(34);
/* harmony import */ var _lib_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(145);
/* harmony import */ var _reducers_project_state__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(11);
/* harmony import */ var _lib_log__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(18);













// from sb-file-uploader-hoc.jsx
const getProjectTitleFromFilename = fileInputFilename => {
  if (!fileInputFilename) return '';
  // only parse title with valid scratch project extensions
  // (.sb, .sb2, and .sb3)
  const matches = fileInputFilename.match(/^(.*)\.sb[23]?$/);
  if (!matches) return '';
  return matches[1].substring(0, 100); // truncate project title to max 100 chars
};

/**
 * Project saver component passes a downloadProject function to its child.
 * It expects this child to be a function with the signature
 *     function (downloadProject, props) {}
 * The component can then be used to attach project saving functionality
 * to any other component:
 *
 * <SB3Downloader>{(downloadProject, props) => (
 *     <MyCoolComponent
 *         onClick={downloadProject}
 *         {...props}
 *     />
 * )}</SB3Downloader>
 */
class SB3Downloader extends react__WEBPACK_IMPORTED_MODULE_2___default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default()(this, ['downloadProject', 'saveAsNew', 'saveToLastFile', 'saveToLastFileOrNew']);
  }
  startedSaving() {
    this.props.onShowSavingAlert();
  }
  finishedSaving() {
    this.props.onProjectUnchanged();
    this.props.onShowSaveSuccessAlert();
    if (this.props.onSaveFinished) {
      this.props.onSaveFinished();
    }
  }
  downloadProject() {
    if (!this.props.canSaveProject) {
      return;
    }
    this.startedSaving();
    this.props.saveProjectSb3().then(content => {
      this.finishedSaving();
      Object(_lib_download_blob__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])(this.props.projectFilename, content);
    });
  }
  async saveAsNew() {
    if (!this.props.canSaveProject) {
      return;
    }
    try {
      const handle = await _lib_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].showSaveFilePicker(this.props.projectFilename);
      await this.saveToHandle(handle);
      this.props.onSetFileHandle(handle);
      const title = getProjectTitleFromFilename(handle.name);
      if (title) {
        this.props.onSetProjectTitle(title);
      }
    } catch (e) {
      this.handleSaveError(e);
    }
  }
  async saveToLastFile() {
    try {
      await this.saveToHandle(this.props.fileHandle);
    } catch (e) {
      this.handleSaveError(e);
    }
  }
  saveToLastFileOrNew() {
    if (this.props.fileHandle) {
      return this.saveToLastFile();
    }
    return this.saveAsNew();
  }
  async saveToHandle(handle) {
    if (!this.props.canSaveProject) {
      return;
    }
    // Obtain the writable very early, otherwise browsers won't give us the handle when we ask.
    const writable = await _lib_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].createWritable(handle);
    try {
      this.startedSaving();
      const content = await this.props.saveProjectSb3();
      await _lib_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].writeToWritable(writable, content);
      this.finishedSaving();
    } finally {
      // Always close the handle regardless of errors.
      await _lib_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].closeWritable(writable);
    }
  }
  handleSaveError(e) {
    // AbortError can happen when someone cancels the file selector dialog
    if (e && e.name === 'AbortError') {
      return;
    }
    _lib_log__WEBPACK_IMPORTED_MODULE_11__["default"].error(e);
    this.props.onShowSaveErrorAlert();
  }
  render() {
    const {
      children
    } = this.props;
    return children(this.props.className, this.downloadProject, _lib_tw_filesystem_api__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"].available() ? {
      available: true,
      name: this.props.fileHandle ? this.props.fileHandle.name : null,
      saveAsNew: this.saveAsNew,
      saveToLastFile: this.saveToLastFile,
      saveToLastFileOrNew: this.saveToLastFileOrNew,
      smartSave: this.saveToLastFileOrNew
    } : {
      available: false,
      smartSave: this.downloadProject
    });
  }
}
const getProjectFilename = (curTitle, defaultTitle) => {
  let filenameTitle = curTitle;
  if (!filenameTitle || filenameTitle.length === 0) {
    filenameTitle = defaultTitle;
  }
  return "".concat(filenameTitle.substring(0, 100), ".sb3");
};
SB3Downloader.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  fileHandle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({
    name: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string
  }),
  onSaveFinished: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  projectFilename: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  saveProjectSb3: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  canSaveProject: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  onSetFileHandle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onSetProjectTitle: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onShowSavingAlert: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onShowSaveSuccessAlert: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onShowSaveErrorAlert: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onProjectUnchanged: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func
};
SB3Downloader.defaultProps = {
  className: ''
};
const mapStateToProps = state => ({
  fileHandle: state.scratchGui.tw.fileHandle,
  saveProjectSb3: state.scratchGui.vm.saveProjectSb3.bind(state.scratchGui.vm),
  canSaveProject: Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_10__[/* getIsShowingProject */ "r"])(state.scratchGui.projectState.loadingState),
  projectFilename: getProjectFilename(state.scratchGui.projectTitle, _reducers_project_title__WEBPACK_IMPORTED_MODULE_4__[/* projectTitleInitialState */ "b"])
});
const mapDispatchToProps = dispatch => ({
  onSetFileHandle: fileHandle => dispatch(Object(_reducers_tw__WEBPACK_IMPORTED_MODULE_8__["setFileHandle"])(fileHandle)),
  onSetProjectTitle: title => dispatch(Object(_reducers_project_title__WEBPACK_IMPORTED_MODULE_4__[/* setProjectTitle */ "c"])(title)),
  onShowSavingAlert: () => Object(_reducers_alerts__WEBPACK_IMPORTED_MODULE_7__[/* showAlertWithTimeout */ "g"])(dispatch, 'saving'),
  onShowSaveSuccessAlert: () => Object(_reducers_alerts__WEBPACK_IMPORTED_MODULE_7__[/* showAlertWithTimeout */ "g"])(dispatch, 'twSaveToDiskSuccess'),
  onShowSaveErrorAlert: () => dispatch(Object(_reducers_alerts__WEBPACK_IMPORTED_MODULE_7__[/* showStandardAlert */ "i"])('savingError')),
  onProjectUnchanged: () => dispatch(Object(_reducers_project_changed__WEBPACK_IMPORTED_MODULE_6__[/* setProjectUnchanged */ "d"])())
});
/* harmony default export */ __webpack_exports__["a"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__[/* connect */ "b"])(mapStateToProps, mapDispatchToProps)(SB3Downloader));

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/e587d9d7e9a2f1f28041ba5c15db7a40.svg";

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/301439e2e5ab88b658368ee525e6752b.svg";

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/551aae506dfa65ce3b45713b5300a678.svg";

/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65);
/* harmony import */ var react_modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_modal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _box_box_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
/* harmony import */ var _lib_tw_environment_support_prober_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(79);
/* harmony import */ var _browser_modal_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(298);
/* harmony import */ var _browser_modal_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_browser_modal_css__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _unsupported_browser_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(874);
/* harmony import */ var _unsupported_browser_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_unsupported_browser_svg__WEBPACK_IMPORTED_MODULE_7__);
const _excluded = ["intl"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








const messages = Object(react_intl__WEBPACK_IMPORTED_MODULE_4__[/* defineMessages */ "d"])({
  label: {
    "id": "gui.unsupportedBrowser.label",
    "defaultMessage": "Browser is not supported"
  }
});
const BrowserModal = _ref => {
  let {
      intl
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const label = messages.label;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_modal__WEBPACK_IMPORTED_MODULE_2___default.a, {
    isOpen: true,
    className: _browser_modal_css__WEBPACK_IMPORTED_MODULE_6___default.a.modalContent,
    contentLabel: intl.formatMessage(_objectSpread({}, messages.label)),
    overlayClassName: _browser_modal_css__WEBPACK_IMPORTED_MODULE_6___default.a.modalOverlay,
    onRequestClose: props.onBack
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    dir: props.isRtl ? 'rtl' : 'ltr'
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_box_box_jsx__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], {
    className: _browser_modal_css__WEBPACK_IMPORTED_MODULE_6___default.a.illustration
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("img", {
    src: _unsupported_browser_svg__WEBPACK_IMPORTED_MODULE_7___default.a
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_box_box_jsx__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], {
    className: _browser_modal_css__WEBPACK_IMPORTED_MODULE_6___default.a.body
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_4__[/* FormattedMessage */ "a"], label)), Object(_lib_tw_environment_support_prober_js__WEBPACK_IMPORTED_MODULE_5__[/* canConstructNewFunctions */ "a"])() ? null :
  /*#__PURE__*/
  // This message is only intended to be read by website operators
  // We don't need to make it translatable
  react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", null, 'This site is unable to compile arbitrary JavaScript. This is most likely caused by an overly-strict Content-Security-Policy set by the server.'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_4__[/* FormattedMessage */ "a"], {
    defaultMessage: "Make sure you're using a recent version of Google Chrome, Mozilla Firefox, Microsoft Edge, or Apple Safari.",
    id: "tw.browserModal.desc"
  })))));
};
BrowserModal.propTypes = {
  intl: react_intl__WEBPACK_IMPORTED_MODULE_4__[/* intlShape */ "f"].isRequired,
  isRtl: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.bool,
  onBack: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.func.isRequired
};
const WrappedBrowserModal = Object(react_intl__WEBPACK_IMPORTED_MODULE_4__[/* injectIntl */ "e"])(BrowserModal);
WrappedBrowserModal.setAppElement = react_modal__WEBPACK_IMPORTED_MODULE_2___default.a.setAppElement;
/* harmony default export */ __webpack_exports__["a"] = (WrappedBrowserModal);

/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const runAddons = () => {
  Promise.all(/* import() | addons */[__webpack_require__.e(1), __webpack_require__.e(73)]).then(__webpack_require__.bind(null, 1825));
};
/* harmony default export */ __webpack_exports__["a"] = (runAddons);

/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(1);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(0);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/redux/es/index.js + 6 modules
var es = __webpack_require__(42);

// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules
var react_redux_es = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/react-modal/lib/index.js
var lib = __webpack_require__(65);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: ./node_modules/scratch-vm/src/index.js
var src = __webpack_require__(12);
var src_default = /*#__PURE__*/__webpack_require__.n(src);

// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.es.js + 1 modules
var index_es = __webpack_require__(2);

// EXTERNAL MODULE: ./src/lib/error-boundary-hoc.jsx + 2 modules
var error_boundary_hoc = __webpack_require__(78);

// EXTERNAL MODULE: ./src/reducers/project-state.js
var project_state = __webpack_require__(11);

// EXTERNAL MODULE: ./src/reducers/editor-tab.js
var editor_tab = __webpack_require__(43);

// EXTERNAL MODULE: ./src/reducers/modals.js
var modals = __webpack_require__(21);

// EXTERNAL MODULE: ./node_modules/lodash.omit/index.js
var lodash_omit = __webpack_require__(60);
var lodash_omit_default = /*#__PURE__*/__webpack_require__.n(lodash_omit);

// EXTERNAL MODULE: ./src/reducers/fonts-loaded.js
var fonts_loaded = __webpack_require__(285);

// EXTERNAL MODULE: ./src/lib/tw-scratch-render-fonts/index.js
var tw_scratch_render_fonts = __webpack_require__(326);

// CONCATENATED MODULE: ./src/lib/font-loader-hoc.jsx







/* Higher Order Component to provide behavior for loading fonts.
 * @param {React.Component} WrappedComponent component to receive fontsLoaded prop
 * @returns {React.Component} component with font loading behavior
 */
const font_loader_hoc_FontLoaderHOC = function FontLoaderHOC(WrappedComponent) {
  class FontLoaderComponent extends react_default.a.Component {
    componentDidMount() {
      if (this.props.fontsLoaded) return;
      Object(tw_scratch_render_fonts["loadFonts"])().then(() => this.props.onSetFontsLoaded());
    }
    render() {
      const componentProps = lodash_omit_default()(this.props, ['onSetFontsLoaded']);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, componentProps);
    }
  }
  FontLoaderComponent.propTypes = {
    fontsLoaded: prop_types_default.a.bool.isRequired,
    onSetFontsLoaded: prop_types_default.a.func.isRequired
  };
  const mapStateToProps = state => ({
    fontsLoaded: state.scratchGui.fontsLoaded
  });
  const mapDispatchToProps = dispatch => ({
    onSetFontsLoaded: () => dispatch(Object(fonts_loaded["c" /* setFontsLoaded */])())
  });
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(FontLoaderComponent);
};

// EXTERNAL MODULE: ./src/lib/connected-intl-provider.jsx
var connected_intl_provider = __webpack_require__(328);

// CONCATENATED MODULE: ./src/lib/localization-hoc.jsx
const _excluded = ["locale", "onSetLanguage"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





/*
 * Higher Order Component to provide localiztion state. Creates a nested IntlProvider
 * to handle Gui intl context. The component accepts an onSetLanguage callback that is
 * called when the locale chagnes.
 * @param {React.Component} WrappedComponent - component to provide state for
 * @returns {React.Component} component with intl state provided from redux
 */
const localization_hoc_LocalizationHOC = function LocalizationHOC(WrappedComponent) {
  class LocalizationWrapper extends react_default.a.Component {
    componentDidUpdate(prevProps) {
      if (prevProps.locale !== this.props.locale) {
        this.props.onSetLanguage(this.props.locale);
      }
    }
    render() {
      const _this$props = this.props,
        {
          locale,
          // eslint-disable-line no-unused-vars
          onSetLanguage // eslint-disable-line no-unused-vars
        } = _this$props,
        componentProps = _objectWithoutProperties(_this$props, _excluded);
      return /*#__PURE__*/react_default.a.createElement(connected_intl_provider["a" /* default */], null, /*#__PURE__*/react_default.a.createElement(WrappedComponent, componentProps));
    }
  }
  LocalizationWrapper.propTypes = {
    locale: prop_types_default.a.string,
    onSetLanguage: prop_types_default.a.func
  };
  LocalizationWrapper.defaultProps = {
    onSetLanguage: () => {}
  };
  const mapStateToProps = state => ({
    locale: state.locales.locale
  });
  const mapDispatchToProps = () => ({});
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(LocalizationWrapper);
};
/* harmony default export */ var localization_hoc = (localization_hoc_LocalizationHOC);
// EXTERNAL MODULE: ./src/lib/sb-file-uploader-hoc.jsx
var sb_file_uploader_hoc = __webpack_require__(164);

// EXTERNAL MODULE: ./node_modules/lodash.bindall/index.js
var lodash_bindall = __webpack_require__(5);
var lodash_bindall_default = /*#__PURE__*/__webpack_require__.n(lodash_bindall);

// EXTERNAL MODULE: ./src/reducers/project-changed.js
var project_changed = __webpack_require__(93);

// EXTERNAL MODULE: ./src/lib/log.js
var log = __webpack_require__(18);

// EXTERNAL MODULE: ./src/lib/storage.js + 2 modules
var lib_storage = __webpack_require__(27);

// EXTERNAL MODULE: ./src/lib/tw-missing-project/index.js + 1 modules
var tw_missing_project = __webpack_require__(361);

// CONCATENATED MODULE: ./src/components/loader/tw-progress-monitor.js
// This file implements some extremely terrible tricks to monitor project loading progress.
// Please don't use this as a reference for "good JS code"

let total = 0;
let complete = 0;

// 0 - none
// 1 - load json
// 2 - load assets
let tw_progress_monitor_state = 0;
let currentProgress = 0;
let progressHandler = (state, progress, complete, total) => {};
const setProgressHandler = newHandler => {
  progressHandler = newHandler;
  progressHandler(tw_progress_monitor_state, currentProgress, complete, total);
};
let progressHandlerTimeout = null;
const fireProgressHandler = () => {
  progressHandler(tw_progress_monitor_state, currentProgress, complete, total);
  progressHandlerTimeout = null;
};
const queueProgressHandlerUpdate = () => {
  if (progressHandlerTimeout === null) {
    progressHandlerTimeout = requestAnimationFrame(fireProgressHandler);
  }
};
const setProgress = progress => {
  if (progress < 0) {
    progress = 0;
  }
  if (progress > 1) {
    progress = 1;
  }
  currentProgress = progress;
  queueProgressHandlerUpdate();
};
const setState = newState => {
  if (tw_progress_monitor_state === newState) {
    return;
  }
  tw_progress_monitor_state = newState;
  complete = 0;
  total = 0;
  setProgress(0);
};
const fetchWithProgress = url => {
  setState(1);
  return new Promise((resolve, reject) => {
    // fetch() does not support progress, so we use XMLHttpRequest
    const xhr = new XMLHttpRequest();
    xhr.responseType = 'blob';
    xhr.onload = () => {
      resolve(new Response(xhr.response, {
        status: xhr.status,
        statusText: xhr.statusText
      }));
    };
    xhr.onloadend = () => setProgress(1);
    xhr.onerror = () => reject(new Error('[tw-progress-monitor] xhr failed'));
    xhr.onprogress = e => {
      if (e.lengthComputable) {
        setProgress(e.loaded / e.total);
      }
    };
    xhr.open('GET', url);
    xhr.send();
  });
};

// Scratch uses fetch() to download the project JSON, so we override it to monitor when the project is being downloaded.
const originalFetch = window.fetch;
window.fetch = (url, opts) => {
  const isGET = typeof opts === 'object' && opts && opts.method === 'GET';
  const isProjectURL = typeof url === 'string' && /^https:\/\/projects\.scratch\.mit\.edu\/\d+$/.test(url);
  if (isGET && isProjectURL) {
    return fetchWithProgress(url);
  }
  return originalFetch(url, opts);
};
const handleWorkerMessage = e => {
  const data = e.data;
  if (Array.isArray(data)) {
    complete += data.length;
    setProgress(complete / total);
  }
};
if (window.Worker) {
  let downloadWorker = null;
  const originalPostMessage = window.Worker.prototype.postMessage;
  window.Worker.prototype.postMessage = function (message) {
    if (downloadWorker === null) {
      if (message && message.url && message.id && message.options) {
        downloadWorker = this;
        downloadWorker.addEventListener('message', handleWorkerMessage);
      }
    }
    if (downloadWorker === this) {
      setState(2);
      total++;
    }
    originalPostMessage.call(this, message);
  };
}
// EXTERNAL MODULE: ./src/lib/tw-project-meta-fetcher-hoc.jsx
var tw_project_meta_fetcher_hoc = __webpack_require__(162);

// CONCATENATED MODULE: ./src/lib/project-fetcher-hoc.jsx
const project_fetcher_hoc_excluded = ["assetHost", "intl", "isLoadingProject", "loadingState", "onActivateTab", "onError", "onFetchedProjectData", "onProjectUnchanged", "projectHost", "projectId", "reduxProjectId", "setProjectId", "isFetchingWithId"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function project_fetcher_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = project_fetcher_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function project_fetcher_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }















// TW: Temporary hack for project tokens
const fetchProjectToken = async projectId => {
  if (projectId === '0') {
    return null;
  }
  // Parse ?token=abcdef
  const searchParams = new URLSearchParams(location.search);
  if (searchParams.has('token')) {
    return searchParams.get('token');
  }
  // Parse #1?token=abcdef
  const hashParams = new URLSearchParams(location.hash.split('?')[1]);
  if (hashParams.has('token')) {
    return hashParams.get('token');
  }
  try {
    const metadata = await Object(tw_project_meta_fetcher_hoc["b" /* fetchProjectMeta */])(projectId);
    return metadata.project_token;
  } catch (e) {
    log["default"].error(e);
    throw new Error('Cannot access project token. Project is probably unshared. See https://docs.turbowarp.org/unshared-projects');
  }
};

/* Higher Order Component to provide behavior for loading projects by id. If
 * there's no id, the default project is loaded.
 * @param {React.Component} WrappedComponent component to receive projectData prop
 * @returns {React.Component} component with project loading behavior
 */
const project_fetcher_hoc_ProjectFetcherHOC = function ProjectFetcherHOC(WrappedComponent) {
  class ProjectFetcherComponent extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['fetchProject']);
      lib_storage["a" /* default */].setProjectHost(props.projectHost);
      lib_storage["a" /* default */].setProjectToken(props.projectToken);
      lib_storage["a" /* default */].setAssetHost(props.assetHost);
      lib_storage["a" /* default */].setTranslatorFunction(props.intl.formatMessage);
      // props.projectId might be unset, in which case we use our default;
      // or it may be set by an even higher HOC, and passed to us.
      // Either way, we now know what the initial projectId should be, so
      // set it in the redux store.
      if (props.projectId !== '' && props.projectId !== null && typeof props.projectId !== 'undefined') {
        this.props.setProjectId(props.projectId.toString());
      }
    }
    componentDidUpdate(prevProps) {
      if (prevProps.projectHost !== this.props.projectHost) {
        lib_storage["a" /* default */].setProjectHost(this.props.projectHost);
      }
      if (prevProps.projectToken !== this.props.projectToken) {
        lib_storage["a" /* default */].setProjectToken(this.props.projectToken);
      }
      if (prevProps.assetHost !== this.props.assetHost) {
        lib_storage["a" /* default */].setAssetHost(this.props.assetHost);
      }
      if (this.props.isFetchingWithId && !prevProps.isFetchingWithId) {
        this.fetchProject(this.props.reduxProjectId, this.props.loadingState);
      }
      if (this.props.isShowingProject && !prevProps.isShowingProject) {
        this.props.onProjectUnchanged();
      }
      if (this.props.isShowingProject && (prevProps.isLoadingProject || prevProps.isCreatingNew)) {
        this.props.onActivateTab(editor_tab["a" /* BLOCKS_TAB_INDEX */]);
      }
    }
    fetchProject(projectId, loadingState) {
      // tw: clear and stop the VM before fetching
      // these will also happen later after the project is fetched, but fetching may take a while and
      // the project shouldn't be running while fetching the new project
      this.props.vm.clear();
      this.props.vm.stop();
      let assetPromise;
      // In case running in node...
      let projectUrl = typeof URLSearchParams === 'undefined' ? null : new URLSearchParams(location.search).get('project_url');
      if (projectUrl) {
        if (!projectUrl.startsWith('http:') && !projectUrl.startsWith('https:')) {
          projectUrl = "https://".concat(projectUrl);
        }
        assetPromise = fetchWithProgress(projectUrl).then(r => {
          if (!r.ok) {
            throw new Error("Request returned status ".concat(r.status));
          }
          return r.arrayBuffer();
        }).then(buffer => ({
          data: buffer
        }));
      } else {
        // TW: Temporary hack for project tokens
        assetPromise = fetchProjectToken(projectId).then(token => {
          lib_storage["a" /* default */].setProjectToken(token);
          return lib_storage["a" /* default */].load(lib_storage["a" /* default */].AssetType.Project, projectId, lib_storage["a" /* default */].DataFormat.JSON);
        });
      }
      return assetPromise.then(projectAsset => {
        // tw: If the project data appears to be HTML, then the result is probably an nginx 404 page,
        // and the "missing project" project should be loaded instead.
        // See: https://projects.scratch.mit.edu/9999999999999999999999
        if (projectAsset && projectAsset.data) {
          const firstChar = projectAsset.data[0];
          if (firstChar === '<' || firstChar === '<'.charCodeAt(0)) {
            return lib_storage["a" /* default */].load(lib_storage["a" /* default */].AssetType.Project, tw_missing_project["a" /* MISSING_PROJECT_ID */], lib_storage["a" /* default */].DataFormat.JSON);
          }
        }
        return projectAsset;
      }).then(projectAsset => {
        if (projectAsset) {
          this.props.onFetchedProjectData(projectAsset.data, loadingState);
        } else {
          // Treat failure to load as an error
          // Throw to be caught by catch later on
          throw new Error('Could not find project');
        }
      }).catch(err => {
        this.props.onError(err);
        log["default"].error(err);
      });
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          assetHost,
          intl,
          isLoadingProject: isLoadingProjectProp,
          loadingState,
          onActivateTab,
          onError: onErrorProp,
          onFetchedProjectData: onFetchedProjectDataProp,
          onProjectUnchanged,
          projectHost,
          projectId,
          reduxProjectId,
          setProjectId: setProjectIdProp,
          /* eslint-enable no-unused-vars */
          isFetchingWithId: isFetchingWithIdProp
        } = _this$props,
        componentProps = project_fetcher_hoc_objectWithoutProperties(_this$props, project_fetcher_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, _extends({
        fetchingProject: isFetchingWithIdProp
      }, componentProps));
    }
  }
  ProjectFetcherComponent.propTypes = {
    assetHost: prop_types_default.a.string,
    canSave: prop_types_default.a.bool,
    intl: index_es["f" /* intlShape */].isRequired,
    isCreatingNew: prop_types_default.a.bool,
    isFetchingWithId: prop_types_default.a.bool,
    isLoadingProject: prop_types_default.a.bool,
    isShowingProject: prop_types_default.a.bool,
    loadingState: prop_types_default.a.oneOf(project_state["a" /* LoadingStates */]),
    onActivateTab: prop_types_default.a.func,
    onError: prop_types_default.a.func,
    onFetchedProjectData: prop_types_default.a.func,
    onProjectUnchanged: prop_types_default.a.func,
    projectHost: prop_types_default.a.string,
    projectToken: prop_types_default.a.string,
    projectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
    reduxProjectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
    setProjectId: prop_types_default.a.func,
    vm: prop_types_default.a.instanceOf(src_default.a)
  };
  ProjectFetcherComponent.defaultProps = {
    assetHost: 'https://assets.scratch.mit.edu',
    projectHost: 'https://projects.scratch.mit.edu'
  };
  const mapStateToProps = state => ({
    isCreatingNew: Object(project_state["j" /* getIsCreatingNew */])(state.scratchGui.projectState.loadingState),
    isFetchingWithId: Object(project_state["l" /* getIsFetchingWithId */])(state.scratchGui.projectState.loadingState),
    isLoadingProject: Object(project_state["m" /* getIsLoading */])(state.scratchGui.projectState.loadingState),
    isShowingProject: Object(project_state["r" /* getIsShowingProject */])(state.scratchGui.projectState.loadingState),
    loadingState: state.scratchGui.projectState.loadingState,
    reduxProjectId: state.scratchGui.projectState.projectId,
    vm: state.scratchGui.vm
  });
  const mapDispatchToProps = dispatch => ({
    onActivateTab: tab => dispatch(Object(editor_tab["d" /* activateTab */])(tab)),
    onError: error => dispatch(Object(project_state["y" /* projectError */])(error)),
    onFetchedProjectData: (projectData, loadingState) => dispatch(Object(project_state["w" /* onFetchedProjectData */])(projectData, loadingState)),
    setProjectId: projectId => dispatch(Object(project_state["E" /* setProjectId */])(projectId)),
    onProjectUnchanged: () => dispatch(Object(project_changed["d" /* setProjectUnchanged */])())
  });
  // Allow incoming props to override redux-provided props. Used to mock in tests.
  const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign({}, stateProps, dispatchProps, ownProps);
  return Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps, mergeProps)(ProjectFetcherComponent));
};

// EXTERNAL MODULE: ./src/reducers/project-title.js
var project_title = __webpack_require__(94);

// CONCATENATED MODULE: ./src/lib/titled-hoc.jsx
const titled_hoc_excluded = ["intl", "isAnyCreatingNewState", "isShowingWithoutId", "onChangedProjectTitle", "onUpdateProjectTitle", "projectTitle", "reduxProjectTitle"];
function titled_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = titled_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function titled_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const titled_hoc_messages = Object(index_es["d" /* defineMessages */])({
  defaultProjectTitle: {
    "id": "tw.gui.defaultProjectTitle",
    "defaultMessage": "Project"
  }
});

/* Higher Order Component to get and set the project title
 * @param {React.Component} WrappedComponent component to receive project title related props
 * @returns {React.Component} component with project loading behavior
 */
const titled_hoc_TitledHOC = function TitledHOC(WrappedComponent) {
  class TitledComponent extends react_default.a.Component {
    componentDidMount() {
      this.handleReceivedProjectTitle(this.props.projectTitle);
    }
    componentDidUpdate(prevProps) {
      if (this.props.projectTitle !== prevProps.projectTitle) {
        this.handleReceivedProjectTitle(this.props.projectTitle);
      }
      // if project is a new default project, and has loaded,
      if (this.props.isShowingWithoutId && prevProps.isAnyCreatingNewState) {
        // reset title to default
        const defaultProjectTitle = this.handleReceivedProjectTitle();
        this.props.onUpdateProjectTitle(defaultProjectTitle, true);
      }
      // if the projectTitle hasn't changed, but the reduxProjectTitle
      // HAS changed, we need to report that change to the projectTitle's owner
      if (this.props.reduxProjectTitle !== prevProps.reduxProjectTitle && this.props.reduxProjectTitle !== this.props.projectTitle) {
        const defaultProjectTitle = this.props.intl.formatMessage(titled_hoc_messages.defaultProjectTitle);
        this.props.onUpdateProjectTitle(this.props.reduxProjectTitle, this.props.reduxProjectTitle === defaultProjectTitle);
      }
    }
    handleReceivedProjectTitle(requestedTitle) {
      let newTitle = requestedTitle;
      let isDefault = false;
      if (newTitle === null || typeof newTitle === 'undefined') {
        newTitle = this.props.intl.formatMessage(titled_hoc_messages.defaultProjectTitle);
        isDefault = true;
      }
      this.props.onChangedProjectTitle(newTitle, isDefault);
      return newTitle;
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          intl,
          isAnyCreatingNewState,
          isShowingWithoutId,
          onChangedProjectTitle,
          // for children, we replace onUpdateProjectTitle with our own
          onUpdateProjectTitle,
          // we don't pass projectTitle prop to children -- they must use
          // redux value
          projectTitle,
          reduxProjectTitle
          /* eslint-enable no-unused-vars */
        } = _this$props,
        componentProps = titled_hoc_objectWithoutProperties(_this$props, titled_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, componentProps);
    }
  }
  TitledComponent.propTypes = {
    intl: index_es["f" /* intlShape */],
    isAnyCreatingNewState: prop_types_default.a.bool,
    isShowingWithoutId: prop_types_default.a.bool,
    onChangedProjectTitle: prop_types_default.a.func,
    onUpdateProjectTitle: prop_types_default.a.func,
    projectTitle: prop_types_default.a.string,
    reduxProjectTitle: prop_types_default.a.string
  };
  TitledComponent.defaultProps = {
    onUpdateProjectTitle: () => {}
  };
  const mapStateToProps = state => {
    const loadingState = state.scratchGui.projectState.loadingState;
    return {
      isAnyCreatingNewState: Object(project_state["h" /* getIsAnyCreatingNewState */])(loadingState),
      isShowingWithoutId: Object(project_state["t" /* getIsShowingWithoutId */])(loadingState),
      reduxProjectTitle: state.scratchGui.projectTitle
    };
  };
  const mapDispatchToProps = dispatch => ({
    onChangedProjectTitle: title => dispatch(Object(project_title["c" /* setProjectTitle */])(title))
  });
  return Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(TitledComponent));
};

// EXTERNAL MODULE: ./src/lib/collect-metadata.js
var collect_metadata = __webpack_require__(345);

// EXTERNAL MODULE: ./src/lib/data-uri-to-blob.js
var data_uri_to_blob = __webpack_require__(576);

// EXTERNAL MODULE: ./node_modules/query-string/index.js
var query_string = __webpack_require__(137);
var query_string_default = /*#__PURE__*/__webpack_require__.n(query_string);

// EXTERNAL MODULE: ./node_modules/xhr/index.js
var xhr = __webpack_require__(198);
var xhr_default = /*#__PURE__*/__webpack_require__.n(xhr);

// CONCATENATED MODULE: ./src/lib/save-project-to-server.js




/**
 * Save a project JSON to the project server.
 * This should eventually live in scratch-www.
 * @param {number} projectId the ID of the project, null if a new project.
 * @param {object} vmState the JSON project representation.
 * @param {object} params the request params.
 * @property {?number} params.originalId the original project ID if a copy/remix.
 * @property {?boolean} params.isCopy a flag indicating if this save is creating a copy.
 * @property {?boolean} params.isRemix a flag indicating if this save is creating a remix.
 * @property {?string} params.title the title of the project.
 * @return {Promise} A promise that resolves when the network request resolves.
 */
/* harmony default export */ var save_project_to_server = (function (projectId, vmState, params) {
  const opts = {
    body: vmState,
    // If we set json:true then the body is double-stringified, so don't
    headers: {
      'Content-Type': 'application/json'
    },
    withCredentials: true
  };
  const creatingProject = projectId === null || typeof projectId === 'undefined';
  const queryParams = {};
  if (params.hasOwnProperty('originalId')) queryParams.original_id = params.originalId;
  if (params.hasOwnProperty('isCopy')) queryParams.is_copy = params.isCopy;
  if (params.hasOwnProperty('isRemix')) queryParams.is_remix = params.isRemix;
  if (params.hasOwnProperty('title')) queryParams.title = params.title;
  let qs = query_string_default.a.stringify(queryParams);
  if (qs) qs = "?".concat(qs);
  if (creatingProject) {
    Object.assign(opts, {
      method: 'post',
      url: "".concat(lib_storage["a" /* default */].projectHost, "/").concat(qs)
    });
  } else {
    Object.assign(opts, {
      method: 'put',
      url: "".concat(lib_storage["a" /* default */].projectHost, "/").concat(projectId).concat(qs)
    });
  }
  return new Promise((resolve, reject) => {
    xhr_default()(opts, (err, response) => {
      if (err) return reject(err);
      if (response.statusCode !== 200) return reject(response.statusCode);
      let body;
      try {
        // Since we didn't set json: true, we have to parse manually
        body = JSON.parse(response.body);
      } catch (e) {
        return reject(e);
      }
      body.id = projectId;
      if (creatingProject) {
        body.id = body['content-name'];
      }
      resolve(body);
    });
  });
});
// EXTERNAL MODULE: ./src/reducers/alerts.js
var alerts = __webpack_require__(29);

// EXTERNAL MODULE: ./src/reducers/timeout.js
var timeout = __webpack_require__(286);

// CONCATENATED MODULE: ./src/lib/project-saver-hoc.jsx
const project_saver_hoc_excluded = ["autoSaveTimeoutId", "autoSaveIntervalSecs", "isCreatingCopy", "isCreatingNew", "projectChanged", "isAnyCreatingNewState", "isLoading", "isManualUpdating", "isRemixing", "isShowingSaveable", "isShowingWithId", "isShowingWithoutId", "isUpdating", "loadingState", "onAutoUpdateProject", "onCreatedProject", "onCreateProject", "onProjectError", "onRemixing", "onSetProjectUnchanged", "onSetProjectThumbnailer", "onSetProjectSaver", "onShowAlert", "onShowCopySuccessAlert", "onShowRemixSuccessAlert", "onShowCreatingCopyAlert", "onShowCreatingRemixAlert", "onShowSaveSuccessAlert", "onShowSavingAlert", "onUpdatedProject", "onUpdateProjectData", "onUpdateProjectThumbnail", "reduxProjectId", "reduxProjectTitle", "setAutoSaveTimeoutId"];
function project_saver_hoc_extends() { project_saver_hoc_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return project_saver_hoc_extends.apply(this, arguments); }
function project_saver_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = project_saver_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function project_saver_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }















/**
 * Higher Order Component to provide behavior for saving projects.
 * @param {React.Component} WrappedComponent the component to add project saving functionality to
 * @returns {React.Component} WrappedComponent with project saving functionality added
 *
 * <ProjectSaverHOC>
 *     <WrappedComponent />
 * </ProjectSaverHOC>
 */
const project_saver_hoc_ProjectSaverHOC = function ProjectSaverHOC(WrappedComponent) {
  class ProjectSaverComponent extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['getProjectThumbnail', 'leavePageConfirm', 'tryToAutoSave']);
    }
    componentWillMount() {
      if (typeof window === 'object') {
        // Note: it might be better to use a listener instead of assigning onbeforeunload;
        // but then it'd be hard to turn this listening off in our tests
        window.onbeforeunload = e => this.leavePageConfirm(e);
      }

      // Allow the GUI consumer to pass in a function to receive a trigger
      // for triggering thumbnail or whole project saves.
      // These functions are called with null on unmount to prevent stale references.
      this.props.onSetProjectThumbnailer(this.getProjectThumbnail);
      this.props.onSetProjectSaver(this.tryToAutoSave);
    }
    componentDidUpdate(prevProps) {
      if (!this.props.isAnyCreatingNewState && prevProps.isAnyCreatingNewState) {
        this.reportTelemetryEvent('projectWasCreated');
      }
      if (!this.props.isLoading && prevProps.isLoading) {
        this.reportTelemetryEvent('projectDidLoad');
      }
      if (this.props.projectChanged && !prevProps.projectChanged) {
        this.scheduleAutoSave();
      }
      if (this.props.isUpdating && !prevProps.isUpdating) {
        this.updateProjectToStorage();
      }
      if (this.props.isCreatingNew && !prevProps.isCreatingNew) {
        this.createNewProjectToStorage();
      }
      if (this.props.isCreatingCopy && !prevProps.isCreatingCopy) {
        this.createCopyToStorage();
      }
      if (this.props.isRemixing && !prevProps.isRemixing) {
        this.props.onRemixing(true);
        this.createRemixToStorage();
      } else if (!this.props.isRemixing && prevProps.isRemixing) {
        this.props.onRemixing(false);
      }

      // see if we should "create" the current project on the server
      //
      // don't try to create or save immediately after trying to create
      if (prevProps.isCreatingNew) return;
      // if we're newly able to create this project, create it!
      if (this.isShowingCreatable(this.props) && !this.isShowingCreatable(prevProps)) {
        this.props.onCreateProject();
      }

      // see if we should save/update the current project on the server
      //
      // don't try to save immediately after trying to save
      if (prevProps.isUpdating) return;
      // if we're newly able to save this project, save it!
      const becameAbleToSave = this.props.canSave && !prevProps.canSave;
      const becameShared = this.props.isShared && !prevProps.isShared;
      if (this.props.isShowingSaveable && (becameAbleToSave || becameShared)) {
        this.props.onAutoUpdateProject();
      }
    }
    componentWillUnmount() {
      this.clearAutoSaveTimeout();
      // Cant unset the beforeunload because it might no longer belong to this component
      // i.e. if another of this component has been mounted before this one gets unmounted
      // which happens when going from project to editor view.
      // window.onbeforeunload = undefined; // eslint-disable-line no-undefined
      // Remove project thumbnailer function since the components are unmounting
      this.props.onSetProjectThumbnailer(null);
      this.props.onSetProjectSaver(null);
    }
    leavePageConfirm(e) {
      if (this.props.projectChanged) {
        // both methods of returning a value may be necessary for browser compatibility
        (e || window.event).returnValue = true;
        return true;
      }
      return; // Returning undefined prevents the prompt from coming up
    }

    clearAutoSaveTimeout() {
      if (this.props.autoSaveTimeoutId !== null) {
        clearTimeout(this.props.autoSaveTimeoutId);
        this.props.setAutoSaveTimeoutId(null);
      }
    }
    scheduleAutoSave() {
      if (this.props.isShowingSaveable && this.props.autoSaveTimeoutId === null) {
        const timeoutId = setTimeout(this.tryToAutoSave, this.props.autoSaveIntervalSecs * 1000);
        this.props.setAutoSaveTimeoutId(timeoutId);
      }
    }
    tryToAutoSave() {
      if (this.props.projectChanged && this.props.isShowingSaveable) {
        this.props.onAutoUpdateProject();
      }
    }
    isShowingCreatable(props) {
      return props.canCreateNew && props.isShowingWithoutId;
    }
    updateProjectToStorage() {
      this.props.onShowSavingAlert();
      return this.storeProject(this.props.reduxProjectId).then(() => {
        // there's an http response object available here, but we don't need to examine
        // it, because there are no values contained in it that we care about
        this.props.onUpdatedProject(this.props.loadingState);
        this.props.onShowSaveSuccessAlert();
      }).catch(err => {
        // Always show the savingError alert because it gives the
        // user the chance to download or retry the save manually.
        this.props.onShowAlert('savingError');
        this.props.onProjectError(err);
      });
    }
    createNewProjectToStorage() {
      return this.storeProject(null).then(response => {
        this.props.onCreatedProject(response.id.toString(), this.props.loadingState);
      }).catch(err => {
        this.props.onShowAlert('creatingError');
        this.props.onProjectError(err);
      });
    }
    createCopyToStorage() {
      this.props.onShowCreatingCopyAlert();
      return this.storeProject(null, {
        originalId: this.props.reduxProjectId,
        isCopy: 1,
        title: this.props.reduxProjectTitle
      }).then(response => {
        this.props.onCreatedProject(response.id.toString(), this.props.loadingState);
        this.props.onShowCopySuccessAlert();
      }).catch(err => {
        this.props.onShowAlert('creatingError');
        this.props.onProjectError(err);
      });
    }
    createRemixToStorage() {
      this.props.onShowCreatingRemixAlert();
      return this.storeProject(null, {
        originalId: this.props.reduxProjectId,
        isRemix: 1,
        title: this.props.reduxProjectTitle
      }).then(response => {
        this.props.onCreatedProject(response.id.toString(), this.props.loadingState);
        this.props.onShowRemixSuccessAlert();
      }).catch(err => {
        this.props.onShowAlert('creatingError');
        this.props.onProjectError(err);
      });
    }
    /**
     * storeProject:
     * @param  {number|string|undefined} projectId - defined value will PUT/update; undefined/null will POST/create
     * @return {Promise} - resolves with json object containing project's existing or new id
     * @param {?object} requestParams - object of params to add to request body
     */
    storeProject(projectId, requestParams) {
      requestParams = requestParams || {};
      this.clearAutoSaveTimeout();
      // Serialize VM state now before embarking on
      // the asynchronous journey of storing assets to
      // the server. This ensures that assets don't update
      // while in the process of saving a project (e.g. the
      // serialized project refers to a newer asset than what
      // we just finished saving).
      const savedVMState = this.props.vm.toJSON();
      return Promise.all(this.props.vm.assets.filter(asset => !asset.clean).map(asset => lib_storage["a" /* default */].store(asset.assetType, asset.dataFormat, asset.data, asset.assetId).then(response => {
        // Asset servers respond with {status: ok} for successful POSTs
        if (response.status !== 'ok') {
          // Errors include a `code` property, e.g. "Forbidden"
          return Promise.reject(response.code);
        }
        asset.clean = true;
      }))).then(() => this.props.onUpdateProjectData(projectId, savedVMState, requestParams)).then(response => {
        this.props.onSetProjectUnchanged();
        const id = response.id.toString();
        if (id && this.props.onUpdateProjectThumbnail) {
          this.storeProjectThumbnail(id);
        }
        this.reportTelemetryEvent('projectDidSave');
        return response;
      }).catch(err => {
        log["default"].error(err);
        throw err; // pass the error up the chain
      });
    }

    /**
     * Store a snapshot of the project once it has been saved/created.
     * Needs to happen _after_ save because the project must have an ID.
     * @param {!string} projectId - id of the project, must be defined.
     */
    storeProjectThumbnail(projectId) {
      try {
        this.getProjectThumbnail(dataURI => {
          this.props.onUpdateProjectThumbnail(projectId, Object(data_uri_to_blob["a" /* default */])(dataURI));
        });
      } catch (e) {
        log["default"].error('Project thumbnail save error', e);
        // This is intentionally fire/forget because a failure
        // to save the thumbnail is not vitally important to the user.
      }
    }

    getProjectThumbnail(callback) {
      this.props.vm.postIOData('video', {
        forceTransparentPreview: true
      });
      this.props.vm.renderer.requestSnapshot(dataURI => {
        this.props.vm.postIOData('video', {
          forceTransparentPreview: false
        });
        callback(dataURI);
      });
      this.props.vm.renderer.draw();
    }

    /**
     * Report a telemetry event.
     * @param {string} event - one of `projectWasCreated`, `projectDidLoad`, `projectDidSave`, `projectWasUploaded`
     */
    // TODO make a telemetry HOC and move this stuff there
    reportTelemetryEvent(event) {
      try {
        if (this.props.onProjectTelemetryEvent) {
          const metadata = Object(collect_metadata["a" /* default */])(this.props.vm, this.props.reduxProjectTitle, this.props.locale);
          this.props.onProjectTelemetryEvent(event, metadata);
        }
      } catch (e) {
        log["default"].error('Telemetry error', event, e);
        // This is intentionally fire/forget because a failure
        // to report telemetry should not block saving
      }
    }

    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          autoSaveTimeoutId,
          autoSaveIntervalSecs,
          isCreatingCopy,
          isCreatingNew,
          projectChanged,
          isAnyCreatingNewState,
          isLoading,
          isManualUpdating,
          isRemixing,
          isShowingSaveable,
          isShowingWithId,
          isShowingWithoutId,
          isUpdating,
          loadingState,
          onAutoUpdateProject,
          onCreatedProject,
          onCreateProject,
          onProjectError,
          onRemixing,
          onSetProjectUnchanged,
          onSetProjectThumbnailer,
          onSetProjectSaver,
          onShowAlert,
          onShowCopySuccessAlert,
          onShowRemixSuccessAlert,
          onShowCreatingCopyAlert,
          onShowCreatingRemixAlert,
          onShowSaveSuccessAlert,
          onShowSavingAlert,
          onUpdatedProject,
          onUpdateProjectData,
          onUpdateProjectThumbnail,
          reduxProjectId,
          reduxProjectTitle,
          setAutoSaveTimeoutId: setAutoSaveTimeoutIdProp
          /* eslint-enable no-unused-vars */
        } = _this$props,
        componentProps = project_saver_hoc_objectWithoutProperties(_this$props, project_saver_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, project_saver_hoc_extends({
        isCreating: isAnyCreatingNewState
      }, componentProps));
    }
  }
  ProjectSaverComponent.propTypes = {
    autoSaveIntervalSecs: prop_types_default.a.number.isRequired,
    autoSaveTimeoutId: prop_types_default.a.number,
    canCreateNew: prop_types_default.a.bool,
    canSave: prop_types_default.a.bool,
    isAnyCreatingNewState: prop_types_default.a.bool,
    isCreatingCopy: prop_types_default.a.bool,
    isCreatingNew: prop_types_default.a.bool,
    isLoading: prop_types_default.a.bool,
    isManualUpdating: prop_types_default.a.bool,
    isRemixing: prop_types_default.a.bool,
    isShared: prop_types_default.a.bool,
    isShowingSaveable: prop_types_default.a.bool,
    isShowingWithId: prop_types_default.a.bool,
    isShowingWithoutId: prop_types_default.a.bool,
    isUpdating: prop_types_default.a.bool,
    loadingState: prop_types_default.a.oneOf(project_state["a" /* LoadingStates */]),
    locale: prop_types_default.a.string.isRequired,
    onAutoUpdateProject: prop_types_default.a.func,
    onCreateProject: prop_types_default.a.func,
    onCreatedProject: prop_types_default.a.func,
    onProjectError: prop_types_default.a.func,
    onProjectTelemetryEvent: prop_types_default.a.func,
    onRemixing: prop_types_default.a.func,
    onSetProjectSaver: prop_types_default.a.func.isRequired,
    onSetProjectThumbnailer: prop_types_default.a.func.isRequired,
    onSetProjectUnchanged: prop_types_default.a.func.isRequired,
    onShowAlert: prop_types_default.a.func,
    onShowCopySuccessAlert: prop_types_default.a.func,
    onShowCreatingCopyAlert: prop_types_default.a.func,
    onShowCreatingRemixAlert: prop_types_default.a.func,
    onShowRemixSuccessAlert: prop_types_default.a.func,
    onShowSaveSuccessAlert: prop_types_default.a.func,
    onShowSavingAlert: prop_types_default.a.func,
    onUpdateProjectData: prop_types_default.a.func.isRequired,
    onUpdateProjectThumbnail: prop_types_default.a.func,
    onUpdatedProject: prop_types_default.a.func,
    projectChanged: prop_types_default.a.bool,
    reduxProjectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
    reduxProjectTitle: prop_types_default.a.string,
    setAutoSaveTimeoutId: prop_types_default.a.func.isRequired,
    vm: prop_types_default.a.instanceOf(src_default.a).isRequired
  };
  ProjectSaverComponent.defaultProps = {
    autoSaveIntervalSecs: 120,
    onRemixing: () => {},
    onSetProjectThumbnailer: () => {},
    onSetProjectSaver: () => {},
    onUpdateProjectData: save_project_to_server
  };
  const mapStateToProps = (state, ownProps) => {
    const loadingState = state.scratchGui.projectState.loadingState;
    const isShowingWithId = Object(project_state["s" /* getIsShowingWithId */])(loadingState);
    return {
      autoSaveTimeoutId: state.scratchGui.timeout.autoSaveTimeoutId,
      isAnyCreatingNewState: Object(project_state["h" /* getIsAnyCreatingNewState */])(loadingState),
      isLoading: Object(project_state["m" /* getIsLoading */])(loadingState),
      isCreatingCopy: Object(project_state["i" /* getIsCreatingCopy */])(loadingState),
      isCreatingNew: Object(project_state["j" /* getIsCreatingNew */])(loadingState),
      isRemixing: Object(project_state["q" /* getIsRemixing */])(loadingState),
      isShowingSaveable: ownProps.canSave && isShowingWithId,
      isShowingWithId: isShowingWithId,
      isShowingWithoutId: Object(project_state["t" /* getIsShowingWithoutId */])(loadingState),
      isUpdating: Object(project_state["u" /* getIsUpdating */])(loadingState),
      isManualUpdating: Object(project_state["p" /* getIsManualUpdating */])(loadingState),
      loadingState: loadingState,
      locale: state.locales.locale,
      projectChanged: state.scratchGui.projectChanged,
      reduxProjectId: state.scratchGui.projectState.projectId,
      reduxProjectTitle: state.scratchGui.projectTitle,
      vm: state.scratchGui.vm
    };
  };
  const mapDispatchToProps = dispatch => ({
    onAutoUpdateProject: () => dispatch(Object(project_state["b" /* autoUpdateProject */])()),
    onCreatedProject: (projectId, loadingState) => dispatch(Object(project_state["f" /* doneCreatingProject */])(projectId, loadingState)),
    onCreateProject: () => dispatch(Object(project_state["c" /* createProject */])()),
    onProjectError: error => dispatch(Object(project_state["y" /* projectError */])(error)),
    onSetProjectUnchanged: () => dispatch(Object(project_changed["d" /* setProjectUnchanged */])()),
    onShowAlert: alertType => dispatch(Object(alerts["i" /* showStandardAlert */])(alertType)),
    onShowCopySuccessAlert: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'createCopySuccess'),
    onShowRemixSuccessAlert: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'createRemixSuccess'),
    onShowCreatingCopyAlert: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'creatingCopy'),
    onShowCreatingRemixAlert: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'creatingRemix'),
    onShowSaveSuccessAlert: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'saveSuccess'),
    onShowSavingAlert: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'saving'),
    onUpdatedProject: loadingState => dispatch(Object(project_state["g" /* doneUpdatingProject */])(loadingState)),
    setAutoSaveTimeoutId: id => dispatch(Object(timeout["b" /* setAutoSaveTimeoutId */])(id))
  });
  // Allow incoming props to override redux-provided props. Used to mock in tests.
  const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign({}, stateProps, dispatchProps, ownProps);
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps, mergeProps)(ProjectSaverComponent);
};

// EXTERNAL MODULE: ./src/lib/libraries/decks/index.jsx
var decks = __webpack_require__(80);

// EXTERNAL MODULE: ./src/lib/analytics.js
var analytics = __webpack_require__(117);

// CONCATENATED MODULE: ./src/lib/tutorial-from-url.js
/**
 * @fileoverview
 * Utility function to detect tutorial id from query paramenter on the URL.
 */




/**
 * Get the tutorial id from the given numerical id (representing the
 * url id of the tutorial).
 * @param {number} urlId The URL Id for the tutorial
 * @returns {string} The string id for the tutorial, or null if the URL ID
 * was not found.
 */
const getDeckIdFromUrlId = urlId => {
  for (const deckId in decks["a" /* default */]) {
    if (decks["a" /* default */][deckId].urlId === urlId) {
      analytics["a" /* default */].event({
        category: 'how-to',
        action: 'load from url',
        label: "".concat(deckId)
      });
      return deckId;
    }
  }
  return null;
};

/**
 * Check if there's a tutorial id provided as a query parameter in the URL.
 * Return the corresponding tutorial id or null if not found.
 * @param {object} queryParams the results of parsing the query string
 * @return {string} The ID of the requested tutorial or null if no tutorial was
 * requested or found.
 */
const detectTutorialId = queryParams => {
  const tutorialID = Array.isArray(queryParams.tutorial) ? queryParams.tutorial[0] : queryParams.tutorial;
  if (typeof tutorialID === 'undefined') return null;
  if (tutorialID === 'all') return tutorialID;
  return getDeckIdFromUrlId(tutorialID);
};

// EXTERNAL MODULE: ./src/reducers/cards.js
var cards = __webpack_require__(75);

// CONCATENATED MODULE: ./src/lib/query-parser-hoc.jsx
const query_parser_hoc_excluded = ["onOpenTipsLibrary", "onUpdateReduxDeck"];
function query_parser_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = query_parser_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function query_parser_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








/* Higher Order Component to get parameters from the URL query string and initialize redux state
 * @param {React.Component} WrappedComponent: component to render
 * @returns {React.Component} component with query parsing behavior
 */
const query_parser_hoc_QueryParserHOC = function QueryParserHOC(WrappedComponent) {
  class QueryParserComponent extends react_default.a.Component {
    constructor(props) {
      super(props);
      const queryParams = query_string_default.a.parse(location.search);
      const tutorialId = detectTutorialId(queryParams);
      if (tutorialId) {
        if (tutorialId === 'all') {
          this.openTutorials();
        } else {
          this.setActiveCards(tutorialId);
        }
      }
    }
    setActiveCards(tutorialId) {
      this.props.onUpdateReduxDeck(tutorialId);
    }
    openTutorials() {
      this.props.onOpenTipsLibrary();
    }
    render() {
      const _this$props = this.props,
        {
          onOpenTipsLibrary,
          // eslint-disable-line no-unused-vars
          onUpdateReduxDeck // eslint-disable-line no-unused-vars
        } = _this$props,
        componentProps = query_parser_hoc_objectWithoutProperties(_this$props, query_parser_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, componentProps);
    }
  }
  QueryParserComponent.propTypes = {
    onOpenTipsLibrary: prop_types_default.a.func,
    onUpdateReduxDeck: prop_types_default.a.func
  };
  const mapDispatchToProps = dispatch => ({
    onOpenTipsLibrary: () => {
      dispatch(Object(modals["A" /* openTipsLibrary */])());
    },
    onUpdateReduxDeck: tutorialId => {
      dispatch(Object(cards["a" /* activateDeck */])(tutorialId));
    }
  });
  return Object(react_redux_es["b" /* connect */])(null, mapDispatchToProps)(QueryParserComponent);
};

// EXTERNAL MODULE: ./src/reducers/targets.js
var targets = __webpack_require__(194);

// EXTERNAL MODULE: ./src/reducers/block-drag.js
var block_drag = __webpack_require__(282);

// EXTERNAL MODULE: ./src/reducers/monitors.js
var monitors = __webpack_require__(284);

// EXTERNAL MODULE: ./src/reducers/vm-status.js
var vm_status = __webpack_require__(131);

// EXTERNAL MODULE: ./src/reducers/mic-indicator.js
var mic_indicator = __webpack_require__(283);

// EXTERNAL MODULE: ./src/reducers/tw.js
var tw = __webpack_require__(34);

// EXTERNAL MODULE: ./src/reducers/custom-stage-size.js
var custom_stage_size = __webpack_require__(118);

// CONCATENATED MODULE: ./src/lib/vm-listener-hoc.jsx
const vm_listener_hoc_excluded = ["attachKeyboardEvents", "projectChanged", "shouldUpdateTargets", "shouldUpdateProjectChanged", "onBlockDragUpdate", "onGreenFlag", "onKeyDown", "onKeyUp", "onMicListeningUpdate", "onMonitorsUpdate", "onTargetsUpdate", "onProjectChanged", "onProjectRunStart", "onProjectRunStop", "onProjectSaved", "onRuntimeStarted", "onRuntimeStopped", "onTurboModeOff", "onTurboModeOn", "hasCloudVariables", "onHasCloudVariablesChanged", "onFramerateChanged", "onInterpolationChanged", "onCompilerOptionsChanged", "onRuntimeOptionsChanged", "onStageSizeChanged", "onCompileError", "onClearCompileErrors", "onShowExtensionAlert"];
function vm_listener_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = vm_listener_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function vm_listener_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














let compileErrorCounter = 0;

/*
 * Higher Order Component to manage events emitted by the VM
 * @param {React.Component} WrappedComponent component to manage VM events for
 * @returns {React.Component} connected component with vm events bound to redux
 */
const vm_listener_hoc_vmListenerHOC = function vmListenerHOC(WrappedComponent) {
  class VMListener extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['handleKeyDown', 'handleKeyUp', 'handleProjectChanged', 'handleTargetsUpdate', 'handleCloudDataUpdate', 'handleCompileError']);
      // We have to start listening to the vm here rather than in
      // componentDidMount because the HOC mounts the wrapped component,
      // so the HOC componentDidMount triggers after the wrapped component
      // mounts.
      // If the wrapped component uses the vm in componentDidMount, then
      // we need to start listening before mounting the wrapped component.
      this.props.vm.on('targetsUpdate', this.handleTargetsUpdate);
      this.props.vm.on('MONITORS_UPDATE', this.props.onMonitorsUpdate);
      this.props.vm.on('BLOCK_DRAG_UPDATE', this.props.onBlockDragUpdate);
      this.props.vm.on('TURBO_MODE_ON', this.props.onTurboModeOn);
      this.props.vm.on('TURBO_MODE_OFF', this.props.onTurboModeOff);
      this.props.vm.on('PROJECT_RUN_START', this.props.onProjectRunStart);
      this.props.vm.on('PROJECT_RUN_STOP', this.props.onProjectRunStop);
      this.props.vm.on('PROJECT_CHANGED', this.handleProjectChanged);
      this.props.vm.on('RUNTIME_STARTED', this.props.onRuntimeStarted);
      this.props.vm.on('RUNTIME_STOPPED', this.props.onRuntimeStopped);
      this.props.vm.on('PROJECT_START', this.props.onGreenFlag);
      this.props.vm.on('PERIPHERAL_CONNECTION_LOST_ERROR', this.props.onShowExtensionAlert);
      this.props.vm.on('MIC_LISTENING', this.props.onMicListeningUpdate);
      this.props.vm.on('MIC_LISTENING', this.props.onMicListeningUpdate);
      // tw: add handlers for our events
      this.props.vm.on('HAS_CLOUD_DATA_UPDATE', this.handleCloudDataUpdate);
      this.props.vm.on('COMPILER_OPTIONS_CHANGED', this.props.onCompilerOptionsChanged);
      this.props.vm.on('RUNTIME_OPTIONS_CHANGED', this.props.onRuntimeOptionsChanged);
      this.props.vm.on('FRAMERATE_CHANGED', this.props.onFramerateChanged);
      this.props.vm.on('INTERPOLATION_CHANGED', this.props.onInterpolationChanged);
      this.props.vm.on('COMPILE_ERROR', this.handleCompileError);
      this.props.vm.on('RUNTIME_STARTED', this.props.onClearCompileErrors);
      this.props.vm.on('STAGE_SIZE_CHANGED', this.props.onStageSizeChanged);
    }
    componentDidMount() {
      if (this.props.attachKeyboardEvents) {
        document.addEventListener('keydown', this.handleKeyDown);
        document.addEventListener('keyup', this.handleKeyUp);
      }
      this.props.vm.postIOData('userData', {
        username: this.props.username
      });
    }
    componentDidUpdate(prevProps) {
      if (prevProps.username !== this.props.username) {
        this.props.vm.postIOData('userData', {
          username: this.props.username
        });
      }

      // Re-request a targets update when the shouldUpdateTargets state changes to true
      // i.e. when the editor transitions out of fullscreen/player only modes
      if (this.props.shouldUpdateTargets && !prevProps.shouldUpdateTargets) {
        this.props.vm.emitTargetsUpdate(false /* Emit the event, but do not trigger project change */);
      }
    }

    componentWillUnmount() {
      this.props.vm.removeListener('PERIPHERAL_CONNECTION_LOST_ERROR', this.props.onShowExtensionAlert);
      if (this.props.attachKeyboardEvents) {
        document.removeEventListener('keydown', this.handleKeyDown);
        document.removeEventListener('keyup', this.handleKeyUp);
      }
    }
    handleCloudDataUpdate(hasCloudVariables) {
      if (this.props.hasCloudVariables !== hasCloudVariables) {
        this.props.onHasCloudVariablesChanged(hasCloudVariables);
      }
    }
    // tw: handling for compile errors
    handleCompileError(target, error) {
      const errorMessage = "".concat(error);
      // Ignore certain types of known errors
      // TODO: fix the root cause of all of these
      if (errorMessage.includes('edge-activated hat')) {
        return;
      }
      // Ignore intentonal errors
      if (errorMessage.includes('Script explicitly disables compilation')) {
        return;
      }
      this.props.onCompileError({
        sprite: target.getName(),
        error: errorMessage,
        id: compileErrorCounter++
      });
    }
    handleProjectChanged() {
      if (this.props.shouldUpdateProjectChanged && !this.props.projectChanged) {
        this.props.onProjectChanged();
      }
    }
    handleTargetsUpdate(data) {
      if (this.props.shouldUpdateTargets) {
        this.props.onTargetsUpdate(data);
      }
    }
    handleKeyDown(e) {
      // Don't capture keys intended for Blockly inputs.
      if (e.target !== document && e.target !== document.body) return;
      const key = !e.key || e.key === 'Dead' ? e.keyCode : e.key;
      this.props.vm.postIOData('keyboard', {
        key: key,
        keyCode: e.keyCode,
        isDown: true
      });

      // Prevent space/arrow key from scrolling the page.
      if (e.keyCode === 32 ||
      // 32=space
      e.keyCode >= 37 && e.keyCode <= 40) {
        // 37, 38, 39, 40 are arrows
        e.preventDefault();
      }

      // tw: prevent backspace from going back
      if (e.keyCode === 8) {
        e.preventDefault();
      }
      // tw: prevent ' and / from opening quick find in Firefox
      if (e.keyCode === 222 || e.keyCode === 191) {
        e.preventDefault();
      }
    }
    handleKeyUp(e) {
      // Always capture up events,
      // even those that have switched to other targets.
      const key = !e.key || e.key === 'Dead' ? e.keyCode : e.key;
      this.props.vm.postIOData('keyboard', {
        key: key,
        keyCode: e.keyCode,
        isDown: false
      });

      // E.g., prevent scroll.
      if (e.target !== document && e.target !== document.body) {
        e.preventDefault();
      }
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          attachKeyboardEvents,
          projectChanged,
          shouldUpdateTargets,
          shouldUpdateProjectChanged,
          onBlockDragUpdate,
          onGreenFlag,
          onKeyDown,
          onKeyUp,
          onMicListeningUpdate,
          onMonitorsUpdate,
          onTargetsUpdate,
          onProjectChanged,
          onProjectRunStart,
          onProjectRunStop,
          onProjectSaved,
          onRuntimeStarted,
          onRuntimeStopped,
          onTurboModeOff,
          onTurboModeOn,
          hasCloudVariables,
          onHasCloudVariablesChanged,
          onFramerateChanged,
          onInterpolationChanged,
          onCompilerOptionsChanged,
          onRuntimeOptionsChanged,
          onStageSizeChanged,
          onCompileError,
          onClearCompileErrors,
          onShowExtensionAlert
          /* eslint-enable no-unused-vars */
        } = _this$props,
        props = vm_listener_hoc_objectWithoutProperties(_this$props, vm_listener_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, props);
    }
  }
  VMListener.propTypes = {
    attachKeyboardEvents: prop_types_default.a.bool,
    onBlockDragUpdate: prop_types_default.a.func.isRequired,
    onGreenFlag: prop_types_default.a.func,
    onKeyDown: prop_types_default.a.func,
    onKeyUp: prop_types_default.a.func,
    onMicListeningUpdate: prop_types_default.a.func.isRequired,
    onMonitorsUpdate: prop_types_default.a.func.isRequired,
    onProjectChanged: prop_types_default.a.func.isRequired,
    onProjectRunStart: prop_types_default.a.func.isRequired,
    onProjectRunStop: prop_types_default.a.func.isRequired,
    onProjectSaved: prop_types_default.a.func.isRequired,
    onRuntimeStarted: prop_types_default.a.func.isRequired,
    onRuntimeStopped: prop_types_default.a.func.isRequired,
    onShowExtensionAlert: prop_types_default.a.func.isRequired,
    onTargetsUpdate: prop_types_default.a.func.isRequired,
    onTurboModeOff: prop_types_default.a.func.isRequired,
    onTurboModeOn: prop_types_default.a.func.isRequired,
    hasCloudVariables: prop_types_default.a.bool,
    onHasCloudVariablesChanged: prop_types_default.a.func.isRequired,
    onFramerateChanged: prop_types_default.a.func.isRequired,
    onInterpolationChanged: prop_types_default.a.func.isRequired,
    onCompilerOptionsChanged: prop_types_default.a.func.isRequired,
    onRuntimeOptionsChanged: prop_types_default.a.func.isRequired,
    onStageSizeChanged: prop_types_default.a.func,
    onCompileError: prop_types_default.a.func,
    onClearCompileErrors: prop_types_default.a.func,
    projectChanged: prop_types_default.a.bool,
    shouldUpdateTargets: prop_types_default.a.bool,
    shouldUpdateProjectChanged: prop_types_default.a.bool,
    username: prop_types_default.a.string,
    vm: prop_types_default.a.instanceOf(src_default.a).isRequired
  };
  VMListener.defaultProps = {
    attachKeyboardEvents: true,
    onGreenFlag: () => ({})
  };
  const mapStateToProps = state => ({
    hasCloudVariables: state.scratchGui.tw.hasCloudVariables,
    projectChanged: state.scratchGui.projectChanged,
    // Do not emit target or project updates in fullscreen or player only mode
    // or when recording sounds (it leads to garbled recordings on low-power machines)
    shouldUpdateTargets: !state.scratchGui.mode.isFullScreen && !state.scratchGui.mode.isPlayerOnly && !state.scratchGui.modals.soundRecorder,
    // Do not update the projectChanged state in fullscreen or player only mode
    shouldUpdateProjectChanged: !state.scratchGui.mode.isFullScreen && !state.scratchGui.mode.isPlayerOnly,
    vm: state.scratchGui.vm,
    username: state.session && state.session.session && state.session.session.user ? state.session.session.user.username : state.scratchGui.tw ? state.scratchGui.tw.username : ''
  });
  const mapDispatchToProps = dispatch => ({
    onTargetsUpdate: data => {
      dispatch(Object(targets["d" /* updateTargets */])(data.targetList, data.editingTarget));
    },
    onMonitorsUpdate: monitorList => {
      dispatch(Object(monitors["c" /* updateMonitors */])(monitorList));
    },
    onBlockDragUpdate: areBlocksOverGui => {
      dispatch(Object(block_drag["c" /* updateBlockDrag */])(areBlocksOverGui));
    },
    onProjectRunStart: () => dispatch(Object(vm_status["b" /* setRunningState */])(true)),
    onProjectRunStop: () => dispatch(Object(vm_status["b" /* setRunningState */])(false)),
    onProjectChanged: () => dispatch(Object(project_changed["c" /* setProjectChanged */])()),
    onProjectSaved: () => dispatch(Object(project_changed["d" /* setProjectUnchanged */])()),
    onRuntimeStarted: () => dispatch(Object(vm_status["c" /* setStartedState */])(true)),
    onRuntimeStopped: () => dispatch(Object(vm_status["c" /* setStartedState */])(false)),
    onTurboModeOn: () => dispatch(Object(vm_status["d" /* setTurboState */])(true)),
    onTurboModeOff: () => dispatch(Object(vm_status["d" /* setTurboState */])(false)),
    onHasCloudVariablesChanged: hasCloudVariables => dispatch(Object(tw["setHasCloudVariables"])(hasCloudVariables)),
    onFramerateChanged: framerate => dispatch(Object(tw["setFramerateState"])(framerate)),
    onInterpolationChanged: interpolation => dispatch(Object(tw["setInterpolationState"])(interpolation)),
    onCompilerOptionsChanged: options => dispatch(Object(tw["setCompilerOptionsState"])(options)),
    onRuntimeOptionsChanged: options => dispatch(Object(tw["setRuntimeOptionsState"])(options)),
    onStageSizeChanged: (width, height) => dispatch(Object(custom_stage_size["d" /* setCustomStageSize */])(width, height)),
    onCompileError: errors => dispatch(Object(tw["addCompileError"])(errors)),
    onClearCompileErrors: () => dispatch(Object(tw["clearCompileErrors"])()),
    onShowExtensionAlert: data => {
      dispatch(Object(alerts["h" /* showExtensionAlert */])(data));
    },
    onMicListeningUpdate: listening => {
      dispatch(Object(mic_indicator["c" /* updateMicIndicator */])(listening));
    }
  });
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(VMListener);
};
/* harmony default export */ var vm_listener_hoc = (vm_listener_hoc_vmListenerHOC);
// EXTERNAL MODULE: ./node_modules/scratch-audio/src/index.js
var scratch_audio_src = __webpack_require__(346);
var scratch_audio_src_default = /*#__PURE__*/__webpack_require__.n(scratch_audio_src);

// CONCATENATED MODULE: ./src/lib/vm-manager-hoc.jsx
const vm_manager_hoc_excluded = ["fontsLoaded", "loadingState", "locale", "messages", "isStarted", "onError", "onLoadedProject", "onSetProjectUnchanged", "projectData", "isLoadingWithId", "vm"];
function vm_manager_hoc_extends() { vm_manager_hoc_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return vm_manager_hoc_extends.apply(this, arguments); }
function vm_manager_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = vm_manager_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function vm_manager_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }









/*
 * Higher Order Component to manage events emitted by the VM
 * @param {React.Component} WrappedComponent component to manage VM events for
 * @returns {React.Component} connected component with vm events bound to redux
 */
const vm_manager_hoc_vmManagerHOC = function vmManagerHOC(WrappedComponent) {
  class VMManager extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['loadProject']);
    }
    componentDidMount() {
      if (!this.props.vm.initialized) {
        window.vm = this.props.vm;
        this.audioEngine = new scratch_audio_src_default.a();
        this.props.vm.attachAudioEngine(this.audioEngine);
        this.props.vm.initialized = true;
        this.props.vm.setLocale(this.props.locale, this.props.messages);
      }
      if (!this.props.isPlayerOnly && !this.props.isStarted) {
        this.props.vm.start();
      }
    }
    componentDidUpdate(prevProps) {
      // if project is in loading state, AND fonts are loaded,
      // and they weren't both that way until now... load project!
      if (this.props.isLoadingWithId && this.props.fontsLoaded && (!prevProps.isLoadingWithId || !prevProps.fontsLoaded)) {
        this.loadProject();
      }
      // Start the VM if entering editor mode with an unstarted vm
      if (!this.props.isPlayerOnly && !this.props.isStarted) {
        this.props.vm.start();
      }
    }
    loadProject() {
      // tw: stop when loading new project
      this.props.vm.stop();
      return this.props.vm.loadProject(this.props.projectData).then(() => {
        this.props.onLoadedProject(this.props.loadingState, this.props.canSave);
        // Wrap in a setTimeout because skin loading in
        // the renderer can be async.
        setTimeout(() => this.props.onSetProjectUnchanged());

        // If the vm is not running, call draw on the renderer manually
        // This draws the state of the loaded project with no blocks running
        // which closely matches the 2.0 behavior, except for monitors–
        // 2.0 runs monitors and shows updates (e.g. timer monitor)
        // before the VM starts running other hat blocks.
        if (!this.props.isStarted) {
          // Wrap in a setTimeout because skin loading in
          // the renderer can be async.
          setTimeout(() => this.props.vm.renderer.draw());
        }
      }).catch(e => {
        this.props.onError(e);
      });
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          fontsLoaded,
          loadingState,
          locale,
          messages,
          isStarted,
          onError: onErrorProp,
          onLoadedProject: onLoadedProjectProp,
          onSetProjectUnchanged,
          projectData,
          /* eslint-enable no-unused-vars */
          isLoadingWithId: isLoadingWithIdProp,
          vm
        } = _this$props,
        componentProps = vm_manager_hoc_objectWithoutProperties(_this$props, vm_manager_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, vm_manager_hoc_extends({
        isLoading: isLoadingWithIdProp,
        vm: vm
      }, componentProps));
    }
  }
  VMManager.propTypes = {
    canSave: prop_types_default.a.bool,
    cloudHost: prop_types_default.a.string,
    fontsLoaded: prop_types_default.a.bool,
    isLoadingWithId: prop_types_default.a.bool,
    isPlayerOnly: prop_types_default.a.bool,
    isStarted: prop_types_default.a.bool,
    loadingState: prop_types_default.a.oneOf(project_state["a" /* LoadingStates */]),
    locale: prop_types_default.a.string,
    messages: prop_types_default.a.objectOf(prop_types_default.a.string),
    onError: prop_types_default.a.func,
    onLoadedProject: prop_types_default.a.func,
    onSetProjectUnchanged: prop_types_default.a.func,
    projectData: prop_types_default.a.oneOfType([prop_types_default.a.object, prop_types_default.a.string]),
    projectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
    username: prop_types_default.a.string,
    vm: prop_types_default.a.instanceOf(src_default.a).isRequired
  };
  const mapStateToProps = state => {
    const loadingState = state.scratchGui.projectState.loadingState;
    return {
      fontsLoaded: state.scratchGui.fontsLoaded,
      isLoadingWithId: Object(project_state["o" /* getIsLoadingWithId */])(loadingState),
      locale: state.locales.locale,
      messages: state.locales.messages,
      projectData: state.scratchGui.projectState.projectData,
      projectId: state.scratchGui.projectState.projectId,
      loadingState: loadingState,
      isPlayerOnly: state.scratchGui.mode.isPlayerOnly,
      isStarted: state.scratchGui.vmStatus.started
    };
  };
  const mapDispatchToProps = dispatch => ({
    onError: error => dispatch(Object(project_state["y" /* projectError */])(error)),
    onLoadedProject: (loadingState, canSave) => dispatch(Object(project_state["x" /* onLoadedProject */])(loadingState, canSave, true)),
    onSetProjectUnchanged: () => dispatch(Object(project_changed["d" /* setProjectUnchanged */])())
  });

  // Allow incoming props to override redux-provided props. Used to mock in tests.
  const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign({}, stateProps, dispatchProps, ownProps);
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps, mergeProps)(VMManager);
};
/* harmony default export */ var vm_manager_hoc = (vm_manager_hoc_vmManagerHOC);
// EXTERNAL MODULE: ./node_modules/lodash.throttle/index.js
var lodash_throttle = __webpack_require__(443);
var lodash_throttle_default = /*#__PURE__*/__webpack_require__.n(lodash_throttle);

// CONCATENATED MODULE: ./src/lib/cloud-provider.js


const anonymizeUsername = username => {
  if (/^player\d{2,7}$/i.test(username)) {
    return 'player';
  }
  return username;
};
class cloud_provider_CloudProvider {
  /**
   * A cloud data provider which creates and manages a web socket connection
   * to the Scratch cloud data server. This provider is responsible for
   * interfacing with the VM's cloud io device.
   * @param {string} cloudHost The url for the cloud data server
   * @param {VirtualMachine} vm The Scratch virtual machine to interface with
   * @param {string} username The username to associate cloud data updates with
   * @param {string} projectId The id associated with the project containing
   * cloud data.
   */
  constructor(cloudHost, vm, username, projectId) {
    this.vm = vm;
    this.username = anonymizeUsername(username);
    this.projectId = projectId;
    this.cloudHost = cloudHost;
    this.connectionAttempts = 0;

    // A queue of messages to send which were received before the
    // connection was ready
    this.queuedData = [];
    this.openConnection();

    // Send a message to the cloud server at a rate of no more
    // than 10 messages/sec.
    // tw: we let cloud variables change at a greater rate
    this.sendCloudData = lodash_throttle_default()(this._sendCloudData, 50);
  }

  /**
   * Open a new websocket connection to the clouddata server.
   * @param {string} cloudHost The cloud data server to connect to.
   */
  openConnection() {
    this.connectionAttempts += 1;
    try {
      // tw: only add ws:// or wss:// if it not already present in the cloudHost
      if (!this.cloudHost || !this.cloudHost.includes('ws://') && !this.cloudHost.includes('wss://')) {
        this.cloudHost = 'wss://' + this.cloudHost;
      }
      this.connection = new WebSocket(this.cloudHost);
    } catch (e) {
      log["default"].warn('Websocket support is not available in this browser', e);
      this.connection = null;
      return;
    }
    this.connection.onerror = this.onError.bind(this);
    this.connection.onmessage = this.onMessage.bind(this);
    this.connection.onopen = this.onOpen.bind(this);
    this.connection.onclose = this.onClose.bind(this);
  }
  onError(event) {
    log["default"].error("Websocket connection error: ".concat(JSON.stringify(event)));
    // Error is always followed by close, which handles reconnect logic.
  }

  onMessage(event) {
    const messageString = event.data;
    // Multiple commands can be received, newline separated
    messageString.split('\n').forEach(message => {
      if (message) {
        // .split can also contain '' in the array it returns
        const parsedData = this.parseMessage(JSON.parse(message));
        this.vm.postIOData('cloud', parsedData);
      }
    });
  }
  onOpen() {
    // Reset connection attempts to 1 to make sure any subsequent reconnects
    // use connectionAttempts=1 to calculate timeout
    this.connectionAttempts = 1;
    this.writeToServer('handshake');
    log["default"].info("Successfully connected to clouddata server.");

    // Go through the queued data and send off messages that we weren't
    // ready to send before
    this.queuedData.forEach(data => {
      this.sendCloudData(data);
    });
    // Reset the queue
    this.queuedData = [];
  }
  onClose(e) {
    // tw: code 4002 is "Username Error" -- do not try to reconnect
    if (e && e.code === 4002) {
      log["default"].info('Cloud username is invalid. Not reconnecting.');
      log["default"].info(this.cloudHost);
      this.onInvalidUsername();
      return;
    }
    // tw: code 4004 is "Project Unavailable" -- do not try to reconnect
    if (e && e.code === 4004) {
      log["default"].info('Cloud variables are disabled for this project. Not reconnecting.');
      return;
    }
    log["default"].info("Closed connection to websocket");
    const randomizedTimeout = this.randomizeDuration(this.exponentialTimeout());
    this.setTimeout(this.openConnection.bind(this), randomizedTimeout);
  }

  // tw: method called when username is invalid
  onInvalidUsername() {/* no-op */}
  exponentialTimeout() {
    return (Math.pow(2, Math.min(this.connectionAttempts, 5)) - 1) * 1000;
  }
  randomizeDuration(t) {
    return Math.random() * t;
  }
  setTimeout(fn, time) {
    log["default"].info("Reconnecting in ".concat((time / 1000).toFixed(1), "s, attempt ").concat(this.connectionAttempts));
    this._connectionTimeout = window.setTimeout(fn, time);
  }
  parseMessage(message) {
    const varData = {};
    switch (message.method) {
      case 'set':
        {
          varData.varUpdate = {
            name: message.name,
            value: message.value
          };
          break;
        }
    }
    return varData;
  }

  /**
   * Format and send a message to the cloud data server.
   * @param {string} methodName The message method, indicating the action to perform.
   * @param {string} dataName The name of the cloud variable this message pertains to
   * @param {string | number} dataValue The value to set the cloud variable to
   * @param {string} dataNewName The new name for the cloud variable (if renaming)
   */
  writeToServer(methodName, dataName, dataValue, dataNewName) {
    const msg = {};
    msg.method = methodName;
    msg.user = this.username;
    msg.project_id = this.projectId;

    // Optional string params can use simple falsey undefined check
    if (dataName) msg.name = dataName;
    if (dataNewName) msg.new_name = dataNewName;

    // Optional number params need different undefined check
    if (typeof dataValue !== 'undefined' && dataValue !== null) msg.value = dataValue;
    const dataToWrite = JSON.stringify(msg);
    if (this.connection && this.connection.readyState === WebSocket.OPEN) {
      this.sendCloudData(dataToWrite);
    } else if (msg.method === 'create' || msg.method === 'delete' || msg.method === 'rename') {
      // Save data for sending when connection is open, iff the data
      // is a create, rename, or  delete
      this.queuedData.push(dataToWrite);
    }
  }

  /**
   * Send a formatted message to the cloud data server.
   * @param {string} data The formatted message to send.
   */
  _sendCloudData(data) {
    this.connection.send("".concat(data, "\n"));
  }

  /**
   * Provides an API for the VM's cloud IO device to create
   * a new cloud variable on the server.
   * @param {string} name The name of the variable to create
   * @param {string | number} value The value of the new cloud variable.
   */
  createVariable(name, value) {
    this.writeToServer('create', name, value);
  }

  /**
   * Provides an API for the VM's cloud IO device to update
   * a cloud variable on the server.
   * @param {string} name The name of the variable to update
   * @param {string | number} value The new value for the variable
   */
  updateVariable(name, value) {
    this.writeToServer('set', name, value);
  }

  /**
   * Provides an API for the VM's cloud IO device to rename
   * a cloud variable on the server.
   * @param {string} oldName The old name of the variable to rename
   * @param {string} newName The new name for the cloud variable.
   */
  renameVariable(oldName, newName) {
    this.writeToServer('rename', oldName, null, newName);
  }

  /**
   * Provides an API for the VM's cloud IO device to delete
   * a cloud variable on the server.
   * @param {string} name The name of the variable to delete
   */
  deleteVariable(name) {
    this.writeToServer('delete', name);
  }

  /**
   * Closes the connection to the web socket and clears the cloud
   * provider of references related to the cloud data project.
   */
  requestCloseConnection() {
    if (this.connection && this.connection.readyState !== WebSocket.CLOSING && this.connection.readyState !== WebSocket.CLOSED) {
      log["default"].info('Request close cloud connection without reconnecting');
      // Remove listeners, after this point we do not want to react to connection updates
      this.connection.onclose = () => {};
      this.connection.onerror = () => {};
      this.connection.close();
    }
    this.clear();
  }

  /**
   * Clear this provider of references related to the project
   * and current state.
   */
  clear() {
    this.connection = null;
    this.vm = null;
    this.username = null;
    this.projectId = null;
    if (this._connectionTimeout) {
      clearTimeout(this._connectionTimeout);
      this._connectionTimeout = null;
    }
    this.connectionAttempts = 0;
  }
}
/* harmony default export */ var cloud_provider = (cloud_provider_CloudProvider);
// CONCATENATED MODULE: ./src/lib/cloud-manager-hoc.jsx
const cloud_manager_hoc_excluded = ["canModifyCloudData", "cloudHost", "projectId", "username", "hasCloudPermission", "isShowingWithId", "onShowCloudInfo", "onInvalidUsername", "vm"];
function cloud_manager_hoc_extends() { cloud_manager_hoc_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return cloud_manager_hoc_extends.apply(this, arguments); }
function cloud_manager_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = cloud_manager_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function cloud_manager_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }











/*
 * Higher Order Component to manage the connection to the cloud server.
 * @param {React.Component} WrappedComponent component to manage VM events for
 * @returns {React.Component} connected component with vm events bound to redux
 */
const cloud_manager_hoc_cloudManagerHOC = function cloudManagerHOC(WrappedComponent) {
  class CloudManager extends react_default.a.Component {
    constructor(props) {
      super(props);
      this.cloudProvider = null;
      lodash_bindall_default()(this, ['handleCloudDataUpdate', 'onInvalidUsername']);
      this.props.vm.on('HAS_CLOUD_DATA_UPDATE', this.handleCloudDataUpdate);
    }
    componentDidMount() {
      if (this.shouldConnect(this.props)) {
        this.connectToCloud();
      }
    }
    componentDidUpdate(prevProps) {
      // TODO need to add cloud provider disconnection logic and cloud data clearing logic
      // when loading a new project e.g. via file upload
      // (and eventually move it out of the vm.clear function)

      // tw: handle cases where we should explicitly close and reconnect() in the same update
      if (this.shouldReconnect(this.props, prevProps)) {
        this.disconnectFromCloud();
        if (this.shouldConnect(this.props)) {
          this.connectToCloud();
        }
        return;
      }
      if (this.shouldConnect(this.props) && !this.shouldConnect(prevProps)) {
        this.connectToCloud();
      }
      if (this.shouldDisconnect(this.props, prevProps)) {
        this.disconnectFromCloud();
      }
    }
    componentWillUnmount() {
      this.disconnectFromCloud();
    }
    canUseCloud(props) {
      return !!(props.cloudHost && props.username && props.vm && props.projectId && props.hasCloudPermission);
    }
    shouldConnect(props) {
      return !this.isConnected() && this.canUseCloud(props) && props.isShowingWithId && props.vm.runtime.hasCloudData() && props.canModifyCloudData;
    }
    shouldDisconnect(props, prevProps) {
      return this.isConnected() && (
      // Can no longer use cloud or cloud provider info is now stale
      !this.canUseCloud(props) || !props.vm.runtime.hasCloudData() || props.projectId !== prevProps.projectId ||
      // tw: username changes are handled in "reconnect"
      // (props.username !== prevProps.username) ||
      // Editing someone else's project
      !props.canModifyCloudData);
    }
    // tw: handle cases where we should explicitly close and reconnect() in the same update
    shouldReconnect(props, prevProps) {
      // reconnect when username changes
      return this.isConnected() && props.username !== prevProps.username;
    }
    isConnected() {
      return this.cloudProvider && !!this.cloudProvider.connection;
    }
    connectToCloud() {
      this.cloudProvider = new cloud_provider(this.props.cloudHost, this.props.vm, this.props.username, this.props.projectId);
      this.cloudProvider.onInvalidUsername = this.onInvalidUsername;
      this.props.vm.setCloudProvider(this.cloudProvider);
    }
    disconnectFromCloud() {
      if (this.cloudProvider) {
        this.cloudProvider.requestCloseConnection();
        this.cloudProvider = null;
        this.props.vm.setCloudProvider(null);
      }
    }
    handleCloudDataUpdate(projectHasCloudData) {
      if (this.isConnected() && !projectHasCloudData) {
        this.disconnectFromCloud();
      } else if (this.shouldConnect(this.props)) {
        this.props.onShowCloudInfo();
        this.connectToCloud();
      }
    }
    onInvalidUsername() {
      this.props.onInvalidUsername();
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          canModifyCloudData,
          cloudHost,
          projectId,
          username,
          hasCloudPermission,
          isShowingWithId,
          onShowCloudInfo,
          onInvalidUsername,
          /* eslint-enable no-unused-vars */
          vm
        } = _this$props,
        componentProps = cloud_manager_hoc_objectWithoutProperties(_this$props, cloud_manager_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, cloud_manager_hoc_extends({
        canUseCloud: this.canUseCloud(this.props),
        vm: vm
      }, componentProps));
    }
  }
  CloudManager.propTypes = {
    canModifyCloudData: prop_types_default.a.bool.isRequired,
    cloudHost: prop_types_default.a.string,
    hasCloudPermission: prop_types_default.a.bool,
    isShowingWithId: prop_types_default.a.bool.isRequired,
    onInvalidUsername: prop_types_default.a.func,
    onShowCloudInfo: prop_types_default.a.func,
    projectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
    username: prop_types_default.a.string,
    vm: prop_types_default.a.instanceOf(src_default.a).isRequired
  };
  CloudManager.defaultProps = {
    cloudHost: "gm2-cloud.glitch.me",
    onShowCloudInfo: () => {},
    username: null
  };
  const mapStateToProps = (state, ownProps) => {
    const loadingState = state.scratchGui.projectState.loadingState;
    return {
      isShowingWithId: Object(project_state["s" /* getIsShowingWithId */])(loadingState),
      projectId: 975775,
      hasCloudPermission: true,
      username: state.scratchGui.tw ? state.scratchGui.tw.username : '',
      canModifyCloudData: true
    };
  };
  const mapDispatchToProps = dispatch => ({
    onShowCloudInfo: () => Object(alerts["g" /* showAlertWithTimeout */])(dispatch, 'cloudInfo'),
    onInvalidUsername: () => {
      dispatch(Object(tw["setUsernameInvalid"])(true));
      dispatch(Object(modals["B" /* openUsernameModal */])());
    }
  });

  // Allow incoming props to override redux-provided props. Used to mock in tests.
  const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign({}, stateProps, dispatchProps, ownProps);
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps, mergeProps)(CloudManager);
};
/* harmony default export */ var cloud_manager_hoc = (cloud_manager_hoc_cloudManagerHOC);
// CONCATENATED MODULE: ./src/lib/tw-fullscreen-resizer-hoc.jsx
const tw_fullscreen_resizer_hoc_excluded = ["onSetDimensions", "isFullScreen"];
function tw_fullscreen_resizer_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = tw_fullscreen_resizer_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function tw_fullscreen_resizer_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const tw_fullscreen_resizer_hoc_TWFullScreenResizerHOC = function TWFullScreenResizerHOC(WrappedComponent) {
  class FullScreenResizer extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['handleResize']);
    }
    componentDidMount() {
      window.addEventListener('resize', this.handleResize);
    }
    componentWillUnmount() {
      window.removeEventListener('resize', this.handleResize);
    }
    handleResize() {
      if (this.props.isFullScreen) {
        this.props.onSetDimensions([window.innerWidth, window.innerHeight]);
      }
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          onSetDimensions,
          isFullScreen
          /* eslint-enable no-unused-vars */
        } = _this$props,
        props = tw_fullscreen_resizer_hoc_objectWithoutProperties(_this$props, tw_fullscreen_resizer_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, props);
    }
  }
  FullScreenResizer.propTypes = {
    isFullScreen: prop_types_default.a.bool,
    onSetDimensions: prop_types_default.a.func
  };
  const mapStateToProps = state => ({
    isFullScreen: state.scratchGui.mode.isFullScreen || state.scratchGui.mode.isEmbedded
  });
  const mapDispatchToProps = dispatch => ({
    onSetDimensions: dimensions => dispatch(Object(tw["setDimensions"])(dimensions))
  });
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(FullScreenResizer);
};

// EXTERNAL MODULE: ./src/lib/tw-restore-point-api.js
var tw_restore_point_api = __webpack_require__(347);

// CONCATENATED MODULE: ./src/lib/tw-restore-point-hoc.jsx
const tw_restore_point_hoc_excluded = ["projectChanged", "onAutosavingStart", "onAutosavingFinish", "vm"];
function tw_restore_point_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = tw_restore_point_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function tw_restore_point_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }









/**
 * @fileoverview
 * HOC responsible for automatically creating restore points.
 */

const INTERVAL = 1000 * 60 * 5;
let bailed = false;
const tw_restore_point_hoc_TWRestorePointHOC = function TWRestorePointHOC(WrappedComponent) {
  class RestorePointComponent extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['createRestorePoint']);
      this.timeout = null;
    }
    componentDidUpdate(prevProps) {
      if (bailed) {
        return;
      }
      if (this.props.projectChanged !== prevProps.projectChanged || this.props.isShowingProject !== prevProps.isShowingProject) {
        if (this.props.projectChanged && this.props.isShowingProject) {
          // Project was modified; queue restore point.
          this.timeout = setTimeout(this.createRestorePoint, INTERVAL);
        } else {
          // Project was saved; abort restore point.
          clearTimeout(this.timeout);
          this.timeout = null;
        }
      }
    }
    componentWillUnmount() {
      clearTimeout(this.timeout);
    }
    async createRestorePoint() {
      try {
        this.props.onAutosavingStart();
        await tw_restore_point_api["a" /* default */].save(this.props.vm);
      } catch (error) {
        bailed = true;
      }
      this.timeout = null;
      // Intentional delay.
      setTimeout(() => {
        this.props.onAutosavingFinish();
        if (this.timeout === null && !bailed && this.props.projectChanged && this.props.isShowingProject) {
          this.timeout = setTimeout(this.createRestorePoint, INTERVAL);
        }
      }, 250);
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          projectChanged,
          onAutosavingStart,
          onAutosavingFinish,
          vm
          /* eslint-enable no-unused-vars */
        } = _this$props,
        props = tw_restore_point_hoc_objectWithoutProperties(_this$props, tw_restore_point_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, props);
    }
  }
  RestorePointComponent.propTypes = {
    isShowingProject: prop_types_default.a.bool,
    projectChanged: prop_types_default.a.bool,
    onAutosavingStart: prop_types_default.a.func,
    onAutosavingFinish: prop_types_default.a.func,
    vm: prop_types_default.a.instanceOf(src_default.a)
  };
  const mapStateToProps = state => ({
    isShowingProject: Object(project_state["r" /* getIsShowingProject */])(state.scratchGui.projectState.loadingState),
    projectChanged: state.scratchGui.projectChanged,
    vm: state.scratchGui.vm
  });
  const mapDispatchToProps = dispatch => ({
    onAutosavingStart: () => dispatch(Object(alerts["i" /* showStandardAlert */])('twAutosaving')),
    onAutosavingFinish: () => dispatch(Object(alerts["c" /* closeAlertWithId */])('twAutosaving'))
  });
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(RestorePointComponent);
};

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(4);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/react-responsive/dist/react-responsive.js
var react_responsive = __webpack_require__(196);
var react_responsive_default = /*#__PURE__*/__webpack_require__.n(react_responsive);

// EXTERNAL MODULE: ./node_modules/react-tabs/esm/index.js + 10 modules
var esm = __webpack_require__(146);

// EXTERNAL MODULE: ./node_modules/react-tabs/style/react-tabs.css
var react_tabs = __webpack_require__(231);
var react_tabs_default = /*#__PURE__*/__webpack_require__.n(react_tabs);

// EXTERNAL MODULE: ./node_modules/scratch-render/src/index.js
var scratch_render_src = __webpack_require__(280);
var scratch_render_src_default = /*#__PURE__*/__webpack_require__.n(scratch_render_src);

// EXTERNAL MODULE: ./node_modules/lodash.debounce/index.js
var lodash_debounce = __webpack_require__(444);
var lodash_debounce_default = /*#__PURE__*/__webpack_require__.n(lodash_debounce);

// EXTERNAL MODULE: ./node_modules/lodash.defaultsdeep/index.js
var lodash_defaultsdeep = __webpack_require__(348);
var lodash_defaultsdeep_default = /*#__PURE__*/__webpack_require__.n(lodash_defaultsdeep);

// EXTERNAL MODULE: ./src/lib/make-toolbox-xml.js
var make_toolbox_xml = __webpack_require__(334);

// EXTERNAL MODULE: ./src/lib/tw-lazy-scratch-blocks.js
var tw_lazy_scratch_blocks = __webpack_require__(109);

// CONCATENATED MODULE: ./src/lib/blocks.js


/**
 * Connect scratch blocks with the vm
 * @param {VirtualMachine} vm - The scratch vm
 * @return {ScratchBlocks} ScratchBlocks connected with the vm
 */
/* harmony default export */ var lib_blocks = (function (vm) {
  const ScratchBlocks = tw_lazy_scratch_blocks["a" /* default */].get();
  const jsonForMenuBlock = function jsonForMenuBlock(name, menuOptionsFn, colors, start) {
    return {
      message0: '%1',
      args0: [{
        type: 'field_dropdown',
        name: name,
        options: function options() {
          return start.concat(menuOptionsFn());
        }
      }],
      inputsInline: true,
      output: 'String',
      colour: colors.secondary,
      colourSecondary: colors.secondary,
      colourTertiary: colors.tertiary,
      outputShape: ScratchBlocks.OUTPUT_SHAPE_ROUND
    };
  };
  const jsonForHatBlockMenu = function jsonForHatBlockMenu(hatName, name, menuOptionsFn, colors, start) {
    return {
      message0: hatName,
      args0: [{
        type: 'field_dropdown',
        name: name,
        options: function options() {
          return start.concat(menuOptionsFn());
        }
      }],
      colour: colors.primary,
      colourSecondary: colors.secondary,
      colourTertiary: colors.tertiary,
      extensions: ['shape_hat']
    };
  };
  const jsonForSensingMenus = function jsonForSensingMenus(menuOptionsFn) {
    return {
      message0: ScratchBlocks.Msg.SENSING_OF,
      args0: [{
        type: 'field_dropdown',
        name: 'PROPERTY',
        options: function options() {
          return menuOptionsFn();
        }
      }, {
        type: 'input_value',
        name: 'OBJECT'
      }],
      output: true,
      colour: ScratchBlocks.Colours.sensing.primary,
      colourSecondary: ScratchBlocks.Colours.sensing.secondary,
      colourTertiary: ScratchBlocks.Colours.sensing.tertiary,
      outputShape: ScratchBlocks.OUTPUT_SHAPE_ROUND
    };
  };
  const soundsMenu = function soundsMenu() {
    let menu = [['', '']];
    if (vm.editingTarget && vm.editingTarget.sprite.sounds.length > 0) {
      menu = vm.editingTarget.sprite.sounds.map(sound => [sound.name, sound.name]);
    }
    menu.push([ScratchBlocks.ScratchMsgs.translate('SOUND_RECORD', 'record...'), ScratchBlocks.recordSoundCallback]);
    return menu;
  };
  const costumesMenu = function costumesMenu() {
    if (vm.editingTarget && vm.editingTarget.getCostumes().length > 0) {
      return vm.editingTarget.getCostumes().map(costume => [costume.name, costume.name]);
    }
    return [['', '']];
  };
  const backdropsMenu = function backdropsMenu() {
    const next = ScratchBlocks.ScratchMsgs.translate('LOOKS_NEXTBACKDROP', 'next backdrop');
    const previous = ScratchBlocks.ScratchMsgs.translate('LOOKS_PREVIOUSBACKDROP', 'previous backdrop');
    const random = ScratchBlocks.ScratchMsgs.translate('LOOKS_RANDOMBACKDROP', 'random backdrop');
    if (vm.runtime.targets[0] && vm.runtime.targets[0].getCostumes().length > 0) {
      return vm.runtime.targets[0].getCostumes().map(costume => [costume.name, costume.name]).concat([[next, 'next backdrop'], [previous, 'previous backdrop'], [random, 'random backdrop']]);
    }
    return [['', '']];
  };
  const backdropNamesMenu = function backdropNamesMenu() {
    const stage = vm.runtime.getTargetForStage();
    if (stage && stage.getCostumes().length > 0) {
      return stage.getCostumes().map(costume => [costume.name, costume.name]);
    }
    return [['', '']];
  };
  const spriteMenu = function spriteMenu() {
    const sprites = [];
    for (const targetId in vm.runtime.targets) {
      if (!vm.runtime.targets.hasOwnProperty(targetId)) continue;
      if (vm.runtime.targets[targetId].isOriginal) {
        if (!vm.runtime.targets[targetId].isStage) {
          if (vm.runtime.targets[targetId] === vm.editingTarget) {
            continue;
          }
          sprites.push([vm.runtime.targets[targetId].sprite.name, vm.runtime.targets[targetId].sprite.name]);
        }
      }
    }
    return sprites;
  };
  const cloneMenu = function cloneMenu() {
    if (vm.editingTarget && vm.editingTarget.isStage) {
      const menu = spriteMenu();
      if (menu.length === 0) {
        return [['', '']]; // Empty menu matches Scratch 2 behavior
      }

      return menu;
    }
    const myself = ScratchBlocks.ScratchMsgs.translate('CONTROL_CREATECLONEOF_MYSELF', 'myself');
    return [[myself, '_myself_']].concat(spriteMenu());
  };
  const soundColors = ScratchBlocks.Colours.sounds;
  const looksColors = ScratchBlocks.Colours.looks;
  const motionColors = ScratchBlocks.Colours.motion;
  const sensingColors = ScratchBlocks.Colours.sensing;
  const controlColors = ScratchBlocks.Colours.control;
  const eventColors = ScratchBlocks.Colours.event;
  ScratchBlocks.Blocks.sound_sounds_menu.init = function () {
    const json = jsonForMenuBlock('SOUND_MENU', soundsMenu, soundColors, []);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.looks_costume.init = function () {
    const json = jsonForMenuBlock('COSTUME', costumesMenu, looksColors, []);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.looks_backdrops.init = function () {
    const json = jsonForMenuBlock('BACKDROP', backdropsMenu, looksColors, []);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.event_whenbackdropswitchesto.init = function () {
    const json = jsonForHatBlockMenu(ScratchBlocks.Msg.EVENT_WHENBACKDROPSWITCHESTO, 'BACKDROP', backdropNamesMenu, eventColors, []);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.motion_pointtowards_menu.init = function () {
    const mouse = ScratchBlocks.ScratchMsgs.translate('MOTION_POINTTOWARDS_POINTER', 'mouse-pointer');
    const json = jsonForMenuBlock('TOWARDS', spriteMenu, motionColors, [[mouse, '_mouse_']]);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.motion_goto_menu.init = function () {
    const random = ScratchBlocks.ScratchMsgs.translate('MOTION_GOTO_RANDOM', 'random position');
    const mouse = ScratchBlocks.ScratchMsgs.translate('MOTION_GOTO_POINTER', 'mouse-pointer');
    const json = jsonForMenuBlock('TO', spriteMenu, motionColors, [[random, '_random_'], [mouse, '_mouse_']]);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.motion_glideto_menu.init = function () {
    const random = ScratchBlocks.ScratchMsgs.translate('MOTION_GLIDETO_RANDOM', 'random position');
    const mouse = ScratchBlocks.ScratchMsgs.translate('MOTION_GLIDETO_POINTER', 'mouse-pointer');
    const json = jsonForMenuBlock('TO', spriteMenu, motionColors, [[random, '_random_'], [mouse, '_mouse_']]);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.sensing_of_object_menu.init = function () {
    const stage = ScratchBlocks.ScratchMsgs.translate('SENSING_OF_STAGE', 'Stage');
    const json = jsonForMenuBlock('OBJECT', spriteMenu, sensingColors, [[stage, '_stage_']]);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.sensing_of.init = function () {
    const blockId = this.id;
    const blockType = this.type;

    // Get the sensing_of block from vm.
    let defaultSensingOfBlock;
    const blocks = vm.runtime.flyoutBlocks._blocks;
    Object.keys(blocks).forEach(id => {
      const block = blocks[id];
      if (id === blockType || block && block.opcode === blockType) {
        defaultSensingOfBlock = block;
      }
    });

    // Function that fills in menu for the first input in the sensing block.
    // Called every time it opens since it depends on the values in the other block input.
    const menuFn = function menuFn() {
      const stageOptions = [[ScratchBlocks.Msg.SENSING_OF_BACKDROPNUMBER, 'backdrop #'], [ScratchBlocks.Msg.SENSING_OF_BACKDROPNAME, 'backdrop name'], [ScratchBlocks.Msg.SENSING_OF_VOLUME, 'volume']];
      const spriteOptions = [[ScratchBlocks.Msg.SENSING_OF_XPOSITION, 'x position'], [ScratchBlocks.Msg.SENSING_OF_YPOSITION, 'y position'], [ScratchBlocks.Msg.SENSING_OF_DIRECTION, 'direction'], [ScratchBlocks.Msg.SENSING_OF_COSTUMENUMBER, 'costume #'], [ScratchBlocks.Msg.SENSING_OF_COSTUMENAME, 'costume name'], [ScratchBlocks.Msg.SENSING_OF_SIZE, 'size'], [ScratchBlocks.Msg.SENSING_OF_VOLUME, 'volume']];
      if (vm.editingTarget) {
        let lookupBlocks = vm.editingTarget.blocks;
        let sensingOfBlock = lookupBlocks.getBlock(blockId);

        // The block doesn't exist, but should be in the flyout. Look there.
        if (!sensingOfBlock) {
          sensingOfBlock = vm.runtime.flyoutBlocks.getBlock(blockId) || defaultSensingOfBlock;
          // If we still don't have a block, just return an empty list . This happens during
          // scratch blocks construction.
          if (!sensingOfBlock) {
            return [['', '']];
          }
          // The block was in the flyout so look up future block info there.
          lookupBlocks = vm.runtime.flyoutBlocks;
        }
        const sort = function sort(options) {
          options.sort(ScratchBlocks.scratchBlocksUtils.compareStrings);
        };
        // Get all the stage variables (no lists) so we can add them to menu when the stage is selected.
        const stageVariableOptions = vm.runtime.getTargetForStage().getAllVariableNamesInScopeByType('');
        sort(stageVariableOptions);
        const stageVariableMenuItems = stageVariableOptions.map(variable => [variable, variable]);
        if (sensingOfBlock.inputs.OBJECT.shadow !== sensingOfBlock.inputs.OBJECT.block) {
          // There's a block dropped on top of the menu. It'd be nice to evaluate it and
          // return the correct list, but that is tricky. Scratch2 just returns stage options
          // so just do that here too.
          return stageOptions.concat(stageVariableMenuItems);
        }
        const menuBlock = lookupBlocks.getBlock(sensingOfBlock.inputs.OBJECT.shadow);
        const selectedItem = menuBlock.fields.OBJECT.value;
        if (selectedItem === '_stage_') {
          return stageOptions.concat(stageVariableMenuItems);
        }
        // Get all the local variables (no lists) and add them to the menu.
        const target = vm.runtime.getSpriteTargetByName(selectedItem);
        let spriteVariableOptions = [];
        // The target should exist, but there are ways for it not to (e.g. #4203).
        if (target) {
          spriteVariableOptions = target.getAllVariableNamesInScopeByType('', true);
          sort(spriteVariableOptions);
        }
        const spriteVariableMenuItems = spriteVariableOptions.map(variable => [variable, variable]);
        return spriteOptions.concat(spriteVariableMenuItems);
      }
      return [['', '']];
    };
    const json = jsonForSensingMenus(menuFn);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.sensing_distancetomenu.init = function () {
    const mouse = ScratchBlocks.ScratchMsgs.translate('SENSING_DISTANCETO_POINTER', 'mouse-pointer');
    const json = jsonForMenuBlock('DISTANCETOMENU', spriteMenu, sensingColors, [[mouse, '_mouse_']]);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.sensing_touchingobjectmenu.init = function () {
    const mouse = ScratchBlocks.ScratchMsgs.translate('SENSING_TOUCHINGOBJECT_POINTER', 'mouse-pointer');
    const edge = ScratchBlocks.ScratchMsgs.translate('SENSING_TOUCHINGOBJECT_EDGE', 'edge');
    const json = jsonForMenuBlock('TOUCHINGOBJECTMENU', spriteMenu, sensingColors, [[mouse, '_mouse_'], [edge, '_edge_']]);
    this.jsonInit(json);
  };
  ScratchBlocks.Blocks.control_create_clone_of_menu.init = function () {
    const json = jsonForMenuBlock('CLONE_OPTION', cloneMenu, controlColors, []);
    this.jsonInit(json);
  };
  ScratchBlocks.VerticalFlyout.getCheckboxState = function (blockId) {
    const monitoredBlock = vm.runtime.monitorBlocks._blocks[blockId];
    return monitoredBlock ? monitoredBlock.isMonitored : false;
  };
  ScratchBlocks.FlyoutExtensionCategoryHeader.getExtensionState = function (extensionId) {
    if (vm.getPeripheralIsConnected(extensionId)) {
      return ScratchBlocks.StatusButtonState.READY;
    }
    return ScratchBlocks.StatusButtonState.NOT_READY;
  };
  ScratchBlocks.FieldNote.playNote_ = function (noteNum, extensionId) {
    vm.runtime.emit('PLAY_NOTE', noteNum, extensionId);
  };

  // Use a collator's compare instead of localeCompare which internally
  // creates a collator. Using this is a lot faster in browsers that create a
  // collator for every localeCompare call.
  const collator = new Intl.Collator([], {
    sensitivity: 'base',
    numeric: true
  });
  ScratchBlocks.scratchBlocksUtils.compareStrings = function (str1, str2) {
    return collator.compare(str1, str2);
  };

  // Blocks wants to know if 3D CSS transforms are supported. The cross
  // section of browsers Scratch supports and browsers that support 3D CSS
  // transforms will make the return always true.
  //
  // Shortcutting to true lets us skip an expensive style recalculation when
  // first loading the Scratch editor.
  ScratchBlocks.utils.is3dSupported = function () {
    return true;
  };
  return ScratchBlocks;
});
// EXTERNAL MODULE: ./src/components/box/box.jsx
var box = __webpack_require__(7);

// EXTERNAL MODULE: ./src/components/button/button.jsx
var button_button = __webpack_require__(56);

// EXTERNAL MODULE: ./src/components/close-button/close-button.css
var close_button = __webpack_require__(179);
var close_button_default = /*#__PURE__*/__webpack_require__.n(close_button);

// EXTERNAL MODULE: ./src/components/close-button/icon--close.svg
var icon_close = __webpack_require__(166);
var icon_close_default = /*#__PURE__*/__webpack_require__.n(icon_close);

// EXTERNAL MODULE: ./src/components/close-button/icon--close-orange.svg
var icon_close_orange = __webpack_require__(788);
var icon_close_orange_default = /*#__PURE__*/__webpack_require__.n(icon_close_orange);

// EXTERNAL MODULE: ./src/lib/assets/icon--back.svg
var icon_back = __webpack_require__(349);
var icon_back_default = /*#__PURE__*/__webpack_require__.n(icon_back);

// CONCATENATED MODULE: ./src/components/close-button/close-button.jsx







let closeIcons = {};
const CloseButton = props => /*#__PURE__*/react_default.a.createElement("div", {
  "aria-label": "Close",
  className: classnames_default()(close_button_default.a.closeButton, props.className, {
    [close_button_default.a.small]: props.size === CloseButton.SIZE_SMALL,
    [close_button_default.a.large]: props.size === CloseButton.SIZE_LARGE,
    [close_button_default.a.orange]: props.color === CloseButton.COLOR_ORANGE
  }),
  role: "button",
  tabIndex: "0",
  onClick: props.onClick
}, props.buttonType === 'back' ? /*#__PURE__*/react_default.a.createElement("img", {
  className: close_button_default.a.backIcon,
  src: icon_back_default.a
}) : /*#__PURE__*/react_default.a.createElement("img", {
  className: classnames_default()(close_button_default.a.closeIcon, {
    [close_button_default.a[props.color]]: props.color !== CloseButton.COLOR_NEUTRAL
  }),
  src: props.color && closeIcons[props.color] ? closeIcons[props.color] : icon_close_default.a
}));
CloseButton.SIZE_SMALL = 'small';
CloseButton.SIZE_LARGE = 'large';
CloseButton.COLOR_NEUTRAL = 'neutral';
CloseButton.COLOR_GREEN = 'green';
CloseButton.COLOR_ORANGE = 'orange';
closeIcons = {
  [CloseButton.COLOR_NEUTRAL]: icon_close_default.a,
  [CloseButton.COLOR_GREEN]: icon_close_default.a,
  // TODO: temporary, need green icon
  [CloseButton.COLOR_ORANGE]: icon_close_orange_default.a
};
CloseButton.propTypes = {
  buttonType: prop_types_default.a.oneOf(['back', 'close']),
  className: prop_types_default.a.string,
  color: prop_types_default.a.string,
  onClick: prop_types_default.a.func.isRequired,
  size: prop_types_default.a.oneOf([CloseButton.SIZE_SMALL, CloseButton.SIZE_LARGE])
};
CloseButton.defaultProps = {
  color: CloseButton.COLOR_NEUTRAL,
  size: CloseButton.SIZE_LARGE,
  buttonType: 'close'
};
/* harmony default export */ var close_button_close_button = (CloseButton);
// EXTERNAL MODULE: ./src/lib/assets/icon--help.svg
var icon_help = __webpack_require__(789);
var icon_help_default = /*#__PURE__*/__webpack_require__.n(icon_help);

// EXTERNAL MODULE: ./src/components/modal/modal.css
var modal = __webpack_require__(98);
var modal_default = /*#__PURE__*/__webpack_require__.n(modal);

// CONCATENATED MODULE: ./src/components/modal/modal.jsx











const ModalComponent = props => /*#__PURE__*/react_default.a.createElement(lib_default.a, {
  isOpen: true,
  className: classnames_default()(modal_default.a.modalContent, props.className, {
    [modal_default.a.fullScreen]: props.fullScreen
  }),
  contentLabel: props.contentLabel,
  overlayClassName: modal_default.a.modalOverlay,
  onRequestClose: props.onRequestClose
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  dir: props.isRtl ? 'rtl' : 'ltr',
  direction: "column",
  grow: 1
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(modal_default.a.header, props.headerClassName)
}, props.onHelp ? /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(modal_default.a.headerItem, modal_default.a.headerItemHelp)
}, /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
  className: modal_default.a.helpButton,
  iconSrc: icon_help_default.a,
  onClick: props.onHelp
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Help",
  id: "gui.modal.help"
}))) : null, /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(modal_default.a.headerItem, modal_default.a.headerItemTitle)
}, props.headerImage ? /*#__PURE__*/react_default.a.createElement("img", {
  className: modal_default.a.headerImage,
  src: props.headerImage
}) : null, props.contentLabel), /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(modal_default.a.headerItem, modal_default.a.headerItemClose)
}, props.fullScreen ? /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
  className: modal_default.a.backButton,
  iconSrc: icon_back_default.a,
  onClick: props.onRequestClose
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Back",
  id: "gui.modal.back"
})) : /*#__PURE__*/react_default.a.createElement(close_button_close_button, {
  size: close_button_close_button.SIZE_LARGE,
  onClick: props.onRequestClose
}))), props.children));
ModalComponent.propTypes = {
  children: prop_types_default.a.node,
  className: prop_types_default.a.string,
  contentLabel: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.object]).isRequired,
  fullScreen: prop_types_default.a.bool,
  headerClassName: prop_types_default.a.string,
  headerImage: prop_types_default.a.string,
  isRtl: prop_types_default.a.bool,
  onHelp: prop_types_default.a.func,
  onRequestClose: prop_types_default.a.func
};
/* harmony default export */ var modal_modal = (ModalComponent);
// CONCATENATED MODULE: ./src/containers/modal.jsx





class modal_Modal extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['addEventListeners', 'removeEventListeners', 'handlePopState', 'pushHistory']);
    this.addEventListeners();
  }
  componentDidMount() {
    // Add a history event only if it's not currently for our modal. This
    // avoids polluting the history with many entries. We only need one.
    this.pushHistory(this.id, history.state === null || history.state !== this.id);
  }
  componentWillUnmount() {
    this.removeEventListeners();
  }
  addEventListeners() {
    window.addEventListener('popstate', this.handlePopState);
  }
  removeEventListeners() {
    window.removeEventListener('popstate', this.handlePopState);
  }
  handlePopState() {
    // Whenever someone navigates, we want to be closed
    this.props.onRequestClose();
  }
  get id() {
    return "modal-".concat(this.props.id);
  }
  pushHistory(state, push) {
    if (push) return history.pushState(state, this.id, null);
    history.replaceState(state, this.id, null);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(modal_modal, this.props);
  }
}
modal_Modal.propTypes = {
  id: prop_types_default.a.string.isRequired,
  isRtl: prop_types_default.a.bool,
  onRequestClose: prop_types_default.a.func,
  onRequestOpen: prop_types_default.a.func
};
const modal_mapStateToProps = state => ({
  isRtl: state.locales.isRtl
});
/* harmony default export */ var containers_modal = (Object(react_redux_es["b" /* connect */])(modal_mapStateToProps)(modal_Modal));
// EXTERNAL MODULE: ./src/components/prompt/prompt.css
var prompt_prompt = __webpack_require__(99);
var prompt_default = /*#__PURE__*/__webpack_require__.n(prompt_prompt);

// CONCATENATED MODULE: ./src/components/prompt/prompt.jsx







const prompt_messages = Object(index_es["d" /* defineMessages */])({
  forAllSpritesMessage: {
    "id": "gui.gui.variableScopeOptionAllSprites",
    "defaultMessage": "For all sprites"
  },
  forThisSpriteMessage: {
    "id": "gui.gui.variableScopeOptionSpriteOnly",
    "defaultMessage": "For this sprite only"
  },
  cloudVarOptionMessage: {
    "id": "gui.gui.cloudVariableOption",
    "defaultMessage": "Cloud variable (stored on server)"
  },
  availableToAllSpritesMessage: {
    "id": "gui.gui.variablePromptAllSpritesMessage",
    "defaultMessage": "This variable will be available to all sprites."
  },
  listAvailableToAllSpritesMessage: {
    "id": "gui.gui.listPromptAllSpritesMessage",
    "defaultMessage": "This list will be available to all sprites."
  }
});
const PromptComponent = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: prompt_default.a.modalContent,
  contentLabel: props.title,
  onRequestClose: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: prompt_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: prompt_default.a.label
}, props.label), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], null, /*#__PURE__*/react_default.a.createElement("input", {
  autoFocus: true,
  className: prompt_default.a.variableNameTextInput,
  defaultValue: props.defaultValue,
  name: props.label,
  onChange: props.onChange,
  onFocus: props.onFocus,
  onKeyPress: props.onKeyPress
})), props.showVariableOptions ? /*#__PURE__*/react_default.a.createElement("div", null, props.isStage ? /*#__PURE__*/react_default.a.createElement("div", {
  className: prompt_default.a.infoMessage
}, props.showListMessage ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], prompt_messages.listAvailableToAllSpritesMessage) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], prompt_messages.availableToAllSpritesMessage)) : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: prompt_default.a.optionsRow
}, /*#__PURE__*/react_default.a.createElement("label", null, /*#__PURE__*/react_default.a.createElement("input", {
  checked: props.globalSelected,
  name: "variableScopeOption",
  type: "radio",
  value: "global",
  onChange: props.onScopeOptionSelection
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], prompt_messages.forAllSpritesMessage)), /*#__PURE__*/react_default.a.createElement("label", {
  className: classnames_default()({
    [prompt_default.a.disabledLabel]: props.cloudSelected
  })
}, /*#__PURE__*/react_default.a.createElement("input", {
  checked: !props.globalSelected,
  disabled: props.cloudSelected,
  name: "variableScopeOption",
  type: "radio",
  value: "local",
  onChange: props.onScopeOptionSelection
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], prompt_messages.forThisSpriteMessage))), props.showCloudOption ? /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(prompt_default.a.cloudOption)
}, /*#__PURE__*/react_default.a.createElement("label", {
  className: classnames_default()({
    [prompt_default.a.disabledLabel]: !props.canAddCloudVariable
  })
}, /*#__PURE__*/react_default.a.createElement("input", {
  checked: props.cloudSelected && props.canAddCloudVariable,
  disabled: !props.canAddCloudVariable,
  type: "checkbox",
  onChange: props.onCloudVarOptionChange
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], prompt_messages.cloudVarOptionMessage))) : null) : null, props.cloudSelected && props.canAddCloudVariable && /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: prompt_default.a.infoMessage
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
/* eslint-disable-next-line max-len */, {
  defaultMessage: "Although you can create cloud variables, they won't work unless this project is uploaded to Scratch or using a tool such as the {packager}.",
  values: {
    packager: /*#__PURE__*/react_default.a.createElement("a", {
      href: "https://packager.turbowarp.org",
      target: "_blank",
      rel: "noopener noreferrer"
    }, 'TurboWarp Packager')
  },
  id: "tw.cantUseCloud"
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: prompt_default.a.buttonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: prompt_default.a.cancelButton,
  onClick: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Cancel",
  id: "gui.prompt.cancel"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: prompt_default.a.okButton,
  onClick: props.onOk
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "OK",
  id: "gui.prompt.ok"
})))));
PromptComponent.propTypes = {
  canAddCloudVariable: prop_types_default.a.bool.isRequired,
  cloudSelected: prop_types_default.a.bool.isRequired,
  defaultValue: prop_types_default.a.string,
  globalSelected: prop_types_default.a.bool.isRequired,
  isStage: prop_types_default.a.bool.isRequired,
  showListMessage: prop_types_default.a.bool.isRequired,
  label: prop_types_default.a.string.isRequired,
  onCancel: prop_types_default.a.func.isRequired,
  onChange: prop_types_default.a.func.isRequired,
  onCloudVarOptionChange: prop_types_default.a.func,
  onFocus: prop_types_default.a.func.isRequired,
  onKeyPress: prop_types_default.a.func.isRequired,
  onOk: prop_types_default.a.func.isRequired,
  onScopeOptionSelection: prop_types_default.a.func.isRequired,
  showCloudOption: prop_types_default.a.bool.isRequired,
  showVariableOptions: prop_types_default.a.bool.isRequired,
  title: prop_types_default.a.string.isRequired
};
/* harmony default export */ var components_prompt_prompt = (PromptComponent);
// CONCATENATED MODULE: ./src/containers/prompt.jsx





class prompt_Prompt extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleOk', 'handleScopeOptionSelection', 'handleCancel', 'handleChange', 'handleKeyPress', 'handleCloudVariableOptionChange']);
    this.state = {
      inputValue: '',
      globalSelected: true,
      cloudSelected: false,
      canAddCloudVariable: props.vm && props.vm.runtime.canAddCloudVariable() || false
    };
  }
  handleKeyPress(event) {
    if (event.key === 'Enter') this.handleOk();
  }
  handleFocus(event) {
    event.target.select();
  }
  handleOk() {
    this.props.onOk(this.state.inputValue, {
      scope: this.state.globalSelected ? 'global' : 'local',
      isCloud: this.state.cloudSelected
    });
  }
  handleCancel() {
    this.props.onCancel();
  }
  handleChange(e) {
    this.setState({
      inputValue: e.target.value
    });
  }
  handleScopeOptionSelection(e) {
    this.setState({
      globalSelected: e.target.value === 'global'
    });
  }
  handleCloudVariableOptionChange(e) {
    if (!this.props.showCloudOption) return;
    const checked = e.target.checked;
    this.setState({
      cloudSelected: checked
    });
    if (checked) {
      this.setState({
        globalSelected: true
      });
    }
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(components_prompt_prompt, {
      canAddCloudVariable: this.state.canAddCloudVariable,
      cloudSelected: this.state.cloudSelected,
      defaultValue: this.props.defaultValue,
      globalSelected: this.state.globalSelected,
      isStage: this.props.isStage,
      showListMessage: this.props.showListMessage,
      label: this.props.label,
      showCloudOption: this.props.showCloudOption,
      showVariableOptions: this.props.showVariableOptions,
      title: this.props.title,
      onCancel: this.handleCancel,
      onChange: this.handleChange,
      onCloudVarOptionChange: this.handleCloudVariableOptionChange,
      onFocus: this.handleFocus,
      onKeyPress: this.handleKeyPress,
      onOk: this.handleOk,
      onScopeOptionSelection: this.handleScopeOptionSelection
    });
  }
}
prompt_Prompt.propTypes = {
  defaultValue: prop_types_default.a.string,
  isStage: prop_types_default.a.bool.isRequired,
  showListMessage: prop_types_default.a.bool.isRequired,
  label: prop_types_default.a.string.isRequired,
  onCancel: prop_types_default.a.func.isRequired,
  onOk: prop_types_default.a.func.isRequired,
  showCloudOption: prop_types_default.a.bool.isRequired,
  showVariableOptions: prop_types_default.a.bool.isRequired,
  title: prop_types_default.a.string.isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
/* harmony default export */ var containers_prompt = (prompt_Prompt);
// EXTERNAL MODULE: ./src/components/blocks/blocks.css
var blocks_blocks = __webpack_require__(459);
var blocks_default = /*#__PURE__*/__webpack_require__.n(blocks_blocks);

// CONCATENATED MODULE: ./src/components/blocks/blocks.jsx
const blocks_excluded = ["containerRef", "dragOver"];
function blocks_extends() { blocks_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return blocks_extends.apply(this, arguments); }
function blocks_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = blocks_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function blocks_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const BlocksComponent = props => {
  const {
      containerRef,
      dragOver
    } = props,
    componentProps = blocks_objectWithoutProperties(props, blocks_excluded);
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], blocks_extends({
    className: classnames_default()(blocks_default.a.blocks, {
      [blocks_default.a.dragOver]: dragOver
    })
  }, componentProps, {
    componentRef: containerRef
  }));
};
BlocksComponent.propTypes = {
  containerRef: prop_types_default.a.func,
  dragOver: prop_types_default.a.bool
};
/* harmony default export */ var components_blocks_blocks = (BlocksComponent);
// EXTERNAL MODULE: ./src/lib/libraries/extensions/index.jsx
var extensions = __webpack_require__(161);

// EXTERNAL MODULE: ./src/components/play-button/play-button.css
var play_button = __webpack_require__(369);
var play_button_default = /*#__PURE__*/__webpack_require__.n(play_button);

// EXTERNAL MODULE: ./src/components/play-button/icon--play.svg
var icon_play = __webpack_require__(790);
var icon_play_default = /*#__PURE__*/__webpack_require__.n(icon_play);

// EXTERNAL MODULE: ./src/components/play-button/icon--stop.svg
var icon_stop = __webpack_require__(791);
var icon_stop_default = /*#__PURE__*/__webpack_require__.n(icon_stop);

// CONCATENATED MODULE: ./src/components/play-button/play-button.jsx
const play_button_excluded = ["className", "intl", "isPlaying", "onClick", "onMouseDown", "onMouseEnter", "onMouseLeave", "setButtonRef"];
function play_button_extends() { play_button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return play_button_extends.apply(this, arguments); }
function play_button_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = play_button_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function play_button_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







const play_button_messages = Object(index_es["d" /* defineMessages */])({
  play: {
    "id": "gui.playButton.play",
    "defaultMessage": "Play"
  },
  stop: {
    "id": "gui.playButton.stop",
    "defaultMessage": "Stop"
  }
});
const PlayButtonComponent = _ref => {
  let {
      className,
      intl,
      isPlaying,
      onClick,
      onMouseDown,
      onMouseEnter,
      onMouseLeave,
      setButtonRef
    } = _ref,
    props = play_button_objectWithoutProperties(_ref, play_button_excluded);
  const label = isPlaying ? intl.formatMessage(play_button_messages.stop) : intl.formatMessage(play_button_messages.play);
  return /*#__PURE__*/react_default.a.createElement("div", play_button_extends({
    "aria-label": label,
    className: classnames_default()(play_button_default.a.playButton, className, {
      [play_button_default.a.playing]: isPlaying
    }),
    onClick: onClick,
    onMouseDown: onMouseDown,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: setButtonRef
  }, props), /*#__PURE__*/react_default.a.createElement("img", {
    className: play_button_default.a.playIcon,
    draggable: false,
    src: isPlaying ? icon_stop_default.a : icon_play_default.a
  }));
};
PlayButtonComponent.propTypes = {
  className: prop_types_default.a.string,
  intl: index_es["f" /* intlShape */],
  isPlaying: prop_types_default.a.bool.isRequired,
  onClick: prop_types_default.a.func.isRequired,
  onMouseDown: prop_types_default.a.func.isRequired,
  onMouseEnter: prop_types_default.a.func.isRequired,
  onMouseLeave: prop_types_default.a.func.isRequired,
  setButtonRef: prop_types_default.a.func.isRequired
};
/* harmony default export */ var play_button_play_button = (Object(index_es["e" /* injectIntl */])(PlayButtonComponent));
// CONCATENATED MODULE: ./src/containers/play-button.jsx




class play_button_PlayButton extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClick', 'handleMouseDown', 'handleMouseEnter', 'handleMouseLeave', 'handleTouchStart', 'setButtonRef']);
    this.state = {
      touchStarted: false
    };
  }
  getDerivedStateFromProps(props, state) {
    // if touchStarted is true and it's not playing, the sound must have ended.
    // reset the touchStarted state to allow the sound to be replayed
    if (state.touchStarted && !props.isPlaying) {
      return {
        touchStarted: false
      };
    }
    return null; // nothing changed
  }

  componentDidMount() {
    // Touch start
    this.buttonRef.addEventListener('touchstart', this.handleTouchStart);
  }
  componentWillUnmount() {
    this.buttonRef.removeEventListener('touchstart', this.handleTouchStart);
  }
  handleClick(e) {
    //  stop the click from propagating out of the button
    e.stopPropagation();
  }
  handleMouseDown(e) {
    // prevent default (focus) on mouseDown
    e.preventDefault();
    if (this.props.isPlaying) {
      // stop sound and reset touch state
      this.props.onStop();
      if (this.state.touchstarted) this.setState({
        touchStarted: false
      });
    } else {
      this.props.onPlay();
      if (this.state.touchstarted) {
        // started on touch, but now clicked mouse
        this.setState({
          touchStarted: false
        });
      }
    }
  }
  handleTouchStart(e) {
    if (this.props.isPlaying) {
      // If playing, stop sound, and reset touch state
      e.preventDefault();
      this.setState({
        touchStarted: false
      });
      this.props.onStop();
    } else {
      // otherwise start playing, and set touch state
      e.preventDefault();
      this.setState({
        touchStarted: true
      });
      this.props.onPlay();
    }
  }
  handleMouseEnter(e) {
    // start the sound if it's not already playing
    e.preventDefault();
    if (!this.props.isPlaying) {
      this.props.onPlay();
    }
  }
  handleMouseLeave() {
    // stop the sound unless it was started by touch
    if (this.props.isPlaying && !this.state.touchstarted) {
      this.props.onStop();
    }
  }
  setButtonRef(ref) {
    this.buttonRef = ref;
  }
  render() {
    const {
      className,
      isPlaying,
      onPlay,
      // eslint-disable-line no-unused-vars
      onStop // eslint-disable-line no-unused-vars
    } = this.props;
    return /*#__PURE__*/react_default.a.createElement(play_button_play_button, {
      className: className,
      isPlaying: isPlaying,
      onClick: this.handleClick,
      onMouseDown: this.handleMouseDown,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      setButtonRef: this.setButtonRef
    });
  }
}
play_button_PlayButton.propTypes = {
  className: prop_types_default.a.string,
  isPlaying: prop_types_default.a.bool.isRequired,
  onPlay: prop_types_default.a.func.isRequired,
  onStop: prop_types_default.a.func.isRequired
};
/* harmony default export */ var containers_play_button = (play_button_PlayButton);
// EXTERNAL MODULE: ./src/components/library-item/library-item.css
var library_item = __webpack_require__(47);
var library_item_default = /*#__PURE__*/__webpack_require__.n(library_item);

// EXTERNAL MODULE: ./src/components/library-item/bluetooth.svg
var bluetooth = __webpack_require__(792);
var bluetooth_default = /*#__PURE__*/__webpack_require__.n(bluetooth);

// EXTERNAL MODULE: ./src/components/library-item/internet-connection.svg
var internet_connection = __webpack_require__(793);
var internet_connection_default = /*#__PURE__*/__webpack_require__.n(internet_connection);

// CONCATENATED MODULE: ./src/components/library-item/library-item.jsx










/* eslint-disable react/prefer-stateless-function */
class library_item_LibraryItemComponent extends react_default.a.PureComponent {
  render() {
    return this.props.featured ? /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(library_item_default.a.libraryItem, library_item_default.a.featuredItem, {
        [library_item_default.a.disabled]: this.props.disabled
      }, typeof this.props.extensionId === 'string' ? library_item_default.a.libraryItemExtension : null, this.props.hidden ? library_item_default.a.hidden : null),
      onClick: this.props.onClick
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.featuredImageContainer
    }, this.props.disabled ? /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.comingSoonText
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Coming Soon",
      id: "gui.extensionLibrary.comingSoon"
    })) : null, /*#__PURE__*/react_default.a.createElement("img", {
      className: library_item_default.a.featuredImage,
      src: this.props.iconURL
    })), this.props.insetIconURL ? /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.libraryItemInsetImageContainer
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: library_item_default.a.libraryItemInsetImage,
      src: this.props.insetIconURL
    })) : null, /*#__PURE__*/react_default.a.createElement("div", {
      className: typeof this.props.extensionId === 'string' ? classnames_default()(library_item_default.a.featuredExtensionText, library_item_default.a.featuredText) : library_item_default.a.featuredText
    }, /*#__PURE__*/react_default.a.createElement("span", {
      className: library_item_default.a.libraryItemName
    }, this.props.name), /*#__PURE__*/react_default.a.createElement("br", null), /*#__PURE__*/react_default.a.createElement("span", {
      className: library_item_default.a.featuredDescription
    }, this.props.description)), this.props.bluetoothRequired || this.props.internetConnectionRequired || this.props.collaborator ? /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.featuredExtensionMetadata
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.featuredExtensionRequirement
    }, this.props.bluetoothRequired || this.props.internetConnectionRequired ? /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Requires",
      id: "gui.extensionLibrary.requires"
    })), /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.featuredExtensionMetadataDetail
    }, this.props.bluetoothRequired ? /*#__PURE__*/react_default.a.createElement("img", {
      src: bluetooth_default.a
    }) : null, this.props.internetConnectionRequired ? /*#__PURE__*/react_default.a.createElement("img", {
      src: internet_connection_default.a
    }) : null)) : null), /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.featuredExtensionCollaboration
    }, this.props.collaborator ? /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Collaboration with",
      id: "gui.extensionLibrary.collaboration"
    })), /*#__PURE__*/react_default.a.createElement("div", {
      className: library_item_default.a.featuredExtensionMetadataDetail
    }, this.props.collaborator)) : null)) : null) : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: classnames_default()(library_item_default.a.libraryItem, {
        [library_item_default.a.hidden]: this.props.hidden
      }),
      role: "button",
      tabIndex: "0",
      onBlur: this.props.onBlur,
      onClick: this.props.onClick,
      onFocus: this.props.onFocus,
      onKeyPress: this.props.onKeyPress,
      onMouseEnter: this.props.showPlayButton ? null : this.props.onMouseEnter,
      onMouseLeave: this.props.showPlayButton ? null : this.props.onMouseLeave
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: library_item_default.a.libraryItemImageContainerWrapper
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: library_item_default.a.libraryItemImageContainer,
      onMouseEnter: this.props.showPlayButton ? this.props.onMouseEnter : null,
      onMouseLeave: this.props.showPlayButton ? this.props.onMouseLeave : null
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: library_item_default.a.libraryItemImage,
      loading: "lazy",
      src: this.props.iconURL
    }))), /*#__PURE__*/react_default.a.createElement("span", {
      className: library_item_default.a.libraryItemName
    }, this.props.name), this.props.showPlayButton ? /*#__PURE__*/react_default.a.createElement(containers_play_button, {
      isPlaying: this.props.isPlaying,
      onPlay: this.props.onPlay,
      onStop: this.props.onStop
    }) : null);
  }
}
/* eslint-enable react/prefer-stateless-function */

library_item_LibraryItemComponent.propTypes = {
  bluetoothRequired: prop_types_default.a.bool,
  collaborator: prop_types_default.a.string,
  description: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]),
  disabled: prop_types_default.a.bool,
  extensionId: prop_types_default.a.string,
  featured: prop_types_default.a.bool,
  hidden: prop_types_default.a.bool,
  iconURL: prop_types_default.a.string,
  insetIconURL: prop_types_default.a.string,
  internetConnectionRequired: prop_types_default.a.bool,
  isPlaying: prop_types_default.a.bool,
  name: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]),
  onBlur: prop_types_default.a.func.isRequired,
  onClick: prop_types_default.a.func.isRequired,
  onFocus: prop_types_default.a.func.isRequired,
  onKeyPress: prop_types_default.a.func.isRequired,
  onMouseEnter: prop_types_default.a.func.isRequired,
  onMouseLeave: prop_types_default.a.func.isRequired,
  onPlay: prop_types_default.a.func.isRequired,
  onStop: prop_types_default.a.func.isRequired,
  showPlayButton: prop_types_default.a.bool
};
library_item_LibraryItemComponent.defaultProps = {
  disabled: false,
  showPlayButton: false
};
/* harmony default export */ var library_item_library_item = (library_item_LibraryItemComponent);
// CONCATENATED MODULE: ./src/containers/library-item.jsx





class library_item_LibraryItem extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleBlur', 'handleClick', 'handleFocus', 'handleKeyPress', 'handleMouseEnter', 'handleMouseLeave', 'handlePlay', 'handleStop', 'rotateIcon', 'startRotatingIcons', 'stopRotatingIcons']);
    this.state = {
      iconIndex: 0,
      isRotatingIcon: false
    };
  }
  componentWillUnmount() {
    clearInterval(this.intervalId);
  }
  handleBlur(id) {
    this.handleMouseLeave(id);
  }
  handleClick(e) {
    if (!this.props.disabled) {
      this.props.onSelect(this.props.id);
    }
    e.preventDefault();
  }
  handleFocus(id) {
    if (!this.props.showPlayButton) {
      this.handleMouseEnter(id);
    }
  }
  handleKeyPress(e) {
    if (e.key === ' ' || e.key === 'Enter') {
      e.preventDefault();
      this.props.onSelect(this.props.id);
    }
  }
  handleMouseEnter() {
    // only show hover effects on the item if not showing a play button
    if (!this.props.showPlayButton) {
      this.props.onMouseEnter(this.props.id);
      if (this.props.icons && this.props.icons.length) {
        this.stopRotatingIcons();
        this.setState({
          isRotatingIcon: true
        }, this.startRotatingIcons);
      }
    }
  }
  handleMouseLeave() {
    // only show hover effects on the item if not showing a play button
    if (!this.props.showPlayButton) {
      this.props.onMouseLeave(this.props.id);
      if (this.props.icons && this.props.icons.length) {
        this.setState({
          isRotatingIcon: false
        }, this.stopRotatingIcons);
      }
    }
  }
  handlePlay() {
    this.props.onMouseEnter(this.props.id);
  }
  handleStop() {
    this.props.onMouseLeave(this.props.id);
  }
  startRotatingIcons() {
    this.rotateIcon();
    this.intervalId = setInterval(this.rotateIcon, 300);
  }
  stopRotatingIcons() {
    if (this.intervalId) {
      this.intervalId = clearInterval(this.intervalId);
    }
  }
  rotateIcon() {
    const nextIconIndex = (this.state.iconIndex + 1) % this.props.icons.length;
    this.setState({
      iconIndex: nextIconIndex
    });
  }
  curIconMd5() {
    const iconMd5Prop = this.props.iconMd5;
    if (this.props.icons && this.state.isRotatingIcon && this.state.iconIndex < this.props.icons.length) {
      const icon = this.props.icons[this.state.iconIndex] || {};
      return icon.md5ext ||
      // 3.0 library format
      icon.baseLayerMD5 ||
      // 2.0 library format, TODO GH-5084
      iconMd5Prop;
    }
    return iconMd5Prop;
  }
  render() {
    const iconMd5 = this.curIconMd5();
    const iconURL = iconMd5 ? "https://cdn.assets.scratch.mit.edu/internalapi/asset/".concat(iconMd5, "/get/") : this.props.iconRawURL;
    return /*#__PURE__*/react_default.a.createElement(library_item_library_item, {
      bluetoothRequired: this.props.bluetoothRequired,
      collaborator: this.props.collaborator,
      description: this.props.description,
      disabled: this.props.disabled,
      extensionId: this.props.extensionId,
      featured: this.props.featured,
      hidden: this.props.hidden,
      iconURL: iconURL,
      icons: this.props.icons,
      id: this.props.id,
      insetIconURL: this.props.insetIconURL,
      internetConnectionRequired: this.props.internetConnectionRequired,
      isPlaying: this.props.isPlaying,
      name: this.props.name,
      showPlayButton: this.props.showPlayButton,
      onBlur: this.handleBlur,
      onClick: this.handleClick,
      onFocus: this.handleFocus,
      onKeyPress: this.handleKeyPress,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onPlay: this.handlePlay,
      onStop: this.handleStop
    });
  }
}
library_item_LibraryItem.propTypes = {
  bluetoothRequired: prop_types_default.a.bool,
  collaborator: prop_types_default.a.string,
  description: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]),
  disabled: prop_types_default.a.bool,
  extensionId: prop_types_default.a.string,
  featured: prop_types_default.a.bool,
  hidden: prop_types_default.a.bool,
  iconMd5: prop_types_default.a.string,
  iconRawURL: prop_types_default.a.string,
  icons: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    baseLayerMD5: prop_types_default.a.string,
    // 2.0 library format, TODO GH-5084
    md5ext: prop_types_default.a.string // 3.0 library format
  })),

  id: prop_types_default.a.number.isRequired,
  insetIconURL: prop_types_default.a.string,
  internetConnectionRequired: prop_types_default.a.bool,
  isPlaying: prop_types_default.a.bool,
  name: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]),
  onMouseEnter: prop_types_default.a.func.isRequired,
  onMouseLeave: prop_types_default.a.func.isRequired,
  onSelect: prop_types_default.a.func.isRequired,
  showPlayButton: prop_types_default.a.bool
};
/* harmony default export */ var containers_library_item = (Object(index_es["e" /* injectIntl */])(library_item_LibraryItem));
// EXTERNAL MODULE: ./src/components/divider/divider.jsx
var divider = __webpack_require__(350);

// EXTERNAL MODULE: ./src/components/filter/icon--filter.svg
var icon_filter = __webpack_require__(795);
var icon_filter_default = /*#__PURE__*/__webpack_require__.n(icon_filter);

// EXTERNAL MODULE: ./src/components/filter/icon--x.svg
var icon_x = __webpack_require__(796);
var icon_x_default = /*#__PURE__*/__webpack_require__.n(icon_x);

// EXTERNAL MODULE: ./src/components/filter/filter.css
var filter = __webpack_require__(203);
var filter_default = /*#__PURE__*/__webpack_require__.n(filter);

// CONCATENATED MODULE: ./src/components/filter/filter.jsx






const FilterComponent = props => {
  const {
    className,
    onChange,
    onClear,
    placeholderText,
    filterQuery,
    inputClassName
  } = props;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(className, filter_default.a.filter, {
      [filter_default.a.isActive]: filterQuery.length > 0
    })
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: filter_default.a.filterIcon,
    src: icon_filter_default.a
  }), /*#__PURE__*/react_default.a.createElement("input", {
    className: classnames_default()(filter_default.a.filterInput, inputClassName),
    placeholder: placeholderText,
    type: "text",
    value: filterQuery,
    onChange: onChange
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: filter_default.a.xIconWrapper,
    onClick: onClear
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: filter_default.a.xIcon,
    src: icon_x_default.a
  })));
};
FilterComponent.propTypes = {
  className: prop_types_default.a.string,
  filterQuery: prop_types_default.a.string,
  inputClassName: prop_types_default.a.string,
  onChange: prop_types_default.a.func,
  onClear: prop_types_default.a.func,
  placeholderText: prop_types_default.a.string
};
FilterComponent.defaultProps = {
  placeholderText: 'Search'
};
/* harmony default export */ var filter_filter = (FilterComponent);
// EXTERNAL MODULE: ./src/components/tag-button/tag-button.css
var tag_button = __webpack_require__(370);
var tag_button_default = /*#__PURE__*/__webpack_require__.n(tag_button);

// CONCATENATED MODULE: ./src/components/tag-button/tag-button.jsx
const tag_button_excluded = ["active", "iconClassName", "className", "tag", "intlLabel"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function tag_button_extends() { tag_button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return tag_button_extends.apply(this, arguments); }
function tag_button_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = tag_button_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function tag_button_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const TagButtonComponent = _ref => {
  let {
      active,
      iconClassName,
      className,
      tag,
      // eslint-disable-line no-unused-vars
      intlLabel
    } = _ref,
    props = tag_button_objectWithoutProperties(_ref, tag_button_excluded);
  return /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], tag_button_extends({
    className: classnames_default()(tag_button_default.a.tagButton, className, {
      [tag_button_default.a.active]: active
    }),
    iconClassName: classnames_default()(tag_button_default.a.tagButtonIcon, iconClassName)
  }, props), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], intlLabel));
};
TagButtonComponent.propTypes = _objectSpread(_objectSpread({}, button_button["a" /* default */].propTypes), {}, {
  active: prop_types_default.a.bool,
  intlLabel: prop_types_default.a.shape({
    defaultMessage: prop_types_default.a.string,
    description: prop_types_default.a.string,
    id: prop_types_default.a.string
  }).isRequired,
  tag: prop_types_default.a.string.isRequired
});
TagButtonComponent.defaultProps = {
  active: false
};
/* harmony default export */ var tag_button_tag_button = (TagButtonComponent);
// CONCATENATED MODULE: ./src/containers/tag-button.jsx
function tag_button_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function tag_button_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? tag_button_ownKeys(Object(t), !0).forEach(function (r) { tag_button_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : tag_button_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function tag_button_defineProperty(obj, key, value) { key = tag_button_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function tag_button_toPropertyKey(arg) { var key = tag_button_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function tag_button_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function containers_tag_button_extends() { containers_tag_button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_tag_button_extends.apply(this, arguments); }




class tag_button_TagButton extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClick']);
  }
  handleClick() {
    this.props.onClick(this.props.tag);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(tag_button_tag_button, containers_tag_button_extends({}, this.props, {
      onClick: this.handleClick
    }));
  }
}
tag_button_TagButton.propTypes = tag_button_objectSpread(tag_button_objectSpread({}, tag_button_tag_button.propTypes), {}, {
  onClick: prop_types_default.a.func
});
/* harmony default export */ var containers_tag_button = (tag_button_TagButton);
// EXTERNAL MODULE: ./src/components/spinner/spinner.jsx
var spinner = __webpack_require__(220);

// EXTERNAL MODULE: ./src/components/library/library.css
var library = __webpack_require__(102);
var library_default = /*#__PURE__*/__webpack_require__.n(library);

// CONCATENATED MODULE: ./src/components/library/library.jsx
function library_extends() { library_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return library_extends.apply(this, arguments); }












const library_messages = Object(index_es["d" /* defineMessages */])({
  filterPlaceholder: {
    "id": "gui.library.filterPlaceholder",
    "defaultMessage": "Search"
  },
  allTag: {
    "id": "gui.library.allTag",
    "defaultMessage": "All"
  }
});
const ALL_TAG = {
  tag: 'all',
  intlLabel: library_messages.allTag
};
const tagListPrefix = [ALL_TAG];
class library_LibraryComponent extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClose', 'handleFilterChange', 'handleFilterClear', 'handleMouseEnter', 'handleMouseLeave', 'handlePlayingEnd', 'handleSelect', 'handleTagClick', 'setFilteredDataRef']);
    this.state = {
      playingItem: null,
      filterQuery: '',
      selectedTag: ALL_TAG.tag,
      loaded: false,
      data: props.data
    };
  }
  componentDidMount() {
    if (this.state.data.then) {
      // If data is a promise, wait for the promise to resolve
      this.state.data.then(data => {
        this.setState({
          loaded: true,
          data
        });
      });
    } else {
      // Allow the spinner to display before loading the content
      setTimeout(() => {
        this.setState({
          loaded: true
        });
      });
    }
    if (this.props.setStopHandler) this.props.setStopHandler(this.handlePlayingEnd);
  }
  componentDidUpdate(prevProps, prevState) {
    if (prevState.filterQuery !== this.state.filterQuery || prevState.selectedTag !== this.state.selectedTag) {
      this.scrollToTop();
    }
    if (prevProps.data !== this.props.data) {
      // eslint-disable-next-line react/no-did-update-set-state
      this.setState({
        data: this.props.data
      });
    }
  }
  handleSelect(id) {
    this.handleClose();
    this.props.onItemSelected(this.getFilteredData()[id]);
  }
  handleClose() {
    this.props.onRequestClose();
  }
  handleTagClick(tag) {
    if (this.state.playingItem === null) {
      this.setState({
        filterQuery: '',
        selectedTag: tag.toLowerCase()
      });
    } else {
      this.props.onItemMouseLeave(this.getFilteredData()[[this.state.playingItem]]);
      this.setState({
        filterQuery: '',
        playingItem: null,
        selectedTag: tag.toLowerCase()
      });
    }
  }
  handleMouseEnter(id) {
    // don't restart if mouse over already playing item
    if (this.props.onItemMouseEnter && this.state.playingItem !== id) {
      this.props.onItemMouseEnter(this.getFilteredData()[id]);
      this.setState({
        playingItem: id
      });
    }
  }
  handleMouseLeave(id) {
    if (this.props.onItemMouseLeave) {
      this.props.onItemMouseLeave(this.getFilteredData()[id]);
      this.setState({
        playingItem: null
      });
    }
  }
  handlePlayingEnd() {
    if (this.state.playingItem !== null) {
      this.setState({
        playingItem: null
      });
    }
  }
  handleFilterChange(event) {
    if (this.state.playingItem === null) {
      this.setState({
        filterQuery: event.target.value,
        selectedTag: ALL_TAG.tag
      });
    } else {
      this.props.onItemMouseLeave(this.getFilteredData()[[this.state.playingItem]]);
      this.setState({
        filterQuery: event.target.value,
        playingItem: null,
        selectedTag: ALL_TAG.tag
      });
    }
  }
  handleFilterClear() {
    this.setState({
      filterQuery: ''
    });
  }
  getFilteredData() {
    if (this.state.selectedTag === 'all') {
      if (!this.state.filterQuery) return this.state.data;
      return this.state.data.filter(dataItem => (dataItem.tags || []
      // Second argument to map sets `this`
      ).map(String.prototype.toLowerCase.call, String.prototype.toLowerCase).concat(dataItem.name ? (typeof dataItem.name === 'string' ?
      // Use the name if it is a string, else use formatMessage to get the translated name
      dataItem.name : this.props.intl.formatMessage(dataItem.name.props)).toLowerCase() : null).join('\n') // unlikely to partially match newlines
      .indexOf(this.state.filterQuery.toLowerCase()) !== -1);
    }
    return this.state.data.filter(dataItem => dataItem.tags && dataItem.tags.map(String.prototype.toLowerCase.call, String.prototype.toLowerCase).indexOf(this.state.selectedTag) !== -1);
  }
  scrollToTop() {
    this.filteredDataRef.scrollTop = 0;
  }
  setFilteredDataRef(ref) {
    this.filteredDataRef = ref;
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(containers_modal, {
      fullScreen: true,
      contentLabel: this.props.title,
      id: this.props.id,
      onRequestClose: this.handleClose
    }, (this.props.filterable || this.props.tags) && /*#__PURE__*/react_default.a.createElement("div", {
      className: library_default.a.filterBar
    }, this.props.filterable && /*#__PURE__*/react_default.a.createElement(filter_filter, {
      className: classnames_default()(library_default.a.filterBarItem, library_default.a.filter),
      filterQuery: this.state.filterQuery,
      inputClassName: library_default.a.filterInput,
      placeholderText: this.props.intl.formatMessage(library_messages.filterPlaceholder),
      onChange: this.handleFilterChange,
      onClear: this.handleFilterClear
    }), this.props.filterable && this.props.tags && /*#__PURE__*/react_default.a.createElement(divider["a" /* default */], {
      className: classnames_default()(library_default.a.filterBarItem, library_default.a.divider)
    }), this.props.tags && /*#__PURE__*/react_default.a.createElement("div", {
      className: library_default.a.tagWrapper
    }, tagListPrefix.concat(this.props.tags).map((tagProps, id) => /*#__PURE__*/react_default.a.createElement(containers_tag_button, library_extends({
      active: this.state.selectedTag === tagProps.tag.toLowerCase(),
      className: classnames_default()(library_default.a.filterBarItem, library_default.a.tagButton, tagProps.className),
      key: "tag-button-".concat(id),
      onClick: this.handleTagClick
    }, tagProps))))), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(library_default.a.libraryScrollGrid, {
        [library_default.a.withFilterBar]: this.props.filterable || this.props.tags
      }),
      ref: this.setFilteredDataRef
    }, this.state.loaded ? this.getFilteredData().map((dataItem, index) => /*#__PURE__*/react_default.a.createElement(containers_library_item, {
      bluetoothRequired: dataItem.bluetoothRequired,
      collaborator: dataItem.collaborator,
      description: dataItem.description,
      disabled: dataItem.disabled,
      extensionId: dataItem.extensionId,
      featured: dataItem.featured,
      hidden: dataItem.hidden,
      iconMd5: dataItem.costumes ? dataItem.costumes[0].md5ext : dataItem.md5ext,
      iconRawURL: dataItem.rawURL,
      icons: dataItem.costumes,
      id: index,
      insetIconURL: dataItem.insetIconURL,
      internetConnectionRequired: dataItem.internetConnectionRequired,
      isPlaying: this.state.playingItem === index,
      key: typeof dataItem.name === 'string' ? dataItem.name : dataItem.rawURL,
      name: dataItem.name,
      showPlayButton: this.props.showPlayButton,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onSelect: this.handleSelect
    })) : /*#__PURE__*/react_default.a.createElement("div", {
      className: library_default.a.spinnerWrapper
    }, /*#__PURE__*/react_default.a.createElement(spinner["a" /* default */], {
      large: true,
      level: "primary"
    }))));
  }
}
library_LibraryComponent.propTypes = {
  data: prop_types_default.a.oneOfType([prop_types_default.a.arrayOf( /* eslint-disable react/no-unused-prop-types, lines-around-comment */
  // An item in the library
  prop_types_default.a.shape({
    // @todo remove md5/rawURL prop from library, refactor to use storage
    md5: prop_types_default.a.string,
    name: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]),
    rawURL: prop_types_default.a.string
  })
  /* eslint-enable react/no-unused-prop-types, lines-around-comment */), prop_types_default.a.instanceOf(Promise)]),
  filterable: prop_types_default.a.bool,
  id: prop_types_default.a.string.isRequired,
  intl: index_es["f" /* intlShape */].isRequired,
  onItemMouseEnter: prop_types_default.a.func,
  onItemMouseLeave: prop_types_default.a.func,
  onItemSelected: prop_types_default.a.func,
  onRequestClose: prop_types_default.a.func,
  setStopHandler: prop_types_default.a.func,
  showPlayButton: prop_types_default.a.bool,
  tags: prop_types_default.a.arrayOf(prop_types_default.a.shape(containers_tag_button.propTypes)),
  title: prop_types_default.a.string.isRequired
};
library_LibraryComponent.defaultProps = {
  filterable: true,
  showPlayButton: false
};
/* harmony default export */ var library_library = (Object(index_es["e" /* injectIntl */])(library_LibraryComponent));
// EXTERNAL MODULE: ./src/components/action-menu/icon--sprite.svg
var icon_sprite = __webpack_require__(351);
var icon_sprite_default = /*#__PURE__*/__webpack_require__.n(icon_sprite);

// EXTERNAL MODULE: ./src/containers/sb3-downloader.jsx
var sb3_downloader = __webpack_require__(167);

// EXTERNAL MODULE: ./src/containers/tw-restore-point-loader.jsx
var tw_restore_point_loader = __webpack_require__(447);

// EXTERNAL MODULE: ./src/lib/alerts/index.jsx
var lib_alerts = __webpack_require__(82);

// EXTERNAL MODULE: ./src/components/alerts/alert.css
var alerts_alert = __webpack_require__(103);
var alert_default = /*#__PURE__*/__webpack_require__.n(alerts_alert);

// CONCATENATED MODULE: ./src/components/alerts/alert.jsx









const closeButtonColors = {
  [lib_alerts["a" /* AlertLevels */].SUCCESS]: close_button_close_button.COLOR_GREEN,
  [lib_alerts["a" /* AlertLevels */].WARN]: close_button_close_button.COLOR_ORANGE
};
const AlertComponent = _ref => {
  let {
    content,
    closeButton,
    extensionName,
    iconSpinner,
    iconURL,
    level,
    showDownload,
    showSaveNow,
    onCloseAlert,
    onDownload,
    onSaveNow,
    onReconnect,
    showReconnect
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: classnames_default()(alert_default.a.alert, alert_default.a[level])
  }, (iconSpinner || iconURL) && /*#__PURE__*/react_default.a.createElement("div", {
    className: alert_default.a.iconSection
  }, iconSpinner && /*#__PURE__*/react_default.a.createElement(spinner["a" /* default */], {
    className: alert_default.a.alertSpinner,
    level: level
  }), iconURL && /*#__PURE__*/react_default.a.createElement("img", {
    className: alert_default.a.alertIcon,
    src: iconURL
  })), /*#__PURE__*/react_default.a.createElement("div", {
    className: alert_default.a.alertMessage
  }, extensionName ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Lost connection to {extensionName}.",
    id: "tw.alerts.lostPeripheralConnection",
    values: {
      extensionName: "".concat(extensionName)
    }
  }) : content), /*#__PURE__*/react_default.a.createElement("div", {
    className: alert_default.a.alertButtons
  }, showSaveNow && /*#__PURE__*/react_default.a.createElement("button", {
    className: alert_default.a.alertConnectionButton,
    onClick: onSaveNow
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Try Again",
    id: "gui.alerts.tryAgain"
  })), showDownload && /*#__PURE__*/react_default.a.createElement("button", {
    className: alert_default.a.alertConnectionButton,
    onClick: onDownload
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Download",
    id: "gui.alerts.download"
  })), showReconnect && /*#__PURE__*/react_default.a.createElement("button", {
    className: alert_default.a.alertConnectionButton,
    onClick: onReconnect
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Reconnect",
    id: "gui.connection.reconnect"
  })), closeButton && /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: alert_default.a.alertCloseButtonContainer
  }, /*#__PURE__*/react_default.a.createElement(close_button_close_button, {
    className: classnames_default()(alert_default.a.alertCloseButton),
    color: closeButtonColors[level],
    size: close_button_close_button.SIZE_LARGE,
    onClick: onCloseAlert
  }))));
};
AlertComponent.propTypes = {
  closeButton: prop_types_default.a.bool,
  content: prop_types_default.a.oneOfType([prop_types_default.a.element, prop_types_default.a.string]),
  extensionName: prop_types_default.a.string,
  iconSpinner: prop_types_default.a.bool,
  iconURL: prop_types_default.a.string,
  level: prop_types_default.a.string,
  onCloseAlert: prop_types_default.a.func.isRequired,
  onDownload: prop_types_default.a.func,
  onReconnect: prop_types_default.a.func,
  onSaveNow: prop_types_default.a.func,
  showDownload: prop_types_default.a.bool,
  showReconnect: prop_types_default.a.bool,
  showSaveNow: prop_types_default.a.bool
};
AlertComponent.defaultProps = {
  level: lib_alerts["a" /* AlertLevels */].WARN
};
/* harmony default export */ var components_alerts_alert = (AlertComponent);
// EXTERNAL MODULE: ./src/reducers/connection-modal.js
var connection_modal = __webpack_require__(193);

// CONCATENATED MODULE: ./src/containers/alert.jsx










class alert_Alert extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleOnCloseAlert', 'handleOnReconnect']);
  }
  handleOnCloseAlert() {
    this.props.onCloseAlert(this.props.index);
  }
  handleOnReconnect() {
    this.props.onOpenConnectionModal(this.props.extensionId);
    this.handleOnCloseAlert();
  }
  render() {
    const {
      closeButton,
      content,
      extensionName,
      index,
      // eslint-disable-line no-unused-vars
      level,
      iconSpinner,
      iconURL,
      message,
      onSaveNow,
      showDownload,
      showReconnect,
      showSaveNow
    } = this.props;
    return /*#__PURE__*/react_default.a.createElement(sb3_downloader["a" /* default */], null, (_, downloadProject) => /*#__PURE__*/react_default.a.createElement(components_alerts_alert, {
      closeButton: closeButton,
      content: content,
      extensionName: extensionName,
      iconSpinner: iconSpinner,
      iconURL: iconURL,
      level: level,
      message: message,
      showDownload: showDownload,
      showReconnect: showReconnect,
      showSaveNow: showSaveNow,
      onCloseAlert: this.handleOnCloseAlert,
      onDownload: downloadProject,
      onReconnect: this.handleOnReconnect,
      onSaveNow: onSaveNow
    }));
  }
}
const alert_mapStateToProps = () => ({});
const alert_mapDispatchToProps = dispatch => ({
  onOpenConnectionModal: id => {
    dispatch(Object(connection_modal["c" /* setConnectionModalExtensionId */])(id));
    dispatch(Object(modals["q" /* openConnectionModal */])());
  },
  onSaveNow: () => {
    dispatch(Object(project_state["v" /* manualUpdateProject */])());
  }
});
alert_Alert.propTypes = {
  closeButton: prop_types_default.a.bool,
  content: prop_types_default.a.element,
  extensionId: prop_types_default.a.string,
  extensionName: prop_types_default.a.string,
  iconSpinner: prop_types_default.a.bool,
  iconURL: prop_types_default.a.string,
  index: prop_types_default.a.number,
  level: prop_types_default.a.string.isRequired,
  message: prop_types_default.a.string,
  onCloseAlert: prop_types_default.a.func.isRequired,
  onOpenConnectionModal: prop_types_default.a.func,
  onSaveNow: prop_types_default.a.func,
  showDownload: prop_types_default.a.bool,
  showReconnect: prop_types_default.a.bool,
  showSaveNow: prop_types_default.a.bool
};
/* harmony default export */ var containers_alert = (Object(react_redux_es["b" /* connect */])(alert_mapStateToProps, alert_mapDispatchToProps)(alert_Alert));
// EXTERNAL MODULE: ./src/components/alerts/alerts.css
var alerts_alerts = __webpack_require__(797);
var alerts_default = /*#__PURE__*/__webpack_require__.n(alerts_alerts);

// CONCATENATED MODULE: ./src/components/alerts/alerts.jsx





const AlertsComponent = _ref => {
  let {
    alertsList,
    className,
    onCloseAlert
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    bounds: "parent",
    className: className
  }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: alerts_default.a.alertsInnerContainer
  }, alertsList.map((a, index) => /*#__PURE__*/react_default.a.createElement(containers_alert, {
    closeButton: a.closeButton,
    content: a.content,
    extensionId: a.extensionId,
    extensionName: a.extensionName,
    iconSpinner: a.iconSpinner,
    iconURL: a.iconURL,
    index: index,
    key: index,
    level: a.level,
    message: a.message,
    showDownload: a.showDownload,
    showReconnect: a.showReconnect,
    showSaveNow: a.showSaveNow,
    onCloseAlert: onCloseAlert
  }))));
};
AlertsComponent.propTypes = {
  alertsList: prop_types_default.a.arrayOf(prop_types_default.a.object),
  className: prop_types_default.a.string,
  onCloseAlert: prop_types_default.a.func
};
/* harmony default export */ var components_alerts_alerts = (AlertsComponent);
// CONCATENATED MODULE: ./src/containers/alerts.jsx





const Alerts = _ref => {
  let {
    alertsList,
    className,
    onCloseAlert
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(components_alerts_alerts
  // only display standard and extension alerts here
  , {
    alertsList: Object(alerts["f" /* filterPopupAlerts */])(alertsList),
    className: className,
    onCloseAlert: onCloseAlert
  });
};
Alerts.propTypes = {
  alertsList: prop_types_default.a.arrayOf(prop_types_default.a.object),
  className: prop_types_default.a.string,
  onCloseAlert: prop_types_default.a.func
};
const alerts_mapStateToProps = state => ({
  alertsList: state.scratchGui.alerts.alertsList
});
const alerts_mapDispatchToProps = dispatch => ({
  onCloseAlert: index => dispatch(Object(alerts["b" /* closeAlert */])(index))
});
/* harmony default export */ var containers_alerts = (Object(react_redux_es["b" /* connect */])(alerts_mapStateToProps, alerts_mapDispatchToProps)(Alerts));
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(50);
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// CONCATENATED MODULE: ./src/containers/extension-library.jsx
function extension_library_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function extension_library_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? extension_library_ownKeys(Object(t), !0).forEach(function (r) { extension_library_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : extension_library_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function extension_library_defineProperty(obj, key, value) { key = extension_library_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function extension_library_toPropertyKey(arg) { var key = extension_library_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function extension_library_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }










const extension_library_messages = Object(index_es["d" /* defineMessages */])({
  extensionTitle: {
    "id": "gui.extensionLibrary.chooseAnExtension",
    "defaultMessage": "Choose an Extension"
  },
  extensionUrl: {
    "id": "gui.extensionLibrary.extensionUrl",
    "defaultMessage": "Enter the URL of the extension"
  },
  incompatible: {
    "id": "tw.confirmIncompatibleExtension",
    "defaultMessage": "This extension is incompatible with Scratch. Projects made with it cannot be uploaded to the Scratch website. Are you sure you want to enable it?"
  }
});
class extension_library_ExtensionLibrary extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleItemSelect']);
  }
  handleItemSelect(item) {
    if (item.isBuggy) {
      if (!confirm("This extension is not trusted, and it has some glitches and bugs, adding this in might make Gvbvdxx Mod 2 Collapse, or some blocks may not work correctly, BACK UP YOUR PROJECT FIRST BEFORE USING THESE. Do you want to add the extension now?")) {
        return;
      }
    }
    // eslint-disable-next-line no-alert
    if (item.incompatibleWithScratch && !confirm(this.props.intl.formatMessage(extension_library_messages.incompatible))) {
      return;
    }
    const id = item.extensionId;
    let url = item.extensionURL ? item.extensionURL : id;
    const isCustomURL = !item.disabled && !id;
    if (isCustomURL) {
      window.onExtensionCustomSelect();
      return;
    }
    if (url && !item.disabled) {
      if (this.props.vm.extensionManager.isExtensionLoaded(url)) {
        this.props.onCategorySelected(id);
      } else {
        this.props.vm.extensionManager.loadExtensionURL(url).then(() => {
          this.props.onCategorySelected(id);
          if (isCustomURL) {
            let newUrl = location.pathname;
            if (location.search) {
              newUrl += location.search;
              newUrl += '&';
            } else {
              newUrl += '?';
            }
            newUrl += "extension=".concat(encodeURIComponent(url));
            history.replaceState('', '', newUrl);
          }
        }).catch(err => {
          // eslint-disable-next-line no-alert
          alert(err);
        });
      }
    }
  }
  render() {
    const extensionLibraryThumbnailData = extensions["a" /* default */].map(extension => extension_library_objectSpread({
      rawURL: extension.iconURL || icon_sprite_default.a
    }, extension));
    return /*#__PURE__*/react_default.a.createElement(library_library, {
      data: extensionLibraryThumbnailData,
      filterable: false,
      id: "extensionLibrary",
      title: this.props.intl.formatMessage(extension_library_messages.extensionTitle),
      visible: this.props.visible,
      onItemSelected: this.handleItemSelect,
      onRequestClose: this.props.onRequestClose
    });
  }
}
extension_library_ExtensionLibrary.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  onCategorySelected: prop_types_default.a.func,
  onRequestClose: prop_types_default.a.func,
  visible: prop_types_default.a.bool,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired // eslint-disable-line react/no-unused-prop-types
};

/* harmony default export */ var extension_library = (Object(index_es["e" /* injectIntl */])(extension_library_ExtensionLibrary));
// EXTERNAL MODULE: ./src/components/custom-procedures/icon--boolean-input.svg
var icon_boolean_input = __webpack_require__(798);
var icon_boolean_input_default = /*#__PURE__*/__webpack_require__.n(icon_boolean_input);

// EXTERNAL MODULE: ./src/components/custom-procedures/icon--text-input.svg
var icon_text_input = __webpack_require__(799);
var icon_text_input_default = /*#__PURE__*/__webpack_require__.n(icon_text_input);

// EXTERNAL MODULE: ./src/components/custom-procedures/icon--label.svg
var icon_label = __webpack_require__(800);
var icon_label_default = /*#__PURE__*/__webpack_require__.n(icon_label);

// EXTERNAL MODULE: ./src/components/custom-procedures/custom-procedures.css
var custom_procedures = __webpack_require__(62);
var custom_procedures_default = /*#__PURE__*/__webpack_require__.n(custom_procedures);

// CONCATENATED MODULE: ./src/components/custom-procedures/custom-procedures.jsx









const custom_procedures_messages = Object(index_es["d" /* defineMessages */])({
  myblockModalTitle: {
    "id": "gui.customProcedures.myblockModalTitle",
    "defaultMessage": "Make a Block"
  }
});
const custom_procedures_CustomProcedures = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: custom_procedures_default.a.modalContent,
  contentLabel: props.intl.formatMessage(custom_procedures_messages.myblockModalTitle),
  onRequestClose: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: custom_procedures_default.a.workspace,
  componentRef: props.componentRef
}), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: custom_procedures_default.a.body
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionsRow
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionCard,
  role: "button",
  tabIndex: "0",
  onClick: props.onAddTextNumber
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: custom_procedures_default.a.optionIcon,
  src: icon_text_input_default.a
}), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionTitle
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Add an input",
  id: "gui.customProcedures.addAnInputNumberText"
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionDescription
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "number or text",
  id: "gui.customProcedures.numberTextType"
}))), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionCard,
  role: "button",
  tabIndex: "0",
  onClick: props.onAddBoolean
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: custom_procedures_default.a.optionIcon,
  src: icon_boolean_input_default.a
}), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionTitle
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Add an input",
  id: "gui.customProcedures.addAnInputBoolean"
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionDescription
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "boolean",
  id: "gui.customProcedures.booleanType"
}))), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionCard,
  role: "button",
  tabIndex: "0",
  onClick: props.onAddLabel
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: custom_procedures_default.a.optionIcon,
  src: icon_label_default.a
}), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.optionTitle
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Add a label",
  id: "gui.customProcedures.addALabel"
})))), /*#__PURE__*/react_default.a.createElement("div", {
  className: custom_procedures_default.a.checkboxRow
}, /*#__PURE__*/react_default.a.createElement("label", null, /*#__PURE__*/react_default.a.createElement("input", {
  checked: props.warp,
  type: "checkbox",
  onChange: props.onToggleWarp
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Run without screen refresh",
  id: "gui.customProcedures.runWithoutScreenRefresh"
}))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: custom_procedures_default.a.buttonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: custom_procedures_default.a.cancelButton,
  onClick: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Cancel",
  id: "gui.customProcedures.cancel"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: custom_procedures_default.a.okButton,
  onClick: props.onOk
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "OK",
  id: "gui.customProcedures.ok"
})))));
custom_procedures_CustomProcedures.propTypes = {
  componentRef: prop_types_default.a.func.isRequired,
  intl: index_es["f" /* intlShape */],
  onAddBoolean: prop_types_default.a.func.isRequired,
  onAddLabel: prop_types_default.a.func.isRequired,
  onAddTextNumber: prop_types_default.a.func.isRequired,
  onCancel: prop_types_default.a.func.isRequired,
  onOk: prop_types_default.a.func.isRequired,
  onToggleWarp: prop_types_default.a.func.isRequired,
  warp: prop_types_default.a.bool.isRequired
};
/* harmony default export */ var custom_procedures_custom_procedures = (Object(index_es["e" /* injectIntl */])(custom_procedures_CustomProcedures));
// CONCATENATED MODULE: ./src/containers/custom-procedures.jsx







class containers_custom_procedures_CustomProcedures extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleAddLabel', 'handleAddBoolean', 'handleAddTextNumber', 'handleToggleWarp', 'handleCancel', 'handleOk', 'setBlocks']);
    this.state = {
      rtlOffset: 0,
      warp: false
    };
  }
  componentWillUnmount() {
    if (this.workspace) {
      this.workspace.dispose();
    }
  }
  setBlocks(blocksRef) {
    if (!blocksRef) return;
    this.blocks = blocksRef;
    const workspaceConfig = lodash_defaultsdeep_default()({}, containers_custom_procedures_CustomProcedures.defaultOptions, this.props.options, {
      rtl: this.props.isRtl
    });

    // @todo This is a hack to make there be no toolbox.
    const ScratchBlocks = tw_lazy_scratch_blocks["a" /* default */].get();
    const oldDefaultToolbox = ScratchBlocks.Blocks.defaultToolbox;
    ScratchBlocks.Blocks.defaultToolbox = null;
    this.workspace = ScratchBlocks.inject(this.blocks, workspaceConfig);
    ScratchBlocks.Blocks.defaultToolbox = oldDefaultToolbox;

    // Create the procedure declaration block for editing the mutation.
    this.mutationRoot = this.workspace.newBlock('procedures_declaration');
    // Make the declaration immovable, undeletable and have no context menu
    this.mutationRoot.setMovable(false);
    this.mutationRoot.setDeletable(false);
    this.mutationRoot.contextMenu = false;
    this.workspace.addChangeListener(() => {
      this.mutationRoot.onChangeFn();
      // Keep the block centered on the workspace
      const metrics = this.workspace.getMetrics();
      const {
        x,
        y
      } = this.mutationRoot.getRelativeToSurfaceXY();
      const dy = metrics.viewHeight / 2 - this.mutationRoot.height / 2 - y;
      let dx;
      if (this.props.isRtl) {
        // // TODO: https://github.com/LLK/scratch-gui/issues/2838
        // This is temporary until we can figure out what's going on width
        // block positioning on the workspace for RTL.
        // Workspace is always origin top-left, with x increasing to the right
        // Calculate initial starting offset and save it, every other move
        // has to take the original offset into account.
        // Calculate a new left postion based on new width
        // Convert current x position into LTR (mirror) x position (uses original offset)
        // Use the difference between ltrX and mirrorX as the amount to move
        const ltrX = metrics.viewWidth / 2 - this.mutationRoot.width / 2 + 25;
        const mirrorX = x - (x - this.state.rtlOffset) * 2;
        if (mirrorX === ltrX) {
          return;
        }
        dx = mirrorX - ltrX;
        const midPoint = metrics.viewWidth / 2;
        if (x === 0) {
          // if it's the first time positioning, it should always move right
          if (this.mutationRoot.width < midPoint) {
            dx = ltrX;
          } else if (this.mutationRoot.width < metrics.viewWidth) {
            dx = midPoint - (metrics.viewWidth - this.mutationRoot.width) / 2;
          } else {
            dx = midPoint + (this.mutationRoot.width - metrics.viewWidth);
          }
          this.mutationRoot.moveBy(dx, dy);
          this.setState({
            rtlOffset: this.mutationRoot.getRelativeToSurfaceXY().x
          });
          return;
        }
        if (this.mutationRoot.width > metrics.viewWidth) {
          dx = dx + this.mutationRoot.width - metrics.viewWidth;
        }
      } else {
        dx = metrics.viewWidth / 2 - this.mutationRoot.width / 2 - x;
        // If the procedure declaration is wider than the view width,
        // keep the right-hand side of the procedure in view.
        if (this.mutationRoot.width > metrics.viewWidth) {
          dx = metrics.viewWidth - this.mutationRoot.width - x;
        }
      }
      this.mutationRoot.moveBy(dx, dy);
    });
    this.mutationRoot.domToMutation(this.props.mutator);
    this.mutationRoot.initSvg();
    this.mutationRoot.render();
    this.setState({
      warp: this.mutationRoot.getWarp()
    });
    // Allow the initial events to run to position this block, then focus.
    setTimeout(() => {
      this.mutationRoot.focusLastEditor_();
    });
  }
  handleCancel() {
    this.props.onRequestClose();
  }
  handleOk() {
    const newMutation = this.mutationRoot ? this.mutationRoot.mutationToDom(true) : null;
    this.props.onRequestClose(newMutation);
  }
  handleAddLabel() {
    if (this.mutationRoot) {
      this.mutationRoot.addLabelExternal();
    }
  }
  handleAddBoolean() {
    if (this.mutationRoot) {
      this.mutationRoot.addBooleanExternal();
    }
  }
  handleAddTextNumber() {
    if (this.mutationRoot) {
      this.mutationRoot.addStringNumberExternal();
    }
  }
  handleToggleWarp() {
    if (this.mutationRoot) {
      const newWarp = !this.mutationRoot.getWarp();
      this.mutationRoot.setWarp(newWarp);
      this.setState({
        warp: newWarp
      });
    }
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(custom_procedures_custom_procedures, {
      componentRef: this.setBlocks,
      warp: this.state.warp,
      onAddBoolean: this.handleAddBoolean,
      onAddLabel: this.handleAddLabel,
      onAddTextNumber: this.handleAddTextNumber,
      onCancel: this.handleCancel,
      onOk: this.handleOk,
      onToggleWarp: this.handleToggleWarp
    });
  }
}
containers_custom_procedures_CustomProcedures.propTypes = {
  isRtl: prop_types_default.a.bool,
  mutator: prop_types_default.a.instanceOf(Element),
  onRequestClose: prop_types_default.a.func.isRequired,
  options: prop_types_default.a.shape({
    media: prop_types_default.a.string,
    zoom: prop_types_default.a.shape({
      controls: prop_types_default.a.bool,
      wheel: prop_types_default.a.bool,
      startScale: prop_types_default.a.number
    }),
    comments: prop_types_default.a.bool,
    collapse: prop_types_default.a.bool
  })
};
containers_custom_procedures_CustomProcedures.defaultOptions = {
  zoom: {
    controls: false,
    wheel: false,
    startScale: 0.9
  },
  comments: false,
  collapse: false,
  scrollbars: true
};
containers_custom_procedures_CustomProcedures.defaultProps = {
  options: containers_custom_procedures_CustomProcedures.defaultOptions
};
const custom_procedures_mapStateToProps = state => ({
  isRtl: state.locales.isRtl,
  mutator: state.scratchGui.customProcedures.mutator
});
/* harmony default export */ var containers_custom_procedures = (Object(react_redux_es["b" /* connect */])(custom_procedures_mapStateToProps)(containers_custom_procedures_CustomProcedures));
// EXTERNAL MODULE: ./src/lib/layout-constants.js
var layout_constants = __webpack_require__(23);

// CONCATENATED MODULE: ./src/lib/drop-area-hoc.jsx
function drop_area_hoc_extends() { drop_area_hoc_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return drop_area_hoc_extends.apply(this, arguments); }






/**
 * Higher Order Component to give components the ability to react to drag overs
 * and drops of objects stored in the assetDrag redux state.
 *
 * Example: You want to enable MyComponent to receive drops from a drag type
 *    Wrapped = DropAreaHOC([...dragTypes])(
 *      <MyComponent />
 *    )
 *
 * MyComponent now receives 2 new props
 *      containerRef: a ref that must be set on the container element
 *      dragOver: boolean if an asset is being dragged above the component
 *
 * Use the wrapped component:
 *    <Wrapped onDrop={yourDropHandler} />
 *
 * NB: This HOC _only_ works with objects that drag using the assetDrag reducer.
 *     This _does not_ handle drags for blocks coming from the workspace.
 *
 * @param {Array.<string>} dragTypes Types to respond to, from DragConstants
 * @returns {function} The HOC, specialized for those drag types
 */
const drop_area_hoc_DropAreaHOC = function DropAreaHOC(dragTypes) {
  /**
   * Return the HOC, specialized for the dragTypes
   * @param {React.Component} WrappedComponent component to receive drop behaviors
   * @returns {React.Component} component with drag over/drop behavior
   */
  return function (WrappedComponent) {
    class DropAreaWrapper extends react_default.a.Component {
      constructor(props) {
        super(props);
        lodash_bindall_default()(this, ['setRef']);
        this.state = {
          dragOver: false
        };
        this.ref = null;
        this.containerBox = null;
      }
      componentWillReceiveProps(newProps) {
        // If `dragging` becomes true, record the drop area rectangle
        if (newProps.dragInfo.dragging && !this.props.dragInfo.dragging) {
          this.dropAreaRect = this.ref && this.ref.getBoundingClientRect();
          // If `dragging` becomes false, call the drop handler
        } else if (!newProps.dragInfo.dragging && this.props.dragInfo.dragging && this.state.dragOver) {
          this.props.onDrop(this.props.dragInfo);
          this.setState({
            dragOver: false
          });
        }

        // If a drag is in progress (currentOffset) and it matches the relevant drag types,
        // test if the drag is within the drop area rect and set the state accordingly.
        if (this.dropAreaRect && newProps.dragInfo.currentOffset && dragTypes.includes(newProps.dragInfo.dragType)) {
          const {
            x,
            y
          } = newProps.dragInfo.currentOffset;
          const {
            top,
            right,
            bottom,
            left
          } = this.dropAreaRect;
          if (x > left && x < right && y > top && y < bottom) {
            this.setState({
              dragOver: true
            });
          } else {
            this.setState({
              dragOver: false
            });
          }
        }
      }
      setRef(el) {
        this.ref = el;
        if (this.props.componentRef) {
          this.props.componentRef(this.ref);
        }
      }
      render() {
        const componentProps = lodash_omit_default()(this.props, ['onDrop', 'dragInfo', 'componentRef']);
        return /*#__PURE__*/react_default.a.createElement(WrappedComponent, drop_area_hoc_extends({
          containerRef: this.setRef,
          dragOver: this.state.dragOver
        }, componentProps));
      }
    }
    DropAreaWrapper.propTypes = {
      componentRef: prop_types_default.a.func,
      dragInfo: prop_types_default.a.shape({
        currentOffset: prop_types_default.a.shape({
          x: prop_types_default.a.number,
          y: prop_types_default.a.number
        }),
        dragType: prop_types_default.a.string,
        dragging: prop_types_default.a.bool,
        index: prop_types_default.a.number
      }),
      onDrop: prop_types_default.a.func
    };
    const mapStateToProps = state => ({
      dragInfo: state.scratchGui.assetDrag
    });
    const mapDispatchToProps = () => ({});
    return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(DropAreaWrapper);
  };
};
/* harmony default export */ var drop_area_hoc = (drop_area_hoc_DropAreaHOC);
// CONCATENATED MODULE: ./src/lib/drag-constants.js
/* harmony default export */ var drag_constants = ({
  SOUND: 'SOUND',
  COSTUME: 'COSTUME',
  SPRITE: 'SPRITE',
  CODE: 'CODE',
  BACKPACK_SOUND: 'BACKPACK_SOUND',
  BACKPACK_COSTUME: 'BACKPACK_COSTUME',
  BACKPACK_SPRITE: 'BACKPACK_SPRITE',
  BACKPACK_CODE: 'BACKPACK_CODE'
});
// EXTERNAL MODULE: ./node_modules/scratch-vm/src/extension-support/argument-type.js
var argument_type = __webpack_require__(40);
var argument_type_default = /*#__PURE__*/__webpack_require__.n(argument_type);

// EXTERNAL MODULE: ./node_modules/scratch-vm/src/extension-support/block-type.js
var block_type = __webpack_require__(32);
var block_type_default = /*#__PURE__*/__webpack_require__.n(block_type);

// CONCATENATED MODULE: ./src/lib/define-dynamic-block.js
// TODO: access `BlockType` and `ArgumentType` without reaching into VM
// Should we move these into a new extension support module or something?



/**
 * Define a block using extension info which has the ability to dynamically determine (and update) its layout.
 * This functionality is used for extension blocks which can change its properties based on different state
 * information. For example, the `control_stop` block changes its shape based on which menu item is selected
 * and a variable block changes its text to reflect the variable name without using an editable field.
 * @param {object} ScratchBlocks - The ScratchBlocks name space.
 * @param {object} categoryInfo - Information about this block's extension category, including any menus and icons.
 * @param {object} staticBlockInfo - The base block information before any dynamic changes.
 * @param {string} extendedOpcode - The opcode for the block (including the extension ID).
 */
// TODO: grow this until it can fully replace `_convertForScratchBlocks` in the VM runtime
const defineDynamicBlock = (ScratchBlocks, categoryInfo, staticBlockInfo, extendedOpcode) => ({
  init: function init() {
    const blockJson = {
      type: extendedOpcode,
      inputsInline: true,
      category: categoryInfo.name,
      colour: categoryInfo.color1,
      colourSecondary: categoryInfo.color2,
      colourTertiary: categoryInfo.color3
    };
    // There is a scratch-blocks / Blockly extension called "scratch_extension" which adjusts the styling of
    // blocks to allow for an icon, a feature of Scratch extension blocks. However, Scratch "core" extension
    // blocks don't have icons and so they should not use 'scratch_extension'. Adding a scratch-blocks / Blockly
    // extension after `jsonInit` isn't fully supported (?), so we decide now whether there will be an icon.
    if (staticBlockInfo.blockIconURI || categoryInfo.blockIconURI) {
      blockJson.extensions = ['scratch_extension'];
    }
    // initialize the basics of the block, to be overridden & extended later by `domToMutation`
    this.jsonInit(blockJson);
    // initialize the cached block info used to carry block info from `domToMutation` to `mutationToDom`
    this.blockInfoText = '{}';
    // we need a block info update (through `domToMutation`) before we have a completely initialized block
    this.needsBlockInfoUpdate = true;
  },
  mutationToDom: function mutationToDom() {
    const container = document.createElement('mutation');
    container.setAttribute('blockInfo', this.blockInfoText);
    return container;
  },
  domToMutation: function domToMutation(xmlElement) {
    const blockInfoText = xmlElement.getAttribute('blockInfo');
    if (!blockInfoText) return;
    if (!this.needsBlockInfoUpdate) {
      throw new Error('Attempted to update block info twice');
    }
    delete this.needsBlockInfoUpdate;
    this.blockInfoText = blockInfoText;
    const blockInfo = JSON.parse(blockInfoText);
    switch (blockInfo.blockType) {
      case block_type_default.a.COMMAND:
      case block_type_default.a.CONDITIONAL:
      case block_type_default.a.LOOP:
        this.setOutputShape(ScratchBlocks.OUTPUT_SHAPE_SQUARE);
        this.setPreviousStatement(true);
        this.setNextStatement(!blockInfo.isTerminal);
        break;
      case block_type_default.a.REPORTER:
        this.setOutput(true);
        this.setOutputShape(ScratchBlocks.OUTPUT_SHAPE_ROUND);
        if (!blockInfo.disableMonitor) {
          this.setCheckboxInFlyout(true);
        }
        break;
      case block_type_default.a.BOOLEAN:
        this.setOutput(true);
        this.setOutputShape(ScratchBlocks.OUTPUT_SHAPE_HEXAGONAL);
        break;
      case block_type_default.a.HAT:
      case block_type_default.a.EVENT:
        this.setOutputShape(ScratchBlocks.OUTPUT_SHAPE_SQUARE);
        this.setNextStatement(true);
        break;
    }
    if (blockInfo.color1 || blockInfo.color2 || blockInfo.color3) {
      // `setColour` handles undefined parameters by adjusting defined colors
      this.setColour(blockInfo.color1, blockInfo.color2, blockInfo.color3);
    }

    // Layout block arguments
    // TODO handle E/C Blocks
    const blockText = blockInfo.text;
    const args = [];
    let argCount = 0;
    const scratchBlocksStyleText = blockText.replace(/\[(.+?)]/g, (match, argName) => {
      const arg = blockInfo.arguments[argName];
      switch (arg.type) {
        case argument_type_default.a.STRING:
          args.push({
            type: 'input_value',
            name: argName
          });
          break;
        case argument_type_default.a.BOOLEAN:
          args.push({
            type: 'input_value',
            name: argName,
            check: 'Boolean'
          });
          break;
      }
      return "%".concat(++argCount);
    });
    this.interpolate_(scratchBlocksStyleText, args);
  }
});
/* harmony default export */ var define_dynamic_block = (defineDynamicBlock);
// EXTERNAL MODULE: ./src/addons/hooks.js
var hooks = __webpack_require__(192);

// EXTERNAL MODULE: ./src/components/tw-loading-spinner/spinner.css
var tw_loading_spinner_spinner = __webpack_require__(460);
var spinner_default = /*#__PURE__*/__webpack_require__.n(tw_loading_spinner_spinner);

// CONCATENATED MODULE: ./src/components/tw-loading-spinner/spinner.jsx


const Loading = () => /*#__PURE__*/react_default.a.createElement("div", {
  className: spinner_default.a.container
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: spinner_default.a.spinner
}));
/* harmony default export */ var components_tw_loading_spinner_spinner = (Loading);
// EXTERNAL MODULE: ./src/components/crash-message/crash-message.jsx
var crash_message = __webpack_require__(343);

// CONCATENATED MODULE: ./src/lib/tw-load-scratch-blocks-hoc.jsx





const tw_load_scratch_blocks_hoc_LoadScratchBlocksHOC = function LoadScratchBlocksHOC(WrappedComponent) {
  class LoadScratchBlocks extends react_default.a.Component {
    constructor(props) {
      super(props);
      this.state = {
        loaded: tw_lazy_scratch_blocks["a" /* default */].isLoaded(),
        error: null
      };
      if (!this.state.loaded) {
        tw_lazy_scratch_blocks["a" /* default */].load().then(() => {
          this.setState({
            loaded: true
          });
        }).catch(e => {
          log["default"].error(e);
          this.setState({
            error: e
          });
        });
      }
    }
    handleReload() {
      location.reload();
    }
    render() {
      if (this.state.error !== null) {
        return /*#__PURE__*/react_default.a.createElement(crash_message["a" /* default */], {
          errorMessage: "lazy scratch-blocks: ".concat(this.state.error),
          onReload: this.handleReload
        });
      }
      if (!this.state.loaded) {
        return /*#__PURE__*/react_default.a.createElement(components_tw_loading_spinner_spinner, null);
      }
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, this.props);
    }
  }
  return LoadScratchBlocks;
};
/* harmony default export */ var tw_load_scratch_blocks_hoc = (tw_load_scratch_blocks_hoc_LoadScratchBlocksHOC);
// EXTERNAL MODULE: ./src/reducers/toolbox.js
var toolbox = __webpack_require__(287);

// EXTERNAL MODULE: ./src/reducers/color-picker.js
var color_picker = __webpack_require__(177);

// EXTERNAL MODULE: ./src/reducers/custom-procedures.js
var reducers_custom_procedures = __webpack_require__(225);

// EXTERNAL MODULE: ./src/reducers/workspace-metrics.js
var workspace_metrics = __webpack_require__(288);

// CONCATENATED MODULE: ./src/containers/blocks.jsx
const containers_blocks_excluded = ["anyModalVisible", "canUseCloud", "customStageSize", "customProceduresVisible", "extensionLibraryVisible", "options", "stageSize", "vm", "isRtl", "isVisible", "onActivateColorPicker", "onOpenConnectionModal", "onOpenSoundRecorder", "onOpenCustomExtensionModal", "updateToolboxState", "onActivateCustomProcedures", "onRequestCloseExtensionLibrary", "onRequestCloseCustomProcedures", "toolboxXML", "updateMetrics", "workspaceMetrics"];
function containers_blocks_extends() { containers_blocks_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_blocks_extends.apply(this, arguments); }
function containers_blocks_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = containers_blocks_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function containers_blocks_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }































// TW: Strings we add to scratch-blocks are localized here
const blocks_messages = Object(index_es["d" /* defineMessages */])({
  PROCEDURES_RETURN: {
    "id": "tw.blocks.PROCEDURES_RETURN",
    "defaultMessage": "return {v}"
  },
  PROCEDURES_TO_REPORTER: {
    "id": "tw.blocks.PROCEDURES_TO_REPORTER",
    "defaultMessage": "Change To Reporter"
  },
  PROCEDURES_TO_STATEMENT: {
    "id": "tw.blocks.PROCEDURES_TO_STATEMENT",
    "defaultMessage": "Change To Statement"
  },
  PROCEDURES_DOCS: {
    "id": "tw.blocks.PROCEDURES_DOCS",
    "defaultMessage": "How to use return"
  }
});
const addFunctionListener = (object, property, callback) => {
  const oldFn = object[property];
  object[property] = function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    const result = oldFn.apply(this, args);
    callback.apply(this, result);
    return result;
  };
};
const DroppableBlocks = drop_area_hoc([drag_constants.BACKPACK_CODE])(components_blocks_blocks);
class blocks_Blocks extends react_default.a.Component {
  constructor(props) {
    super(props);
    this.ScratchBlocks = lib_blocks(props.vm);
    window.ScratchBlocks = this.ScratchBlocks;
    hooks["a" /* default */].blockly = this.ScratchBlocks;
    hooks["a" /* default */].blocklyCallbacks.forEach(i => i());
    hooks["a" /* default */].blocklyCallbacks.length = 0;
    lodash_bindall_default()(this, ['attachVM', 'detachVM', 'getToolboxXML', 'handleCategorySelected', 'handleConnectionModalStart', 'handleDrop', 'handleStatusButtonUpdate', 'handleOpenSoundRecorder', 'handlePromptStart', 'handlePromptCallback', 'handlePromptClose', 'handleCustomProceduresClose', 'onScriptGlowOn', 'onScriptGlowOff', 'onBlockGlowOn', 'onBlockGlowOff', 'handleMonitorsUpdate', 'handleExtensionAdded', 'handleBlocksInfoUpdate', 'onTargetsUpdate', 'onVisualReport', 'onWorkspaceUpdate', 'onWorkspaceMetricsChange', 'setBlocks', 'setLocale', 'handleEnableProcedureReturns']);
    this.ScratchBlocks.prompt = this.handlePromptStart;
    this.ScratchBlocks.statusButtonCallback = this.handleConnectionModalStart;
    this.ScratchBlocks.recordSoundCallback = this.handleOpenSoundRecorder;
    this.state = {
      prompt: null
    };
    this.onTargetsUpdate = lodash_debounce_default()(this.onTargetsUpdate, 100);
    this.toolboxUpdateQueue = [];
  }
  componentDidMount() {
    this.props.vm.setCompilerOptions({
      warpTimer: true
    });
    this.props.vm.setInEditor(false);
    this.ScratchBlocks.FieldColourSlider.activateEyedropper_ = this.props.onActivateColorPicker;
    this.ScratchBlocks.Procedures.externalProcedureDefCallback = this.props.onActivateCustomProcedures;
    this.ScratchBlocks.ScratchMsgs.setLocale(this.props.locale);
    const Msg = this.ScratchBlocks.Msg;
    Msg.PROCEDURES_RETURN = this.props.intl.formatMessage(blocks_messages.PROCEDURES_RETURN, {
      v: '%1'
    });
    Msg.PROCEDURES_TO_REPORTER = this.props.intl.formatMessage(blocks_messages.PROCEDURES_TO_REPORTER);
    Msg.PROCEDURES_TO_STATEMENT = this.props.intl.formatMessage(blocks_messages.PROCEDURES_TO_STATEMENT);
    Msg.PROCEDURES_DOCS = this.props.intl.formatMessage(blocks_messages.PROCEDURES_DOCS);
    const workspaceConfig = lodash_defaultsdeep_default()({}, blocks_Blocks.defaultOptions, this.props.options, {
      rtl: this.props.isRtl,
      toolbox: this.props.toolboxXML
    });
    this.workspace = this.ScratchBlocks.inject(this.blocks, workspaceConfig);

    // Register buttons under new callback keys for creating variables,
    // lists, and procedures from extensions.

    const toolboxWorkspace = this.workspace.getFlyout().getWorkspace();
    const varListButtonCallback = type => () => this.ScratchBlocks.Variables.createVariable(this.workspace, null, type);
    const procButtonCallback = () => {
      this.ScratchBlocks.Procedures.createProcedureDefCallback_(this.workspace);
    };
    toolboxWorkspace.registerButtonCallback('MAKE_A_VARIABLE', varListButtonCallback(''));
    toolboxWorkspace.registerButtonCallback('MAKE_A_LIST', varListButtonCallback('list'));
    toolboxWorkspace.registerButtonCallback('MAKE_A_PROCEDURE', procButtonCallback);
    toolboxWorkspace.registerButtonCallback('EXTENSION_CALLBACK', block => {
      this.props.vm.handleExtensionButtonPress(block.callbackData_);
    });
    toolboxWorkspace.registerButtonCallback('OPEN_EXTENSION_DOCS', block => {
      const docsURI = block.callbackData_;
      const url = new URL(docsURI);
      if (url.protocol === 'http:' || url.protocol === 'https:') {
        window.open(docsURI, '_blank');
      }
    });
    toolboxWorkspace.registerButtonCallback('OPEN_RETURN_DOCS', () => {
      window.open('https://docs.turbowarp.org/return', '_blank');
    });

    // Store the xml of the toolbox that is actually rendered.
    // This is used in componentDidUpdate instead of prevProps, because
    // the xml can change while e.g. on the costumes tab.
    this._renderedToolboxXML = this.props.toolboxXML;

    // we actually never want the workspace to enable "refresh toolbox" - this basically re-renders the
    // entire toolbox every time we reset the workspace.  We call updateToolbox as a part of
    // componentDidUpdate so the toolbox will still correctly be updated
    this.setToolboxRefreshEnabled = this.workspace.setToolboxRefreshEnabled.bind(this.workspace);
    this.workspace.setToolboxRefreshEnabled = () => {
      this.setToolboxRefreshEnabled(false);
    };

    // @todo change this when blockly supports UI events
    addFunctionListener(this.workspace, 'translate', this.onWorkspaceMetricsChange);
    addFunctionListener(this.workspace, 'zoom', this.onWorkspaceMetricsChange);
    this.attachVM();
    // Only update blocks/vm locale when visible to avoid sizing issues
    // If locale changes while not visible it will get handled in didUpdate
    if (this.props.isVisible) {
      this.setLocale();
    }

    // tw: Handle when extensions are added when Blocks isn't mounted
    for (const category of this.props.vm.runtime._blockInfo) {
      this.handleExtensionAdded(category);
    }
  }
  shouldComponentUpdate(nextProps, nextState) {
    return this.state.prompt !== nextState.prompt || this.props.isVisible !== nextProps.isVisible || this._renderedToolboxXML !== nextProps.toolboxXML || this.props.extensionLibraryVisible !== nextProps.extensionLibraryVisible || this.props.customProceduresVisible !== nextProps.customProceduresVisible || this.props.locale !== nextProps.locale || this.props.anyModalVisible !== nextProps.anyModalVisible || this.props.stageSize !== nextProps.stageSize || this.props.customStageSize !== nextProps.customStageSize;
  }
  componentDidUpdate(prevProps) {
    // If any modals are open, call hideChaff to close z-indexed field editors
    if (this.props.anyModalVisible && !prevProps.anyModalVisible) {
      this.ScratchBlocks.hideChaff();
    }

    // Only rerender the toolbox when the blocks are visible and the xml is
    // different from the previously rendered toolbox xml.
    // Do not check against prevProps.toolboxXML because that may not have been rendered.
    if (this.props.isVisible && this.props.toolboxXML !== this._renderedToolboxXML) {
      this.requestToolboxUpdate();
    }
    if (this.props.isVisible === prevProps.isVisible) {
      if (this.props.stageSize !== prevProps.stageSize || this.props.customStageSize !== prevProps.customStageSize) {
        // force workspace to redraw for the new stage size
        window.dispatchEvent(new Event('resize'));
      }
      return;
    }
    // @todo hack to resize blockly manually in case resize happened while hidden
    // @todo hack to reload the workspace due to gui bug #413
    if (this.props.isVisible) {
      // Scripts tab
      this.workspace.setVisible(true);
      if (prevProps.locale !== this.props.locale || this.props.locale !== this.props.vm.getLocale()) {
        // call setLocale if the locale has changed, or changed while the blocks were hidden.
        // vm.getLocale() will be out of sync if locale was changed while not visible
        this.setLocale();
      } else {
        this.props.vm.refreshWorkspace();
        this.requestToolboxUpdate();
      }
      window.dispatchEvent(new Event('resize'));
    } else {
      this.workspace.setVisible(false);
    }
  }
  componentWillUnmount() {
    this.detachVM();
    this.workspace.dispose();
    clearTimeout(this.toolboxUpdateTimeout);
    this.props.vm.setInEditor(false);
  }
  requestToolboxUpdate() {
    clearTimeout(this.toolboxUpdateTimeout);
    this.toolboxUpdateTimeout = setTimeout(() => {
      this.updateToolbox();
    }, 0);
  }
  setLocale() {
    this.ScratchBlocks.ScratchMsgs.setLocale(this.props.locale);
    this.props.vm.setLocale(this.props.locale, this.props.messages).then(() => {
      this.workspace.getFlyout().setRecyclingEnabled(false);
      this.props.vm.refreshWorkspace();
      this.requestToolboxUpdate();
      this.withToolboxUpdates(() => {
        this.workspace.getFlyout().setRecyclingEnabled(true);
      });
    });
  }
  updateToolbox() {
    this.toolboxUpdateTimeout = false;
    const categoryId = this.workspace.toolbox_.getSelectedCategoryId();
    const offset = this.workspace.toolbox_.getCategoryScrollOffset();
    this.workspace.updateToolbox(this.props.toolboxXML);
    this._renderedToolboxXML = this.props.toolboxXML;

    // In order to catch any changes that mutate the toolbox during "normal runtime"
    // (variable changes/etc), re-enable toolbox refresh.
    // Using the setter function will rerender the entire toolbox which we just rendered.
    this.workspace.toolboxRefreshEnabled_ = true;
    const currentCategoryPos = this.workspace.toolbox_.getCategoryPositionById(categoryId);
    const currentCategoryLen = this.workspace.toolbox_.getCategoryLengthById(categoryId);
    if (offset < currentCategoryLen) {
      this.workspace.toolbox_.setFlyoutScrollPos(currentCategoryPos + offset);
    } else {
      this.workspace.toolbox_.setFlyoutScrollPos(currentCategoryPos);
    }
    const queue = this.toolboxUpdateQueue;
    this.toolboxUpdateQueue = [];
    queue.forEach(fn => fn());
  }
  withToolboxUpdates(fn) {
    // if there is a queued toolbox update, we need to wait
    if (this.toolboxUpdateTimeout) {
      this.toolboxUpdateQueue.push(fn);
    } else {
      fn();
    }
  }
  attachVM() {
    this.workspace.addChangeListener(this.props.vm.blockListener);
    this.flyoutWorkspace = this.workspace.getFlyout().getWorkspace();
    this.flyoutWorkspace.addChangeListener(this.props.vm.flyoutBlockListener);
    this.flyoutWorkspace.addChangeListener(this.props.vm.monitorBlockListener);
    this.props.vm.addListener('SCRIPT_GLOW_ON', this.onScriptGlowOn);
    this.props.vm.addListener('SCRIPT_GLOW_OFF', this.onScriptGlowOff);
    this.props.vm.addListener('BLOCK_GLOW_ON', this.onBlockGlowOn);
    this.props.vm.addListener('BLOCK_GLOW_OFF', this.onBlockGlowOff);
    this.props.vm.addListener('VISUAL_REPORT', this.onVisualReport);
    this.props.vm.addListener('workspaceUpdate', this.onWorkspaceUpdate);
    this.props.vm.addListener('targetsUpdate', this.onTargetsUpdate);
    this.props.vm.addListener('MONITORS_UPDATE', this.handleMonitorsUpdate);
    this.props.vm.addListener('EXTENSION_ADDED', this.handleExtensionAdded);
    this.props.vm.addListener('BLOCKSINFO_UPDATE', this.handleBlocksInfoUpdate);
    this.props.vm.addListener('PERIPHERAL_CONNECTED', this.handleStatusButtonUpdate);
    this.props.vm.addListener('PERIPHERAL_DISCONNECTED', this.handleStatusButtonUpdate);
  }
  detachVM() {
    this.props.vm.removeListener('SCRIPT_GLOW_ON', this.onScriptGlowOn);
    this.props.vm.removeListener('SCRIPT_GLOW_OFF', this.onScriptGlowOff);
    this.props.vm.removeListener('BLOCK_GLOW_ON', this.onBlockGlowOn);
    this.props.vm.removeListener('BLOCK_GLOW_OFF', this.onBlockGlowOff);
    this.props.vm.removeListener('VISUAL_REPORT', this.onVisualReport);
    this.props.vm.removeListener('workspaceUpdate', this.onWorkspaceUpdate);
    this.props.vm.removeListener('targetsUpdate', this.onTargetsUpdate);
    this.props.vm.removeListener('MONITORS_UPDATE', this.handleMonitorsUpdate);
    this.props.vm.removeListener('EXTENSION_ADDED', this.handleExtensionAdded);
    this.props.vm.removeListener('BLOCKSINFO_UPDATE', this.handleBlocksInfoUpdate);
    this.props.vm.removeListener('PERIPHERAL_CONNECTED', this.handleStatusButtonUpdate);
    this.props.vm.removeListener('PERIPHERAL_DISCONNECTED', this.handleStatusButtonUpdate);
  }
  updateToolboxBlockValue(id, value) {
    this.withToolboxUpdates(() => {
      const block = this.workspace.getFlyout().getWorkspace().getBlockById(id);
      if (block) {
        block.inputList[0].fieldRow[0].setValue(value);
      }
    });
  }
  onTargetsUpdate() {
    if (this.props.vm.editingTarget && this.workspace.getFlyout()) {
      ['glide', 'move', 'set'].forEach(prefix => {
        this.updateToolboxBlockValue("".concat(prefix, "x"), Math.round(this.props.vm.editingTarget.x).toString());
        this.updateToolboxBlockValue("".concat(prefix, "y"), Math.round(this.props.vm.editingTarget.y).toString());
      });
    }
  }
  onWorkspaceMetricsChange() {
    const target = this.props.vm.editingTarget;
    if (target && target.id) {
      // Dispatch updateMetrics later, since onWorkspaceMetricsChange may be (very indirectly)
      // called from a reducer, i.e. when you create a custom procedure.
      // TODO: Is this a vehement hack?
      setTimeout(() => {
        this.props.updateMetrics({
          targetID: target.id,
          scrollX: this.workspace.scrollX,
          scrollY: this.workspace.scrollY,
          scale: this.workspace.scale
        });
      }, 0);
    }
  }
  onScriptGlowOn(data) {
    this.workspace.glowStack(data.id, true);
  }
  onScriptGlowOff(data) {
    this.workspace.glowStack(data.id, false);
  }
  onBlockGlowOn(data) {
    this.workspace.glowBlock(data.id, true);
  }
  onBlockGlowOff(data) {
    this.workspace.glowBlock(data.id, false);
  }
  onVisualReport(data) {
    this.workspace.reportValue(data.id, data.value);
  }
  getToolboxXML() {
    // Use try/catch because this requires digging pretty deep into the VM
    // Code inside intentionally ignores several error situations (no stage, etc.)
    // Because they would get caught by this try/catch
    try {
      let {
        editingTarget: target,
        runtime
      } = this.props.vm;
      const stage = runtime.getTargetForStage();
      if (!target) target = stage; // If no editingTarget, use the stage

      const stageCostumes = stage.getCostumes();
      const targetCostumes = target.getCostumes();
      const targetSounds = target.getSounds();
      const dynamicBlocksXML = this.props.vm.runtime.getBlocksXML(target);
      return Object(make_toolbox_xml["a" /* default */])(false, target.isStage, target.id, dynamicBlocksXML, targetCostumes[targetCostumes.length - 1].name, stageCostumes[stageCostumes.length - 1].name, targetSounds.length > 0 ? targetSounds[targetSounds.length - 1].name : '');
    } catch (_unused) {
      return null;
    }
  }
  onWorkspaceUpdate(data) {
    // When we change sprites, update the toolbox to have the new sprite's blocks
    const toolboxXML = this.getToolboxXML();
    if (toolboxXML) {
      this.props.updateToolboxState(toolboxXML);
    }
    if (this.props.vm.editingTarget && !this.props.workspaceMetrics.targets[this.props.vm.editingTarget.id]) {
      this.onWorkspaceMetricsChange();
    }

    // Remove and reattach the workspace listener (but allow flyout events)
    this.workspace.removeChangeListener(this.props.vm.blockListener);
    const dom = this.ScratchBlocks.Xml.textToDom(data.xml);
    try {
      this.ScratchBlocks.Xml.clearWorkspaceAndLoadFromXml(dom, this.workspace);
    } catch (error) {
      // The workspace is likely incomplete. What did update should be
      // functional.
      //
      // Instead of throwing the error, by logging it and continuing as
      // normal lets the other workspace update processes complete in the
      // gui and vm, which lets the vm run even if the workspace is
      // incomplete. Throwing the error would keep things like setting the
      // correct editing target from happening which can interfere with
      // some blocks and processes in the vm.
      if (error.message) {
        error.message = "Workspace Update Error: ".concat(error.message);
      }
      log["default"].error(error);
    }
    this.workspace.addChangeListener(this.props.vm.blockListener);
    if (this.props.vm.editingTarget && this.props.workspaceMetrics.targets[this.props.vm.editingTarget.id]) {
      const {
        scrollX,
        scrollY,
        scale
      } = this.props.workspaceMetrics.targets[this.props.vm.editingTarget.id];
      this.workspace.scrollX = scrollX;
      this.workspace.scrollY = scrollY;
      this.workspace.scale = scale;
      this.workspace.resize();
    }

    // Clear the undo state of the workspace since this is a
    // fresh workspace and we don't want any changes made to another sprites
    // workspace to be 'undone' here.
    this.workspace.clearUndo();
  }
  handleMonitorsUpdate(monitors) {
    // Update the checkboxes of the relevant monitors.
    // TODO: What about monitors that have fields? See todo in scratch-vm blocks.js changeBlock:
    // https://github.com/LLK/scratch-vm/blob/2373f9483edaf705f11d62662f7bb2a57fbb5e28/src/engine/blocks.js#L569-L576
    const flyout = this.workspace.getFlyout();
    for (const monitor of monitors.values()) {
      const blockId = monitor.get('id');
      const isVisible = monitor.get('visible');
      flyout.setCheckboxState(blockId, isVisible);
      // We also need to update the isMonitored flag for this block on the VM, since it's used to determine
      // whether the checkbox is activated or not when the checkbox is re-displayed (e.g. local variables/blocks
      // when switching between sprites).
      const block = this.props.vm.runtime.monitorBlocks.getBlock(blockId);
      if (block) {
        block.isMonitored = isVisible;
      }
    }
  }
  handleExtensionAdded(categoryInfo) {
    const defineBlocks = blockInfoArray => {
      if (blockInfoArray && blockInfoArray.length > 0) {
        const staticBlocksJson = [];
        const dynamicBlocksInfo = [];
        blockInfoArray.forEach(blockInfo => {
          if (blockInfo.info && blockInfo.info.isDynamic) {
            dynamicBlocksInfo.push(blockInfo);
          } else if (blockInfo.json) {
            staticBlocksJson.push(blockInfo.json);
          }
          // otherwise it's a non-block entry such as '---'
        });

        this.ScratchBlocks.defineBlocksWithJsonArray(staticBlocksJson);
        dynamicBlocksInfo.forEach(blockInfo => {
          // This is creating the block factory / constructor -- NOT a specific instance of the block.
          // The factory should only know static info about the block: the category info and the opcode.
          // Anything else will be picked up from the XML attached to the block instance.
          const extendedOpcode = "".concat(categoryInfo.id, "_").concat(blockInfo.info.opcode);
          const blockDefinition = define_dynamic_block(this.ScratchBlocks, categoryInfo, blockInfo, extendedOpcode);
          this.ScratchBlocks.Blocks[extendedOpcode] = blockDefinition;
        });
      }
    };

    // scratch-blocks implements a menu or custom field as a special kind of block ("shadow" block)
    // these actually define blocks and MUST run regardless of the UI state
    defineBlocks(Object.getOwnPropertyNames(categoryInfo.customFieldTypes).map(fieldTypeName => categoryInfo.customFieldTypes[fieldTypeName].scratchBlocksDefinition));
    defineBlocks(categoryInfo.menus);
    defineBlocks(categoryInfo.blocks);

    // Update the toolbox with new blocks if possible
    const toolboxXML = this.getToolboxXML();
    if (toolboxXML) {
      this.props.updateToolboxState(toolboxXML);
    }
  }
  handleBlocksInfoUpdate(categoryInfo) {
    // @todo Later we should replace this to avoid all the warnings from redefining blocks.
    this.handleExtensionAdded(categoryInfo);
  }
  handleCategorySelected(categoryId) {
    const extension = extensions["a" /* default */].find(ext => ext.extensionId === categoryId);
    if (extension && extension.launchPeripheralConnectionFlow) {
      this.handleConnectionModalStart(categoryId);
    }
    this.withToolboxUpdates(() => {
      this.workspace.toolbox_.setSelectedCategoryById(categoryId);
    });
  }
  setBlocks(blocks) {
    this.blocks = blocks;
  }
  handlePromptStart(message, defaultValue, callback, optTitle, optVarType) {
    const p = {
      prompt: {
        callback,
        message,
        defaultValue
      }
    };
    p.prompt.title = optTitle ? optTitle : this.ScratchBlocks.Msg.VARIABLE_MODAL_TITLE;
    p.prompt.varType = typeof optVarType === 'string' ? optVarType : this.ScratchBlocks.SCALAR_VARIABLE_TYPE;
    p.prompt.showVariableOptions =
    // This flag means that we should show variable/list options about scope
    optVarType !== this.ScratchBlocks.BROADCAST_MESSAGE_VARIABLE_TYPE && p.prompt.title !== this.ScratchBlocks.Msg.RENAME_VARIABLE_MODAL_TITLE && p.prompt.title !== this.ScratchBlocks.Msg.RENAME_LIST_MODAL_TITLE;
    p.prompt.showCloudOption = optVarType === this.ScratchBlocks.SCALAR_VARIABLE_TYPE && this.props.canUseCloud;
    this.setState(p);
  }
  handleConnectionModalStart(extensionId) {
    this.props.onOpenConnectionModal(extensionId);
  }
  handleStatusButtonUpdate() {
    this.ScratchBlocks.refreshStatusButtons(this.workspace);
  }
  handleOpenSoundRecorder() {
    this.props.onOpenSoundRecorder();
  }

  /*
   * Pass along information about proposed name and variable options (scope and isCloud)
   * and additional potentially conflicting variable names from the VM
   * to the variable validation prompt callback used in scratch-blocks.
   */
  handlePromptCallback(input, variableOptions) {
    this.state.prompt.callback(input, this.props.vm.runtime.getAllVarNamesOfType(this.state.prompt.varType), variableOptions);
    this.handlePromptClose();
  }
  handlePromptClose() {
    this.setState({
      prompt: null
    });
  }
  handleCustomProceduresClose(data) {
    this.props.onRequestCloseCustomProcedures(data);
    const ws = this.workspace;
    ws.refreshToolboxSelection_();
    ws.toolbox_.scrollToCategoryById('myBlocks');
  }
  handleDrop(dragInfo) {
    fetch(dragInfo.payload.bodyUrl).then(response => response.json()).then(blocks => this.props.vm.shareBlocksToTarget(blocks, this.props.vm.editingTarget.id)).then(() => {
      this.props.vm.refreshWorkspace();
      this.updateToolbox(); // To show new variables/custom blocks
    });
  }

  handleEnableProcedureReturns() {
    this.workspace.enableProcedureReturns();
    this.requestToolboxUpdate();
  }
  render() {
    /* eslint-disable no-unused-vars */
    const _this$props = this.props,
      {
        anyModalVisible,
        canUseCloud,
        customStageSize,
        customProceduresVisible,
        extensionLibraryVisible,
        options,
        stageSize,
        vm,
        isRtl,
        isVisible,
        onActivateColorPicker,
        onOpenConnectionModal,
        onOpenSoundRecorder,
        onOpenCustomExtensionModal,
        updateToolboxState,
        onActivateCustomProcedures,
        onRequestCloseExtensionLibrary,
        onRequestCloseCustomProcedures,
        toolboxXML,
        updateMetrics: updateMetricsProp,
        workspaceMetrics
      } = _this$props,
      props = containers_blocks_objectWithoutProperties(_this$props, containers_blocks_excluded);
    /* eslint-enable no-unused-vars */
    return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement(DroppableBlocks, containers_blocks_extends({
      componentRef: this.setBlocks,
      onDrop: this.handleDrop
    }, props)), this.state.prompt ? /*#__PURE__*/react_default.a.createElement(containers_prompt, {
      defaultValue: this.state.prompt.defaultValue,
      isStage: vm.runtime.getEditingTarget().isStage,
      showListMessage: this.state.prompt.varType === this.ScratchBlocks.LIST_VARIABLE_TYPE,
      label: this.state.prompt.message,
      showCloudOption: this.state.prompt.showCloudOption,
      showVariableOptions: this.state.prompt.showVariableOptions,
      title: this.state.prompt.title,
      vm: vm,
      onCancel: this.handlePromptClose,
      onOk: this.handlePromptCallback
    }) : null, extensionLibraryVisible ? /*#__PURE__*/react_default.a.createElement(extension_library, {
      vm: vm,
      onCategorySelected: this.handleCategorySelected,
      onEnableProcedureReturns: this.handleEnableProcedureReturns,
      onRequestClose: onRequestCloseExtensionLibrary,
      onOpenCustomExtensionModal: this.props.onOpenCustomExtensionModal
    }) : null, customProceduresVisible ? /*#__PURE__*/react_default.a.createElement(containers_custom_procedures, {
      options: {
        media: options.media
      },
      onRequestClose: this.handleCustomProceduresClose
    }) : null);
  }
}
blocks_Blocks.propTypes = {
  intl: index_es["f" /* intlShape */],
  anyModalVisible: prop_types_default.a.bool,
  canUseCloud: prop_types_default.a.bool,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number
  }),
  customProceduresVisible: prop_types_default.a.bool,
  extensionLibraryVisible: prop_types_default.a.bool,
  isRtl: prop_types_default.a.bool,
  isVisible: prop_types_default.a.bool,
  locale: prop_types_default.a.string.isRequired,
  messages: prop_types_default.a.objectOf(prop_types_default.a.string),
  onActivateColorPicker: prop_types_default.a.func,
  onActivateCustomProcedures: prop_types_default.a.func,
  onOpenConnectionModal: prop_types_default.a.func,
  onOpenSoundRecorder: prop_types_default.a.func,
  onOpenCustomExtensionModal: prop_types_default.a.func,
  onRequestCloseCustomProcedures: prop_types_default.a.func,
  onRequestCloseExtensionLibrary: prop_types_default.a.func,
  options: prop_types_default.a.shape({
    media: prop_types_default.a.string,
    zoom: prop_types_default.a.shape({
      controls: prop_types_default.a.bool,
      wheel: prop_types_default.a.bool,
      startScale: prop_types_default.a.number
    }),
    colours: prop_types_default.a.shape({
      workspace: prop_types_default.a.string,
      flyout: prop_types_default.a.string,
      toolbox: prop_types_default.a.string,
      toolboxSelected: prop_types_default.a.string,
      scrollbar: prop_types_default.a.string,
      scrollbarHover: prop_types_default.a.string,
      insertionMarker: prop_types_default.a.string,
      insertionMarkerOpacity: prop_types_default.a.number,
      fieldShadow: prop_types_default.a.string,
      dragShadowOpacity: prop_types_default.a.number
    }),
    comments: prop_types_default.a.bool,
    collapse: prop_types_default.a.bool
  }),
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  toolboxXML: prop_types_default.a.string,
  updateMetrics: prop_types_default.a.func,
  updateToolboxState: prop_types_default.a.func,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired,
  workspaceMetrics: prop_types_default.a.shape({
    targets: prop_types_default.a.objectOf(prop_types_default.a.object)
  })
};
blocks_Blocks.defaultOptions = {
  zoom: {
    controls: true,
    wheel: true,
    startScale: layout_constants["a" /* BLOCKS_DEFAULT_SCALE */]
  },
  grid: {
    spacing: 40,
    length: 2,
    colour: '#ddd'
  },
  colours: {
    workspace: '#F9F9F9',
    flyout: '#F9F9F9',
    toolbox: '#FFFFFF',
    toolboxSelected: '#E9EEF2',
    scrollbar: '#CECDCE',
    scrollbarHover: '#CECDCE',
    insertionMarker: '#000000',
    insertionMarkerOpacity: 0.2,
    fieldShadow: 'rgba(255, 255, 255, 0.3)',
    dragShadowOpacity: 0.6
  },
  comments: true,
  collapse: false,
  sounds: false
};
blocks_Blocks.defaultProps = {
  isVisible: true,
  options: blocks_Blocks.defaultOptions
};
const blocks_mapStateToProps = state => ({
  anyModalVisible: Object.keys(state.scratchGui.modals).some(key => state.scratchGui.modals[key]) || state.scratchGui.mode.isFullScreen,
  customStageSize: state.scratchGui.customStageSize,
  extensionLibraryVisible: state.scratchGui.modals.extensionLibrary,
  isRtl: state.locales.isRtl,
  locale: state.locales.locale,
  messages: state.locales.messages,
  toolboxXML: state.scratchGui.toolbox.toolboxXML,
  customProceduresVisible: state.scratchGui.customProcedures.active,
  workspaceMetrics: state.scratchGui.workspaceMetrics
});
const blocks_mapDispatchToProps = dispatch => ({
  onActivateColorPicker: callback => dispatch(Object(color_picker["a" /* activateColorPicker */])(callback)),
  onActivateCustomProcedures: (data, callback) => dispatch(Object(reducers_custom_procedures["a" /* activateCustomProcedures */])(data, callback)),
  onOpenConnectionModal: id => {
    dispatch(Object(connection_modal["c" /* setConnectionModalExtensionId */])(id));
    dispatch(Object(modals["q" /* openConnectionModal */])());
  },
  onOpenSoundRecorder: () => {
    dispatch(Object(editor_tab["d" /* activateTab */])(editor_tab["c" /* SOUNDS_TAB_INDEX */]));
    dispatch(Object(modals["y" /* openSoundRecorder */])());
  },
  onOpenCustomExtensionModal: () => dispatch(Object(modals["openCustomExtensionModal"])()),
  onRequestCloseExtensionLibrary: () => {
    dispatch(Object(modals["e" /* closeExtensionLibrary */])());
  },
  onRequestCloseCustomProcedures: data => {
    dispatch(Object(reducers_custom_procedures["c" /* deactivateCustomProcedures */])(data));
  },
  updateToolboxState: toolboxXML => {
    dispatch(Object(toolbox["c" /* updateToolbox */])(toolboxXML));
  },
  updateMetrics: metrics => {
    dispatch(Object(workspace_metrics["b" /* updateMetrics */])(metrics));
  }
});
/* harmony default export */ var containers_blocks = (Object(index_es["e" /* injectIntl */])(Object(error_boundary_hoc["a" /* default */])('Blocks')(Object(react_redux_es["b" /* connect */])(blocks_mapStateToProps, blocks_mapDispatchToProps)(tw_load_scratch_blocks_hoc(blocks_Blocks)))));
// EXTERNAL MODULE: ./src/reducers/hovered-target.js
var hovered_target = __webpack_require__(142);

// EXTERNAL MODULE: ./src/reducers/asset-drag.js
var asset_drag = __webpack_require__(281);

// EXTERNAL MODULE: ./node_modules/scratch-svg-renderer/src/index.js
var scratch_svg_renderer_src = __webpack_require__(140);

// CONCATENATED MODULE: ./src/lib/get-costume-url.js



// Contains 'font-family', but doesn't only contain 'font-family="none"'
const HAS_FONT_REGEXP = 'font-family(?!="none")';
const getCostumeUrl = function () {
  let cachedAssetId;
  let cachedUrl;
  return function (asset) {
    if (cachedAssetId === asset.assetId) {
      return cachedUrl;
    }
    cachedAssetId = asset.assetId;

    // If the SVG refers to fonts, they must be inlined in order to display correctly in the img tag.
    // Avoid parsing the SVG when possible, since it's expensive.
    if (asset.assetType === lib_storage["a" /* default */].AssetType.ImageVector) {
      const svgString = asset.decodeText();
      if (svgString.match(HAS_FONT_REGEXP)) {
        const svgText = Object(scratch_svg_renderer_src["inlineSvgFonts"])(svgString);
        cachedUrl = "data:image/svg+xml;utf8,".concat(encodeURIComponent(svgText));
      } else {
        cachedUrl = asset.encodeDataURI();
      }
    } else {
      cachedUrl = asset.encodeDataURI();
    }
    return cachedUrl;
  };
}();

// CONCATENATED MODULE: ./src/lib/touch-utils.js
const getEventXY = e => {
  if (e.touches && e.touches[0]) {
    return {
      x: e.touches[0].clientX,
      y: e.touches[0].clientY
    };
  } else if (e.changedTouches && e.changedTouches[0]) {
    return {
      x: e.changedTouches[0].clientX,
      y: e.changedTouches[0].clientY
    };
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
};

// CONCATENATED MODULE: ./src/lib/drag-recognizer.js


class drag_recognizer_DragRecognizer {
  /* Gesture states */
  static get STATE_UNIDENTIFIED() {
    return 'unidentified';
  }
  static get STATE_SCROLL() {
    return 'scroll';
  }
  static get STATE_DRAG() {
    return 'drag';
  }
  constructor(_ref) {
    let {
      onDrag = () => {},
      onDragEnd = () => {},
      touchDragAngle = 70,
      // Angle and distance thresholds are the same as scratch-blocks
      distanceThreshold = 3
    } = _ref;
    this._onDrag = onDrag;
    this._onDragEnd = onDragEnd;
    this._touchDragAngle = touchDragAngle;
    this._distanceThreshold = distanceThreshold;
    this._initialOffset = null;
    this._gestureState = drag_recognizer_DragRecognizer.STATE_UNIDENTIFIED;
    lodash_bindall_default()(this, ['start', 'gestureInProgress', 'reset', '_handleMove', '_handleEnd']);
  }
  start(event) {
    if (typeof event.button === 'number' && event.button !== 0) {
      return;
    }
    this._initialOffset = getEventXY(event);
    this._bindListeners();
  }
  gestureInProgress() {
    return this._gestureState !== drag_recognizer_DragRecognizer.STATE_UNIDENTIFIED;
  }
  reset() {
    this._unbindListeners();
    this._initialOffset = null;
    this._gestureState = drag_recognizer_DragRecognizer.STATE_UNIDENTIFIED;
  }

  //
  // Internal functions
  //

  _bindListeners() {
    window.addEventListener('mouseup', this._handleEnd);
    window.addEventListener('mousemove', this._handleMove);
    window.addEventListener('touchend', this._handleEnd);
    // touchmove must be marked as non-passive, or else it cannot prevent scrolling
    window.addEventListener('touchmove', this._handleMove, {
      passive: false
    });
  }
  _unbindListeners() {
    window.removeEventListener('mouseup', this._handleEnd);
    window.removeEventListener('mousemove', this._handleMove);
    window.removeEventListener('touchend', this._handleEnd);
    window.removeEventListener('touchmove', this._handleMove, {
      passive: false
    });
  }
  _handleMove(event) {
    // For gestures identified as vertical scrolls, do not process movement events
    if (this._isScroll()) return;
    const currentOffset = getEventXY(event);

    // Try to identify this gesture if it hasn't been identified already
    if (!this.gestureInProgress()) {
      const dx = currentOffset.x - this._initialOffset.x;
      const dy = currentOffset.y - this._initialOffset.y;
      const dragDistance = Math.sqrt(dx * dx + dy * dy);
      if (dragDistance < this._distanceThreshold) return;

      // For touch moves, additionally check if the angle suggests drag vs. scroll
      if (event.type === 'touchmove') {
        // Direction goes from -180 to 180, with 0 toward the right.
        let angle = Math.atan2(dy, dx) / Math.PI * 180;
        // Fold over horizontal axis, range now 0 to 180
        angle = Math.abs(angle);
        // Fold over vertical axis, range now 0 to 90
        if (angle > 90) angle = 180 - angle;
        if (angle > this._touchDragAngle) {
          this._gestureState = drag_recognizer_DragRecognizer.STATE_SCROLL;
        } else {
          this._gestureState = drag_recognizer_DragRecognizer.STATE_DRAG;
        }
      } else {
        // Mouse moves are always considered drags
        this._gestureState = drag_recognizer_DragRecognizer.STATE_DRAG;
      }
    }
    if (this._isDrag()) {
      this._onDrag(currentOffset, this._initialOffset);
      event.preventDefault();
    }
  }
  _handleEnd() {
    this.reset();
    // Call the callback after reset to make sure if gestureInProgress()
    // is used in response, it get the correct value (i.e. no gesture in progress)
    this._onDragEnd();
  }
  _isDrag() {
    return this._gestureState === drag_recognizer_DragRecognizer.STATE_DRAG;
  }
  _isScroll() {
    return this._gestureState === drag_recognizer_DragRecognizer.STATE_SCROLL;
  }
}
/* harmony default export */ var drag_recognizer = (drag_recognizer_DragRecognizer);
// EXTERNAL MODULE: ./src/components/delete-button/delete-button.css
var delete_button = __webpack_require__(371);
var delete_button_default = /*#__PURE__*/__webpack_require__.n(delete_button);

// EXTERNAL MODULE: ./src/components/delete-button/icon--delete.svg
var icon_delete = __webpack_require__(801);
var icon_delete_default = /*#__PURE__*/__webpack_require__.n(icon_delete);

// CONCATENATED MODULE: ./src/components/delete-button/delete-button.jsx





const DeleteButton = props => /*#__PURE__*/react_default.a.createElement("div", {
  "aria-label": "Delete",
  className: classnames_default()(delete_button_default.a.deleteButton, props.className),
  role: "button",
  tabIndex: props.tabIndex,
  onClick: props.onClick
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: delete_button_default.a.deleteButtonVisible
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: delete_button_default.a.deleteIcon,
  src: icon_delete_default.a
})));
DeleteButton.propTypes = {
  className: prop_types_default.a.string,
  onClick: prop_types_default.a.func.isRequired,
  tabIndex: prop_types_default.a.number
};
DeleteButton.defaultProps = {
  tabIndex: 0
};
/* harmony default export */ var delete_button_delete_button = (DeleteButton);
// EXTERNAL MODULE: ./src/components/sprite-selector-item/sprite-selector-item.css
var sprite_selector_item = __webpack_require__(121);
var sprite_selector_item_default = /*#__PURE__*/__webpack_require__.n(sprite_selector_item);

// EXTERNAL MODULE: ./node_modules/react-contextmenu/es6/index.js + 9 modules
var es6 = __webpack_require__(144);

// EXTERNAL MODULE: ./src/components/context-menu/context-menu.css
var context_menu = __webpack_require__(180);
var context_menu_default = /*#__PURE__*/__webpack_require__.n(context_menu);

// CONCATENATED MODULE: ./src/components/context-menu/context-menu.jsx
function context_menu_extends() { context_menu_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return context_menu_extends.apply(this, arguments); }




const StyledContextMenu = props => /*#__PURE__*/react_default.a.createElement(es6["a" /* ContextMenu */], context_menu_extends({}, props, {
  className: context_menu_default.a.contextMenu
}));
const StyledMenuItem = props => /*#__PURE__*/react_default.a.createElement(es6["c" /* MenuItem */], context_menu_extends({}, props, {
  attributes: {
    className: context_menu_default.a.menuItem
  }
}));
const BorderedMenuItem = props => /*#__PURE__*/react_default.a.createElement(es6["c" /* MenuItem */], context_menu_extends({}, props, {
  attributes: {
    className: classnames_default()(context_menu_default.a.menuItem, context_menu_default.a.menuItemBordered)
  }
}));
const DangerousMenuItem = props => /*#__PURE__*/react_default.a.createElement(es6["c" /* MenuItem */], context_menu_extends({}, props, {
  attributes: {
    className: classnames_default()(context_menu_default.a.menuItem, context_menu_default.a.menuItemBordered, context_menu_default.a.menuItemDanger)
  }
}));

// CONCATENATED MODULE: ./src/components/sprite-selector-item/sprite-selector-item.jsx









// react-contextmenu requires unique id to match trigger and context menu
let contextMenuId = 0;
const sprite_selector_item_SpriteSelectorItem = props => /*#__PURE__*/react_default.a.createElement(es6["b" /* ContextMenuTrigger */], {
  attributes: {
    className: classnames_default()(props.className, sprite_selector_item_default.a.spriteSelectorItem, {
      [sprite_selector_item_default.a.isSelected]: props.selected
    }),
    onClick: props.onClick,
    onMouseEnter: props.onMouseEnter,
    onMouseLeave: props.onMouseLeave,
    onMouseDown: props.onMouseDown,
    onTouchStart: props.onMouseDown
  },
  disable: props.preventContextMenu,
  id: "".concat(props.name, "-").concat(contextMenuId),
  ref: props.componentRef
}, typeof props.number === 'undefined' ? null : /*#__PURE__*/react_default.a.createElement("div", {
  className: sprite_selector_item_default.a.number
}, props.number), props.costumeURL ? /*#__PURE__*/react_default.a.createElement("div", {
  className: sprite_selector_item_default.a.spriteImageOuter
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: sprite_selector_item_default.a.spriteImageInner
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: sprite_selector_item_default.a.spriteImage,
  draggable: false,
  src: props.costumeURL
}))) : null, /*#__PURE__*/react_default.a.createElement("div", {
  className: sprite_selector_item_default.a.spriteInfo
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: sprite_selector_item_default.a.spriteName
}, props.name), props.details ? /*#__PURE__*/react_default.a.createElement("div", {
  className: sprite_selector_item_default.a.spriteDetails
}, props.details) : null), props.selected && props.onDeleteButtonClick ? /*#__PURE__*/react_default.a.createElement(delete_button_delete_button, {
  className: sprite_selector_item_default.a.deleteButton,
  onClick: props.onDeleteButtonClick
}) : null, props.onDuplicateButtonClick || props.onDeleteButtonClick || props.onExportButtonClick ? /*#__PURE__*/react_default.a.createElement(StyledContextMenu, {
  id: "".concat(props.name, "-").concat(contextMenuId++)
}, props.onDuplicateButtonClick ? /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onDuplicateButtonClick
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "duplicate",
  id: "gui.spriteSelectorItem.contextMenuDuplicate"
})) : null, props.onExportButtonClick ? /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onExportButtonClick
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "export",
  id: "gui.spriteSelectorItem.contextMenuExport"
})) : null, props.onRenameButtonClick ? /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onRenameButtonClick
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "rename",
  id: "tw.spriteSelectorItem.rename"
})) : null, props.onDeleteButtonClick ? /*#__PURE__*/react_default.a.createElement(DangerousMenuItem, {
  onClick: props.onDeleteButtonClick
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "delete",
  id: "gui.spriteSelectorItem.contextMenuDelete"
})) : null) : null);
sprite_selector_item_SpriteSelectorItem.propTypes = {
  className: prop_types_default.a.string,
  componentRef: prop_types_default.a.func,
  costumeURL: prop_types_default.a.string,
  details: prop_types_default.a.string,
  // eslint-disable-next-line react/forbid-prop-types
  name: prop_types_default.a.any,
  number: prop_types_default.a.number,
  onClick: prop_types_default.a.func,
  onDeleteButtonClick: prop_types_default.a.func,
  onDuplicateButtonClick: prop_types_default.a.func,
  onExportButtonClick: prop_types_default.a.func,
  onRenameButtonClick: prop_types_default.a.func,
  onMouseDown: prop_types_default.a.func,
  onMouseEnter: prop_types_default.a.func,
  onMouseLeave: prop_types_default.a.func,
  preventContextMenu: prop_types_default.a.bool,
  selected: prop_types_default.a.bool.isRequired
};
/* harmony default export */ var sprite_selector_item_sprite_selector_item = (sprite_selector_item_SpriteSelectorItem);
// CONCATENATED MODULE: ./src/containers/sprite-selector-item.jsx
const sprite_selector_item_excluded = ["asset", "id", "index", "onClick", "onDeleteButtonClick", "onDuplicateButtonClick", "onExportButtonClick", "onRenameButtonClick", "dragPayload", "receivedBlocks", "costumeURL", "vm"];
function sprite_selector_item_extends() { sprite_selector_item_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return sprite_selector_item_extends.apply(this, arguments); }
function sprite_selector_item_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = sprite_selector_item_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function sprite_selector_item_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }












class containers_sprite_selector_item_SpriteSelectorItem extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['getCostumeData', 'setRef', 'handleClick', 'handleDelete', 'handleDuplicate', 'handleExport', 'handleRename', 'handleMouseEnter', 'handleMouseLeave', 'handleMouseDown', 'handleDragEnd', 'handleDrag', 'handleTouchEnd']);
    this.dragRecognizer = new drag_recognizer({
      onDrag: this.handleDrag,
      onDragEnd: this.handleDragEnd
    });
  }
  componentDidMount() {
    document.addEventListener('touchend', this.handleTouchEnd);
  }
  componentWillUnmount() {
    document.removeEventListener('touchend', this.handleTouchEnd);
    this.dragRecognizer.reset();
  }
  getCostumeData() {
    if (this.props.costumeURL) return this.props.costumeURL;
    if (!this.props.asset) return null;
    return getCostumeUrl(this.props.asset);
  }
  handleDragEnd() {
    if (this.props.dragging) {
      this.props.onDrag({
        img: null,
        currentOffset: null,
        dragging: false,
        dragType: null,
        index: null
      });
    }
    setTimeout(() => {
      this.noClick = false;
    });
  }
  handleDrag(currentOffset) {
    this.props.onDrag({
      img: this.getCostumeData(),
      currentOffset: currentOffset,
      dragging: true,
      dragType: this.props.dragType,
      index: this.props.index,
      payload: this.props.dragPayload
    });
    this.noClick = true;
  }
  handleTouchEnd(e) {
    const {
      x,
      y
    } = getEventXY(e);
    const {
      top,
      left,
      bottom,
      right
    } = this.ref.getBoundingClientRect();
    if (x >= left && x <= right && y >= top && y <= bottom) {
      this.handleMouseEnter();
    }
  }
  handleMouseDown(e) {
    this.dragRecognizer.start(e);
  }
  handleClick(e) {
    e.preventDefault();
    if (!this.noClick) {
      this.props.onClick(this.props.id);
    }
  }
  handleDelete(e) {
    e.stopPropagation(); // To prevent from bubbling back to handleClick
    this.props.onDeleteButtonClick(this.props.id);
  }
  handleDuplicate(e) {
    e.stopPropagation(); // To prevent from bubbling back to handleClick
    this.props.onDuplicateButtonClick(this.props.id);
  }
  handleExport(e) {
    e.stopPropagation();
    this.props.onExportButtonClick(this.props.id);
  }
  handleRename(e) {
    e.stopPropagation();
    this.props.onRenameButtonClick(this.props.id);
  }
  handleMouseLeave() {
    this.props.dispatchSetHoveredSprite(null);
  }
  handleMouseEnter() {
    this.props.dispatchSetHoveredSprite(this.props.id);
  }
  setRef(component) {
    // Access the DOM node using .elem because it is going through ContextMenuTrigger
    this.ref = component && component.elem;
  }
  render() {
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        asset,
        id,
        index,
        onClick,
        onDeleteButtonClick,
        onDuplicateButtonClick,
        onExportButtonClick,
        onRenameButtonClick,
        dragPayload,
        receivedBlocks,
        costumeURL,
        vm
        /* eslint-enable no-unused-vars */
      } = _this$props,
      props = sprite_selector_item_objectWithoutProperties(_this$props, sprite_selector_item_excluded);
    return /*#__PURE__*/react_default.a.createElement(sprite_selector_item_sprite_selector_item, sprite_selector_item_extends({
      componentRef: this.setRef,
      costumeURL: this.getCostumeData(),
      preventContextMenu: this.dragRecognizer.gestureInProgress(),
      onClick: this.handleClick,
      onDeleteButtonClick: onDeleteButtonClick ? this.handleDelete : null,
      onDuplicateButtonClick: onDuplicateButtonClick ? this.handleDuplicate : null,
      onExportButtonClick: onExportButtonClick ? this.handleExport : null,
      onRenameButtonClick: onRenameButtonClick ? this.handleRename : null,
      onMouseDown: this.handleMouseDown,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave
    }, props));
  }
}
containers_sprite_selector_item_SpriteSelectorItem.propTypes = {
  // eslint-disable-next-line react/forbid-prop-types
  asset: prop_types_default.a.any,
  costumeURL: prop_types_default.a.string,
  dispatchSetHoveredSprite: prop_types_default.a.func.isRequired,
  // eslint-disable-next-line react/forbid-prop-types
  dragPayload: prop_types_default.a.any,
  dragType: prop_types_default.a.string,
  dragging: prop_types_default.a.bool,
  // eslint-disable-next-line react/forbid-prop-types
  id: prop_types_default.a.any,
  index: prop_types_default.a.number,
  // eslint-disable-next-line react/forbid-prop-types
  name: prop_types_default.a.any,
  onClick: prop_types_default.a.func,
  onDeleteButtonClick: prop_types_default.a.func,
  onRenameButtonClick: prop_types_default.a.func,
  onDrag: prop_types_default.a.func.isRequired,
  onDuplicateButtonClick: prop_types_default.a.func,
  onExportButtonClick: prop_types_default.a.func,
  receivedBlocks: prop_types_default.a.bool.isRequired,
  selected: prop_types_default.a.bool,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const sprite_selector_item_mapStateToProps = (state, _ref) => {
  let {
    id
  } = _ref;
  return {
    dragging: state.scratchGui.assetDrag.dragging,
    receivedBlocks: state.scratchGui.hoveredTarget.receivedBlocks && state.scratchGui.hoveredTarget.sprite === id,
    vm: state.scratchGui.vm
  };
};
const sprite_selector_item_mapDispatchToProps = dispatch => ({
  dispatchSetHoveredSprite: spriteId => {
    dispatch(Object(hovered_target["c" /* setHoveredSprite */])(spriteId));
  },
  onDrag: data => dispatch(Object(asset_drag["c" /* updateAssetDrag */])(data))
});
const ConnectedComponent = Object(react_redux_es["b" /* connect */])(sprite_selector_item_mapStateToProps, sprite_selector_item_mapDispatchToProps)(containers_sprite_selector_item_SpriteSelectorItem);
/* harmony default export */ var containers_sprite_selector_item = (ConnectedComponent);
// EXTERNAL MODULE: ./node_modules/react-tooltip/dist/index.js
var dist = __webpack_require__(66);
var dist_default = /*#__PURE__*/__webpack_require__.n(dist);

// EXTERNAL MODULE: ./src/components/action-menu/action-menu.css
var action_menu = __webpack_require__(76);
var action_menu_default = /*#__PURE__*/__webpack_require__.n(action_menu);

// CONCATENATED MODULE: ./src/components/action-menu/action-menu.jsx






const CLOSE_DELAY = 300; // ms

class action_menu_ActionMenu extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['clickDelayer', 'handleClosePopover', 'handleToggleOpenState', 'handleTouchStart', 'handleTouchOutside', 'setButtonRef', 'setContainerRef']);
    this.state = {
      isOpen: false,
      forceHide: false
    };
    this.mainTooltipId = "tooltip-".concat(Math.random());
  }
  componentDidMount() {
    // Touch start on the main button is caught to trigger open and not click
    this.buttonRef.addEventListener('touchstart', this.handleTouchStart);
    // Touch start on document is used to trigger close if it is outside
    document.addEventListener('touchstart', this.handleTouchOutside);
  }
  shouldComponentUpdate(newProps, newState) {
    // This check prevents re-rendering while the project is updating.
    // @todo check only the state and the title because it is enough to know
    //  if anything substantial has changed
    // This is needed because of the sloppy way the props are passed as a new object,
    //  which should be refactored.
    return newState.isOpen !== this.state.isOpen || newState.forceHide !== this.state.forceHide || newProps.title !== this.props.title;
  }
  componentWillUnmount() {
    this.buttonRef.removeEventListener('touchstart', this.handleTouchStart);
    document.removeEventListener('touchstart', this.handleTouchOutside);
  }
  handleClosePopover() {
    this.closeTimeoutId = setTimeout(() => {
      this.setState({
        isOpen: false
      });
      this.closeTimeoutId = null;
    }, CLOSE_DELAY);
  }
  handleToggleOpenState() {
    // Mouse enter back in after timeout was started prevents it from closing.
    if (this.closeTimeoutId) {
      clearTimeout(this.closeTimeoutId);
      this.closeTimeoutId = null;
    } else if (!this.state.isOpen) {
      this.setState({
        isOpen: true,
        forceHide: false
      });
    }
  }
  handleTouchOutside(e) {
    if (this.state.isOpen && !this.containerRef.contains(e.target)) {
      this.setState({
        isOpen: false
      });
      dist_default.a.hide();
    }
  }
  clickDelayer(fn) {
    // Return a wrapped action that manages the menu closing.
    // @todo we may be able to use react-transition for this in the future
    // for now all this work is to ensure the menu closes BEFORE the
    // (possibly slow) action is started.
    return event => {
      dist_default.a.hide();
      if (fn) fn(event);
      // Blur the button so it does not keep focus after being clicked
      // This prevents keyboard events from triggering the button
      this.buttonRef.blur();
      this.setState({
        forceHide: true,
        isOpen: false
      }, () => {
        setTimeout(() => this.setState({
          forceHide: false
        }));
      });
    };
  }
  handleTouchStart(e) {
    // Prevent this touch from becoming a click if menu is closed
    if (!this.state.isOpen) {
      e.preventDefault();
      this.handleToggleOpenState();
    }
  }
  setButtonRef(ref) {
    this.buttonRef = ref;
  }
  setContainerRef(ref) {
    this.containerRef = ref;
  }
  render() {
    const {
      className,
      img: mainImg,
      title: mainTitle,
      moreButtons,
      tooltipPlace,
      onClick
    } = this.props;
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(action_menu_default.a.menuContainer, className, {
        [action_menu_default.a.expanded]: this.state.isOpen,
        [action_menu_default.a.forceHidden]: this.state.forceHide
      }),
      ref: this.setContainerRef,
      onMouseEnter: this.handleToggleOpenState,
      onMouseLeave: this.handleClosePopover
    }, /*#__PURE__*/react_default.a.createElement("button", {
      "aria-label": mainTitle,
      className: classnames_default()(action_menu_default.a.button, action_menu_default.a.mainButton),
      "data-for": this.mainTooltipId,
      "data-tip": mainTitle,
      ref: this.setButtonRef,
      onClick: this.clickDelayer(onClick)
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: action_menu_default.a.mainIcon,
      draggable: false,
      src: mainImg
    })), /*#__PURE__*/react_default.a.createElement(dist_default.a, {
      className: action_menu_default.a.tooltip,
      effect: "solid",
      id: this.mainTooltipId,
      place: tooltipPlace || 'left'
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: action_menu_default.a.moreButtonsOuter
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: action_menu_default.a.moreButtons
    }, (moreButtons || []).map((_ref, keyId) => {
      let {
        img,
        title,
        onClick: handleClick,
        fileAccept,
        fileChange,
        fileInput,
        fileMultiple
      } = _ref;
      const isComingSoon = !handleClick;
      const hasFileInput = fileInput;
      const tooltipId = "".concat(this.mainTooltipId, "-").concat(title);
      return /*#__PURE__*/react_default.a.createElement("div", {
        key: "".concat(tooltipId, "-").concat(keyId)
      }, /*#__PURE__*/react_default.a.createElement("button", {
        "aria-label": title,
        className: classnames_default()(action_menu_default.a.button, action_menu_default.a.moreButton, {
          [action_menu_default.a.comingSoon]: isComingSoon
        }),
        "data-for": tooltipId,
        "data-tip": title,
        onClick: hasFileInput ? handleClick : this.clickDelayer(handleClick)
      }, /*#__PURE__*/react_default.a.createElement("img", {
        className: action_menu_default.a.moreIcon,
        draggable: false,
        src: img
      }), hasFileInput ? /*#__PURE__*/react_default.a.createElement("input", {
        accept: fileAccept,
        className: action_menu_default.a.fileInput,
        multiple: fileMultiple,
        ref: fileInput,
        type: "file",
        onChange: fileChange
      }) : null), /*#__PURE__*/react_default.a.createElement(dist_default.a, {
        className: classnames_default()(action_menu_default.a.tooltip, {
          [action_menu_default.a.comingSoonTooltip]: isComingSoon
        }),
        effect: "solid",
        id: tooltipId,
        place: tooltipPlace || 'left'
      }));
    }))));
  }
}
action_menu_ActionMenu.propTypes = {
  className: prop_types_default.a.string,
  img: prop_types_default.a.string,
  moreButtons: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    img: prop_types_default.a.string,
    title: prop_types_default.a.node.isRequired,
    onClick: prop_types_default.a.func,
    // Optional, "coming soon" if no callback provided
    fileAccept: prop_types_default.a.string,
    // Optional, only for file upload
    fileChange: prop_types_default.a.func,
    // Optional, only for file upload
    fileInput: prop_types_default.a.func,
    // Optional, only for file upload
    fileMultiple: prop_types_default.a.bool // Optional, only for file upload
  })),

  onClick: prop_types_default.a.func.isRequired,
  title: prop_types_default.a.node.isRequired,
  tooltipPlace: prop_types_default.a.string
};
/* harmony default export */ var action_menu_action_menu = (action_menu_ActionMenu);
// CONCATENATED MODULE: ./src/components/asset-panel/sortable-asset.jsx



class sortable_asset_SortableAsset extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['setRef']);
  }
  componentDidMount() {
    this.props.onAddSortable(this.ref);
  }
  componentWillUnmount() {
    this.props.onRemoveSortable(this.ref);
  }
  setRef(ref) {
    this.ref = ref;
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: this.props.className,
      ref: this.setRef,
      style: {
        order: this.props.index
      }
    }, this.props.children);
  }
}
sortable_asset_SortableAsset.propTypes = {
  children: prop_types_default.a.node.isRequired,
  className: prop_types_default.a.string,
  index: prop_types_default.a.number.isRequired,
  onAddSortable: prop_types_default.a.func.isRequired,
  onRemoveSortable: prop_types_default.a.func.isRequired
};
/* harmony default export */ var sortable_asset = (sortable_asset_SortableAsset);
// CONCATENATED MODULE: ./src/lib/drag-utils.js
/**
 * @fileoverview
 * Utility functions for drag interactions, e.g. sorting items in a grid/list.
 */

/**
 * From an xy position and a list of boxes {top, left, bottom, right}, return there
 * corresponding box index the position is over. The boxes are in a (possibly wrapped)
 * list, the only requirement being all boxes are flush against the edges, that is,
 * if they are along an outer edge, the position of that edge is identical.
 * This functionality works for a single column of items, a wrapped list with
 * many rows, or a single row of items.
 * @param {{x: number, y: number}} position The xy coordinates to retreive the corresponding index of.
 * @param {Array.<DOMRect>} boxes The rects of the items, returned from `getBoundingClientRect`
 * @param {bool} isRtl are the boxes in RTL order.
 * @return {?number} index of the corresponding box, or null if one could not be found.
 */
const indexForPositionOnList = (_ref, boxes, isRtl) => {
  let {
    x,
    y
  } = _ref;
  if (boxes.length === 0) return null;
  let index = null;
  const leftEdge = Math.min.apply(null, boxes.map(b => b.left));
  const rightEdge = Math.max.apply(null, boxes.map(b => b.right));
  const topEdge = Math.min.apply(null, boxes.map(b => b.top));
  const bottomEdge = Math.max.apply(null, boxes.map(b => b.bottom));
  for (let n = 0; n < boxes.length; n++) {
    const box = boxes[n];
    // Construct an "extended" box for each, extending out to infinity if
    // the box is along a boundary.
    let minX = box.left === leftEdge ? -Infinity : box.left;
    let maxX = box.right === rightEdge ? Infinity : box.right;
    const minY = box.top === topEdge ? -Infinity : box.top;
    const maxY = box.bottom === bottomEdge ? Infinity : box.bottom;
    // The last item in the wrapped list gets a right edge at infinity, even
    // if it isn't the farthest right, in RTL mode. In LTR mode, it gets a
    // left edge at infinity.
    if (n === boxes.length - 1) {
      if (isRtl) {
        minX = -Infinity;
      } else {
        maxX = Infinity;
      }
    }

    // Check if the point is in the bounds.
    if (x >= minX && x <= maxX && y >= minY && y <= maxY) {
      index = n;
      break; // No need to keep looking.
    }
  }

  return index;
};

// CONCATENATED MODULE: ./src/lib/sortable-hoc.jsx
function sortable_hoc_extends() { sortable_hoc_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return sortable_hoc_extends.apply(this, arguments); }





const sortable_hoc_SortableHOC = function SortableHOC(WrappedComponent) {
  class SortableWrapper extends react_default.a.Component {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['setRef', 'handleAddSortable', 'handleRemoveSortable']);
      this.sortableRefs = [];
      this.boxes = null;
      this.ref = null;
      this.containerBox = null;
    }
    componentWillReceiveProps(newProps) {
      if (newProps.dragInfo.dragging && !this.props.dragInfo.dragging) {
        // Drag just started, snapshot the sorted bounding boxes for sortables.
        this.boxes = this.sortableRefs.map(el => el && el.getBoundingClientRect());
        this.boxes.sort((a, b) => {
          // Sort top-to-bottom, left-to-right (in LTR) / right-to-left (in RTL).
          if (a.top === b.top) return (a.left - b.left) * (this.props.isRtl ? -1 : 1);
          return a.top - b.top;
        });
        if (!this.ref) {
          throw new Error('The containerRef must be assigned to the sortable area');
        }
        this.containerBox = this.ref.getBoundingClientRect();
      } else if (!newProps.dragInfo.dragging && this.props.dragInfo.dragging) {
        const newIndex = this.getMouseOverIndex();
        if (newIndex !== null) {
          this.props.onDrop(Object.assign({}, this.props.dragInfo, {
            newIndex
          }));
        }
      }
    }
    handleAddSortable(node) {
      this.sortableRefs.push(node);
    }
    handleRemoveSortable(node) {
      const index = this.sortableRefs.indexOf(node);
      this.sortableRefs = this.sortableRefs.slice(0, index).concat(this.sortableRefs.slice(index + 1));
    }
    getOrdering(items, draggingIndex, newIndex) {
      // An "Ordering" is an array of indices, where the position array value corresponds
      // to the position of the item in props.items, and the index of the value
      // is the index at which the item should appear.
      // That is, if props.items is ['a', 'b', 'c', 'd'], and we want the GUI to display
      // ['b', 'c', 'a, 'd'], the value of "ordering" would be [1, 2, 0, 3].
      // This mapping is used because it is easy to translate to flexbox ordering,
      // the `order` property for item N is ordering.indexOf(N).
      // If the user-facing order matches props.items, the ordering is just [0, 1, 2, ...]
      let ordering = Array(this.props.items.length).fill(0).map((_, i) => i);
      const isNumber = v => typeof v === 'number' && !isNaN(v);
      if (isNumber(draggingIndex) && isNumber(newIndex)) {
        ordering = ordering.slice(0, draggingIndex).concat(ordering.slice(draggingIndex + 1));
        ordering.splice(newIndex, 0, draggingIndex);
      }
      return ordering;
    }
    getMouseOverIndex() {
      // MouseOverIndex is the index that the current drag wants to place the
      // the dragging object. Obviously only exists if there is a drag (i.e. currentOffset).
      // Return null if outside the container, zero if there are no boxes.
      let mouseOverIndex = null;
      if (this.props.dragInfo.currentOffset) {
        const {
          x,
          y
        } = this.props.dragInfo.currentOffset;
        const {
          top,
          left,
          bottom,
          right
        } = this.containerBox;
        if (x >= left && x <= right && y >= top && y <= bottom) {
          if (this.boxes.length === 0) {
            mouseOverIndex = 0;
          } else {
            mouseOverIndex = indexForPositionOnList(this.props.dragInfo.currentOffset, this.boxes, this.props.isRtl);
          }
        }
      }
      return mouseOverIndex;
    }
    setRef(el) {
      this.ref = el;
    }
    render() {
      const {
        dragInfo: {
          index: dragIndex,
          dragType
        },
        items
      } = this.props;
      const mouseOverIndex = this.getMouseOverIndex();
      const ordering = this.getOrdering(items, dragIndex, mouseOverIndex);
      return /*#__PURE__*/react_default.a.createElement(WrappedComponent, sortable_hoc_extends({
        containerRef: this.setRef,
        draggingIndex: dragIndex,
        draggingType: dragType,
        mouseOverIndex: mouseOverIndex,
        ordering: ordering,
        onAddSortable: this.handleAddSortable,
        onRemoveSortable: this.handleRemoveSortable
      }, this.props));
    }
  }
  SortableWrapper.propTypes = {
    dragInfo: prop_types_default.a.shape({
      currentOffset: prop_types_default.a.shape({
        x: prop_types_default.a.number,
        y: prop_types_default.a.number
      }),
      dragType: prop_types_default.a.string,
      dragging: prop_types_default.a.bool,
      index: prop_types_default.a.number
    }),
    items: prop_types_default.a.arrayOf(prop_types_default.a.shape({
      url: prop_types_default.a.string,
      name: prop_types_default.a.string.isRequired
    })),
    onClose: prop_types_default.a.func,
    onDrop: prop_types_default.a.func,
    isRtl: prop_types_default.a.bool
  };
  const mapStateToProps = state => ({
    dragInfo: state.scratchGui.assetDrag,
    isRtl: state.locales.isRtl
  });
  const mapDispatchToProps = () => ({});
  return Object(react_redux_es["b" /* connect */])(mapStateToProps, mapDispatchToProps)(SortableWrapper);
};
/* harmony default export */ var sortable_hoc = (sortable_hoc_SortableHOC);
// EXTERNAL MODULE: ./src/components/asset-panel/selector.css
var selector = __webpack_require__(232);
var selector_default = /*#__PURE__*/__webpack_require__.n(selector);

// CONCATENATED MODULE: ./src/components/asset-panel/selector.jsx










const Selector = props => {
  const {
    buttons,
    containerRef,
    dragType,
    isRtl,
    items,
    selectedItemIndex,
    draggingIndex,
    draggingType,
    ordering,
    onAddSortable,
    onRemoveSortable,
    onDeleteClick,
    onDuplicateClick,
    onExportClick,
    onItemClick
  } = props;
  const isRelevantDrag = draggingType === dragType;
  let newButtonSection = null;
  if (buttons.length > 0) {
    const {
      img,
      title,
      onClick
    } = buttons[0];
    const moreButtons = buttons.slice(1);
    newButtonSection = /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: selector_default.a.newButtons
    }, /*#__PURE__*/react_default.a.createElement(action_menu_action_menu, {
      img: img,
      moreButtons: moreButtons,
      title: title,
      tooltipPlace: isRtl ? 'left' : 'right',
      onClick: onClick
    }));
  }
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: selector_default.a.wrapper,
    componentRef: containerRef
  }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: selector_default.a.listArea
  }, items.map((item, index) => /*#__PURE__*/react_default.a.createElement(sortable_asset, {
    id: item.name,
    index: isRelevantDrag ? ordering.indexOf(index) : index,
    key: item.name,
    onAddSortable: onAddSortable,
    onRemoveSortable: onRemoveSortable
  }, /*#__PURE__*/react_default.a.createElement(containers_sprite_selector_item, {
    asset: item.asset,
    className: classnames_default()(selector_default.a.listItem, {
      [selector_default.a.placeholder]: isRelevantDrag && index === draggingIndex
    }),
    costumeURL: item.url,
    details: item.details,
    dragPayload: item.dragPayload,
    dragType: dragType,
    id: index,
    index: index,
    name: item.name,
    number: index + 1 /* 1-indexed */,
    selected: index === selectedItemIndex,
    onClick: onItemClick,
    onDeleteButtonClick: onDeleteClick,
    onDuplicateButtonClick: onDuplicateClick,
    onExportButtonClick: onExportClick
  })))), newButtonSection);
};
Selector.propTypes = {
  buttons: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    title: prop_types_default.a.string.isRequired,
    img: prop_types_default.a.string.isRequired,
    onClick: prop_types_default.a.func
  })),
  containerRef: prop_types_default.a.func,
  dragType: prop_types_default.a.oneOf(Object.keys(drag_constants)),
  draggingIndex: prop_types_default.a.number,
  draggingType: prop_types_default.a.oneOf(Object.keys(drag_constants)),
  isRtl: prop_types_default.a.bool,
  items: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    url: prop_types_default.a.string,
    // eslint-disable-next-line react/forbid-prop-types
    name: prop_types_default.a.any
  })),
  onAddSortable: prop_types_default.a.func,
  onDeleteClick: prop_types_default.a.func,
  onDuplicateClick: prop_types_default.a.func,
  onExportClick: prop_types_default.a.func,
  onItemClick: prop_types_default.a.func.isRequired,
  onRemoveSortable: prop_types_default.a.func,
  ordering: prop_types_default.a.arrayOf(prop_types_default.a.number),
  selectedItemIndex: prop_types_default.a.number.isRequired
};
/* harmony default export */ var asset_panel_selector = (sortable_hoc(Selector));
// EXTERNAL MODULE: ./src/components/asset-panel/asset-panel.css
var asset_panel = __webpack_require__(372);
var asset_panel_default = /*#__PURE__*/__webpack_require__.n(asset_panel);

// CONCATENATED MODULE: ./src/components/asset-panel/asset-panel.jsx
function asset_panel_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function asset_panel_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? asset_panel_ownKeys(Object(t), !0).forEach(function (r) { asset_panel_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : asset_panel_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function asset_panel_defineProperty(obj, key, value) { key = asset_panel_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function asset_panel_toPropertyKey(arg) { var key = asset_panel_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function asset_panel_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function asset_panel_extends() { asset_panel_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return asset_panel_extends.apply(this, arguments); }




const AssetPanel = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: asset_panel_default.a.wrapper
}, /*#__PURE__*/react_default.a.createElement(asset_panel_selector, asset_panel_extends({
  className: asset_panel_default.a.selector
}, props)), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: asset_panel_default.a.detailArea
}, props.children));
AssetPanel.propTypes = asset_panel_objectSpread({}, asset_panel_selector.propTypes);
/* harmony default export */ var asset_panel_asset_panel = (AssetPanel);
// EXTERNAL MODULE: ./src/lib/tw-scratch-paint.js
var tw_scratch_paint = __webpack_require__(445);

// CONCATENATED MODULE: ./src/containers/paint-editor-wrapper.jsx
const paint_editor_wrapper_excluded = ["selectedCostumeIndex", "vm"];
function paint_editor_wrapper_extends() { paint_editor_wrapper_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return paint_editor_wrapper_extends.apply(this, arguments); }
function paint_editor_wrapper_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = paint_editor_wrapper_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function paint_editor_wrapper_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







class paint_editor_wrapper_PaintEditorWrapper extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleUpdateImage', 'handleUpdateName']);
  }
  shouldComponentUpdate(nextProps) {
    return this.props.imageId !== nextProps.imageId || this.props.rtl !== nextProps.rtl || this.props.name !== nextProps.name || this.props.isDark !== nextProps.isDark || this.props.customStageSize !== nextProps.customStageSize;
  }
  handleUpdateName(name) {
    this.props.vm.renameCostume(this.props.selectedCostumeIndex, name);
  }
  handleUpdateImage(isVector, image, rotationCenterX, rotationCenterY) {
    if (isVector) {
      this.props.vm.updateSvg(this.props.selectedCostumeIndex, image, rotationCenterX, rotationCenterY);
    } else {
      this.props.vm.updateBitmap(this.props.selectedCostumeIndex, image, rotationCenterX, rotationCenterY, 2 /* bitmapResolution */);
    }
  }

  render() {
    if (!this.props.imageId) return null;
    const _this$props = this.props,
      {
        selectedCostumeIndex,
        vm
      } = _this$props,
      componentProps = paint_editor_wrapper_objectWithoutProperties(_this$props, paint_editor_wrapper_excluded);
    return /*#__PURE__*/react_default.a.createElement(tw_scratch_paint["default"], paint_editor_wrapper_extends({}, componentProps, {
      image: vm.getCostume(selectedCostumeIndex),
      onUpdateImage: this.handleUpdateImage,
      onUpdateName: this.handleUpdateName,
      fontInlineFn: scratch_svg_renderer_src["inlineSvgFonts"],
      theme: this.props.isDark ? 'dark' : 'light',
      width: this.props.customStageSize.width,
      height: this.props.customStageSize.height
    }));
  }
}
paint_editor_wrapper_PaintEditorWrapper.propTypes = {
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.width,
    height: prop_types_default.a.number
  }),
  imageFormat: prop_types_default.a.string.isRequired,
  imageId: prop_types_default.a.string.isRequired,
  isDark: prop_types_default.a.bool,
  name: prop_types_default.a.string,
  rotationCenterX: prop_types_default.a.number,
  rotationCenterY: prop_types_default.a.number,
  rtl: prop_types_default.a.bool,
  selectedCostumeIndex: prop_types_default.a.number.isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const paint_editor_wrapper_mapStateToProps = (state, _ref) => {
  let {
    selectedCostumeIndex
  } = _ref;
  const targetId = state.scratchGui.vm.editingTarget.id;
  const sprite = state.scratchGui.vm.editingTarget.sprite;
  // Make sure the costume index doesn't go out of range.
  const index = selectedCostumeIndex < sprite.costumes.length ? selectedCostumeIndex : sprite.costumes.length - 1;
  const costume = state.scratchGui.vm.editingTarget.sprite.costumes[index];
  return {
    customStageSize: state.scratchGui.customStageSize,
    name: costume && costume.name,
    rotationCenterX: costume && costume.rotationCenterX,
    rotationCenterY: costume && costume.rotationCenterY,
    imageFormat: costume && costume.dataFormat,
    imageId: targetId && "".concat(targetId).concat(costume.skinId),
    rtl: state.locales.isRtl,
    selectedCostumeIndex: index,
    vm: state.scratchGui.vm,
    zoomLevelId: targetId
  };
};
/* harmony default export */ var paint_editor_wrapper = (Object(react_redux_es["b" /* connect */])(paint_editor_wrapper_mapStateToProps)(paint_editor_wrapper_PaintEditorWrapper));
// CONCATENATED MODULE: ./src/lib/randomize-sprite-position.js
const randomizeSpritePosition = spriteObject => {
  // https://github.com/LLK/scratch-flash/blob/689f3c79a7e8b2e98f5be80056d877f303a8d8ba/src/Scratch.as#L1385
  spriteObject.x = Math.floor(200 * Math.random() - 100);
  spriteObject.y = Math.floor(100 * Math.random() - 50);
};
/* harmony default export */ var randomize_sprite_position = (randomizeSpritePosition);
// CONCATENATED MODULE: ./src/lib/bmp-converter.js
/* harmony default export */ var bmp_converter = (function (bmpImage) {
  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'image/bmp';
  return new Promise(resolve => {
    // If the input is an ArrayBuffer, we need to convert it to a `Blob` and give it a URL so we can use it as an <img>
    // `src`. If it's a data URI, we can use it as-is.
    const imageUrl = bmpImage instanceof String ? bmpImage : window.URL.createObjectURL(new Blob([bmpImage], {
      type
    }));
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    const image = document.createElement('img');
    image.addEventListener('load', () => {
      canvas.width = image.naturalWidth;
      canvas.height = image.naturalHeight;
      ctx.drawImage(image, 0, 0);
      const dataUrl = canvas.toDataURL('image/png');

      // Revoke URL. If a blob URL was generated earlier, this allows the blob to be GC'd and prevents a memory leak.
      window.URL.revokeObjectURL(imageUrl);
      resolve(dataUrl);
    });
    image.setAttribute('src', imageUrl);
  });
});
// EXTERNAL MODULE: ./node_modules/omggif/omggif.js
var omggif = __webpack_require__(802);

// CONCATENATED MODULE: ./src/lib/gif-decoder.js

/* harmony default export */ var gif_decoder = ((arrayBuffer, onFrame) => {
  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d');
  const gifReader = new omggif["GifReader"](new Uint8Array(arrayBuffer));
  const numFrames = gifReader.numFrames();
  canvas.width = gifReader.width;
  canvas.height = gifReader.height;
  let imageData = ctx.createImageData(canvas.width, canvas.height);
  let previousData = ctx.createImageData(canvas.width, canvas.height);
  const loadFrame = i => {
    const framePixels = [];
    gifReader.decodeAndBlitFrameRGBA(i, framePixels);
    const {
      x,
      y,
      width,
      height,
      disposal
    } = gifReader.frameInfo(i);
    for (let row = 0; row < height; row++) {
      for (let column = 0; column < width; column++) {
        const indexOffset = 4 * (x + y * canvas.width);
        const j = indexOffset + 4 * (column + row * canvas.width);
        if (framePixels[j + 3]) {
          imageData.data[j + 0] = framePixels[j + 0];
          imageData.data[j + 1] = framePixels[j + 1];
          imageData.data[j + 2] = framePixels[j + 2];
          imageData.data[j + 3] = framePixels[j + 3];
        }
      }
    }
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.putImageData(imageData, 0, 0);
    const dataUrl = canvas.toDataURL();
    switch (disposal) {
      case 2:
        // "Return to background", blank out the current frame
        ctx.clearRect(x, y, width, height);
        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
        break;
      case 3:
        // "Restore to previous", copy previous data to current
        imageData = ctx.createImageData(canvas.width, canvas.height);
        imageData.data.set(previousData.data);
        break;
      default:
        // 0 and 1, as well as 4+ modes = do-not-dispose, so cache frame
        previousData = ctx.getImageData(0, 0, canvas.width, canvas.height);
        break;
    }
    onFrame(i, dataUrl, numFrames);
    if (i < numFrames - 1) {
      setTimeout(() => {
        loadFrame(i + 1);
      });
    }
  };
  loadFrame(0);
});
// EXTERNAL MODULE: ./src/lib/tw-text-encoder.js
var tw_text_encoder = __webpack_require__(114);

// CONCATENATED MODULE: ./src/lib/tw-svg-fixer.js

const fixSVG = fileData => {
  // width="100%" and height="100%" on SVGs can break things
  // Demo: https://scratch.mit.edu/projects/447085841/
  // Based on: https://github.com/ScratchAddons/ScratchAddons/pull/748
  try {
    const bytes = new Uint8Array(fileData);
    const str = new tw_text_encoder["TextDecoder"]().decode(bytes);
    const xmlDocument = new DOMParser().parseFromString(str, 'text/xml');
    const svgElement = xmlDocument.children[0];
    if (svgElement.height.baseVal.valueAsString === '100%' && svgElement.width.baseVal.valueAsString === '100%') {
      svgElement.removeAttribute('height');
      svgElement.removeAttribute('width');
      const fixed = xmlDocument.documentElement.outerHTML;
      return new tw_text_encoder["TextEncoder"]().encode(fixed).buffer;
    }
    return fileData;
  } catch (e) {
    return fileData;
  }
};
/* harmony default export */ var tw_svg_fixer = (fixSVG);
// CONCATENATED MODULE: ./src/lib/file-uploader.js






/**
 * Extract the file name given a string of the form fileName + ext
 * @param {string} nameExt File name + extension (e.g. 'my_image.png')
 * @return {string} The name without the extension, or the full name if
 * there was no '.' in the string (e.g. 'my_image')
 */
const extractFileName = function extractFileName(nameExt) {
  // There could be multiple dots, but get the stuff before the first .
  const nameParts = nameExt.split('.', 1); // we only care about the first .
  return nameParts[0];
};

/**
 * Handle a file upload given the input element that contains the file,
 * and a function to handle loading the file.
 * @param {Input} fileInput The <input/> element that contains the file being loaded
 * @param {Function} onload The function that handles loading the file
 * @param {Function} onerror The function that handles any error loading the file
 */
const handleFileUpload = function handleFileUpload(fileInput, onload, onerror) {
  const readFile = (i, files) => {
    if (i === files.length) {
      // Reset the file input value now that we have everything we need
      // so that the user can upload the same sound multiple times if
      // they choose
      fileInput.value = null;
      return;
    }
    const file = files[i];
    const reader = new FileReader();
    reader.onload = () => {
      const fileType = file.type;
      const fileName = extractFileName(file.name);
      onload(reader.result, fileType, fileName, i, files.length);
      readFile(i + 1, files);
    };
    reader.onerror = onerror;
    reader.readAsArrayBuffer(file);
  };
  readFile(0, fileInput.files);
};

/**
 * @typedef VMAsset
 * @property {string} name The user-readable name of this asset - This will
 * automatically get translated to a fresh name if this one already exists in the
 * scope of this vm asset (e.g. if a sound already exists with the same name for
 * the same target)
 * @property {string} dataFormat The data format of this asset, typically
 * the extension to be used for that particular asset, e.g. 'svg' for vector images
 * @property {string} md5 The md5 hash of the asset data, followed by '.'' and dataFormat
 * @property {string} The md5 hash of the asset data // TODO remove duplication....
 */

/**
 * Create an asset (costume, sound) with storage and return an object representation
 * of the asset to track in the VM.
 * @param {ScratchStorage} storage The storage to cache the asset in
 * @param {AssetType} assetType A ScratchStorage AssetType indicating what kind of
 * asset this is.
 * @param {string} dataFormat The format of this data (typically the file extension)
 * @param {UInt8Array} data The asset data buffer
 * @return {VMAsset} An object representing this asset and relevant information
 * which can be used to look up the data in storage
 */
const createVMAsset = function createVMAsset(storage, assetType, dataFormat, data) {
  const asset = storage.createAsset(assetType, dataFormat, data, null, true // generate md5
  );

  return {
    name: null,
    // Needs to be set by caller
    dataFormat: dataFormat,
    asset: asset,
    md5: "".concat(asset.assetId, ".").concat(dataFormat),
    assetId: asset.assetId
  };
};

/**
 * Handles loading a costume or a backdrop using the provided, context-relevant information.
 * @param {ArrayBuffer | string} fileData The costume data to load (this can be a base64 string
 * iff the image is a bitmap)
 * @param {string} fileType The MIME type of this file
 * @param {VM} vm The ScratchStorage instance to cache the costume data
 * @param {Function} handleCostume The function to execute on the costume object returned after
 * caching this costume in storage - This function should be responsible for
 * adding the costume to the VM and handling other UI flow that should come after adding the costume
 * @param {Function} handleError The function to execute if there is an error parsing the costume
 */
const file_uploader_costumeUpload = function costumeUpload(fileData, fileType, vm, handleCostume) {
  let handleError = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : () => {};
  const storage = vm.runtime.storage;
  let costumeFormat = null;
  let assetType = null;
  switch (fileType) {
    case 'image/svg+xml':
      {
        costumeFormat = storage.DataFormat.SVG;
        assetType = storage.AssetType.ImageVector;
        fileData = tw_svg_fixer(fileData);
        break;
      }
    case 'image/jpeg':
      {
        costumeFormat = storage.DataFormat.JPG;
        assetType = storage.AssetType.ImageBitmap;
        break;
      }
    case 'image/bmp':
      {
        // Convert .bmp files to .png to compress them. .bmps are completely uncompressed,
        // and would otherwise take up a lot of storage space and take much longer to upload and download.
        bmp_converter(fileData).then(dataUrl => {
          costumeUpload(dataUrl, 'image/png', vm, handleCostume);
        });
        return; // Return early because we're triggering another proper costumeUpload
      }

    case 'image/png':
      {
        costumeFormat = storage.DataFormat.PNG;
        assetType = storage.AssetType.ImageBitmap;
        break;
      }
    case 'image/webp':
      {
        // Scratch does not natively support webp, so convert to png
        // see image/bmp logic above
        bmp_converter(fileData, 'image/webp').then(dataUrl => {
          costumeUpload(dataUrl, 'image/png', vm, handleCostume);
        });
        return;
      }
    case 'image/gif':
      {
        let costumes = [];
        gif_decoder(fileData, (frameNumber, dataUrl, numFrames) => {
          costumeUpload(dataUrl, 'image/png', vm, costumes_ => {
            costumes = costumes.concat(costumes_);
            if (frameNumber === numFrames - 1) {
              handleCostume(costumes);
            }
          }, handleError);
        });
        return; // Abandon this load, do not try to load gif itself
      }

    default:
      handleError("Encountered unexpected file type: ".concat(fileType));
      return;
  }
  const bitmapAdapter = new scratch_svg_renderer_src["BitmapAdapter"]();
  if (bitmapAdapter.setStageSize) {
    const width = vm.runtime.stageWidth;
    const height = vm.runtime.stageHeight;
    bitmapAdapter.setStageSize(width, height);
  }
  const addCostumeFromBuffer = function addCostumeFromBuffer(dataBuffer) {
    const vmCostume = createVMAsset(storage, assetType, costumeFormat, dataBuffer);
    handleCostume([vmCostume]);
  };
  if (costumeFormat === storage.DataFormat.SVG) {
    // Must pass in file data as a Uint8Array,
    // passing in an array buffer causes the sprite/costume
    // thumbnails to not display because the data URI for the costume
    // is invalid
    addCostumeFromBuffer(new Uint8Array(fileData));
  } else {
    // otherwise it's a bitmap
    bitmapAdapter.importBitmap(fileData, fileType).then(addCostumeFromBuffer).catch(handleError);
  }
};

/**
 * Handles loading a sound using the provided, context-relevant information.
 * @param {ArrayBuffer} fileData The sound data to load
 * @param {string} fileType The MIME type of this file; This function will exit
 * early if the fileType is unexpected.
 * @param {ScratchStorage} storage The ScratchStorage instance to cache the sound data
 * @param {Function} handleSound The function to execute on the sound object of type VMAsset
 * This function should be responsible for adding the sound to the VM
 * as well as handling other UI flow that should come after adding the sound
 * @param {Function} handleError The function to execute if there is an error parsing the sound
 */
const soundUpload = function soundUpload(fileData, fileType, storage, handleSound, handleError) {
  let soundFormat;
  switch (fileType) {
    case 'audio/mp3':
    case 'audio/mpeg':
      {
        soundFormat = storage.DataFormat.MP3;
        break;
      }
    case 'audio/wav':
    case 'audio/wave':
    case 'audio/x-wav':
    case 'audio/x-pn-wav':
      {
        soundFormat = storage.DataFormat.WAV;
        break;
      }
    default:
      handleError("Encountered unexpected file type: ".concat(fileType));
      return;
  }
  const vmSound = createVMAsset(storage, storage.AssetType.Sound, soundFormat, new Uint8Array(fileData));
  handleSound(vmSound);
};
const file_uploader_spriteUpload = function spriteUpload(fileData, fileType, spriteName, vm, handleSprite) {
  let handleError = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : () => {};
  switch (fileType) {
    case '':
    case 'application/zip':
      {
        // We think this is a .sprite2 or .sprite3 file
        handleSprite(new Uint8Array(fileData));
        return;
      }
    case 'image/svg+xml':
    case 'image/png':
    case 'image/bmp':
    case 'image/jpeg':
    case 'image/webp':
    case 'image/gif':
      {
        // Make a sprite from an image by making it a costume first
        file_uploader_costumeUpload(fileData, fileType, vm, vmCostumes => {
          vmCostumes.forEach((costume, i) => {
            costume.name = "".concat(spriteName).concat(i ? i + 1 : '');
          });
          const newSprite = {
            name: spriteName,
            isStage: false,
            x: 0,
            // x/y will be randomized below
            y: 0,
            visible: true,
            size: 100,
            rotationStyle: 'all around',
            direction: 90,
            draggable: false,
            currentCostume: 0,
            blocks: {},
            variables: {},
            costumes: vmCostumes,
            sounds: [] // TODO are all of these necessary?
          };

          randomize_sprite_position(newSprite);
          // TODO probably just want sprite upload to handle this object directly
          handleSprite(JSON.stringify(newSprite));
        }, handleError);
        return;
      }
    default:
      {
        handleError("Encountered unexpected file type: ".concat(fileType));
        return;
      }
  }
};

// CONCATENATED MODULE: ./src/lib/empty-assets.js
/**
 * @fileoverview
 * Utility functions to return json corresponding to default empty assets.
 */

/**
 * Generate a blank costume object for vm.addCostume with the provided name.
 * @param {string} name the name to use for the costume, caller should localize
 * @return {object} vm costume object
 */
const emptyCostume = name => ({
  name: name,
  md5: 'cd21514d0531fdffb22204e0ec5ed84a.svg',
  rotationCenterX: 0,
  rotationCenterY: 0,
  bitmapResolution: 1,
  skinId: null
});

/**
 * Generate a new empty sprite. The caller should provide localized versions of the
 * default names.
 * @param {string} name the name to use for the sprite
 * @param {string} soundName the name to use for the default sound
 * @param {string} costumeName the name to use for the default costume
 * @return {object} object expected by vm.addSprite
 */
const emptySprite = (name, soundName, costumeName) => ({
  objName: name,
  sounds: [],
  costumes: [{
    costumeName: costumeName,
    baseLayerID: -1,
    baseLayerMD5: 'cd21514d0531fdffb22204e0ec5ed84a.svg',
    bitmapResolution: 1,
    rotationCenterX: 0,
    rotationCenterY: 0
  }],
  currentCostumeIndex: 0,
  scratchX: 36,
  scratchY: 28,
  scale: 1,
  direction: 90,
  rotationStyle: 'normal',
  isDraggable: false,
  visible: true,
  spriteInfo: {}
});

// EXTERNAL MODULE: ./src/lib/shared-messages.js
var shared_messages = __webpack_require__(84);

// EXTERNAL MODULE: ./src/lib/download-blob.js
var download_blob = __webpack_require__(100);

// EXTERNAL MODULE: ./src/reducers/restore-deletion.js
var restore_deletion = __webpack_require__(115);

// EXTERNAL MODULE: ./src/components/asset-panel/icon--add-backdrop-lib.svg
var icon_add_backdrop_lib = __webpack_require__(803);
var icon_add_backdrop_lib_default = /*#__PURE__*/__webpack_require__.n(icon_add_backdrop_lib);

// EXTERNAL MODULE: ./src/components/asset-panel/icon--add-costume-lib.svg
var icon_add_costume_lib = __webpack_require__(804);
var icon_add_costume_lib_default = /*#__PURE__*/__webpack_require__.n(icon_add_costume_lib);

// EXTERNAL MODULE: ./src/components/action-menu/icon--file-upload.svg
var icon_file_upload = __webpack_require__(168);
var icon_file_upload_default = /*#__PURE__*/__webpack_require__.n(icon_file_upload);

// EXTERNAL MODULE: ./src/components/action-menu/icon--paint.svg
var icon_paint = __webpack_require__(221);
var icon_paint_default = /*#__PURE__*/__webpack_require__.n(icon_paint);

// EXTERNAL MODULE: ./src/components/action-menu/icon--surprise.svg
var icon_surprise = __webpack_require__(169);
var icon_surprise_default = /*#__PURE__*/__webpack_require__.n(icon_surprise);

// EXTERNAL MODULE: ./src/components/action-menu/icon--search.svg
var icon_search = __webpack_require__(170);
var icon_search_default = /*#__PURE__*/__webpack_require__.n(icon_search);

// CONCATENATED MODULE: ./src/lib/libraries/tw-async-libraries.js
const asyncLibrary = callback => {
  let data = null;
  return () => {
    if (data) return data;
    return callback().then(mod => data = mod.default);
  };
};
const getBackdropLibrary = asyncLibrary(() => __webpack_require__.e(/* import() | library-backdrops */ 79).then(__webpack_require__.t.bind(null, 2015, 3)));
const getCostumeLibrary = asyncLibrary(() => __webpack_require__.e(/* import() | library-costumes */ 80).then(__webpack_require__.t.bind(null, 2016, 3)));
const getSoundLibrary = asyncLibrary(() => __webpack_require__.e(/* import() | library-sounds */ 81).then(__webpack_require__.t.bind(null, 2017, 3)));
const getSpriteLibrary = asyncLibrary(() => __webpack_require__.e(/* import() | library-sprites */ 82).then(__webpack_require__.t.bind(null, 2018, 3)));
// CONCATENATED MODULE: ./src/containers/costume-tab.jsx
function costume_tab_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function costume_tab_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? costume_tab_ownKeys(Object(t), !0).forEach(function (r) { costume_tab_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : costume_tab_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function costume_tab_defineProperty(obj, key, value) { key = costume_tab_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function costume_tab_toPropertyKey(arg) { var key = costume_tab_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function costume_tab_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

























let costume_tab_messages = Object(index_es["d" /* defineMessages */])({
  addLibraryBackdropMsg: {
    "id": "gui.costumeTab.addBackdropFromLibrary",
    "defaultMessage": "Choose a Backdrop"
  },
  addLibraryCostumeMsg: {
    "id": "gui.costumeTab.addCostumeFromLibrary",
    "defaultMessage": "Choose a Costume"
  },
  addBlankCostumeMsg: {
    "id": "gui.costumeTab.addBlankCostume",
    "defaultMessage": "Paint"
  },
  addSurpriseCostumeMsg: {
    "id": "gui.costumeTab.addSurpriseCostume",
    "defaultMessage": "Surprise"
  },
  addFileBackdropMsg: {
    "id": "gui.costumeTab.addFileBackdrop",
    "defaultMessage": "Upload Backdrop"
  },
  addFileCostumeMsg: {
    "id": "gui.costumeTab.addFileCostume",
    "defaultMessage": "Upload Costume"
  }
});
costume_tab_messages = costume_tab_objectSpread(costume_tab_objectSpread({}, costume_tab_messages), shared_messages["a" /* default */]);
class costume_tab_CostumeTab extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleSelectCostume', 'handleDeleteCostume', 'handleDuplicateCostume', 'handleExportCostume', 'handleNewCostume', 'handleNewBlankCostume', 'handleSurpriseCostume', 'handleSurpriseBackdrop', 'handleFileUploadClick', 'handleCostumeUpload', 'handleDrop', 'setFileInput']);
    const {
      editingTarget,
      sprites,
      stage
    } = props;
    const target = editingTarget && sprites[editingTarget] ? sprites[editingTarget] : stage;
    if (target && target.currentCostume) {
      this.state = {
        selectedCostumeIndex: target.currentCostume
      };
    } else {
      this.state = {
        selectedCostumeIndex: 0
      };
    }
  }
  componentWillReceiveProps(nextProps) {
    const {
      editingTarget,
      sprites,
      stage
    } = nextProps;
    const target = editingTarget && sprites[editingTarget] ? sprites[editingTarget] : stage;
    if (!target || !target.costumes) {
      return;
    }
    if (this.props.editingTarget === editingTarget) {
      // If costumes have been added or removed, change costumes to the editing target's
      // current costume.
      const oldTarget = this.props.sprites[editingTarget] ? this.props.sprites[editingTarget] : this.props.stage;
      // @todo: Find and switch to the index of the costume that is new. This is blocked by
      // https://github.com/LLK/scratch-vm/issues/967
      // Right now, you can land on the wrong costume if a costume changing script is running.
      if (oldTarget.costumeCount !== target.costumeCount) {
        this.setState({
          selectedCostumeIndex: target.currentCostume
        });
      }
    } else {
      // If switching editing targets, update the costume index
      this.setState({
        selectedCostumeIndex: target.currentCostume
      });
    }
  }
  handleSelectCostume(costumeIndex) {
    this.props.vm.editingTarget.setCostume(costumeIndex);
    this.setState({
      selectedCostumeIndex: costumeIndex
    });
  }
  handleDeleteCostume(costumeIndex) {
    const restoreCostumeFun = this.props.vm.deleteCostume(costumeIndex);
    this.props.dispatchUpdateRestore({
      restoreFun: restoreCostumeFun,
      deletedItem: 'Costume'
    });
  }
  handleDuplicateCostume(costumeIndex) {
    this.props.vm.duplicateCostume(costumeIndex);
  }
  handleExportCostume(costumeIndex) {
    const item = this.props.vm.editingTarget.sprite.costumes[costumeIndex];
    const blob = new Blob([item.asset.data], {
      type: item.asset.assetType.contentType
    });
    Object(download_blob["a" /* default */])("".concat(item.name, ".").concat(item.asset.dataFormat), blob);
  }
  handleNewCostume(costume, fromCostumeLibrary, targetId) {
    const costumes = Array.isArray(costume) ? costume : [costume];
    return Promise.all(costumes.map(c => {
      if (fromCostumeLibrary) {
        return this.props.vm.addCostumeFromLibrary(c.md5, c);
      }
      // If targetId is falsy, VM should default it to editingTarget.id
      // However, targetId should be provided to prevent #5876,
      // if making new costume takes a while
      return this.props.vm.addCostume(c.md5, c, targetId);
    }));
  }
  handleNewBlankCostume() {
    const name = this.props.vm.editingTarget.isStage ? this.props.intl.formatMessage(costume_tab_messages.backdrop, {
      index: 1
    }) : this.props.intl.formatMessage(costume_tab_messages.costume, {
      index: 1
    });
    this.handleNewCostume(emptyCostume(name));
  }
  async handleSurpriseCostume() {
    const costumeLibraryContent = await getCostumeLibrary();
    const item = costumeLibraryContent[Math.floor(Math.random() * costumeLibraryContent.length)];
    const vmCostume = {
      name: item.name,
      md5: item.md5ext,
      rotationCenterX: item.rotationCenterX,
      rotationCenterY: item.rotationCenterY,
      bitmapResolution: item.bitmapResolution,
      skinId: null
    };
    this.handleNewCostume(vmCostume, true /* fromCostumeLibrary */);
  }

  async handleSurpriseBackdrop() {
    const backdropLibraryContent = await getBackdropLibrary();
    const item = backdropLibraryContent[Math.floor(Math.random() * backdropLibraryContent.length)];
    const vmCostume = {
      name: item.name,
      md5: item.md5ext,
      rotationCenterX: item.rotationCenterX,
      rotationCenterY: item.rotationCenterY,
      bitmapResolution: item.bitmapResolution,
      skinId: null
    };
    this.handleNewCostume(vmCostume);
  }
  handleCostumeUpload(e) {
    const vm = this.props.vm;
    const targetId = this.props.vm.editingTarget.id;
    this.props.onShowImporting();
    handleFileUpload(e.target, (buffer, fileType, fileName, fileIndex, fileCount) => {
      file_uploader_costumeUpload(buffer, fileType, vm, vmCostumes => {
        vmCostumes.forEach((costume, i) => {
          costume.name = "".concat(fileName).concat(i ? i + 1 : '');
        });
        this.handleNewCostume(vmCostumes, false, targetId).then(() => {
          if (fileIndex === fileCount - 1) {
            this.props.onCloseImporting();
          }
        });
      }, this.props.onCloseImporting);
    }, this.props.onCloseImporting);
  }
  handleFileUploadClick() {
    this.fileInput.click();
  }
  handleDrop(dropInfo) {
    if (dropInfo.dragType === drag_constants.COSTUME) {
      const sprite = this.props.vm.editingTarget.sprite;
      const activeCostume = sprite.costumes[this.state.selectedCostumeIndex];
      this.props.vm.reorderCostume(this.props.vm.editingTarget.id, dropInfo.index, dropInfo.newIndex);
      this.setState({
        selectedCostumeIndex: sprite.costumes.indexOf(activeCostume)
      });
    } else if (dropInfo.dragType === drag_constants.BACKPACK_COSTUME) {
      this.props.vm.addCostume(dropInfo.payload.body, {
        name: dropInfo.payload.name
      });
    } else if (dropInfo.dragType === drag_constants.BACKPACK_SOUND) {
      this.props.onActivateSoundsTab();
      this.props.vm.addSound({
        md5: dropInfo.payload.body,
        name: dropInfo.payload.name
      });
    }
  }
  setFileInput(input) {
    this.fileInput = input;
  }
  formatCostumeDetails(size, optResolution) {
    // If no resolution is given, assume that the costume is an SVG
    const resolution = optResolution ? optResolution : 1;
    // Convert size to stage units by dividing by resolution
    // Round up width and height for scratch-flash compatibility
    // https://github.com/LLK/scratch-flash/blob/9fbac92ef3d09ceca0c0782f8a08deaa79e4df69/src/ui/media/MediaInfo.as#L224-L237
    return "".concat(Math.ceil(size[0] / resolution), " x ").concat(Math.ceil(size[1] / resolution));
  }
  render() {
    const {
      dispatchUpdateRestore,
      // eslint-disable-line no-unused-vars
      intl,
      isRtl,
      onNewLibraryBackdropClick,
      onNewLibraryCostumeClick,
      vm
    } = this.props;
    if (!vm.editingTarget) {
      return null;
    }
    const isStage = vm.editingTarget.isStage;
    const target = vm.editingTarget.sprite;
    const addLibraryMessage = isStage ? costume_tab_messages.addLibraryBackdropMsg : costume_tab_messages.addLibraryCostumeMsg;
    const addFileMessage = isStage ? costume_tab_messages.addFileBackdropMsg : costume_tab_messages.addFileCostumeMsg;
    const addSurpriseFunc = isStage ? this.handleSurpriseBackdrop : this.handleSurpriseCostume;
    const addLibraryFunc = isStage ? onNewLibraryBackdropClick : onNewLibraryCostumeClick;
    const addLibraryIcon = isStage ? icon_add_backdrop_lib_default.a : icon_add_costume_lib_default.a;
    const costumeData = target.costumes ? target.costumes.map(costume => ({
      name: costume.name,
      asset: costume.asset,
      details: costume.size ? this.formatCostumeDetails(costume.size, costume.bitmapResolution) : null,
      dragPayload: costume
    })) : [];
    return /*#__PURE__*/react_default.a.createElement(asset_panel_asset_panel, {
      buttons: [{
        title: intl.formatMessage(addLibraryMessage),
        img: addLibraryIcon,
        onClick: addLibraryFunc
      }, {
        title: intl.formatMessage(addFileMessage),
        img: icon_file_upload_default.a,
        onClick: this.handleFileUploadClick,
        fileAccept: '.svg, .png, .bmp, .jpg, .jpeg, .jfif, .webp, .gif',
        fileChange: this.handleCostumeUpload,
        fileInput: this.setFileInput,
        fileMultiple: true
      }, {
        title: intl.formatMessage(costume_tab_messages.addSurpriseCostumeMsg),
        img: icon_surprise_default.a,
        onClick: addSurpriseFunc
      }, {
        title: intl.formatMessage(costume_tab_messages.addBlankCostumeMsg),
        img: icon_paint_default.a,
        onClick: this.handleNewBlankCostume
      }, {
        title: intl.formatMessage(addLibraryMessage),
        img: icon_search_default.a,
        onClick: addLibraryFunc
      }],
      dragType: drag_constants.COSTUME,
      isRtl: isRtl,
      items: costumeData,
      selectedItemIndex: this.state.selectedCostumeIndex,
      onDeleteClick: target && target.costumes && target.costumes.length > 1 ? this.handleDeleteCostume : null,
      onDrop: this.handleDrop,
      onDuplicateClick: this.handleDuplicateCostume,
      onExportClick: this.handleExportCostume,
      onItemClick: this.handleSelectCostume
    }, target.costumes ? /*#__PURE__*/react_default.a.createElement(paint_editor_wrapper, {
      selectedCostumeIndex: this.state.selectedCostumeIndex,
      isDark: this.props.isDark
    }) : null);
  }
}
costume_tab_CostumeTab.propTypes = {
  dispatchUpdateRestore: prop_types_default.a.func,
  editingTarget: prop_types_default.a.string,
  intl: index_es["f" /* intlShape */],
  isDark: prop_types_default.a.bool,
  isRtl: prop_types_default.a.bool,
  onActivateSoundsTab: prop_types_default.a.func.isRequired,
  onCloseImporting: prop_types_default.a.func.isRequired,
  onNewLibraryBackdropClick: prop_types_default.a.func.isRequired,
  onNewLibraryCostumeClick: prop_types_default.a.func.isRequired,
  onShowImporting: prop_types_default.a.func.isRequired,
  sprites: prop_types_default.a.shape({
    id: prop_types_default.a.shape({
      costumes: prop_types_default.a.arrayOf(prop_types_default.a.shape({
        url: prop_types_default.a.string,
        name: prop_types_default.a.string.isRequired,
        skinId: prop_types_default.a.number
      }))
    })
  }),
  stage: prop_types_default.a.shape({
    sounds: prop_types_default.a.arrayOf(prop_types_default.a.shape({
      name: prop_types_default.a.string.isRequired
    }))
  }),
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const costume_tab_mapStateToProps = state => ({
  editingTarget: state.scratchGui.targets.editingTarget,
  isRtl: state.locales.isRtl,
  sprites: state.scratchGui.targets.sprites,
  stage: state.scratchGui.targets.stage,
  dragging: state.scratchGui.assetDrag.dragging
});
const costume_tab_mapDispatchToProps = dispatch => ({
  onActivateSoundsTab: () => dispatch(Object(editor_tab["d" /* activateTab */])(editor_tab["c" /* SOUNDS_TAB_INDEX */])),
  onNewLibraryBackdropClick: e => {
    e.preventDefault();
    dispatch(Object(modals["p" /* openBackdropLibrary */])());
  },
  onNewLibraryCostumeClick: e => {
    e.preventDefault();
    dispatch(Object(modals["r" /* openCostumeLibrary */])());
  },
  dispatchUpdateRestore: restoreState => {
    dispatch(Object(restore_deletion["c" /* setRestore */])(restoreState));
  },
  onCloseImporting: () => dispatch(Object(alerts["c" /* closeAlertWithId */])('importingAsset')),
  onShowImporting: () => dispatch(Object(alerts["i" /* showStandardAlert */])('importingAsset'))
});
/* harmony default export */ var costume_tab = (Object(error_boundary_hoc["a" /* default */])('Costume Tab')(Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(costume_tab_mapStateToProps, costume_tab_mapDispatchToProps)(costume_tab_CostumeTab))));
// CONCATENATED MODULE: ./src/lib/libraries/tag-messages.js

/* harmony default export */ var tag_messages = (Object(index_es["d" /* defineMessages */])({
  all: {
    "id": "gui.libraryTags.all",
    "defaultMessage": "All"
  },
  animals: {
    "id": "gui.libraryTags.animals",
    "defaultMessage": "Animals"
  },
  dance: {
    "id": "gui.libraryTags.dance",
    "defaultMessage": "Dance"
  },
  effects: {
    "id": "gui.libraryTags.effects",
    "defaultMessage": "Effects"
  },
  fantasy: {
    "id": "gui.libraryTags.fantasy",
    "defaultMessage": "Fantasy"
  },
  fashion: {
    "id": "gui.libraryTags.fashion",
    "defaultMessage": "Fashion"
  },
  food: {
    "id": "gui.libraryTags.food",
    "defaultMessage": "Food"
  },
  indoors: {
    "id": "gui.libraryTags.indoors",
    "defaultMessage": "Indoors"
  },
  loops: {
    "id": "gui.libraryTags.loops",
    "defaultMessage": "Loops"
  },
  music: {
    "id": "gui.libraryTags.music",
    "defaultMessage": "Music"
  },
  notes: {
    "id": "gui.libraryTags.notes",
    "defaultMessage": "Notes"
  },
  outdoors: {
    "id": "gui.libraryTags.outdoors",
    "defaultMessage": "Outdoors"
  },
  patterns: {
    "id": "gui.libraryTags.patterns",
    "defaultMessage": "Patterns"
  },
  people: {
    "id": "gui.libraryTags.people",
    "defaultMessage": "People"
  },
  percussion: {
    "id": "gui.libraryTags.percussion",
    "defaultMessage": "Percussion"
  },
  space: {
    "id": "gui.libraryTags.space",
    "defaultMessage": "Space"
  },
  sports: {
    "id": "gui.libraryTags.sports",
    "defaultMessage": "Sports"
  },
  underwater: {
    "id": "gui.libraryTags.underwater",
    "defaultMessage": "Underwater"
  },
  voice: {
    "id": "gui.libraryTags.voice",
    "defaultMessage": "Voice"
  },
  wacky: {
    "id": "gui.libraryTags.wacky",
    "defaultMessage": "Wacky"
  },
  animation: {
    "id": "gui.libraryTags.animation",
    "defaultMessage": "Animation"
  },
  art: {
    "id": "gui.libraryTags.art",
    "defaultMessage": "Art"
  },
  games: {
    "id": "gui.libraryTags.games",
    "defaultMessage": "Games"
  },
  stories: {
    "id": "gui.libraryTags.stories",
    "defaultMessage": "Stories"
  },
  letters: {
    "id": "gui.libraryTags.letters",
    "defaultMessage": "Letters"
  }
}));
// CONCATENATED MODULE: ./src/lib/libraries/sprite-tags.js

/* harmony default export */ var sprite_tags = ([{
  tag: 'animals',
  intlLabel: tag_messages.animals
}, {
  tag: 'people',
  intlLabel: tag_messages.people
}, {
  tag: 'fantasy',
  intlLabel: tag_messages.fantasy
}, {
  tag: 'dance',
  intlLabel: tag_messages.dance
}, {
  tag: 'music',
  intlLabel: tag_messages.music
}, {
  tag: 'sports',
  intlLabel: tag_messages.sports
}, {
  tag: 'food',
  intlLabel: tag_messages.food
}, {
  tag: 'fashion',
  intlLabel: tag_messages.fashion
}, {
  tag: 'letters',
  intlLabel: tag_messages.letters
}]);
// CONCATENATED MODULE: ./src/containers/sprite-library.jsx









const sprite_library_messages = Object(index_es["d" /* defineMessages */])({
  libraryTitle: {
    "id": "gui.spriteLibrary.chooseASprite",
    "defaultMessage": "Choose a Sprite"
  }
});
class sprite_library_SpriteLibrary extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleItemSelect']);
  }
  handleItemSelect(item) {
    // Randomize position of library sprite
    randomize_sprite_position(item);
    this.props.vm.addSprite(JSON.stringify(item)).then(() => {
      this.props.onActivateBlocksTab();
    });
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(library_library, {
      data: getSpriteLibrary(),
      id: "spriteLibrary",
      tags: sprite_tags,
      title: this.props.intl.formatMessage(sprite_library_messages.libraryTitle),
      onItemSelected: this.handleItemSelect,
      onRequestClose: this.props.onRequestClose
    });
  }
}
sprite_library_SpriteLibrary.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  onActivateBlocksTab: prop_types_default.a.func.isRequired,
  onRequestClose: prop_types_default.a.func,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var sprite_library = (Object(index_es["e" /* injectIntl */])(sprite_library_SpriteLibrary));
// EXTERNAL MODULE: ./src/components/forms/label.css
var forms_label = __webpack_require__(294);
var label_default = /*#__PURE__*/__webpack_require__.n(forms_label);

// CONCATENATED MODULE: ./src/components/forms/label.jsx



const Label = props => /*#__PURE__*/react_default.a.createElement("label", {
  className: props.above ? label_default.a.inputGroupColumn : label_default.a.inputGroup
}, /*#__PURE__*/react_default.a.createElement("span", {
  className: props.secondary ? label_default.a.inputLabelSecondary : label_default.a.inputLabel
}, props.text), props.children);
Label.propTypes = {
  above: prop_types_default.a.bool,
  children: prop_types_default.a.node,
  secondary: prop_types_default.a.bool,
  text: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.node]).isRequired
};
Label.defaultProps = {
  above: false,
  secondary: false
};
/* harmony default export */ var components_forms_label = (Label);
// EXTERNAL MODULE: ./src/components/forms/input.jsx
var forms_input = __webpack_require__(108);

// EXTERNAL MODULE: ./src/components/forms/buffered-input-hoc.jsx
var buffered_input_hoc = __webpack_require__(129);

// EXTERNAL MODULE: ./node_modules/react-popover/index.js
var react_popover = __webpack_require__(219);
var react_popover_default = /*#__PURE__*/__webpack_require__.n(react_popover);

// EXTERNAL MODULE: ./src/components/direction-picker/dial.css
var dial = __webpack_require__(204);
var dial_default = /*#__PURE__*/__webpack_require__.n(dial);

// EXTERNAL MODULE: ./src/components/direction-picker/icon--dial.svg
var icon_dial = __webpack_require__(805);
var icon_dial_default = /*#__PURE__*/__webpack_require__.n(icon_dial);

// EXTERNAL MODULE: ./src/components/direction-picker/icon--handle.svg
var icon_handle = __webpack_require__(806);
var icon_handle_default = /*#__PURE__*/__webpack_require__.n(icon_handle);

// CONCATENATED MODULE: ./src/components/direction-picker/dial.jsx







class dial_Dial extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleMouseDown', 'handleMouseMove', 'containerRef', 'handleRef', 'unbindMouseEvents']);
  }
  componentDidMount() {
    // Manually add touch/mouse handlers so that preventDefault can be used
    // to prevent scrolling on touch.
    // Tracked as a react issue https://github.com/facebook/react/issues/6436
    this.handleElement.addEventListener('mousedown', this.handleMouseDown);
    this.handleElement.addEventListener('touchstart', this.handleMouseDown);
  }
  componentWillUnmount() {
    this.unbindMouseEvents();
    this.handleElement.removeEventListener('mousedown', this.handleMouseDown);
    this.handleElement.removeEventListener('touchstart', this.handleMouseDown);
  }

  /**
   * Get direction from dial center to mouse move event.
   * @param {Event} e - Mouse move event.
   * @returns {number} Direction in degrees, clockwise, 90=horizontal.
   */
  directionToMouseEvent(e) {
    const {
      x: mx,
      y: my
    } = getEventXY(e);
    const bbox = this.containerElement.getBoundingClientRect();
    const cy = bbox.top + bbox.height / 2;
    const cx = bbox.left + bbox.width / 2;
    const angle = Math.atan2(my - cy, mx - cx);
    const degrees = angle * (180 / Math.PI);
    return degrees + 90; // To correspond with scratch coordinate system
  }

  /**
   * Create SVG path data string for the dial "gauge", the overlaid arc slice.
   * @param {number} radius - The radius of the dial.
   * @param {number} direction - Direction in degrees, clockwise, 90=horizontal.
   * @returns {string} Path data string for the gauge.
   */
  gaugePath(radius, direction) {
    const rads = direction * (Math.PI / 180);
    const path = [];
    path.push("M ".concat(radius, " 0"));
    path.push("L ".concat(radius, " ").concat(radius));
    path.push("L ".concat(radius + radius * Math.sin(rads), " ").concat(radius - radius * Math.cos(rads)));
    path.push("A ".concat(radius, " ").concat(radius, " 0 0 ").concat(direction < 0 ? 1 : 0, " ").concat(radius, " 0"));
    path.push("Z");
    return path.join(' ');
  }
  handleMouseMove(e) {
    this.props.onChange(this.directionToMouseEvent(e) + this.directionOffset);
    e.preventDefault();
  }
  unbindMouseEvents() {
    window.removeEventListener('mousemove', this.handleMouseMove);
    window.removeEventListener('mouseup', this.unbindMouseEvents);
    window.removeEventListener('touchmove', this.handleMouseMove);
    window.removeEventListener('touchend', this.unbindMouseEvents);
  }
  handleMouseDown(e) {
    // Because the drag handle is not a single point, there is some initial
    // difference between the current sprite direction and the direction to the mouse
    // Store this offset to prevent jumping when the mouse is moved.
    this.directionOffset = this.props.direction - this.directionToMouseEvent(e);
    window.addEventListener('mousemove', this.handleMouseMove);
    window.addEventListener('mouseup', this.unbindMouseEvents);
    window.addEventListener('touchmove', this.handleMouseMove);
    window.addEventListener('touchend', this.unbindMouseEvents);
    e.preventDefault();
  }
  containerRef(el) {
    this.containerElement = el;
  }
  handleRef(el) {
    this.handleElement = el;
  }
  render() {
    const {
      direction,
      radius
    } = this.props;
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: dial_default.a.container
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: dial_default.a.dialContainer,
      ref: this.containerRef,
      style: {
        width: "".concat(radius * 2, "px"),
        height: "".concat(radius * 2, "px")
      }
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: dial_default.a.dialFace,
      draggable: false,
      src: icon_dial_default.a
    }), /*#__PURE__*/react_default.a.createElement("svg", {
      className: dial_default.a.gauge,
      height: radius * 2,
      width: radius * 2
    }, /*#__PURE__*/react_default.a.createElement("path", {
      className: dial_default.a.gaugePath,
      d: this.gaugePath(radius, direction)
    })), /*#__PURE__*/react_default.a.createElement("img", {
      className: dial_default.a.dialHandle,
      draggable: false,
      ref: this.handleRef,
      src: icon_handle_default.a,
      style: {
        top: "".concat(radius - radius * Math.cos(direction * (Math.PI / 180)), "px"),
        left: "".concat(radius + radius * Math.sin(direction * (Math.PI / 180)), "px"),
        transform: "rotate(".concat(direction, "deg)")
      }
    })));
  }
}
dial_Dial.propTypes = {
  direction: prop_types_default.a.number,
  onChange: prop_types_default.a.func.isRequired,
  radius: prop_types_default.a.number
};
dial_Dial.defaultProps = {
  direction: 90,
  // degrees
  radius: 56 // px
};

/* harmony default export */ var direction_picker_dial = (dial_Dial);
// EXTERNAL MODULE: ./src/components/direction-picker/direction-picker.css
var direction_picker = __webpack_require__(181);
var direction_picker_default = /*#__PURE__*/__webpack_require__.n(direction_picker);

// EXTERNAL MODULE: ./src/components/direction-picker/icon--all-around.svg
var icon_all_around = __webpack_require__(807);
var icon_all_around_default = /*#__PURE__*/__webpack_require__.n(icon_all_around);

// EXTERNAL MODULE: ./src/components/direction-picker/icon--left-right.svg
var icon_left_right = __webpack_require__(808);
var icon_left_right_default = /*#__PURE__*/__webpack_require__.n(icon_left_right);

// EXTERNAL MODULE: ./src/components/direction-picker/icon--dont-rotate.svg
var icon_dont_rotate = __webpack_require__(809);
var icon_dont_rotate_default = /*#__PURE__*/__webpack_require__.n(icon_dont_rotate);

// CONCATENATED MODULE: ./src/components/direction-picker/direction-picker.jsx













const BufferedInput = Object(buffered_input_hoc["a" /* default */])(forms_input["a" /* default */]);
const directionLabel = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Direction",
  id: "gui.SpriteInfo.direction"
});
const RotationStyles = {
  ALL_AROUND: 'all around',
  LEFT_RIGHT: 'left-right',
  DONT_ROTATE: "don't rotate"
};
const direction_picker_messages = Object(index_es["d" /* defineMessages */])({
  allAround: {
    "id": "gui.directionPicker.rotationStyles.allAround",
    "defaultMessage": "All Around"
  },
  leftRight: {
    "id": "gui.directionPicker.rotationStyles.leftRight",
    "defaultMessage": "Left/Right"
  },
  dontRotate: {
    "id": "gui.directionPicker.rotationStyles.dontRotate",
    "defaultMessage": "Do not rotate"
  }
});
const direction_picker_DirectionPicker = props => /*#__PURE__*/react_default.a.createElement(components_forms_label, {
  secondary: true,
  above: props.labelAbove,
  text: directionLabel
}, /*#__PURE__*/react_default.a.createElement(react_popover_default.a, {
  body: /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(direction_picker_dial, {
    direction: props.direction,
    onChange: props.onChangeDirection
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: direction_picker_default.a.buttonRow
  }, /*#__PURE__*/react_default.a.createElement("button", {
    className: classnames_default()(direction_picker_default.a.iconButton, {
      [direction_picker_default.a.active]: props.rotationStyle === RotationStyles.ALL_AROUND
    }),
    title: props.intl.formatMessage(direction_picker_messages.allAround),
    onClick: props.onClickAllAround
  }, /*#__PURE__*/react_default.a.createElement("img", {
    draggable: false,
    src: icon_all_around_default.a
  })), /*#__PURE__*/react_default.a.createElement("button", {
    className: classnames_default()(direction_picker_default.a.iconButton, {
      [direction_picker_default.a.active]: props.rotationStyle === RotationStyles.LEFT_RIGHT
    }),
    title: props.intl.formatMessage(direction_picker_messages.leftRight),
    onClick: props.onClickLeftRight
  }, /*#__PURE__*/react_default.a.createElement("img", {
    draggable: false,
    src: icon_left_right_default.a
  })), /*#__PURE__*/react_default.a.createElement("button", {
    className: classnames_default()(direction_picker_default.a.iconButton, {
      [direction_picker_default.a.active]: props.rotationStyle === RotationStyles.DONT_ROTATE
    }),
    title: props.intl.formatMessage(direction_picker_messages.dontRotate),
    onClick: props.onClickDontRotate
  }, /*#__PURE__*/react_default.a.createElement("img", {
    draggable: false,
    src: icon_dont_rotate_default.a
  })))),
  isOpen: props.popoverOpen,
  preferPlace: "above",
  onOuterAction: props.onClosePopover
}, /*#__PURE__*/react_default.a.createElement(BufferedInput, {
  small: true,
  disabled: props.disabled,
  label: directionLabel,
  tabIndex: "0",
  type: "text",
  value: props.disabled ? '' : props.direction,
  onFocus: props.onOpenPopover,
  onSubmit: props.onChangeDirection
})));
direction_picker_DirectionPicker.propTypes = {
  direction: prop_types_default.a.number,
  disabled: prop_types_default.a.bool.isRequired,
  intl: index_es["f" /* intlShape */],
  labelAbove: prop_types_default.a.bool,
  onChangeDirection: prop_types_default.a.func.isRequired,
  onClickAllAround: prop_types_default.a.func.isRequired,
  onClickDontRotate: prop_types_default.a.func.isRequired,
  onClickLeftRight: prop_types_default.a.func.isRequired,
  onClosePopover: prop_types_default.a.func.isRequired,
  onOpenPopover: prop_types_default.a.func.isRequired,
  popoverOpen: prop_types_default.a.bool.isRequired,
  rotationStyle: prop_types_default.a.string
};
direction_picker_DirectionPicker.defaultProps = {
  labelAbove: false
};
const WrappedDirectionPicker = Object(index_es["e" /* injectIntl */])(direction_picker_DirectionPicker);

// CONCATENATED MODULE: ./src/containers/direction-picker.jsx




class containers_direction_picker_DirectionPicker extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleOpenPopover', 'handleClosePopover', 'handleClickLeftRight', 'handleClickDontRotate', 'handleClickAllAround']);
    this.state = {
      popoverOpen: false
    };
  }
  handleOpenPopover() {
    this.setState({
      popoverOpen: true
    });
  }
  handleClosePopover() {
    this.setState({
      popoverOpen: false
    });
  }
  handleClickAllAround() {
    this.props.onChangeRotationStyle(RotationStyles.ALL_AROUND);
  }
  handleClickLeftRight() {
    this.props.onChangeRotationStyle(RotationStyles.LEFT_RIGHT);
  }
  handleClickDontRotate() {
    this.props.onChangeRotationStyle(RotationStyles.DONT_ROTATE);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(WrappedDirectionPicker, {
      direction: this.props.direction,
      disabled: this.props.disabled,
      labelAbove: this.props.labelAbove,
      popoverOpen: this.state.popoverOpen && !this.props.disabled,
      rotationStyle: this.props.rotationStyle,
      onChangeDirection: this.props.onChangeDirection,
      onClickAllAround: this.handleClickAllAround,
      onClickDontRotate: this.handleClickDontRotate,
      onClickLeftRight: this.handleClickLeftRight,
      onClosePopover: this.handleClosePopover,
      onOpenPopover: this.handleOpenPopover
    });
  }
}
containers_direction_picker_DirectionPicker.propTypes = {
  direction: prop_types_default.a.number,
  disabled: prop_types_default.a.bool,
  labelAbove: prop_types_default.a.bool,
  onChangeDirection: prop_types_default.a.func,
  onChangeRotationStyle: prop_types_default.a.func,
  rotationStyle: prop_types_default.a.string
};
/* harmony default export */ var containers_direction_picker = (containers_direction_picker_DirectionPicker);
// CONCATENATED MODULE: ./src/lib/locale-utils.js
/**
 * @fileoverview
 * Utility functions related to localization specific to the GUI
 */

const wideLocales = ['ab', 'ca', 'de', 'el', 'it', 'ja', 'ja-Hira', 'ko', 'hu', 'ru', 'vi'];

/**
 * Identify the languages where translations are too long to fit in fixed width parts of the gui.
 * @param {string} locale The current locale.
 * @return {bool} true if translations in this language are too long
 */

const isWideLocale = locale => wideLocales.indexOf(locale) !== -1;

// EXTERNAL MODULE: ./src/components/sprite-info/sprite-info.css
var sprite_info = __webpack_require__(28);
var sprite_info_default = /*#__PURE__*/__webpack_require__.n(sprite_info);

// EXTERNAL MODULE: ./src/components/sprite-info/icon--x.svg
var sprite_info_icon_x = __webpack_require__(810);
var sprite_info_icon_x_default = /*#__PURE__*/__webpack_require__.n(sprite_info_icon_x);

// EXTERNAL MODULE: ./src/components/sprite-info/icon--y.svg
var icon_y = __webpack_require__(811);
var icon_y_default = /*#__PURE__*/__webpack_require__.n(icon_y);

// EXTERNAL MODULE: ./src/components/sprite-info/icon--show.svg
var icon_show = __webpack_require__(812);
var icon_show_default = /*#__PURE__*/__webpack_require__.n(icon_show);

// EXTERNAL MODULE: ./src/components/sprite-info/icon--hide.svg
var icon_hide = __webpack_require__(813);
var icon_hide_default = /*#__PURE__*/__webpack_require__.n(icon_hide);

// CONCATENATED MODULE: ./src/components/sprite-info/sprite-info.jsx
















const sprite_info_BufferedInput = Object(buffered_input_hoc["a" /* default */])(forms_input["a" /* default */]);
const sprite_info_messages = Object(index_es["d" /* defineMessages */])({
  spritePlaceholder: {
    "id": "gui.SpriteInfo.spritePlaceholder",
    "defaultMessage": "Name"
  }
});
class sprite_info_SpriteInfo extends react_default.a.Component {
  shouldComponentUpdate(nextProps) {
    return this.props.rotationStyle !== nextProps.rotationStyle || this.props.disabled !== nextProps.disabled || this.props.name !== nextProps.name || this.props.stageSize !== nextProps.stageSize || this.props.visible !== nextProps.visible ||
    // Only update these if rounded value has changed
    Math.round(this.props.direction) !== Math.round(nextProps.direction) || Math.round(this.props.size) !== Math.round(nextProps.size) || Math.round(this.props.x) !== Math.round(nextProps.x) || Math.round(this.props.y) !== Math.round(nextProps.y);
  }
  render() {
    const {
      stageSize
    } = this.props;
    const sprite = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Sprite",
      id: "gui.SpriteInfo.sprite"
    });
    const showLabel = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Show",
      id: "gui.SpriteInfo.show"
    });
    const sizeLabel = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Size",
      id: "gui.SpriteInfo.size"
    });
    const labelAbove = isWideLocale(this.props.intl.locale);
    const spriteNameInput = /*#__PURE__*/react_default.a.createElement(sprite_info_BufferedInput, {
      className: classnames_default()(sprite_info_default.a.spriteInput, {
        [sprite_info_default.a.columnInput]: labelAbove
      }),
      disabled: this.props.disabled,
      placeholder: this.props.intl.formatMessage(sprite_info_messages.spritePlaceholder),
      tabIndex: "0",
      type: "text",
      value: this.props.disabled ? '' : this.props.name,
      onSubmit: this.props.onChangeName
    });
    const xPosition = /*#__PURE__*/react_default.a.createElement("div", {
      className: sprite_info_default.a.group
    }, stageSize === layout_constants["c" /* STAGE_DISPLAY_SIZES */].large ? /*#__PURE__*/react_default.a.createElement("div", {
      className: sprite_info_default.a.iconWrapper
    }, /*#__PURE__*/react_default.a.createElement("img", {
      "aria-hidden": "true",
      className: classnames_default()(sprite_info_default.a.xIcon, sprite_info_default.a.icon),
      src: sprite_info_icon_x_default.a
    })) : null, /*#__PURE__*/react_default.a.createElement(components_forms_label, {
      text: "x"
    }, /*#__PURE__*/react_default.a.createElement(sprite_info_BufferedInput, {
      small: true,
      disabled: this.props.disabled,
      placeholder: "x",
      tabIndex: "0",
      type: "text",
      value: this.props.disabled ? '' : Math.round(this.props.x),
      onSubmit: this.props.onChangeX
    })));
    const yPosition = /*#__PURE__*/react_default.a.createElement("div", {
      className: sprite_info_default.a.group
    }, stageSize === layout_constants["c" /* STAGE_DISPLAY_SIZES */].large ? /*#__PURE__*/react_default.a.createElement("div", {
      className: sprite_info_default.a.iconWrapper
    }, /*#__PURE__*/react_default.a.createElement("img", {
      "aria-hidden": "true",
      className: classnames_default()(sprite_info_default.a.yIcon, sprite_info_default.a.icon),
      src: icon_y_default.a
    })) : null, /*#__PURE__*/react_default.a.createElement(components_forms_label, {
      text: "y"
    }, /*#__PURE__*/react_default.a.createElement(sprite_info_BufferedInput, {
      small: true,
      disabled: this.props.disabled,
      placeholder: "y",
      tabIndex: "0",
      type: "text",
      value: this.props.disabled ? '' : Math.round(this.props.y),
      onSubmit: this.props.onChangeY
    })));
    if (stageSize === layout_constants["c" /* STAGE_DISPLAY_SIZES */].small) {
      return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
        className: sprite_info_default.a.spriteInfo
      }, /*#__PURE__*/react_default.a.createElement("div", {
        className: classnames_default()(sprite_info_default.a.row, sprite_info_default.a.rowPrimary)
      }, /*#__PURE__*/react_default.a.createElement("div", {
        className: sprite_info_default.a.group
      }, spriteNameInput)), /*#__PURE__*/react_default.a.createElement("div", {
        className: classnames_default()(sprite_info_default.a.row, sprite_info_default.a.rowSecondary)
      }, xPosition, yPosition));
    }
    return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: sprite_info_default.a.spriteInfo
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(sprite_info_default.a.row, sprite_info_default.a.rowPrimary)
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: sprite_info_default.a.group
    }, /*#__PURE__*/react_default.a.createElement(components_forms_label, {
      above: labelAbove,
      text: sprite
    }, spriteNameInput)), xPosition, yPosition), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(sprite_info_default.a.row, sprite_info_default.a.rowSecondary)
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: labelAbove ? sprite_info_default.a.column : sprite_info_default.a.group
    }, stageSize === layout_constants["c" /* STAGE_DISPLAY_SIZES */].large ? /*#__PURE__*/react_default.a.createElement(components_forms_label, {
      secondary: true,
      text: showLabel
    }) : null, /*#__PURE__*/react_default.a.createElement("div", {
      className: sprite_info_default.a.radioWrapper
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(sprite_info_default.a.radio, sprite_info_default.a.radioFirst, sprite_info_default.a.iconWrapper, {
        [sprite_info_default.a.isActive]: this.props.visible && !this.props.disabled,
        [sprite_info_default.a.isDisabled]: this.props.disabled
      }),
      tabIndex: "0",
      onClick: this.props.onClickVisible,
      onKeyPress: this.props.onPressVisible
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: sprite_info_default.a.icon,
      src: icon_show_default.a
    })), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(sprite_info_default.a.radio, sprite_info_default.a.radioLast, sprite_info_default.a.iconWrapper, {
        [sprite_info_default.a.isActive]: !this.props.visible && !this.props.disabled,
        [sprite_info_default.a.isDisabled]: this.props.disabled
      }),
      tabIndex: "0",
      onClick: this.props.onClickNotVisible,
      onKeyPress: this.props.onPressNotVisible
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: sprite_info_default.a.icon,
      src: icon_hide_default.a
    })))), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(sprite_info_default.a.group, sprite_info_default.a.largerInput)
    }, /*#__PURE__*/react_default.a.createElement(components_forms_label, {
      secondary: true,
      above: labelAbove,
      text: sizeLabel
    }, /*#__PURE__*/react_default.a.createElement(sprite_info_BufferedInput, {
      small: true,
      disabled: this.props.disabled,
      label: sizeLabel,
      tabIndex: "0",
      type: "text",
      value: this.props.disabled ? '' : Math.round(this.props.size),
      onSubmit: this.props.onChangeSize
    }))), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(sprite_info_default.a.group, sprite_info_default.a.largerInput)
    }, /*#__PURE__*/react_default.a.createElement(containers_direction_picker, {
      direction: Math.round(this.props.direction),
      disabled: this.props.disabled,
      labelAbove: labelAbove,
      rotationStyle: this.props.rotationStyle,
      onChangeDirection: this.props.onChangeDirection,
      onChangeRotationStyle: this.props.onChangeRotationStyle
    }))));
  }
}
sprite_info_SpriteInfo.propTypes = {
  direction: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
  disabled: prop_types_default.a.bool,
  intl: index_es["f" /* intlShape */],
  name: prop_types_default.a.string,
  onChangeDirection: prop_types_default.a.func,
  onChangeName: prop_types_default.a.func,
  onChangeRotationStyle: prop_types_default.a.func,
  onChangeSize: prop_types_default.a.func,
  onChangeX: prop_types_default.a.func,
  onChangeY: prop_types_default.a.func,
  onClickNotVisible: prop_types_default.a.func,
  onClickVisible: prop_types_default.a.func,
  onPressNotVisible: prop_types_default.a.func,
  onPressVisible: prop_types_default.a.func,
  rotationStyle: prop_types_default.a.string,
  size: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  visible: prop_types_default.a.bool,
  x: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
  y: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])
};
/* harmony default export */ var sprite_info_sprite_info = (Object(index_es["e" /* injectIntl */])(sprite_info_SpriteInfo));
// CONCATENATED MODULE: ./src/containers/sprite-info.jsx
function sprite_info_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function sprite_info_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? sprite_info_ownKeys(Object(t), !0).forEach(function (r) { sprite_info_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : sprite_info_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function sprite_info_defineProperty(obj, key, value) { key = sprite_info_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function sprite_info_toPropertyKey(arg) { var key = sprite_info_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function sprite_info_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function sprite_info_extends() { sprite_info_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return sprite_info_extends.apply(this, arguments); }




class containers_sprite_info_SpriteInfo extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClickVisible', 'handleClickNotVisible', 'handlePressVisible', 'handlePressNotVisible']);
  }
  handleClickVisible(e) {
    e.preventDefault();
    this.props.onChangeVisibility(true);
  }
  handleClickNotVisible(e) {
    e.preventDefault();
    this.props.onChangeVisibility(false);
  }
  handlePressVisible(e) {
    if (e.key === ' ' || e.key === 'Enter') {
      e.preventDefault();
      this.props.onChangeVisibility(true);
    }
  }
  handlePressNotVisible(e) {
    if (e.key === ' ' || e.key === 'Enter') {
      e.preventDefault();
      this.props.onChangeVisibility(false);
    }
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(sprite_info_sprite_info, sprite_info_extends({}, this.props, {
      onClickNotVisible: this.handleClickNotVisible,
      onClickVisible: this.handleClickVisible,
      onPressNotVisible: this.handlePressNotVisible,
      onPressVisible: this.handlePressVisible
    }));
  }
}
containers_sprite_info_SpriteInfo.propTypes = sprite_info_objectSpread(sprite_info_objectSpread({}, sprite_info_sprite_info.propTypes), {}, {
  onChangeDirection: prop_types_default.a.func,
  onChangeName: prop_types_default.a.func,
  onChangeSize: prop_types_default.a.func,
  onChangeVisibility: prop_types_default.a.func,
  onChangeX: prop_types_default.a.func,
  onChangeY: prop_types_default.a.func,
  x: prop_types_default.a.number,
  y: prop_types_default.a.number
});
/* harmony default export */ var containers_sprite_info = (containers_sprite_info_SpriteInfo);
// CONCATENATED MODULE: ./src/lib/throttled-property-hoc.jsx


/* Higher Order Component to throttle updates to specific props.
 * Why? Because certain prop updates are expensive, and need to be throttled.
 * This allows renders when other properties change, and will use the last
 * rendered value of a prop for comparison.
 * @param {string} propName the name of the prop to throttle updates from.
 * @param {string} throttleTime the minimum time between updates to that specific property.
 * @returns {function} a function that accepts a component to wrap.
 */
const throttled_property_hoc_ThrottledPropertyHOC = function ThrottledPropertyHOC(propName, throttleTime) {
  /**
   * The function to be called with a React component to wrap it.
   * @param {React.Component} WrappedComponent - Component to wrap with throttler.
   * @returns {React.Component} the component wrapped with the throttler.
   */
  return function (WrappedComponent) {
    class ThrottledPropertyWrapper extends react_default.a.Component {
      shouldComponentUpdate(nextProps) {
        for (const property in nextProps) {
          if (property !== propName && this.props[property] !== nextProps[property]) {
            return true; // Always update if another property has changed
          }
        }

        // If only that prop has changed, allow update to go to render based
        // on _lastRenderedTime and _lastRenderTime are updated in render
        if (nextProps[propName] !== this._lastRenderedValue && Date.now() - this._lastRenderTime > throttleTime) {
          return true; // Allow this update to go to render
        }

        return false;
      }
      render() {
        this._lastRenderTime = Date.now();
        this._lastRenderedValue = this.props[propName];
        return /*#__PURE__*/react_default.a.createElement(WrappedComponent, this.props);
      }
    }
    return ThrottledPropertyWrapper;
  };
};
/* harmony default export */ var throttled_property_hoc = (throttled_property_hoc_ThrottledPropertyHOC);
// EXTERNAL MODULE: ./src/components/sprite-selector/sprite-selector.css
var sprite_selector = __webpack_require__(110);
var sprite_selector_default = /*#__PURE__*/__webpack_require__.n(sprite_selector);

// CONCATENATED MODULE: ./src/components/sprite-selector/sprite-list.jsx










const ThrottledSpriteSelectorItem = throttled_property_hoc('asset', 500)(containers_sprite_selector_item);
const sprite_list_SpriteList = function SpriteList(props) {
  const {
    containerRef,
    editingTarget,
    draggingIndex,
    draggingType,
    hoveredTarget,
    onDeleteSprite,
    onDuplicateSprite,
    onExportSprite,
    onSelectSprite,
    onAddSortable,
    onRemoveSortable,
    ordering,
    raised,
    selectedId,
    items
  } = props;
  const isSpriteDrag = draggingType === drag_constants.SPRITE;
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: classnames_default()(sprite_selector_default.a.scrollWrapper, {
      [sprite_selector_default.a.scrollWrapperDragging]: draggingType === drag_constants.BACKPACK_SPRITE
    }),
    componentRef: containerRef
  }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: sprite_selector_default.a.itemsWrapper
  }, items.map((sprite, index) => {
    // If the sprite has just received a block drop, used for green highlight
    const receivedBlocks = hoveredTarget.sprite === sprite.id && sprite.id !== editingTarget && hoveredTarget.receivedBlocks;

    // If the sprite is indicating it can receive block dropping, used for blue highlight
    let isRaised = !receivedBlocks && raised && sprite.id !== editingTarget;

    // A sprite is also raised if a costume or sound is being dragged.
    // Note the absence of the self-sharing check: a sprite can share assets with itself.
    // This is a quirk of 2.0, but seems worth leaving possible, it
    // allows quick (albeit unusual) duplication of assets.
    isRaised = isRaised || [drag_constants.COSTUME, drag_constants.SOUND, drag_constants.BACKPACK_COSTUME, drag_constants.BACKPACK_SOUND, drag_constants.BACKPACK_CODE].includes(draggingType);
    return /*#__PURE__*/react_default.a.createElement(sortable_asset, {
      className: classnames_default()(sprite_selector_default.a.spriteWrapper, {
        [sprite_selector_default.a.placeholder]: isSpriteDrag && index === draggingIndex
      }),
      index: isSpriteDrag ? ordering.indexOf(index) : index,
      key: sprite.name,
      onAddSortable: onAddSortable,
      onRemoveSortable: onRemoveSortable
    }, /*#__PURE__*/react_default.a.createElement(ThrottledSpriteSelectorItem, {
      asset: sprite.costume && sprite.costume.asset,
      className: classnames_default()(sprite_selector_default.a.sprite, {
        [sprite_selector_default.a.raised]: isRaised,
        [sprite_selector_default.a.receivedBlocks]: receivedBlocks
      }),
      dragPayload: sprite.id,
      dragType: drag_constants.SPRITE,
      id: sprite.id,
      index: index,
      key: sprite.id,
      name: sprite.name,
      selected: sprite.id === selectedId,
      onClick: onSelectSprite,
      onDeleteButtonClick: onDeleteSprite,
      onDuplicateButtonClick: onDuplicateSprite,
      onExportButtonClick: onExportSprite
    }));
  })));
};
sprite_list_SpriteList.propTypes = {
  containerRef: prop_types_default.a.func,
  draggingIndex: prop_types_default.a.number,
  draggingType: prop_types_default.a.oneOf(Object.keys(drag_constants)),
  editingTarget: prop_types_default.a.string,
  hoveredTarget: prop_types_default.a.shape({
    hoveredSprite: prop_types_default.a.string,
    receivedBlocks: prop_types_default.a.bool,
    sprite: prop_types_default.a.string
  }),
  items: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    costume: prop_types_default.a.shape({
      url: prop_types_default.a.string,
      // eslint-disable-next-line react/forbid-prop-types
      name: prop_types_default.a.string,
      bitmapResolution: prop_types_default.a.number,
      rotationCenterX: prop_types_default.a.number,
      rotationCenterY: prop_types_default.a.number
    }),
    // eslint-disable-next-line react/forbid-prop-types
    name: prop_types_default.a.any,
    order: prop_types_default.a.number
  })),
  onAddSortable: prop_types_default.a.func,
  onDeleteSprite: prop_types_default.a.func,
  onDuplicateSprite: prop_types_default.a.func,
  onExportSprite: prop_types_default.a.func,
  onRemoveSortable: prop_types_default.a.func,
  onSelectSprite: prop_types_default.a.func,
  ordering: prop_types_default.a.arrayOf(prop_types_default.a.number),
  raised: prop_types_default.a.bool,
  selectedId: prop_types_default.a.string
};
/* harmony default export */ var sprite_list = (sortable_hoc(sprite_list_SpriteList));
// EXTERNAL MODULE: ./node_modules/@turbowarp/scratch-l10n/src/index.js + 2 modules
var scratch_l10n_src = __webpack_require__(101);

// CONCATENATED MODULE: ./src/components/sprite-selector/sprite-selector.jsx
const sprite_selector_excluded = ["editingTarget", "hoveredTarget", "intl", "onChangeSpriteDirection", "onChangeSpriteName", "onChangeSpriteRotationStyle", "onChangeSpriteSize", "onChangeSpriteVisibility", "onChangeSpriteX", "onChangeSpriteY", "onDrop", "onDeleteSprite", "onDuplicateSprite", "onExportSprite", "onFileUploadClick", "onNewSpriteClick", "onPaintSpriteClick", "onSelectSprite", "onSpriteUpload", "onSurpriseSpriteClick", "raised", "selectedId", "spriteFileInput", "sprites", "stageSize"];
function sprite_selector_extends() { sprite_selector_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return sprite_selector_extends.apply(this, arguments); }
function sprite_selector_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = sprite_selector_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function sprite_selector_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }















const sprite_selector_messages = Object(index_es["d" /* defineMessages */])({
  addSpriteFromLibrary: {
    "id": "gui.spriteSelector.addSpriteFromLibrary",
    "defaultMessage": "Choose a Sprite"
  },
  addSpriteFromPaint: {
    "id": "gui.spriteSelector.addSpriteFromPaint",
    "defaultMessage": "Paint"
  },
  addSpriteFromSurprise: {
    "id": "gui.spriteSelector.addSpriteFromSurprise",
    "defaultMessage": "Surprise"
  },
  addSpriteFromFile: {
    "id": "gui.spriteSelector.addSpriteFromFile",
    "defaultMessage": "Upload Sprite"
  }
});
const sprite_selector_SpriteSelectorComponent = function SpriteSelectorComponent(props) {
  const {
      editingTarget,
      hoveredTarget,
      intl,
      onChangeSpriteDirection,
      onChangeSpriteName,
      onChangeSpriteRotationStyle,
      onChangeSpriteSize,
      onChangeSpriteVisibility,
      onChangeSpriteX,
      onChangeSpriteY,
      onDrop,
      onDeleteSprite,
      onDuplicateSprite,
      onExportSprite,
      onFileUploadClick,
      onNewSpriteClick,
      onPaintSpriteClick,
      onSelectSprite,
      onSpriteUpload,
      onSurpriseSpriteClick,
      raised,
      selectedId,
      spriteFileInput,
      sprites,
      stageSize
    } = props,
    componentProps = sprite_selector_objectWithoutProperties(props, sprite_selector_excluded);
  let selectedSprite = sprites[selectedId];
  let spriteInfoDisabled = false;
  if (typeof selectedSprite === 'undefined') {
    selectedSprite = {};
    spriteInfoDisabled = true;
  }
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], sprite_selector_extends({
    className: sprite_selector_default.a.spriteSelector
  }, componentProps), /*#__PURE__*/react_default.a.createElement(containers_sprite_info, {
    direction: selectedSprite.direction,
    disabled: spriteInfoDisabled,
    name: selectedSprite.name,
    rotationStyle: selectedSprite.rotationStyle,
    size: selectedSprite.size,
    stageSize: stageSize,
    visible: selectedSprite.visible,
    x: selectedSprite.x,
    y: selectedSprite.y,
    onChangeDirection: onChangeSpriteDirection,
    onChangeName: onChangeSpriteName,
    onChangeRotationStyle: onChangeSpriteRotationStyle,
    onChangeSize: onChangeSpriteSize,
    onChangeVisibility: onChangeSpriteVisibility,
    onChangeX: onChangeSpriteX,
    onChangeY: onChangeSpriteY
  }), /*#__PURE__*/react_default.a.createElement(sprite_list, {
    editingTarget: editingTarget,
    hoveredTarget: hoveredTarget,
    items: Object.keys(sprites).map(id => sprites[id]),
    raised: raised,
    selectedId: selectedId,
    onDeleteSprite: onDeleteSprite,
    onDrop: onDrop,
    onDuplicateSprite: onDuplicateSprite,
    onExportSprite: onExportSprite,
    onSelectSprite: onSelectSprite
  }), /*#__PURE__*/react_default.a.createElement(action_menu_action_menu, {
    className: sprite_selector_default.a.addButton,
    img: icon_sprite_default.a,
    moreButtons: [{
      title: intl.formatMessage(sprite_selector_messages.addSpriteFromFile),
      img: icon_file_upload_default.a,
      onClick: onFileUploadClick,
      fileAccept: '.svg, .png, .bmp, .jpg, .jpeg, .jfif, .webp, .sprite2, .sprite3, .gif',
      fileChange: onSpriteUpload,
      fileInput: spriteFileInput,
      fileMultiple: true
    }, {
      title: intl.formatMessage(sprite_selector_messages.addSpriteFromSurprise),
      img: icon_surprise_default.a,
      onClick: onSurpriseSpriteClick // TODO need real function for this
    }, {
      title: intl.formatMessage(sprite_selector_messages.addSpriteFromPaint),
      img: icon_paint_default.a,
      onClick: onPaintSpriteClick // TODO need real function for this
    }, {
      title: intl.formatMessage(sprite_selector_messages.addSpriteFromLibrary),
      img: icon_search_default.a,
      onClick: onNewSpriteClick
    }],
    title: intl.formatMessage(sprite_selector_messages.addSpriteFromLibrary),
    tooltipPlace: Object(scratch_l10n_src["b" /* isRtl */])(intl.locale) ? 'right' : 'left',
    onClick: onNewSpriteClick
  }));
};
sprite_selector_SpriteSelectorComponent.propTypes = {
  editingTarget: prop_types_default.a.string,
  hoveredTarget: prop_types_default.a.shape({
    hoveredSprite: prop_types_default.a.string,
    receivedBlocks: prop_types_default.a.bool
  }),
  intl: index_es["f" /* intlShape */].isRequired,
  onChangeSpriteDirection: prop_types_default.a.func,
  onChangeSpriteName: prop_types_default.a.func,
  onChangeSpriteRotationStyle: prop_types_default.a.func,
  onChangeSpriteSize: prop_types_default.a.func,
  onChangeSpriteVisibility: prop_types_default.a.func,
  onChangeSpriteX: prop_types_default.a.func,
  onChangeSpriteY: prop_types_default.a.func,
  onDeleteSprite: prop_types_default.a.func,
  onDrop: prop_types_default.a.func,
  onDuplicateSprite: prop_types_default.a.func,
  onExportSprite: prop_types_default.a.func,
  onFileUploadClick: prop_types_default.a.func,
  onNewSpriteClick: prop_types_default.a.func,
  onPaintSpriteClick: prop_types_default.a.func,
  onSelectSprite: prop_types_default.a.func,
  onSpriteUpload: prop_types_default.a.func,
  onSurpriseSpriteClick: prop_types_default.a.func,
  raised: prop_types_default.a.bool,
  selectedId: prop_types_default.a.string,
  spriteFileInput: prop_types_default.a.func,
  sprites: prop_types_default.a.shape({
    id: prop_types_default.a.shape({
      costume: prop_types_default.a.shape({
        url: prop_types_default.a.string,
        name: prop_types_default.a.string.isRequired,
        bitmapResolution: prop_types_default.a.number.isRequired,
        rotationCenterX: prop_types_default.a.number.isRequired,
        rotationCenterY: prop_types_default.a.number.isRequired
      }),
      name: prop_types_default.a.string.isRequired,
      order: prop_types_default.a.number.isRequired
    })
  }),
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired
};
/* harmony default export */ var sprite_selector_sprite_selector = (Object(index_es["e" /* injectIntl */])(sprite_selector_SpriteSelectorComponent));
// CONCATENATED MODULE: ./src/lib/backpack/jpeg-thumbnail.js
const jpegThumbnail = dataUrl => new Promise((resolve, reject) => {
  const image = new Image();
  image.onload = () => {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    const maxDimension = 96; // 3x the maximum displayed size of 32px

    if (image.height < 1 || image.width < 1) {
      canvas.width = canvas.height = maxDimension;
      // drawImage can fail if image height/width is less than 1
      // Use blank image; the costume is too small to render anyway
      ctx.fillStyle = 'white'; // Create white background, since jpeg doesn't have transparency
      ctx.fillRect(0, 0, canvas.width, canvas.height);
    } else {
      if (image.height > image.width) {
        canvas.height = maxDimension;
        canvas.width = maxDimension / image.height * image.width;
      } else {
        canvas.width = maxDimension;
        canvas.height = maxDimension / image.width * image.height;
      }
      ctx.fillStyle = 'white';
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
    }
    resolve(canvas.toDataURL('image/jpeg', 0.92 /* quality */)); // Default quality is 0.92
  };

  image.onerror = err => {
    reject(err);
  };
  image.src = dataUrl;
});
/* harmony default export */ var jpeg_thumbnail = (jpegThumbnail);
// CONCATENATED MODULE: ./src/lib/backpack/costume-payload.js


const costumePayload = costume => {
  // TODO is it ok to base64 encode SVGs? What about unicode text inside them?
  const assetDataUrl = costume.asset.encodeDataURI();
  const assetDataFormat = costume.dataFormat;
  const payload = {
    type: 'costume',
    name: costume.name,
    // Params to be filled in below
    mime: '',
    body: '',
    thumbnail: ''
  };
  switch (assetDataFormat) {
    case 'svg':
      payload.mime = 'image/svg+xml';
      payload.body = assetDataUrl.replace('data:image/svg+xml;base64,', '');
      break;
    case 'png':
      payload.mime = 'image/png';
      payload.body = assetDataUrl.replace('data:image/png;base64,', '');
      break;
    default:
      alert("Cannot serialize for format: ".concat(assetDataFormat));
    // eslint-disable-line
  }

  // Do not generate the thumbnail from the raw asset. Instead use the getCostumeUrl
  // utility which inlines the fonts to make the thumbnail show the right fonts.
  const inlinedFontDataUrl = getCostumeUrl(costume.asset);
  return jpeg_thumbnail(inlinedFontDataUrl).then(thumbnail => {
    payload.thumbnail = thumbnail.replace('data:image/jpeg;base64,', '');
    return payload;
  });
};
/* harmony default export */ var costume_payload = (costumePayload);
// EXTERNAL MODULE: ./node_modules/base64-loader!./src/lib/backpack/sound-thumbnail.jpg
var sound_thumbnail = __webpack_require__(814);
var sound_thumbnail_default = /*#__PURE__*/__webpack_require__.n(sound_thumbnail);

// CONCATENATED MODULE: ./src/lib/backpack/sound-payload.js
// eslint-disable-next-line import/no-unresolved

const soundPayload = sound => {
  const assetDataUrl = sound.asset.encodeDataURI();
  const assetDataFormat = sound.dataFormat;
  const payload = {
    type: 'sound',
    name: sound.name,
    thumbnail: sound_thumbnail_default.a,
    // Params to be filled in below
    mime: '',
    body: ''
  };
  switch (assetDataFormat) {
    case 'wav':
      payload.mime = 'audio/x-wav';
      payload.body = assetDataUrl.replace('data:audio/x-wav;base64,', '');
      break;
    case 'mp3':
      payload.mime = 'audio/mp3';
      // TODO scratch-storage should be fixed so that encodeDataURI does not
      // always prepend the wave format header; Once that is fixed, the following
      // line will have to change.
      payload.body = assetDataUrl.replace('data:audio/x-wav;base64,', '');
      break;
    default:
      alert("Cannot serialize for format: ".concat(assetDataFormat));
    // eslint-disable-line
  }

  // Return a promise to make it consistent with other payload constructors like costume-payload
  return new Promise(resolve => resolve(payload));
};
/* harmony default export */ var sound_payload = (soundPayload);
// CONCATENATED MODULE: ./src/lib/backpack/sprite-payload.js

const spritePayload = (id, vm) => {
  const target = vm.runtime.getTargetById(id);
  if (!target) return null;
  return vm.exportSprite(id, 'base64').then(zippedSprite => {
    const payload = {
      type: 'sprite',
      name: target.sprite.name,
      mime: 'application/zip',
      body: zippedSprite,
      // Filled in below
      thumbnail: ''
    };
    const costumeDataUrl = target.sprite.costumes[target.currentCostume].asset.encodeDataURI();
    return jpeg_thumbnail(costumeDataUrl).then(thumbnail => {
      payload.thumbnail = thumbnail.replace('data:image/jpeg;base64,', '');
      return payload;
    });
  });
};
/* harmony default export */ var sprite_payload = (spritePayload);
// EXTERNAL MODULE: ./node_modules/computed-style-to-inline-style/dist/index.js
var computed_style_to_inline_style_dist = __webpack_require__(815);
var computed_style_to_inline_style_dist_default = /*#__PURE__*/__webpack_require__.n(computed_style_to_inline_style_dist);

// CONCATENATED MODULE: ./src/lib/backpack/block-to-image.js



/**
 * Given a blockId, return a data-uri image that can be used to create a thumbnail.
 * @param {string} blockId the ID of the block to imagify
 * @return {Promise} resolves to a data-url of a picture of the blocks
 */
/* harmony default export */ var block_to_image = (function (blockId) {
  const ScratchBlocks = tw_lazy_scratch_blocks["a" /* default */].get();
  // Not sure any better way to access the scratch-blocks workspace than this...
  const block = ScratchBlocks.getMainWorkspace().getBlockById(blockId);
  const blockSvg = block.getSvgRoot().cloneNode(true /* deep */);

  // Once we have the cloned SVG, do the rest in a setTimeout to prevent
  // blocking the drag end from finishing promptly.
  return new Promise(resolve => {
    setTimeout(() => {
      // TW: Fixes issues caused by scratch-blocks block hiding
      blockSvg.style.display = '';

      // Strip &nbsp; entities that cannot be inlined
      blockSvg.innerHTML = blockSvg.innerHTML.replace(/&nbsp;/g, ' ');

      // Create an <svg> element to put the cloned blockSvg inside
      const NS = 'http://www.w3.org/2000/svg';
      const svg = document.createElementNS(NS, 'svg');
      svg.appendChild(blockSvg);

      // Needs to be on the DOM to get CSS properties and correct sizing
      document.body.appendChild(svg);
      const padding = 10;
      const extraHatPadding = 16;
      const topPadding = padding + (blockSvg.getAttribute('data-shapes') === 'hat' ? extraHatPadding : 0);
      const leftPadding = padding;
      blockSvg.setAttribute('transform', "translate(".concat(leftPadding, " ").concat(topPadding, ")"));
      const bounds = blockSvg.getBoundingClientRect();
      svg.setAttribute('width', bounds.width + 2 * padding);
      svg.setAttribute('height', bounds.height + 2 * padding);

      // We need to inline the styles set by CSS rules because
      // not all the styles are set directly on the SVG. This makes the
      // image styled the same way the block actually appears.
      // TODO this doesn't handle images that are xlink:href in the SVG
      computed_style_to_inline_style_dist_default()(svg, {
        recursive: true,
        // Enumerate the specific properties we need to inline.
        // Specifically properties that are set from CSS in scratch-blocks
        properties: ['fill', 'font-family', 'font-size', 'font-weight']
      });
      const svgString = new XMLSerializer().serializeToString(svg);

      // Once we have the svg as a string, remove it from the DOM
      svg.parentNode.removeChild(svg);
      resolve("data:image/svg+xml;utf-8,".concat(encodeURIComponent(svgString)));
    }, 10);
  });
});
// EXTERNAL MODULE: ./node_modules/js-base64/base64.js
var base64 = __webpack_require__(816);

// CONCATENATED MODULE: ./src/lib/backpack/code-payload.js



const codePayload = _ref => {
  let {
    blockObjects,
    topBlockId
  } = _ref;
  const payload = {
    type: 'script',
    // Needs to match backpack-server type name
    name: 'code',
    // All code currently gets the same name
    mime: 'application/json',
    // Backpack expects a base64 encoded string to store. Cannot use btoa because
    // the code can contain characters outside the 0-255 code-point range supported by btoa
    body: base64["Base64"].encode(JSON.stringify(blockObjects)) // Base64 encode the json
  };

  return block_to_image(topBlockId).then(jpeg_thumbnail).then(thumbnail => {
    payload.thumbnail = thumbnail.replace('data:image/jpeg;base64,', '');
    return payload;
  });
};
/* harmony default export */ var code_payload = (codePayload);
// EXTERNAL MODULE: ./node_modules/js-md5/src/md5.js
var md5 = __webpack_require__(327);
var md5_default = /*#__PURE__*/__webpack_require__.n(md5);

// CONCATENATED MODULE: ./src/lib/tw-local-backpack-api.js
function tw_local_backpack_api_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function tw_local_backpack_api_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? tw_local_backpack_api_ownKeys(Object(t), !0).forEach(function (r) { tw_local_backpack_api_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : tw_local_backpack_api_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function tw_local_backpack_api_defineProperty(obj, key, value) { key = tw_local_backpack_api_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function tw_local_backpack_api_toPropertyKey(arg) { var key = tw_local_backpack_api_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function tw_local_backpack_api_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



// Special constants -- do not change without care.
const DATABASE_NAME = 'TW_Backpack';
const DATABASE_VERSION = 1;
const STORE_NAME = 'backpack';
const base64ToArrayBuffer = base64 => {
  const binaryString = atob(base64);
  const len = binaryString.length;
  const array = new Uint8Array(len);
  for (let i = 0; i < len; i++) {
    array[i] = binaryString.charCodeAt(i);
  }
  return array.buffer;
};
const arrayBufferToBase64 = buffer => {
  let binary = '';
  const bytes = new Uint8Array(buffer);
  const len = bytes.byteLength;
  for (let i = 0; i < len; i++) {
    binary += String.fromCharCode(bytes[i]);
  }
  return btoa(binary);
};
const idbItemToBackpackItem = item => {
  // convert id to string
  item.id = "".concat(item.id);
  item.thumbnailUrl = "data:;base64,".concat(arrayBufferToBase64(item.thumbnailData));
  let assetType;
  if (item.type === 'script') {
    item.bodyUrl = "data:application/json;base64,".concat(arrayBufferToBase64(item.bodyData));
  } else if (item.type === 'sprite') {
    item.bodyUrl = "data:application/zip;base64,".concat(arrayBufferToBase64(item.bodyData));
  } else if (item.type === 'costume') {
    if (item.mime === 'image/svg+xml') {
      assetType = lib_storage["a" /* default */].AssetType.ImageVector;
    } else if (item.mime === 'image/png') {
      assetType = lib_storage["a" /* default */].AssetType.ImageBitmap;
    }
  } else if (item.type === 'sound') {
    assetType = lib_storage["a" /* default */].AssetType.Sound;
  }
  if (assetType) {
    const extension = assetType.runtimeFormat;
    const itemMD5 = item.bodyMD5;
    const md5ext = "".concat(itemMD5, ".").concat(extension);
    item.body = md5ext;
    lib_storage["a" /* default */].builtinHelper._store(assetType, extension, new Uint8Array(item.bodyData), itemMD5);
  }
  return item;
};
let _db;
const openDB = () => new Promise((resolve, reject) => {
  if (_db) {
    resolve(_db);
    return;
  }
  if (!window.indexedDB) {
    reject(new Error('indexedDB is not supported'));
    return;
  }
  const request = indexedDB.open(DATABASE_NAME, DATABASE_VERSION);
  request.onupgradeneeded = e => {
    const db = e.target.result;
    db.createObjectStore(STORE_NAME, {
      keyPath: 'id',
      autoIncrement: true
    });
  };
  request.onsuccess = e => {
    _db = e.target.result;
    resolve(_db);
  };
  request.onerror = () => {
    reject(new Error("DB error: ".concat(request.error)));
  };
});
const getBackpackContents = async _ref => {
  let {
    limit,
    offset
  } = _ref;
  const db = await openDB();
  return new Promise((resolve, reject) => {
    const transaction = db.transaction(STORE_NAME, 'readonly');
    transaction.onerror = () => {
      reject(new Error("Transaction error: ".concat(transaction.error)));
    };
    const store = transaction.objectStore(STORE_NAME);
    const items = [];
    const request = store.openCursor(null, 'prev');
    let first = true;
    request.onsuccess = e => {
      const cursor = e.target.result;
      if (first) {
        first = false;
        if (cursor && offset !== 0) {
          cursor.advance(offset);
          return;
        }
      }
      if (cursor && items.length < limit) {
        items.push(idbItemToBackpackItem(cursor.value));
        cursor.continue();
      } else {
        resolve(items);
      }
    };
  });
};
const saveBackpackObject = async _ref2 => {
  let {
    type,
    mime,
    name,
    body,
    thumbnail
  } = _ref2;
  const db = await openDB();
  return new Promise((resolve, reject) => {
    const transaction = db.transaction(STORE_NAME, 'readwrite');
    transaction.onerror = () => {
      reject(new Error("Transaction error: ".concat(transaction.error)));
    };
    const store = transaction.objectStore(STORE_NAME);
    const bodyData = base64ToArrayBuffer(body);
    const bodyMD5 = md5_default()(bodyData);
    const idbItem = {
      type,
      mime,
      name,
      bodyData,
      bodyMD5,
      thumbnailData: base64ToArrayBuffer(thumbnail)
    };
    const putRequest = store.put(idbItem);
    putRequest.onsuccess = () => {
      idbItem.id = putRequest.result;
      resolve(idbItemToBackpackItem(idbItem));
    };
  });
};
const deleteBackpackObject = async _ref3 => {
  let {
    id
  } = _ref3;
  id = +id;
  const db = await openDB();
  return new Promise((resolve, reject) => {
    const transaction = db.transaction(STORE_NAME, 'readwrite');
    transaction.onerror = () => {
      reject(new Error("Transaction error: ".concat(transaction.error)));
    };
    const store = transaction.objectStore(STORE_NAME);
    // Convert string IDs to number IDs
    const deleteRequest = store.delete(id);
    deleteRequest.onsuccess = () => {
      resolve();
    };
  });
};
const updateBackpackObject = async _ref4 => {
  let {
    id,
    name
  } = _ref4;
  id = +id;
  const db = await openDB();
  return new Promise((resolve, reject) => {
    const transaction = db.transaction(STORE_NAME, 'readwrite');
    transaction.onerror = () => {
      reject(new Error("Transaction error: ".concat(transaction.error)));
    };
    const store = transaction.objectStore(STORE_NAME);
    const getRequest = store.get(id);
    getRequest.onsuccess = () => {
      const newItem = tw_local_backpack_api_objectSpread(tw_local_backpack_api_objectSpread({}, getRequest.result), {}, {
        name: name
      });
      const putRequest = store.put(newItem);
      putRequest.onsuccess = () => {
        resolve(idbItemToBackpackItem(newItem));
      };
    };
  });
};
/* harmony default export */ var tw_local_backpack_api = ({
  getBackpackContents,
  saveBackpackObject,
  deleteBackpackObject,
  updateBackpackObject
});
// CONCATENATED MODULE: ./src/lib/backpack-api.js






const LOCAL_API = '_local_';

// Add a new property for the full thumbnail url, which includes the host.
// Also include a full body url for loading sprite zips
// TODO retreiving the images through storage would allow us to remove this.
const includeFullUrls = (item, host) => Object.assign({}, item, {
  thumbnailUrl: "".concat(host, "/").concat(item.thumbnail),
  bodyUrl: "".concat(host, "/").concat(item.body)
});
const backpack_api_getBackpackContents = _ref => {
  let {
    host,
    username,
    token,
    limit,
    offset
  } = _ref;
  return new Promise((resolve, reject) => {
    if (host === LOCAL_API) {
      return tw_local_backpack_api.getBackpackContents({
        limit,
        offset
      }).then(resolve).catch(reject);
    }
    xhr_default()({
      method: 'GET',
      uri: "".concat(host, "/").concat(username, "?limit=").concat(limit, "&offset=").concat(offset),
      headers: {
        'x-token': token
      },
      json: true
    }, (error, response) => {
      if (error || response.statusCode !== 200) {
        return reject(new Error(response.status));
      }
      return resolve(response.body.map(item => includeFullUrls(item, host)));
    });
  });
};
const backpack_api_saveBackpackObject = _ref2 => {
  let {
    host,
    username,
    token,
    type,
    // Type of object being saved to the backpack
    mime,
    // Mime-type of the object being saved
    name,
    // User-facing name of the object being saved
    body,
    // Base64-encoded body of the object being saved
    thumbnail // Base64-encoded JPEG thumbnail of the object being saved
  } = _ref2;
  return new Promise((resolve, reject) => {
    if (host === LOCAL_API) {
      return resolve(tw_local_backpack_api.saveBackpackObject({
        type,
        mime,
        name,
        body,
        thumbnail
      }));
    }
    xhr_default()({
      method: 'POST',
      uri: "".concat(host, "/").concat(username),
      headers: {
        'x-token': token
      },
      json: {
        type,
        mime,
        name,
        body,
        thumbnail
      }
    }, (error, response) => {
      if (error || response.statusCode !== 200) {
        return reject(new Error(response.status));
      }
      return resolve(includeFullUrls(response.body, host));
    });
  });
};
const backpack_api_deleteBackpackObject = _ref3 => {
  let {
    host,
    username,
    token,
    id
  } = _ref3;
  return new Promise((resolve, reject) => {
    if (host === LOCAL_API) {
      return resolve(tw_local_backpack_api.deleteBackpackObject({
        id
      }));
    }
    xhr_default()({
      method: 'DELETE',
      uri: "".concat(host, "/").concat(username, "/").concat(id),
      headers: {
        'x-token': token
      }
    }, (error, response) => {
      if (error || response.statusCode !== 200) {
        return reject(new Error(response.status));
      }
      return resolve(response.body);
    });
  });
};
const backpack_api_updateBackpackObject = _ref4 => {
  let {
    host,
    id,
    name
  } = _ref4;
  return new Promise((resolve, reject) => {
    if (host === LOCAL_API) {
      return resolve(tw_local_backpack_api.updateBackpackObject({
        id,
        name
      }));
    }
    reject(new Error('updateBackpackObject not supported'));
  });
};

// Two types of backpack items are not retreivable through storage
// code, as json and sprite3 as arraybuffer zips.
const fetchAs = (responseType, uri) => new Promise((resolve, reject) => {
  xhr_default()({
    uri,
    responseType
  }, (error, response) => {
    if (error || response.statusCode !== 200) {
      return reject(new Error(response.status));
    }
    return resolve(response.body);
  });
});

// These two helpers allow easy fetching of backpack code and sprite zips
// Use the curried fetchAs here so the consumer does not worry about XHR responseTypes
const fetchCode = fetchAs.bind(null, 'json');
const fetchSprite = fetchAs.bind(null, 'arraybuffer');

// EXTERNAL MODULE: ./src/components/stage-selector/stage-selector.css
var stage_selector = __webpack_require__(122);
var stage_selector_default = /*#__PURE__*/__webpack_require__.n(stage_selector);

// EXTERNAL MODULE: ./src/components/action-menu/icon--backdrop.svg
var icon_backdrop = __webpack_require__(817);
var icon_backdrop_default = /*#__PURE__*/__webpack_require__.n(icon_backdrop);

// CONCATENATED MODULE: ./src/components/stage-selector/stage-selector.jsx
const stage_selector_excluded = ["backdropCount", "containerRef", "dragOver", "fileInputRef", "intl", "selected", "raised", "receivedBlocks", "url", "onBackdropFileUploadClick", "onBackdropFileUpload", "onClick", "onMouseEnter", "onMouseLeave", "onNewBackdropClick", "onSurpriseBackdropClick", "onEmptyBackdropClick"];
function stage_selector_extends() { stage_selector_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return stage_selector_extends.apply(this, arguments); }
function stage_selector_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = stage_selector_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function stage_selector_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













const stage_selector_messages = Object(index_es["d" /* defineMessages */])({
  addBackdropFromLibrary: {
    "id": "gui.spriteSelector.addBackdropFromLibrary",
    "defaultMessage": "Choose a Backdrop"
  },
  addBackdropFromPaint: {
    "id": "gui.stageSelector.addBackdropFromPaint",
    "defaultMessage": "Paint"
  },
  addBackdropFromSurprise: {
    "id": "gui.stageSelector.addBackdropFromSurprise",
    "defaultMessage": "Surprise"
  },
  addBackdropFromFile: {
    "id": "gui.stageSelector.addBackdropFromFile",
    "defaultMessage": "Upload Backdrop"
  }
});
const stage_selector_StageSelector = props => {
  const {
      backdropCount,
      containerRef,
      dragOver,
      fileInputRef,
      intl,
      selected,
      raised,
      receivedBlocks,
      url,
      onBackdropFileUploadClick,
      onBackdropFileUpload,
      onClick,
      onMouseEnter,
      onMouseLeave,
      onNewBackdropClick,
      onSurpriseBackdropClick,
      onEmptyBackdropClick
    } = props,
    componentProps = stage_selector_objectWithoutProperties(props, stage_selector_excluded);
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], stage_selector_extends({
    className: classnames_default()(stage_selector_default.a.stageSelector, {
      [stage_selector_default.a.isSelected]: selected,
      [stage_selector_default.a.raised]: raised || dragOver,
      [stage_selector_default.a.receivedBlocks]: receivedBlocks
    }),
    componentRef: containerRef,
    onClick: onClick,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave
  }, componentProps), /*#__PURE__*/react_default.a.createElement("div", {
    className: stage_selector_default.a.header
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: stage_selector_default.a.headerTitle
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Stage",
    id: "gui.stageSelector.stage"
  }))), url ? /*#__PURE__*/react_default.a.createElement("img", {
    className: stage_selector_default.a.costumeCanvas,
    src: url
  }) : null, /*#__PURE__*/react_default.a.createElement("div", {
    className: stage_selector_default.a.label
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Backdrops",
    id: "gui.stageSelector.backdrops"
  })), /*#__PURE__*/react_default.a.createElement("div", {
    className: stage_selector_default.a.count
  }, backdropCount), /*#__PURE__*/react_default.a.createElement(action_menu_action_menu, {
    className: stage_selector_default.a.addButton,
    img: icon_backdrop_default.a,
    moreButtons: [{
      title: intl.formatMessage(stage_selector_messages.addBackdropFromFile),
      img: icon_file_upload_default.a,
      onClick: onBackdropFileUploadClick,
      fileAccept: '.svg, .png, .bmp, .jpg, .jpeg, .jfif, .webp, .gif',
      fileChange: onBackdropFileUpload,
      fileInput: fileInputRef,
      fileMultiple: true
    }, {
      title: intl.formatMessage(stage_selector_messages.addBackdropFromSurprise),
      img: icon_surprise_default.a,
      onClick: onSurpriseBackdropClick
    }, {
      title: intl.formatMessage(stage_selector_messages.addBackdropFromPaint),
      img: icon_paint_default.a,
      onClick: onEmptyBackdropClick
    }, {
      title: intl.formatMessage(stage_selector_messages.addBackdropFromLibrary),
      img: icon_search_default.a,
      onClick: onNewBackdropClick
    }],
    title: intl.formatMessage(stage_selector_messages.addBackdropFromLibrary),
    tooltipPlace: Object(scratch_l10n_src["b" /* isRtl */])(intl.locale) ? 'right' : 'left',
    onClick: onNewBackdropClick
  }));
};
stage_selector_StageSelector.propTypes = {
  backdropCount: prop_types_default.a.number.isRequired,
  containerRef: prop_types_default.a.func,
  dragOver: prop_types_default.a.bool,
  fileInputRef: prop_types_default.a.func,
  intl: index_es["f" /* intlShape */].isRequired,
  onBackdropFileUpload: prop_types_default.a.func,
  onBackdropFileUploadClick: prop_types_default.a.func,
  onClick: prop_types_default.a.func,
  onEmptyBackdropClick: prop_types_default.a.func,
  onMouseEnter: prop_types_default.a.func,
  onMouseLeave: prop_types_default.a.func,
  onNewBackdropClick: prop_types_default.a.func,
  onSurpriseBackdropClick: prop_types_default.a.func,
  raised: prop_types_default.a.bool.isRequired,
  receivedBlocks: prop_types_default.a.bool.isRequired,
  selected: prop_types_default.a.bool.isRequired,
  url: prop_types_default.a.string
};
/* harmony default export */ var stage_selector_stage_selector = (Object(index_es["e" /* injectIntl */])(stage_selector_StageSelector));
// CONCATENATED MODULE: ./src/containers/stage-selector.jsx
function stage_selector_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function stage_selector_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? stage_selector_ownKeys(Object(t), !0).forEach(function (r) { stage_selector_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : stage_selector_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function stage_selector_defineProperty(obj, key, value) { key = stage_selector_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function stage_selector_toPropertyKey(arg) { var key = stage_selector_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function stage_selector_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function containers_stage_selector_extends() { containers_stage_selector_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_stage_selector_extends.apply(this, arguments); }




















const stage_selector_dragTypes = [drag_constants.COSTUME, drag_constants.SOUND, drag_constants.BACKPACK_COSTUME, drag_constants.BACKPACK_SOUND, drag_constants.BACKPACK_CODE];
const DroppableThrottledStage = drop_area_hoc(stage_selector_dragTypes)(throttled_property_hoc('url', 500)(stage_selector_stage_selector));
class containers_stage_selector_StageSelector extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClick', 'handleNewBackdrop', 'handleSurpriseBackdrop', 'handleEmptyBackdrop', 'addBackdropFromLibraryItem', 'handleFileUploadClick', 'handleBackdropUpload', 'handleMouseEnter', 'handleMouseLeave', 'handleTouchEnd', 'handleDrop', 'setFileInput', 'setRef']);
  }
  componentDidMount() {
    document.addEventListener('touchend', this.handleTouchEnd);
  }
  componentWillUnmount() {
    document.removeEventListener('touchend', this.handleTouchEnd);
  }
  handleTouchEnd(e) {
    const {
      x,
      y
    } = getEventXY(e);
    const {
      top,
      left,
      bottom,
      right
    } = this.ref.getBoundingClientRect();
    if (x >= left && x <= right && y >= top && y <= bottom) {
      this.handleMouseEnter();
    }
  }
  addBackdropFromLibraryItem(item) {
    let shouldActivateTab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    const vmBackdrop = {
      name: item.name,
      md5: item.md5ext,
      rotationCenterX: item.rotationCenterX,
      rotationCenterY: item.rotationCenterY,
      bitmapResolution: item.bitmapResolution,
      skinId: null
    };
    this.handleNewBackdrop(vmBackdrop, shouldActivateTab);
  }
  handleClick() {
    this.props.onSelect(this.props.id);
  }
  handleNewBackdrop(backdrops_) {
    let shouldActivateTab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    const backdrops = Array.isArray(backdrops_) ? backdrops_ : [backdrops_];
    return Promise.all(backdrops.map(backdrop => this.props.vm.addBackdrop(backdrop.md5, backdrop))).then(() => {
      if (shouldActivateTab) {
        return this.props.onActivateTab(editor_tab["b" /* COSTUMES_TAB_INDEX */]);
      }
    });
  }
  async handleSurpriseBackdrop(e) {
    e.stopPropagation(); // Prevent click from falling through to selecting stage.
    const backdropLibraryContent = await getBackdropLibrary();
    // @todo should this not add a backdrop you already have?
    const item = backdropLibraryContent[Math.floor(Math.random() * backdropLibraryContent.length)];
    this.addBackdropFromLibraryItem(item, false);
  }
  handleEmptyBackdrop(e) {
    e.stopPropagation(); // Prevent click from falling through to stage selector, select it manually below
    this.props.vm.setEditingTarget(this.props.id);
    this.handleNewBackdrop(emptyCostume(this.props.intl.formatMessage(shared_messages["a" /* default */].backdrop, {
      index: 1
    })));
  }
  handleBackdropUpload(e) {
    const vm = this.props.vm;
    this.props.onShowImporting();
    handleFileUpload(e.target, (buffer, fileType, fileName, fileIndex, fileCount) => {
      file_uploader_costumeUpload(buffer, fileType, vm, vmCostumes => {
        this.props.vm.setEditingTarget(this.props.id);
        vmCostumes.forEach((costume, i) => {
          costume.name = "".concat(fileName).concat(i ? i + 1 : '');
        });
        this.handleNewBackdrop(vmCostumes).then(() => {
          if (fileIndex === fileCount - 1) {
            this.props.onCloseImporting();
          }
        });
      }, this.props.onCloseImporting);
    }, this.props.onCloseImporting);
  }
  handleFileUploadClick(e) {
    e.stopPropagation(); // Prevent click from selecting the stage, that is handled manually in backdrop upload
    this.fileInput.click();
  }
  handleMouseEnter() {
    this.props.dispatchSetHoveredSprite(this.props.id);
  }
  handleMouseLeave() {
    this.props.dispatchSetHoveredSprite(null);
  }
  handleDrop(dragInfo) {
    if (dragInfo.dragType === drag_constants.COSTUME) {
      this.props.vm.shareCostumeToTarget(dragInfo.index, this.props.id);
    } else if (dragInfo.dragType === drag_constants.SOUND) {
      this.props.vm.shareSoundToTarget(dragInfo.index, this.props.id);
    } else if (dragInfo.dragType === drag_constants.BACKPACK_COSTUME) {
      this.props.vm.addCostume(dragInfo.payload.body, {
        name: dragInfo.payload.name
      }, this.props.id);
    } else if (dragInfo.dragType === drag_constants.BACKPACK_SOUND) {
      this.props.vm.addSound({
        md5: dragInfo.payload.body,
        name: dragInfo.payload.name
      }, this.props.id);
    } else if (dragInfo.dragType === drag_constants.BACKPACK_CODE) {
      fetchCode(dragInfo.payload.bodyUrl).then(blocks => {
        this.props.vm.shareBlocksToTarget(blocks, this.props.id);
        this.props.vm.refreshWorkspace();
      });
    }
  }
  setFileInput(input) {
    this.fileInput = input;
  }
  setRef(ref) {
    this.ref = ref;
  }
  render() {
    const componentProps = lodash_omit_default()(this.props, ['asset', 'dispatchSetHoveredSprite', 'id', 'intl', 'onActivateTab', 'onSelect', 'onShowImporting', 'onCloseImporting']);
    return /*#__PURE__*/react_default.a.createElement(DroppableThrottledStage, containers_stage_selector_extends({
      componentRef: this.setRef,
      fileInputRef: this.setFileInput,
      onBackdropFileUpload: this.handleBackdropUpload,
      onBackdropFileUploadClick: this.handleFileUploadClick,
      onClick: this.handleClick,
      onDrop: this.handleDrop,
      onEmptyBackdropClick: this.handleEmptyBackdrop,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onSurpriseBackdropClick: this.handleSurpriseBackdrop
    }, componentProps));
  }
}
containers_stage_selector_StageSelector.propTypes = stage_selector_objectSpread(stage_selector_objectSpread({}, stage_selector_stage_selector.propTypes), {}, {
  id: prop_types_default.a.string,
  intl: index_es["f" /* intlShape */].isRequired,
  onCloseImporting: prop_types_default.a.func,
  onSelect: prop_types_default.a.func,
  onShowImporting: prop_types_default.a.func
});
const stage_selector_mapStateToProps = (state, _ref) => {
  let {
    asset,
    id
  } = _ref;
  return {
    url: asset && asset.encodeDataURI(),
    vm: state.scratchGui.vm,
    receivedBlocks: state.scratchGui.hoveredTarget.receivedBlocks && state.scratchGui.hoveredTarget.sprite === id,
    raised: state.scratchGui.blockDrag
  };
};
const stage_selector_mapDispatchToProps = dispatch => ({
  onNewBackdropClick: e => {
    e.stopPropagation();
    dispatch(Object(modals["p" /* openBackdropLibrary */])());
  },
  onActivateTab: tabIndex => {
    dispatch(Object(editor_tab["d" /* activateTab */])(tabIndex));
  },
  dispatchSetHoveredSprite: spriteId => {
    dispatch(Object(hovered_target["c" /* setHoveredSprite */])(spriteId));
  },
  onCloseImporting: () => dispatch(Object(alerts["c" /* closeAlertWithId */])('importingAsset')),
  onShowImporting: () => dispatch(Object(alerts["i" /* showStandardAlert */])('importingAsset'))
});
/* harmony default export */ var containers_stage_selector = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(stage_selector_mapStateToProps, stage_selector_mapDispatchToProps)(containers_stage_selector_StageSelector)));
// EXTERNAL MODULE: ./src/components/target-pane/target-pane.css
var target_pane = __webpack_require__(462);
var target_pane_default = /*#__PURE__*/__webpack_require__.n(target_pane);

// CONCATENATED MODULE: ./src/components/target-pane/target-pane.jsx
const target_pane_excluded = ["editingTarget", "fileInputRef", "hoveredTarget", "spriteLibraryVisible", "onActivateBlocksTab", "onChangeSpriteDirection", "onChangeSpriteName", "onChangeSpriteRotationStyle", "onChangeSpriteSize", "onChangeSpriteVisibility", "onChangeSpriteX", "onChangeSpriteY", "onDeleteSprite", "onDrop", "onDuplicateSprite", "onExportSprite", "onFileUploadClick", "onNewSpriteClick", "onPaintSpriteClick", "onRequestCloseSpriteLibrary", "onSelectSprite", "onSpriteUpload", "onSurpriseSpriteClick", "raiseSprites", "stage", "stageSize", "sprites", "vm"];
function target_pane_extends() { target_pane_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return target_pane_extends.apply(this, arguments); }
function target_pane_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = target_pane_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function target_pane_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }









/*
 * Pane that contains the sprite selector, sprite info, stage selector,
 * and the new sprite, costume and backdrop buttons
 * @param {object} props Props for the component
 * @returns {React.Component} rendered component
 */
const target_pane_TargetPane = _ref => {
  let {
      editingTarget,
      fileInputRef,
      hoveredTarget,
      spriteLibraryVisible,
      onActivateBlocksTab,
      onChangeSpriteDirection,
      onChangeSpriteName,
      onChangeSpriteRotationStyle,
      onChangeSpriteSize,
      onChangeSpriteVisibility,
      onChangeSpriteX,
      onChangeSpriteY,
      onDeleteSprite,
      onDrop,
      onDuplicateSprite,
      onExportSprite,
      onFileUploadClick,
      onNewSpriteClick,
      onPaintSpriteClick,
      onRequestCloseSpriteLibrary,
      onSelectSprite,
      onSpriteUpload,
      onSurpriseSpriteClick,
      raiseSprites,
      stage,
      stageSize,
      sprites,
      vm
    } = _ref,
    componentProps = target_pane_objectWithoutProperties(_ref, target_pane_excluded);
  return /*#__PURE__*/react_default.a.createElement("div", target_pane_extends({
    className: target_pane_default.a.targetPane
  }, componentProps), /*#__PURE__*/react_default.a.createElement(sprite_selector_sprite_selector, {
    editingTarget: editingTarget,
    hoveredTarget: hoveredTarget,
    raised: raiseSprites,
    selectedId: editingTarget,
    spriteFileInput: fileInputRef,
    sprites: sprites,
    stageSize: stageSize,
    onChangeSpriteDirection: onChangeSpriteDirection,
    onChangeSpriteName: onChangeSpriteName,
    onChangeSpriteRotationStyle: onChangeSpriteRotationStyle,
    onChangeSpriteSize: onChangeSpriteSize,
    onChangeSpriteVisibility: onChangeSpriteVisibility,
    onChangeSpriteX: onChangeSpriteX,
    onChangeSpriteY: onChangeSpriteY,
    onDeleteSprite: onDeleteSprite,
    onDrop: onDrop,
    onDuplicateSprite: onDuplicateSprite,
    onExportSprite: onExportSprite,
    onFileUploadClick: onFileUploadClick,
    onNewSpriteClick: onNewSpriteClick,
    onPaintSpriteClick: onPaintSpriteClick,
    onSelectSprite: onSelectSprite,
    onSpriteUpload: onSpriteUpload,
    onSurpriseSpriteClick: onSurpriseSpriteClick
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: target_pane_default.a.stageSelectorWrapper
  }, stage.id && /*#__PURE__*/react_default.a.createElement(containers_stage_selector, {
    asset: stage.costume && stage.costume.asset,
    backdropCount: stage.costumeCount,
    id: stage.id,
    selected: stage.id === editingTarget,
    onSelect: onSelectSprite
  }), /*#__PURE__*/react_default.a.createElement("div", null, spriteLibraryVisible ? /*#__PURE__*/react_default.a.createElement(sprite_library, {
    vm: vm,
    onActivateBlocksTab: onActivateBlocksTab,
    onRequestClose: onRequestCloseSpriteLibrary
  }) : null)));
};
const spriteShape = prop_types_default.a.shape({
  costume: prop_types_default.a.shape({
    // asset is defined in scratch-storage's Asset.js
    asset: prop_types_default.a.object,
    // eslint-disable-line react/forbid-prop-types
    url: prop_types_default.a.string,
    name: prop_types_default.a.string.isRequired,
    // The following are optional because costumes uploaded from disk
    // will not have these properties available
    bitmapResolution: prop_types_default.a.number,
    rotationCenterX: prop_types_default.a.number,
    rotationCenterY: prop_types_default.a.number
  }),
  costumeCount: prop_types_default.a.number,
  direction: prop_types_default.a.number,
  id: prop_types_default.a.string,
  name: prop_types_default.a.string,
  order: prop_types_default.a.number,
  size: prop_types_default.a.number,
  visibility: prop_types_default.a.bool,
  x: prop_types_default.a.number,
  y: prop_types_default.a.number
});
target_pane_TargetPane.propTypes = {
  editingTarget: prop_types_default.a.string,
  extensionLibraryVisible: prop_types_default.a.bool,
  fileInputRef: prop_types_default.a.func,
  hoveredTarget: prop_types_default.a.shape({
    hoveredSprite: prop_types_default.a.string,
    receivedBlocks: prop_types_default.a.bool
  }),
  onActivateBlocksTab: prop_types_default.a.func.isRequired,
  onChangeSpriteDirection: prop_types_default.a.func,
  onChangeSpriteName: prop_types_default.a.func,
  onChangeSpriteRotationStyle: prop_types_default.a.func,
  onChangeSpriteSize: prop_types_default.a.func,
  onChangeSpriteVisibility: prop_types_default.a.func,
  onChangeSpriteX: prop_types_default.a.func,
  onChangeSpriteY: prop_types_default.a.func,
  onDeleteSprite: prop_types_default.a.func,
  onDrop: prop_types_default.a.func,
  onDuplicateSprite: prop_types_default.a.func,
  onExportSprite: prop_types_default.a.func,
  onFileUploadClick: prop_types_default.a.func,
  onNewSpriteClick: prop_types_default.a.func,
  onPaintSpriteClick: prop_types_default.a.func,
  onRequestCloseExtensionLibrary: prop_types_default.a.func,
  onRequestCloseSpriteLibrary: prop_types_default.a.func,
  onSelectSprite: prop_types_default.a.func,
  onSpriteUpload: prop_types_default.a.func,
  onSurpriseSpriteClick: prop_types_default.a.func,
  raiseSprites: prop_types_default.a.bool,
  spriteLibraryVisible: prop_types_default.a.bool,
  sprites: prop_types_default.a.objectOf(spriteShape),
  stage: spriteShape,
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
/* harmony default export */ var target_pane_target_pane = (target_pane_TargetPane);
// CONCATENATED MODULE: ./src/containers/target-pane.jsx
const containers_target_pane_excluded = ["dispatchUpdateRestore", "isRtl", "onActivateTab", "onCloseImporting", "onHighlightTarget", "onReceivedBlocks", "onShowImporting", "workspaceMetrics"];
function target_pane_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function target_pane_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? target_pane_ownKeys(Object(t), !0).forEach(function (r) { target_pane_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : target_pane_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function target_pane_defineProperty(obj, key, value) { key = target_pane_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function target_pane_toPropertyKey(arg) { var key = target_pane_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function target_pane_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function containers_target_pane_extends() { containers_target_pane_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_target_pane_extends.apply(this, arguments); }
function containers_target_pane_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = containers_target_pane_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function containers_target_pane_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





















class containers_target_pane_TargetPane extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleActivateBlocksTab', 'handleBlockDragEnd', 'handleChangeSpriteRotationStyle', 'handleChangeSpriteDirection', 'handleChangeSpriteName', 'handleChangeSpriteSize', 'handleChangeSpriteVisibility', 'handleChangeSpriteX', 'handleChangeSpriteY', 'handleDeleteSprite', 'handleDrop', 'handleDuplicateSprite', 'handleExportSprite', 'handleNewSprite', 'handleSelectSprite', 'handleSurpriseSpriteClick', 'handlePaintSpriteClick', 'handleFileUploadClick', 'handleSpriteUpload', 'setFileInput']);
  }
  componentDidMount() {
    this.props.vm.addListener('BLOCK_DRAG_END', this.handleBlockDragEnd);
  }
  componentWillUnmount() {
    this.props.vm.removeListener('BLOCK_DRAG_END', this.handleBlockDragEnd);
  }
  handleChangeSpriteDirection(direction) {
    this.props.vm.postSpriteInfo({
      direction
    });
  }
  handleChangeSpriteRotationStyle(rotationStyle) {
    this.props.vm.postSpriteInfo({
      rotationStyle
    });
  }
  handleChangeSpriteName(name) {
    this.props.vm.renameSprite(this.props.editingTarget, name);
  }
  handleChangeSpriteSize(size) {
    this.props.vm.postSpriteInfo({
      size
    });
  }
  handleChangeSpriteVisibility(visible) {
    this.props.vm.postSpriteInfo({
      visible
    });
  }
  handleChangeSpriteX(x) {
    this.props.vm.postSpriteInfo({
      x
    });
  }
  handleChangeSpriteY(y) {
    this.props.vm.postSpriteInfo({
      y
    });
  }
  handleDeleteSprite(id) {
    const restoreSprite = this.props.vm.deleteSprite(id);
    const restoreFun = () => restoreSprite().then(this.handleActivateBlocksTab);
    this.props.dispatchUpdateRestore({
      restoreFun: restoreFun,
      deletedItem: 'Sprite'
    });
  }
  handleDuplicateSprite(id) {
    this.props.vm.duplicateSprite(id);
  }
  handleExportSprite(id) {
    const spriteName = this.props.vm.runtime.getTargetById(id).getName();
    const saveLink = document.createElement('a');
    document.body.appendChild(saveLink);
    this.props.vm.exportSprite(id).then(content => {
      Object(download_blob["a" /* default */])("".concat(spriteName, ".sprite3"), content);
    });
  }
  handleSelectSprite(id) {
    this.props.vm.setEditingTarget(id);
    if (this.props.stage && id !== this.props.stage.id) {
      this.props.onHighlightTarget(id);
    }
  }
  async handleSurpriseSpriteClick() {
    const spriteLibraryContent = await getSpriteLibrary();
    const surpriseSprites = spriteLibraryContent.filter(sprite => sprite.tags.indexOf('letters') === -1 && sprite.tags.indexOf('numbers') === -1);
    const item = surpriseSprites[Math.floor(Math.random() * surpriseSprites.length)];
    randomize_sprite_position(item);
    this.props.vm.addSprite(JSON.stringify(item)).then(this.handleActivateBlocksTab);
  }
  handlePaintSpriteClick() {
    const formatMessage = this.props.intl.formatMessage;
    const emptyItem = emptySprite(formatMessage(shared_messages["a" /* default */].sprite, {
      index: 1
    }), formatMessage(shared_messages["a" /* default */].pop), formatMessage(shared_messages["a" /* default */].costume, {
      index: 1
    }));
    this.props.vm.addSprite(JSON.stringify(emptyItem)).then(() => {
      setTimeout(() => {
        // Wait for targets update to propagate before tab switching
        this.props.onActivateTab(editor_tab["b" /* COSTUMES_TAB_INDEX */]);
      });
    });
  }
  handleActivateBlocksTab() {
    this.props.onActivateTab(editor_tab["a" /* BLOCKS_TAB_INDEX */]);
  }
  handleNewSprite(spriteJSONString) {
    return this.props.vm.addSprite(spriteJSONString).then(this.handleActivateBlocksTab);
  }
  handleFileUploadClick() {
    this.fileInput.click();
  }
  handleSpriteUpload(e) {
    const vm = this.props.vm;
    this.props.onShowImporting();
    handleFileUpload(e.target, (buffer, fileType, fileName, fileIndex, fileCount) => {
      file_uploader_spriteUpload(buffer, fileType, fileName, vm, newSprite => {
        this.handleNewSprite(newSprite).then(() => {
          if (fileIndex === fileCount - 1) {
            this.props.onCloseImporting();
          }
        }).catch(this.props.onCloseImporting);
      }, this.props.onCloseImporting);
    }, this.props.onCloseImporting);
  }
  setFileInput(input) {
    this.fileInput = input;
  }
  handleBlockDragEnd(blocks) {
    if (this.props.hoveredTarget.sprite && this.props.hoveredTarget.sprite !== this.props.editingTarget) {
      this.shareBlocks(blocks, this.props.hoveredTarget.sprite, this.props.editingTarget);
      this.props.onReceivedBlocks(true);
    }
  }
  shareBlocks(blocks, targetId, optFromTargetId) {
    // Position the top-level block based on the scroll position.
    const topBlock = blocks.find(block => block.topLevel);
    if (topBlock) {
      let metrics;
      if (this.props.workspaceMetrics.targets[targetId]) {
        metrics = this.props.workspaceMetrics.targets[targetId];
      } else {
        metrics = {
          scrollX: 0,
          scrollY: 0,
          scale: layout_constants["a" /* BLOCKS_DEFAULT_SCALE */]
        };
      }

      // Determine position of the top-level block based on the target's workspace metrics.
      const {
        scrollX,
        scrollY,
        scale
      } = metrics;
      const posY = -scrollY + 30;
      let posX;
      if (this.props.isRtl) {
        posX = scrollX + 30;
      } else {
        posX = -scrollX + 30;
      }

      // Actually apply the position!
      topBlock.x = posX / scale;
      topBlock.y = posY / scale;
    }
    return this.props.vm.shareBlocksToTarget(blocks, targetId, optFromTargetId);
  }
  handleDrop(dragInfo) {
    const {
      sprite: targetId
    } = this.props.hoveredTarget;
    if (dragInfo.dragType === drag_constants.SPRITE) {
      // Add one to both new and target index because we are not counting/moving the stage
      this.props.vm.reorderTarget(dragInfo.index + 1, dragInfo.newIndex + 1);
    } else if (dragInfo.dragType === drag_constants.BACKPACK_SPRITE) {
      // TODO storage does not have a way of loading zips right now, and may never need it.
      // So for now just grab the zip manually.
      fetchSprite(dragInfo.payload.bodyUrl).then(sprite3Zip => this.props.vm.addSprite(sprite3Zip));
    } else if (targetId) {
      // Something is being dragged over one of the sprite tiles or the backdrop.
      // Dropping assets like sounds and costumes duplicate the asset on the
      // hovered target. Shared costumes also become the current costume on that target.
      // However, dropping does not switch the editing target or activate that editor tab.
      // This is based on 2.0 behavior, but seems like it keeps confusing switching to a minimum.
      // it allows the user to share multiple things without switching back and forth.
      if (dragInfo.dragType === drag_constants.COSTUME) {
        this.props.vm.shareCostumeToTarget(dragInfo.index, targetId);
      } else if (targetId && dragInfo.dragType === drag_constants.SOUND) {
        this.props.vm.shareSoundToTarget(dragInfo.index, targetId);
      } else if (dragInfo.dragType === drag_constants.BACKPACK_COSTUME) {
        // In scratch 2, this only creates a new sprite from the costume.
        // We may be able to handle both kinds of drops, depending on where
        // the drop happens. For now, just add the costume.
        this.props.vm.addCostume(dragInfo.payload.body, {
          name: dragInfo.payload.name
        }, targetId);
      } else if (dragInfo.dragType === drag_constants.BACKPACK_SOUND) {
        this.props.vm.addSound({
          md5: dragInfo.payload.body,
          name: dragInfo.payload.name
        }, targetId);
      } else if (dragInfo.dragType === drag_constants.BACKPACK_CODE) {
        fetchCode(dragInfo.payload.bodyUrl).then(blocks => this.shareBlocks(blocks, targetId)).then(() => this.props.vm.refreshWorkspace());
      }
    }
  }
  render() {
    /* eslint-disable no-unused-vars */
    const _this$props = this.props,
      {
        dispatchUpdateRestore,
        isRtl,
        onActivateTab,
        onCloseImporting,
        onHighlightTarget,
        onReceivedBlocks,
        onShowImporting,
        workspaceMetrics
      } = _this$props,
      componentProps = containers_target_pane_objectWithoutProperties(_this$props, containers_target_pane_excluded);
    /* eslint-enable no-unused-vars */
    return /*#__PURE__*/react_default.a.createElement(target_pane_target_pane, containers_target_pane_extends({}, componentProps, {
      fileInputRef: this.setFileInput,
      onActivateBlocksTab: this.handleActivateBlocksTab,
      onChangeSpriteDirection: this.handleChangeSpriteDirection,
      onChangeSpriteName: this.handleChangeSpriteName,
      onChangeSpriteRotationStyle: this.handleChangeSpriteRotationStyle,
      onChangeSpriteSize: this.handleChangeSpriteSize,
      onChangeSpriteVisibility: this.handleChangeSpriteVisibility,
      onChangeSpriteX: this.handleChangeSpriteX,
      onChangeSpriteY: this.handleChangeSpriteY,
      onDeleteSprite: this.handleDeleteSprite,
      onDrop: this.handleDrop,
      onDuplicateSprite: this.handleDuplicateSprite,
      onExportSprite: this.handleExportSprite,
      onFileUploadClick: this.handleFileUploadClick,
      onPaintSpriteClick: this.handlePaintSpriteClick,
      onSelectSprite: this.handleSelectSprite,
      onSpriteUpload: this.handleSpriteUpload,
      onSurpriseSpriteClick: this.handleSurpriseSpriteClick
    }));
  }
}
const _TargetPaneComponent$ = target_pane_target_pane.propTypes,
  {
    onSelectSprite: target_pane_onSelectSprite,
    // eslint-disable-line no-unused-vars
    onActivateBlocksTab: target_pane_onActivateBlocksTab // eslint-disable-line no-unused-vars
  } = _TargetPaneComponent$,
  targetPaneProps = containers_target_pane_objectWithoutProperties(_TargetPaneComponent$, ["onSelectSprite", "onActivateBlocksTab"]);
containers_target_pane_TargetPane.propTypes = target_pane_objectSpread({
  intl: index_es["f" /* intlShape */].isRequired,
  onCloseImporting: prop_types_default.a.func,
  onShowImporting: prop_types_default.a.func
}, targetPaneProps);
const target_pane_mapStateToProps = state => ({
  editingTarget: state.scratchGui.targets.editingTarget,
  hoveredTarget: state.scratchGui.hoveredTarget,
  isRtl: state.locales.isRtl,
  spriteLibraryVisible: state.scratchGui.modals.spriteLibrary,
  sprites: state.scratchGui.targets.sprites,
  stage: state.scratchGui.targets.stage,
  raiseSprites: state.scratchGui.blockDrag,
  workspaceMetrics: state.scratchGui.workspaceMetrics
});
const target_pane_mapDispatchToProps = dispatch => ({
  onNewSpriteClick: e => {
    e.preventDefault();
    dispatch(Object(modals["z" /* openSpriteLibrary */])());
  },
  onRequestCloseSpriteLibrary: () => {
    dispatch(Object(modals["j" /* closeSpriteLibrary */])());
  },
  onActivateTab: tabIndex => {
    dispatch(Object(editor_tab["d" /* activateTab */])(tabIndex));
  },
  onReceivedBlocks: receivedBlocks => {
    dispatch(Object(hovered_target["d" /* setReceivedBlocks */])(receivedBlocks));
  },
  dispatchUpdateRestore: restoreState => {
    dispatch(Object(restore_deletion["c" /* setRestore */])(restoreState));
  },
  onHighlightTarget: id => {
    dispatch(Object(targets["b" /* highlightTarget */])(id));
  },
  onCloseImporting: () => dispatch(Object(alerts["c" /* closeAlertWithId */])('importingAsset')),
  onShowImporting: () => dispatch(Object(alerts["i" /* showStandardAlert */])('importingAsset'))
});
/* harmony default export */ var containers_target_pane = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(target_pane_mapStateToProps, target_pane_mapDispatchToProps)(containers_target_pane_TargetPane)));
// EXTERNAL MODULE: ./src/components/asset-panel/icon--sound.svg
var icon_sound = __webpack_require__(818);
var icon_sound_default = /*#__PURE__*/__webpack_require__.n(icon_sound);

// EXTERNAL MODULE: ./src/components/asset-panel/icon--sound-rtl.svg
var icon_sound_rtl = __webpack_require__(819);
var icon_sound_rtl_default = /*#__PURE__*/__webpack_require__.n(icon_sound_rtl);

// EXTERNAL MODULE: ./src/components/asset-panel/icon--add-sound-lib.svg
var icon_add_sound_lib = __webpack_require__(820);
var icon_add_sound_lib_default = /*#__PURE__*/__webpack_require__.n(icon_add_sound_lib);

// EXTERNAL MODULE: ./src/components/asset-panel/icon--add-sound-record.svg
var icon_add_sound_record = __webpack_require__(821);
var icon_add_sound_record_default = /*#__PURE__*/__webpack_require__.n(icon_add_sound_record);

// EXTERNAL MODULE: ./node_modules/wav-encoder/index.js
var wav_encoder = __webpack_require__(352);
var wav_encoder_default = /*#__PURE__*/__webpack_require__.n(wav_encoder);

// CONCATENATED MODULE: ./src/lib/audio/audio-util.js

const SOUND_BYTE_LIMIT = 10 * 1000 * 1000; // 10mb

const _computeRMS = function _computeRMS(samples, start, end) {
  let scaling = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.55;
  const length = end - start;
  if (length === 0) return 0;
  // Calculate RMS, adapted from https://github.com/Tonejs/Tone.js/blob/master/Tone/component/Meter.js#L88
  let sum = 0;
  for (let i = start; i < end; i++) {
    const sample = samples[i];
    sum += sample ** 2;
  }
  const rms = Math.sqrt(sum / length);
  const val = rms / scaling;
  return Math.sqrt(val);
};
const computeRMS = (samples, scaling) => _computeRMS(samples, 0, samples.length, scaling);
const computeChunkedRMS = function computeChunkedRMS(samples) {
  let chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1024;
  const sampleCount = samples.length;
  const chunkLevels = [];
  for (let i = 0; i < sampleCount; i += chunkSize) {
    const maxIndex = Math.min(sampleCount, i + chunkSize);
    chunkLevels.push(_computeRMS(samples, i, maxIndex));
  }
  return chunkLevels;
};
const audio_util_encodeAndAddSoundToVM = function encodeAndAddSoundToVM(vm, samples, sampleRate, name, callback) {
  wav_encoder_default.a.encode({
    sampleRate: sampleRate,
    channelData: [samples]
  }).then(wavBuffer => {
    const vmSound = {
      format: '',
      dataFormat: 'wav',
      rate: sampleRate,
      sampleCount: samples.length
    };

    // Create an asset from the encoded .wav and get resulting md5
    const storage = vm.runtime.storage;
    vmSound.asset = storage.createAsset(storage.AssetType.Sound, storage.DataFormat.WAV, new Uint8Array(wavBuffer), null, true // generate md5
    );

    vmSound.assetId = vmSound.asset.assetId;

    // update vmSound object with md5 property
    vmSound.md5 = "".concat(vmSound.assetId, ".").concat(vmSound.dataFormat);
    // The VM will update the sound name to a fresh name
    vmSound.name = name;
    vm.addSound(vmSound).then(() => {
      if (callback) callback();
    });
  });
};

/**
 @typedef SoundBuffer
 @type {Object}
 @property {Float32Array} samples Array of audio samples
 @property {number} sampleRate Audio sample rate
 */

/**
 * Downsample the given buffer to try to reduce file size below SOUND_BYTE_LIMIT
 * @param {SoundBuffer} buffer - Buffer to resample
 * @param {function(SoundBuffer):Promise<SoundBuffer>} resampler - resampler function
 * @returns {SoundBuffer} Downsampled buffer with half the sample rate
 */
const downsampleIfNeeded = (buffer, resampler) => {
  const {
    samples,
    sampleRate
  } = buffer;
  const duration = samples.length / sampleRate;
  const encodedByteLength = samples.length * 2; /* bitDepth 16 bit */
  // Resolve immediately if already within byte limit
  if (encodedByteLength < SOUND_BYTE_LIMIT) {
    return Promise.resolve({
      samples,
      sampleRate
    });
  }
  // If encodeable at 22khz, resample and call submitNewSamples again
  if (duration * 22050 * 2 < SOUND_BYTE_LIMIT) {
    return resampler({
      samples,
      sampleRate
    }, 22050);
  }
  // Cannot save this sound at 22khz, refuse to edit
  // In the future we could introduce further compression here
  return Promise.reject(new Error('Sound too large to save, refusing to edit'));
};

/**
 * Drop every other sample of an audio buffer as a last-resort way of downsampling.
 * @param {SoundBuffer} buffer - Buffer to resample
 * @returns {SoundBuffer} Downsampled buffer with half the sample rate
 */
const dropEveryOtherSample = buffer => {
  const newLength = Math.floor(buffer.samples.length / 2);
  const newSamples = new Float32Array(newLength);
  for (let i = 0; i < newLength; i++) {
    newSamples[i] = buffer.samples[i * 2];
  }
  return {
    samples: newSamples,
    sampleRate: buffer.sampleRate / 2
  };
};

// EXTERNAL MODULE: ./src/components/meter/meter.css
var meter = __webpack_require__(205);
var meter_default = /*#__PURE__*/__webpack_require__.n(meter);

// CONCATENATED MODULE: ./src/components/meter/meter.jsx



const Meter = props => {
  const {
    level,
    width,
    height
  } = props;
  const nGreen = 11;
  const nYellow = 5;
  const nRed = 3;
  const nBars = nGreen + nYellow + nRed;
  const barSpacing = 2.5;
  const barRounding = 3;
  const barHeight = (height - barSpacing * (nBars + 1)) / nBars;
  const nBarsToMask = nBars - Math.floor(level * nBars);
  const scale = (nBarsToMask * (barHeight + barSpacing) + barSpacing / 2) / height;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: meter_default.a.maskContainer,
    style: {
      height: "".concat(height, "px")
    }
  }, /*#__PURE__*/react_default.a.createElement("svg", {
    className: meter_default.a.container,
    height: height,
    width: width
  }, Array(nBars).fill(0).map((value, index) => /*#__PURE__*/react_default.a.createElement("rect", {
    className: index < nGreen ? meter_default.a.green : index < nGreen + nYellow ? meter_default.a.yellow : meter_default.a.red,
    height: barHeight,
    key: index,
    rx: barRounding,
    ry: barRounding,
    width: width - 2,
    x: 1,
    y: height - (barSpacing + barHeight) * (index + 1)
  }))), /*#__PURE__*/react_default.a.createElement("div", {
    className: meter_default.a.mask,
    style: {
      transform: "scaleY(".concat(scale, ")")
    }
  }));
};
Meter.propTypes = {
  height: prop_types_default.a.number,
  level: prop_types_default.a.number,
  width: prop_types_default.a.number
};
/* harmony default export */ var meter_meter = (Meter);
// EXTERNAL MODULE: ./src/components/waveform/waveform.css
var waveform = __webpack_require__(463);
var waveform_default = /*#__PURE__*/__webpack_require__.n(waveform);

// CONCATENATED MODULE: ./src/components/waveform/waveform.jsx




// Waveform is expensive to compute, make sure it only updates when data does
// by using PureComponent. In future can be changed back to function with React.memo
// eslint-disable-next-line react/prefer-stateless-function
class waveform_Waveform extends react_default.a.PureComponent {
  render() {
    const {
      width,
      height,
      data
    } = this.props;

    // Never want a density of points higher than the number of pixels
    // This is very conservative, could be far fewer points because of curve smoothing.
    // Drawing too many points seems to cause an explosion in browser
    // composite time when animating the playhead
    const takeEveryN = Math.ceil(data.length / width);
    const filteredData = takeEveryN === 1 ? data.slice(0) : data.filter((_, i) => i % takeEveryN === 0);

    // Need at least two points to render waveform.
    if (filteredData.length === 1) {
      filteredData.push(filteredData[0]);
    }
    const maxIndex = filteredData.length - 1;
    const points = [...filteredData.map((v, i) => [width * (i / maxIndex), height * v / 2]), ...filteredData.reverse().map((v, i) => [width * (1 - i / maxIndex), -height * v / 2])];
    const pathComponents = points.map((_ref, i) => {
      let [x, y] = _ref;
      const [nx, ny] = points[i < points.length - 1 ? i + 1 : 0];
      return "Q".concat(x, " ").concat(y, " ").concat((x + nx) / 2, " ").concat((y + ny) / 2);
    });
    return /*#__PURE__*/react_default.a.createElement("svg", {
      className: waveform_default.a.container,
      viewBox: "0 0 ".concat(width, " ").concat(height)
    }, /*#__PURE__*/react_default.a.createElement("g", {
      transform: "scale(1, -1) translate(0, -".concat(height / 2, ")")
    }, /*#__PURE__*/react_default.a.createElement("path", {
      className: waveform_default.a.waveformPath,
      d: "M0 0".concat(pathComponents.join(' '), "Z"),
      strokeLinejoin: 'round',
      strokeWidth: 1
    })));
  }
}
waveform_Waveform.propTypes = {
  data: prop_types_default.a.arrayOf(prop_types_default.a.number),
  height: prop_types_default.a.number,
  width: prop_types_default.a.number
};
/* harmony default export */ var waveform_waveform = (waveform_Waveform);
// EXTERNAL MODULE: ./src/components/record-modal/record-modal.css
var record_modal = __webpack_require__(49);
var record_modal_default = /*#__PURE__*/__webpack_require__.n(record_modal);

// EXTERNAL MODULE: ./src/components/record-modal/icon--stop-recording.svg
var icon_stop_recording = __webpack_require__(822);
var icon_stop_recording_default = /*#__PURE__*/__webpack_require__.n(icon_stop_recording);

// CONCATENATED MODULE: ./src/components/record-modal/recording-step.jsx








const recording_step_messages = Object(index_es["d" /* defineMessages */])({
  beginRecord: {
    "id": "gui.recordingStep.beginRecord",
    "defaultMessage": "Begin recording by clicking the button below"
  },
  permission: {
    "id": "gui.recordingStep.permission",
    "defaultMessage": "{arrow}We need your permission to use your microphone"
  },
  stop: {
    "id": "gui.recordingStep.stop",
    "defaultMessage": "Stop recording"
  },
  record: {
    "id": "gui.recordingStep.record",
    "defaultMessage": "Record"
  }
});
const recording_step_RecordingStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], null, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.visualizationContainer
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.meterContainer
}, /*#__PURE__*/react_default.a.createElement(meter_meter, {
  height: 172,
  level: props.level,
  width: 20
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.waveformContainer
}, props.levels ? /*#__PURE__*/react_default.a.createElement(waveform_waveform, {
  data: props.levels,
  height: 150,
  level: 0,
  width: 440
}) : /*#__PURE__*/react_default.a.createElement("span", {
  className: record_modal_default.a.helpText
}, props.listening ? props.intl.formatMessage(recording_step_messages.beginRecord) : props.intl.formatMessage(recording_step_messages.permission, {
  arrow: props.isRtl ? '↗️ \u00A0' : '↖️ \u00A0'
})))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.mainButtonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: record_modal_default.a.mainButton,
  disabled: !props.listening,
  onClick: props.recording ? props.onStopRecording : props.onRecord
}, props.recording ? /*#__PURE__*/react_default.a.createElement("img", {
  draggable: false,
  src: icon_stop_recording_default.a
}) : /*#__PURE__*/react_default.a.createElement("svg", {
  className: record_modal_default.a.recordButton,
  height: "52",
  width: "52"
}, /*#__PURE__*/react_default.a.createElement("circle", {
  className: record_modal_default.a.recordButtonCircle,
  cx: "26",
  cy: "26",
  r: "25"
}), /*#__PURE__*/react_default.a.createElement("circle", {
  className: record_modal_default.a.recordButtonCircleOutline,
  cx: "26",
  cy: "26",
  r: 27 + props.level * 5
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: record_modal_default.a.helpText
}, /*#__PURE__*/react_default.a.createElement("span", {
  className: record_modal_default.a.recordingText
}, props.recording ? props.intl.formatMessage(recording_step_messages.stop) : props.intl.formatMessage(recording_step_messages.record))))));
recording_step_RecordingStep.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  isRtl: prop_types_default.a.bool,
  level: prop_types_default.a.number,
  levels: prop_types_default.a.arrayOf(prop_types_default.a.number),
  listening: prop_types_default.a.bool,
  onRecord: prop_types_default.a.func.isRequired,
  onStopRecording: prop_types_default.a.func.isRequired,
  recording: prop_types_default.a.bool
};
/* harmony default export */ var recording_step = (Object(index_es["e" /* injectIntl */])(recording_step_RecordingStep));
// EXTERNAL MODULE: ./node_modules/get-float-time-domain-data/lib/get-float-time-domain-data.js
var get_float_time_domain_data = __webpack_require__(1684);

// EXTERNAL MODULE: ./node_modules/get-user-media-promise/lib/get-user-media-promise.js
var get_user_media_promise = __webpack_require__(353);
var get_user_media_promise_default = /*#__PURE__*/__webpack_require__.n(get_user_media_promise);

// EXTERNAL MODULE: ./node_modules/startaudiocontext/StartAudioContext.js
var StartAudioContext = __webpack_require__(446);
var StartAudioContext_default = /*#__PURE__*/__webpack_require__.n(StartAudioContext);

// EXTERNAL MODULE: ./node_modules/bowser/src/bowser.js
var bowser = __webpack_require__(354);
var bowser_default = /*#__PURE__*/__webpack_require__.n(bowser);

// CONCATENATED MODULE: ./src/lib/audio/shared-audio-context.js


let AUDIO_CONTEXT;
if (!bowser_default.a.msie) {
  /**
   * AudioContext can be initialized only when user interaction event happens
   */
  const event = typeof document.ontouchstart === 'undefined' ? 'mousedown' : 'touchstart';
  const initAudioContext = () => {
    document.removeEventListener(event, initAudioContext);
    AUDIO_CONTEXT = new (window.AudioContext || window.webkitAudioContext)();
    StartAudioContext_default()(AUDIO_CONTEXT);
  };
  document.addEventListener(event, initAudioContext);
}

/**
 * Wrap browser AudioContext because we shouldn't create more than one
 * @return {AudioContext} The singleton AudioContext
 */
/* harmony default export */ var shared_audio_context = (function () {
  return AUDIO_CONTEXT;
});
// CONCATENATED MODULE: ./src/lib/audio/audio-recorder.js




class audio_recorder_AudioRecorder {
  constructor() {
    this.audioContext = new shared_audio_context();
    this.bufferLength = 8192;
    this.userMediaStream = null;
    this.mediaStreamSource = null;
    this.sourceNode = null;
    this.scriptProcessorNode = null;
    this.recordedSamples = 0;
    this.recording = false;
    this.started = false;
    this.buffers = [];
    this.disposed = false;
  }
  startListening(onStarted, onUpdate, onError) {
    try {
      get_user_media_promise_default()({
        audio: true
      }).then(userMediaStream => {
        if (!this.disposed) {
          this.started = true;
          onStarted();
          this.attachUserMediaStream(userMediaStream, onUpdate);
        }
      }).catch(e => {
        if (!this.disposed) {
          onError(e);
        }
      });
    } catch (e) {
      if (!this.disposed) {
        onError(e);
      }
    }
  }
  startRecording() {
    this.recording = true;
  }
  attachUserMediaStream(userMediaStream, onUpdate) {
    this.userMediaStream = userMediaStream;
    this.mediaStreamSource = this.audioContext.createMediaStreamSource(userMediaStream);
    this.sourceNode = this.audioContext.createGain();
    this.scriptProcessorNode = this.audioContext.createScriptProcessor(this.bufferLength, 1, 1);
    this.scriptProcessorNode.onaudioprocess = processEvent => {
      if (this.recording && !this.disposed) {
        this.buffers.push(new Float32Array(processEvent.inputBuffer.getChannelData(0)));
      }
    };
    this.analyserNode = this.audioContext.createAnalyser();
    this.analyserNode.fftSize = 2048;
    const bufferLength = this.analyserNode.frequencyBinCount;
    const dataArray = new Float32Array(bufferLength);
    const update = () => {
      if (this.disposed) return;
      this.analyserNode.getFloatTimeDomainData(dataArray);
      onUpdate(computeRMS(dataArray));
      requestAnimationFrame(update);
    };
    requestAnimationFrame(update);

    // Wire everything together, ending in the destination
    this.mediaStreamSource.connect(this.sourceNode);
    this.sourceNode.connect(this.analyserNode);
    this.analyserNode.connect(this.scriptProcessorNode);
    this.scriptProcessorNode.connect(this.audioContext.destination);
  }
  stop() {
    const buffer = new Float32Array(this.buffers.length * this.bufferLength);
    let offset = 0;
    for (let i = 0; i < this.buffers.length; i++) {
      const bufferChunk = this.buffers[i];
      buffer.set(bufferChunk, offset);
      offset += bufferChunk.length;
    }
    const chunkLevels = computeChunkedRMS(buffer);
    const maxRMS = Math.max.apply(null, chunkLevels);
    const threshold = maxRMS / 8;
    let firstChunkAboveThreshold = null;
    let lastChunkAboveThreshold = null;
    for (let i = 0; i < chunkLevels.length; i++) {
      if (chunkLevels[i] > threshold) {
        if (firstChunkAboveThreshold === null) firstChunkAboveThreshold = i + 1;
        lastChunkAboveThreshold = i + 1;
      }
    }
    let trimStart = Math.max(2, firstChunkAboveThreshold - 2) / this.buffers.length;
    let trimEnd = Math.min(this.buffers.length - 2, lastChunkAboveThreshold + 2) / this.buffers.length;

    // With very few samples, the automatic trimming can produce invalid values
    if (trimStart >= trimEnd) {
      trimStart = 0;
      trimEnd = 1;
    }
    return {
      levels: chunkLevels,
      samples: buffer,
      sampleRate: this.audioContext.sampleRate,
      trimStart: trimStart,
      trimEnd: trimEnd
    };
  }
  dispose() {
    if (this.started) {
      this.scriptProcessorNode.onaudioprocess = null;
      this.scriptProcessorNode.disconnect();
      this.analyserNode.disconnect();
      this.sourceNode.disconnect();
      this.mediaStreamSource.disconnect();
      this.userMediaStream.getAudioTracks()[0].stop();
    }
    this.disposed = true;
  }
}
/* harmony default export */ var audio_recorder = (audio_recorder_AudioRecorder);
// CONCATENATED MODULE: ./src/containers/recording-step.jsx
const recording_step_excluded = ["onRecord", "onStopRecording"];
function recording_step_extends() { recording_step_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return recording_step_extends.apply(this, arguments); }
function recording_step_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = recording_step_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function recording_step_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const containers_recording_step_messages = Object(index_es["d" /* defineMessages */])({
  alertMsg: {
    "id": "gui.recordingStep.alertMsg",
    "defaultMessage": "Could not start recording"
  }
});
class containers_recording_step_RecordingStep extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleRecord', 'handleStopRecording', 'handleStarted', 'handleLevelUpdate', 'handleRecordingError']);
    this.state = {
      listening: false,
      level: 0,
      levels: null
    };
  }
  componentDidMount() {
    this.audioRecorder = new audio_recorder();
    this.audioRecorder.startListening(this.handleStarted, this.handleLevelUpdate, this.handleRecordingError);
  }
  componentWillUnmount() {
    this.audioRecorder.dispose();
  }
  handleStarted() {
    this.setState({
      listening: true
    });
  }
  handleRecordingError() {
    alert(this.props.intl.formatMessage(containers_recording_step_messages.alertMsg)); // eslint-disable-line no-alert
  }

  handleLevelUpdate(level) {
    this.setState({
      level: level,
      levels: this.props.recording ? (this.state.levels || []).concat([level]) : this.state.levels
    });
  }
  handleRecord() {
    this.audioRecorder.startRecording();
    this.props.onRecord();
  }
  handleStopRecording() {
    const {
      samples,
      sampleRate,
      levels,
      trimStart,
      trimEnd
    } = this.audioRecorder.stop();
    this.props.onStopRecording(samples, sampleRate, levels, trimStart, trimEnd);
  }
  render() {
    const _this$props = this.props,
      {
        onRecord,
        // eslint-disable-line no-unused-vars
        onStopRecording // eslint-disable-line no-unused-vars
      } = _this$props,
      componentProps = recording_step_objectWithoutProperties(_this$props, recording_step_excluded);
    return /*#__PURE__*/react_default.a.createElement(recording_step, recording_step_extends({
      level: this.state.level,
      levels: this.state.levels,
      listening: this.state.listening,
      onRecord: this.handleRecord,
      onStopRecording: this.handleStopRecording
    }, componentProps));
  }
}
containers_recording_step_RecordingStep.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  onRecord: prop_types_default.a.func.isRequired,
  onStopRecording: prop_types_default.a.func.isRequired,
  recording: prop_types_default.a.bool
};
/* harmony default export */ var containers_recording_step = (Object(index_es["e" /* injectIntl */])(containers_recording_step_RecordingStep));
// EXTERNAL MODULE: ./src/components/audio-trimmer/audio-trimmer.css
var audio_trimmer = __webpack_require__(41);
var audio_trimmer_default = /*#__PURE__*/__webpack_require__.n(audio_trimmer);

// EXTERNAL MODULE: ./src/components/audio-trimmer/icon--handle.svg
var audio_trimmer_icon_handle = __webpack_require__(464);
var audio_trimmer_icon_handle_default = /*#__PURE__*/__webpack_require__.n(audio_trimmer_icon_handle);

// CONCATENATED MODULE: ./src/components/audio-trimmer/selection-handle.jsx






const SelectionHandle = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.trimLine, props.handleStyle),
  onMouseDown: props.onMouseDown,
  onTouchStart: props.onMouseDown
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.trimHandle, audio_trimmer_default.a.topTrimHandle)
}, /*#__PURE__*/react_default.a.createElement("img", {
  src: audio_trimmer_icon_handle_default.a
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.trimHandle, audio_trimmer_default.a.bottomTrimHandle)
}, /*#__PURE__*/react_default.a.createElement("img", {
  src: audio_trimmer_icon_handle_default.a
})));
SelectionHandle.propTypes = {
  handleStyle: prop_types_default.a.string,
  onMouseDown: prop_types_default.a.func
};
/* harmony default export */ var selection_handle = (SelectionHandle);
// CONCATENATED MODULE: ./src/components/audio-trimmer/playhead.jsx




const Playhead = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: audio_trimmer_default.a.playheadContainer
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(audio_trimmer_default.a.playhead),
  style: {
    transform: "translateX(".concat(100 * props.playbackPosition, "%)")
  }
}));
Playhead.propTypes = {
  playbackPosition: prop_types_default.a.number
};
/* harmony default export */ var playhead = (Playhead);
// CONCATENATED MODULE: ./src/components/audio-trimmer/audio-trimmer.jsx







const audio_trimmer_AudioTrimmer = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.trimmer),
  ref: props.containerRef
}, props.trimStart === null ? null : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.trimBackground, audio_trimmer_default.a.startTrimBackground),
  style: {
    width: "".concat(100 * props.trimStart, "%")
  },
  onMouseDown: props.onTrimStartMouseDown,
  onTouchStart: props.onTrimStartMouseDown
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.trimBackgroundMask)
}), /*#__PURE__*/react_default.a.createElement(selection_handle, {
  handleStyle: audio_trimmer_default.a.leftHandle
})), props.playhead ? /*#__PURE__*/react_default.a.createElement(playhead, {
  playbackPosition: props.playhead
}) : null, props.trimEnd === null ? null : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.trimBackground, audio_trimmer_default.a.endTrimBackground),
  style: {
    left: "".concat(100 * props.trimEnd, "%"),
    width: "".concat(100 - 100 * props.trimEnd, "%")
  },
  onMouseDown: props.onTrimEndMouseDown,
  onTouchStart: props.onTrimEndMouseDown
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.trimBackgroundMask)
}), /*#__PURE__*/react_default.a.createElement(selection_handle, {
  handleStyle: audio_trimmer_default.a.rightHandle
})));
audio_trimmer_AudioTrimmer.propTypes = {
  containerRef: prop_types_default.a.func,
  onTrimEndMouseDown: prop_types_default.a.func.isRequired,
  onTrimStartMouseDown: prop_types_default.a.func.isRequired,
  playhead: prop_types_default.a.number,
  trimEnd: prop_types_default.a.number,
  trimStart: prop_types_default.a.number
};
/* harmony default export */ var audio_trimmer_audio_trimmer = (audio_trimmer_AudioTrimmer);
// CONCATENATED MODULE: ./src/containers/audio-trimmer.jsx





const MIN_LENGTH = 0.01; // Used to stop sounds being trimmed smaller than 1%

class containers_audio_trimmer_AudioTrimmer extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleTrimStartMouseDown', 'handleTrimEndMouseDown', 'handleTrimStartMouseMove', 'handleTrimEndMouseMove', 'storeRef']);
    this.trimStartDragRecognizer = new drag_recognizer({
      onDrag: this.handleTrimStartMouseMove,
      touchDragAngle: 90,
      distanceThreshold: 0
    });
    this.trimEndDragRecognizer = new drag_recognizer({
      onDrag: this.handleTrimEndMouseMove,
      touchDragAngle: 90,
      distanceThreshold: 0
    });
  }
  handleTrimStartMouseMove(currentOffset, initialOffset) {
    const dx = (currentOffset.x - initialOffset.x) / this.containerSize;
    const newTrim = Math.max(0, Math.min(this.props.trimEnd - MIN_LENGTH, this.initialTrim + dx));
    this.props.onSetTrimStart(newTrim);
  }
  handleTrimEndMouseMove(currentOffset, initialOffset) {
    const dx = (currentOffset.x - initialOffset.x) / this.containerSize;
    const newTrim = Math.min(1, Math.max(this.props.trimStart + MIN_LENGTH, this.initialTrim + dx));
    this.props.onSetTrimEnd(newTrim);
  }
  handleTrimStartMouseDown(e) {
    this.containerSize = this.containerElement.getBoundingClientRect().width;
    this.trimStartDragRecognizer.start(e);
    this.initialTrim = this.props.trimStart;
    e.stopPropagation();
    e.preventDefault();
  }
  handleTrimEndMouseDown(e) {
    this.containerSize = this.containerElement.getBoundingClientRect().width;
    this.trimEndDragRecognizer.start(e);
    this.initialTrim = this.props.trimEnd;
    e.stopPropagation();
    e.preventDefault();
  }
  storeRef(el) {
    this.containerElement = el;
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(audio_trimmer_audio_trimmer, {
      containerRef: this.storeRef,
      playhead: this.props.playhead,
      trimEnd: this.props.trimEnd,
      trimStart: this.props.trimStart,
      onTrimEndMouseDown: this.handleTrimEndMouseDown,
      onTrimStartMouseDown: this.handleTrimStartMouseDown
    });
  }
}
containers_audio_trimmer_AudioTrimmer.propTypes = {
  onSetTrimEnd: prop_types_default.a.func,
  onSetTrimStart: prop_types_default.a.func,
  playhead: prop_types_default.a.number,
  trimEnd: prop_types_default.a.number,
  trimStart: prop_types_default.a.number
};
/* harmony default export */ var containers_audio_trimmer = (containers_audio_trimmer_AudioTrimmer);
// EXTERNAL MODULE: ./src/components/record-modal/icon--back.svg
var record_modal_icon_back = __webpack_require__(823);
var record_modal_icon_back_default = /*#__PURE__*/__webpack_require__.n(record_modal_icon_back);

// EXTERNAL MODULE: ./src/components/record-modal/icon--stop-playback.svg
var icon_stop_playback = __webpack_require__(824);
var icon_stop_playback_default = /*#__PURE__*/__webpack_require__.n(icon_stop_playback);

// EXTERNAL MODULE: ./src/components/record-modal/icon--play.svg
var record_modal_icon_play = __webpack_require__(825);
var record_modal_icon_play_default = /*#__PURE__*/__webpack_require__.n(record_modal_icon_play);

// CONCATENATED MODULE: ./src/components/record-modal/playback-step.jsx











const playback_step_messages = Object(index_es["d" /* defineMessages */])({
  stopMsg: {
    "id": "gui.playbackStep.stopMsg",
    "defaultMessage": "Stop"
  },
  playMsg: {
    "id": "gui.playbackStep.playMsg",
    "defaultMessage": "Play"
  },
  loadingMsg: {
    "id": "gui.playbackStep.loadingMsg",
    "defaultMessage": "Loading..."
  },
  saveMsg: {
    "id": "gui.playbackStep.saveMsg",
    "defaultMessage": "Save"
  },
  reRecordMsg: {
    "id": "gui.playbackStep.reRecordMsg",
    "defaultMessage": "Re-record"
  }
});
const playback_step_PlaybackStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], null, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.visualizationContainer
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.meterContainer
}, /*#__PURE__*/react_default.a.createElement(meter_meter, {
  height: 172,
  level: 0,
  width: 20
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.waveformContainer
}, /*#__PURE__*/react_default.a.createElement(waveform_waveform, {
  data: props.levels,
  height: 150,
  level: 0,
  width: 480
}), /*#__PURE__*/react_default.a.createElement(containers_audio_trimmer, {
  playhead: props.playhead,
  trimEnd: props.trimEnd,
  trimStart: props.trimStart,
  onSetTrimEnd: props.onSetTrimEnd,
  onSetTrimStart: props.onSetTrimStart
}))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.mainButtonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: record_modal_default.a.mainButton,
  onClick: props.playing ? props.onStopPlaying : props.onPlay
}, /*#__PURE__*/react_default.a.createElement("img", {
  draggable: false,
  src: props.playing ? icon_stop_playback_default.a : record_modal_icon_play_default.a
}), /*#__PURE__*/react_default.a.createElement("div", {
  className: record_modal_default.a.helpText
}, /*#__PURE__*/react_default.a.createElement("span", {
  className: record_modal_default.a.playingText
}, props.playing ? props.intl.formatMessage(playback_step_messages.stopMsg) : props.intl.formatMessage(playback_step_messages.playMsg))))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.buttonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: record_modal_default.a.rerecordButton,
  onClick: props.onBack
}, /*#__PURE__*/react_default.a.createElement("img", {
  draggable: false,
  src: record_modal_icon_back_default.a
}), props.intl.formatMessage(playback_step_messages.reRecordMsg)), /*#__PURE__*/react_default.a.createElement("button", {
  className: record_modal_default.a.okButton,
  disabled: props.encoding,
  onClick: props.onSubmit
}, props.encoding ? props.intl.formatMessage(playback_step_messages.loadingMsg) : props.intl.formatMessage(playback_step_messages.saveMsg))));
playback_step_PlaybackStep.propTypes = {
  encoding: prop_types_default.a.bool.isRequired,
  intl: index_es["f" /* intlShape */].isRequired,
  levels: prop_types_default.a.arrayOf(prop_types_default.a.number).isRequired,
  onBack: prop_types_default.a.func.isRequired,
  onPlay: prop_types_default.a.func.isRequired,
  onSetTrimEnd: prop_types_default.a.func.isRequired,
  onSetTrimStart: prop_types_default.a.func.isRequired,
  onStopPlaying: prop_types_default.a.func.isRequired,
  onSubmit: prop_types_default.a.func.isRequired,
  playhead: prop_types_default.a.number,
  playing: prop_types_default.a.bool.isRequired,
  trimEnd: prop_types_default.a.number.isRequired,
  trimStart: prop_types_default.a.number.isRequired
};
/* harmony default export */ var playback_step = (Object(index_es["e" /* injectIntl */])(playback_step_PlaybackStep));
// CONCATENATED MODULE: ./src/lib/audio/audio-buffer-player.js

class audio_buffer_player_AudioBufferPlayer {
  constructor(samples, sampleRate) {
    this.audioContext = new shared_audio_context();
    this.buffer = this.audioContext.createBuffer(1, samples.length, sampleRate);
    this.buffer.getChannelData(0).set(samples);
    this.source = null;
    this.startTime = null;
    this.updateCallback = null;
    this.trimStart = null;
    this.trimEnd = null;
  }
  play(trimStart, trimEnd, onUpdate, onEnded) {
    this.updateCallback = onUpdate;
    this.trimStart = trimStart;
    this.trimEnd = trimEnd;
    this.startTime = Date.now();
    const trimStartTime = this.buffer.duration * trimStart;
    const trimmedDuration = this.buffer.duration * trimEnd - trimStartTime;
    this.source = this.audioContext.createBufferSource();
    this.source.onended = onEnded;
    this.source.buffer = this.buffer;
    this.source.connect(this.audioContext.destination);
    this.source.start(0, trimStartTime, trimmedDuration);
    this.update();
  }
  update() {
    const timeSinceStart = (Date.now() - this.startTime) / 1000;
    const percentage = timeSinceStart / this.buffer.duration;
    if (percentage + this.trimStart < this.trimEnd && this.source.onended) {
      requestAnimationFrame(this.update.bind(this));
      this.updateCallback(percentage + this.trimStart);
    } else {
      this.updateCallback = null;
    }
  }
  stop() {
    if (this.source) {
      this.source.onended = null; // Do not call onEnded callback if manually stopped
      try {
        this.source.stop();
      } catch (e) {
        // This is probably Safari, which dies when you call stop more than once
        // which the spec says is allowed: https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode
        console.log('Caught error while stopping buffer source node.'); // eslint-disable-line no-console
      }
    }
  }
}

/* harmony default export */ var audio_buffer_player = (audio_buffer_player_AudioBufferPlayer);
// CONCATENATED MODULE: ./src/containers/playback-step.jsx
const playback_step_excluded = ["sampleRate", "onPlay", "onStopPlaying", "onSetPlayhead"];
function playback_step_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function playback_step_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? playback_step_ownKeys(Object(t), !0).forEach(function (r) { playback_step_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : playback_step_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function playback_step_defineProperty(obj, key, value) { key = playback_step_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function playback_step_toPropertyKey(arg) { var key = playback_step_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function playback_step_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function playback_step_extends() { playback_step_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return playback_step_extends.apply(this, arguments); }
function playback_step_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = playback_step_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function playback_step_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





class containers_playback_step_PlaybackStep extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handlePlay', 'handleStopPlaying']);
  }
  componentDidMount() {
    this.audioBufferPlayer = new audio_buffer_player(this.props.samples, this.props.sampleRate);
  }
  componentWillUnmount() {
    this.audioBufferPlayer.stop();
  }
  handlePlay() {
    this.audioBufferPlayer.play(this.props.trimStart, this.props.trimEnd, this.props.onSetPlayhead, this.props.onStopPlaying);
    this.props.onPlay();
  }
  handleStopPlaying() {
    this.audioBufferPlayer.stop();
    this.props.onStopPlaying();
  }
  render() {
    const _this$props = this.props,
      {
        sampleRate,
        // eslint-disable-line no-unused-vars
        onPlay,
        // eslint-disable-line no-unused-vars
        onStopPlaying,
        // eslint-disable-line no-unused-vars
        onSetPlayhead // eslint-disable-line no-unused-vars
      } = _this$props,
      componentProps = playback_step_objectWithoutProperties(_this$props, playback_step_excluded);
    return /*#__PURE__*/react_default.a.createElement(playback_step, playback_step_extends({
      onPlay: this.handlePlay,
      onStopPlaying: this.handleStopPlaying
    }, componentProps));
  }
}
containers_playback_step_PlaybackStep.propTypes = playback_step_objectSpread({
  sampleRate: prop_types_default.a.number.isRequired,
  samples: prop_types_default.a.instanceOf(Float32Array).isRequired
}, playback_step.propTypes);
/* harmony default export */ var containers_playback_step = (containers_playback_step_PlaybackStep);
// CONCATENATED MODULE: ./src/components/record-modal/record-modal.jsx








const record_modal_messages = Object(index_es["d" /* defineMessages */])({
  title: {
    "id": "gui.recordModal.title",
    "defaultMessage": "Record Sound"
  }
});
const record_modal_RecordModal = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: record_modal_default.a.modalContent,
  contentLabel: props.intl.formatMessage(record_modal_messages.title),
  onRequestClose: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: record_modal_default.a.body
}, props.samples ? /*#__PURE__*/react_default.a.createElement(containers_playback_step, {
  encoding: props.encoding,
  levels: props.levels,
  playhead: props.playhead,
  playing: props.playing,
  sampleRate: props.sampleRate,
  samples: props.samples,
  trimEnd: props.trimEnd,
  trimStart: props.trimStart,
  onBack: props.onBack,
  onPlay: props.onPlay,
  onSetPlayhead: props.onSetPlayhead,
  onSetTrimEnd: props.onSetTrimEnd,
  onSetTrimStart: props.onSetTrimStart,
  onStopPlaying: props.onStopPlaying,
  onSubmit: props.onSubmit
}) : /*#__PURE__*/react_default.a.createElement(containers_recording_step, {
  recording: props.recording,
  onRecord: props.onRecord,
  onStopRecording: props.onStopRecording
})));
record_modal_RecordModal.propTypes = {
  encoding: prop_types_default.a.bool.isRequired,
  intl: index_es["f" /* intlShape */].isRequired,
  levels: prop_types_default.a.arrayOf(prop_types_default.a.number),
  onBack: prop_types_default.a.func.isRequired,
  onCancel: prop_types_default.a.func.isRequired,
  onPlay: prop_types_default.a.func.isRequired,
  onRecord: prop_types_default.a.func.isRequired,
  onSetPlayhead: prop_types_default.a.func.isRequired,
  onSetTrimEnd: prop_types_default.a.func.isRequired,
  onSetTrimStart: prop_types_default.a.func.isRequired,
  onStopPlaying: prop_types_default.a.func.isRequired,
  onStopRecording: prop_types_default.a.func.isRequired,
  onSubmit: prop_types_default.a.func.isRequired,
  playhead: prop_types_default.a.number,
  playing: prop_types_default.a.bool,
  recording: prop_types_default.a.bool,
  sampleRate: prop_types_default.a.number,
  samples: prop_types_default.a.instanceOf(Float32Array),
  trimEnd: prop_types_default.a.number.isRequired,
  trimStart: prop_types_default.a.number.isRequired
};
/* harmony default export */ var record_modal_record_modal = (Object(index_es["e" /* injectIntl */])(record_modal_RecordModal));
// CONCATENATED MODULE: ./src/containers/record-modal.jsx








class containers_record_modal_RecordModal extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleRecord', 'handleStopRecording', 'handlePlay', 'handleStopPlaying', 'handleBack', 'handleSubmit', 'handleCancel', 'handleSetPlayhead', 'handleSetTrimStart', 'handleSetTrimEnd']);
    this.state = {
      samples: null,
      encoding: false,
      levels: null,
      playhead: null,
      playing: false,
      recording: false,
      sampleRate: null,
      trimStart: 0,
      trimEnd: 1
    };
  }
  handleRecord() {
    this.setState({
      recording: true
    });
  }
  handleStopRecording(samples, sampleRate, levels, trimStart, trimEnd) {
    if (samples.length > 0) {
      this.setState({
        samples,
        sampleRate,
        levels,
        trimStart,
        trimEnd,
        recording: false
      });
    }
  }
  handlePlay() {
    this.setState({
      playing: true
    });
  }
  handleStopPlaying() {
    this.setState({
      playing: false,
      playhead: null
    });
  }
  handleBack() {
    this.setState({
      playing: false,
      samples: null
    });
  }
  handleSetTrimEnd(trimEnd) {
    this.setState({
      trimEnd
    });
  }
  handleSetTrimStart(trimStart) {
    this.setState({
      trimStart
    });
  }
  handleSetPlayhead(playhead) {
    this.setState({
      playhead
    });
  }
  handleSubmit() {
    this.setState({
      encoding: true
    }, () => {
      const sampleCount = this.state.samples.length;
      const startIndex = Math.floor(this.state.trimStart * sampleCount);
      const endIndex = Math.floor(this.state.trimEnd * sampleCount);
      const clippedSamples = this.state.samples.slice(startIndex, endIndex);
      audio_util_encodeAndAddSoundToVM(this.props.vm, clippedSamples, this.state.sampleRate, 'recording1', () => {
        this.props.onClose();
        this.props.onNewSound();
      });
    });
  }
  handleCancel() {
    this.props.onClose();
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(record_modal_record_modal, {
      encoding: this.state.encoding,
      levels: this.state.levels,
      playhead: this.state.playhead,
      playing: this.state.playing,
      recording: this.state.recording,
      sampleRate: this.state.sampleRate,
      samples: this.state.samples,
      trimEnd: this.state.trimEnd,
      trimStart: this.state.trimStart,
      onBack: this.handleBack,
      onCancel: this.handleCancel,
      onPlay: this.handlePlay,
      onRecord: this.handleRecord,
      onSetPlayhead: this.handleSetPlayhead,
      onSetTrimEnd: this.handleSetTrimEnd,
      onSetTrimStart: this.handleSetTrimStart,
      onStopPlaying: this.handleStopPlaying,
      onStopRecording: this.handleStopRecording,
      onSubmit: this.handleSubmit
    });
  }
}
containers_record_modal_RecordModal.propTypes = {
  onClose: prop_types_default.a.func,
  onNewSound: prop_types_default.a.func,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const record_modal_mapStateToProps = state => ({
  vm: state.scratchGui.vm
});
const record_modal_mapDispatchToProps = dispatch => ({
  onClose: () => {
    dispatch(Object(modals["i" /* closeSoundRecorder */])());
  }
});
/* harmony default export */ var containers_record_modal = (Object(react_redux_es["b" /* connect */])(record_modal_mapStateToProps, record_modal_mapDispatchToProps)(containers_record_modal_RecordModal));
// CONCATENATED MODULE: ./src/lib/audio/effects/echo-effect.js
class EchoEffect {
  static get DELAY_TIME() {
    return 0.25;
  }
  static get TAIL_SECONDS() {
    return 0.75;
  }
  constructor(audioContext, startTime, endTime) {
    this.audioContext = audioContext;
    this.input = this.audioContext.createGain();
    this.output = this.audioContext.createGain();
    this.effectInput = this.audioContext.createGain();
    this.effectInput.gain.value = 0;
    this.effectInput.gain.setValueAtTime(0.75, startTime);
    this.effectInput.gain.setValueAtTime(0, endTime);
    this.delay = this.audioContext.createDelay(1);
    this.delay.delayTime.value = EchoEffect.DELAY_TIME;
    this.decay = this.audioContext.createGain();
    this.decay.gain.value = 0.3;
    this.compressor = this.audioContext.createDynamicsCompressor();
    this.compressor.threshold.value = -5;
    this.compressor.knee.value = 15;
    this.compressor.ratio.value = 12;
    this.compressor.attack.value = 0;
    this.compressor.release.value = 0.25;
    this.input.connect(this.effectInput);
    this.effectInput.connect(this.delay);
    this.delay.connect(this.compressor);
    this.input.connect(this.compressor);
    this.delay.connect(this.decay);
    this.decay.connect(this.delay);
    this.compressor.connect(this.output);
  }
}
/* harmony default export */ var echo_effect = (EchoEffect);
// CONCATENATED MODULE: ./src/lib/audio/effects/robot-effect.js
class RobotEffect {
  constructor(audioContext, startTime, endTime) {
    this.audioContext = audioContext;
    this.input = this.audioContext.createGain();
    this.output = this.audioContext.createGain();
    this.passthrough = this.audioContext.createGain();
    this.effectInput = this.audioContext.createGain();
    this.passthrough.gain.value = 1;
    this.effectInput.gain.value = 0;
    this.passthrough.gain.setValueAtTime(0, startTime);
    this.passthrough.gain.setValueAtTime(1, endTime);
    this.effectInput.gain.setValueAtTime(1, startTime);
    this.effectInput.gain.setValueAtTime(0, endTime);

    // Ring modulator inspired by BBC Dalek voice
    // http://recherche.ircam.fr/pub/dafx11/Papers/66_e.pdf
    // https://github.com/bbc/webaudio.prototyping.bbc.co.uk

    // > There are four parallel signal paths, two which process the
    // > combination Vc + Vin / 2 and two which process Vc - Vin/2.
    // > Each branch consists of a non-linearity [diode]...
    const createDiodeNode = () => {
      const node = this.audioContext.createWaveShaper();

      // Piecewise function given by (2) in Parker paper
      const transform = function transform(v) {
        let vb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;
        let vl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.4;
        let h = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.65;
        if (v <= vb) return 0;
        if (v <= vl) return h * (Math.pow(v - vb, 2) / (2 * vl - 2 * vb));
        return h * v - h * vl + h * (Math.pow(v - vb, 2) / (2 * vl - 2 * vb));
      };

      // Create the waveshaper curve with the voltage transform above
      const bufferLength = 1024;
      const curve = new Float32Array(bufferLength);
      for (let i = 0; i < bufferLength; i++) {
        const voltage = 2 * (i / bufferLength) - 1;
        curve[i] = transform(voltage);
      }
      node.curve = curve;
      return node;
    };
    const oscillator = this.audioContext.createOscillator();
    oscillator.frequency.value = 50;
    oscillator.start(0);
    const vInGain = this.audioContext.createGain();
    vInGain.gain.value = 0.5;
    const vInInverter1 = this.audioContext.createGain();
    vInInverter1.gain.value = -1;
    const vInInverter2 = this.audioContext.createGain();
    vInInverter2.gain.value = -1;
    const vInDiode1 = createDiodeNode(this.audioContext);
    const vInDiode2 = createDiodeNode(this.audioContext);
    const vInInverter3 = this.audioContext.createGain();
    vInInverter3.gain.value = -1;
    const vcInverter1 = this.audioContext.createGain();
    vcInverter1.gain.value = -1;
    const vcDiode3 = createDiodeNode(this.audioContext);
    const vcDiode4 = createDiodeNode(this.audioContext);
    const compressor = this.audioContext.createDynamicsCompressor();
    compressor.threshold.value = -5;
    compressor.knee.value = 15;
    compressor.ratio.value = 12;
    compressor.attack.value = 0;
    compressor.release.value = 0.25;
    const biquadFilter = this.audioContext.createBiquadFilter();
    biquadFilter.type = 'highpass';
    biquadFilter.frequency.value = 1000;
    biquadFilter.gain.value = 1.25;
    this.input.connect(this.effectInput);
    this.input.connect(this.passthrough);
    this.passthrough.connect(this.output);
    this.effectInput.connect(vcInverter1);
    this.effectInput.connect(vcDiode4);
    vcInverter1.connect(vcDiode3);
    oscillator.connect(vInGain);
    vInGain.connect(vInInverter1);
    vInGain.connect(vcInverter1);
    vInGain.connect(vcDiode4);
    vInInverter1.connect(vInInverter2);
    vInInverter1.connect(vInDiode2);
    vInInverter2.connect(vInDiode1);
    vInDiode1.connect(vInInverter3);
    vInDiode2.connect(vInInverter3);
    vInInverter3.connect(compressor);
    vcDiode3.connect(compressor);
    vcDiode4.connect(compressor);
    this.effectInput.connect(biquadFilter);
    biquadFilter.connect(compressor);
    compressor.connect(this.output);
  }
}
/* harmony default export */ var robot_effect = (RobotEffect);
// CONCATENATED MODULE: ./src/lib/audio/effects/volume-effect.js
class VolumeEffect {
  constructor(audioContext, volume, startSeconds, endSeconds) {
    this.audioContext = audioContext;
    this.input = this.audioContext.createGain();
    this.output = this.audioContext.createGain();
    this.gain = this.audioContext.createGain();

    // Smoothly ramp the gain up before the start time, and down after the end time.
    this.rampLength = 0.01;
    this.gain.gain.setValueAtTime(1.0, Math.max(0, startSeconds - this.rampLength));
    this.gain.gain.exponentialRampToValueAtTime(volume, startSeconds);
    this.gain.gain.setValueAtTime(volume, endSeconds);
    this.gain.gain.exponentialRampToValueAtTime(1.0, endSeconds + this.rampLength);
    this.input.connect(this.gain);
    this.gain.connect(this.output);
  }
}
/* harmony default export */ var volume_effect = (VolumeEffect);
// CONCATENATED MODULE: ./src/lib/audio/effects/fade-effect.js
class FadeEffect {
  constructor(audioContext, fadeIn, startSeconds, endSeconds) {
    this.audioContext = audioContext;
    this.input = this.audioContext.createGain();
    this.output = this.audioContext.createGain();
    this.gain = this.audioContext.createGain();
    this.gain.gain.setValueAtTime(1, 0);
    if (fadeIn) {
      this.gain.gain.setValueAtTime(0, startSeconds);
      this.gain.gain.linearRampToValueAtTime(1, endSeconds);
    } else {
      this.gain.gain.setValueAtTime(1, startSeconds);
      this.gain.gain.linearRampToValueAtTime(0, endSeconds);
    }
    this.gain.gain.setValueAtTime(1, endSeconds);
    this.input.connect(this.gain);
    this.gain.connect(this.output);
  }
}
/* harmony default export */ var fade_effect = (FadeEffect);
// CONCATENATED MODULE: ./src/lib/audio/effects/mute-effect.js
class MuteEffect {
  constructor(audioContext, startSeconds, endSeconds) {
    this.audioContext = audioContext;
    this.input = this.audioContext.createGain();
    this.output = this.audioContext.createGain();
    this.gain = this.audioContext.createGain();

    // Smoothly ramp the gain down before the start time, and up after the end time.
    this.rampLength = 0.001;
    this.gain.gain.setValueAtTime(1.0, Math.max(0, startSeconds - this.rampLength));
    this.gain.gain.linearRampToValueAtTime(0, startSeconds);
    this.gain.gain.setValueAtTime(0, endSeconds);
    this.gain.gain.linearRampToValueAtTime(1.0, endSeconds + this.rampLength);
    this.input.connect(this.gain);
    this.gain.connect(this.output);
  }
}
/* harmony default export */ var mute_effect = (MuteEffect);
// CONCATENATED MODULE: ./src/lib/audio/audio-effects.js





const audio_effects_effectTypes = {
  ROBOT: 'robot',
  REVERSE: 'reverse',
  LOUDER: 'higher',
  SOFTER: 'lower',
  FASTER: 'faster',
  SLOWER: 'slower',
  ECHO: 'echo',
  FADEIN: 'fade in',
  FADEOUT: 'fade out',
  MUTE: 'mute'
};
class audio_effects_AudioEffects {
  static get effectTypes() {
    return audio_effects_effectTypes;
  }
  constructor(buffer, name, trimStart, trimEnd) {
    this.trimStartSeconds = trimStart * buffer.length / buffer.sampleRate;
    this.trimEndSeconds = trimEnd * buffer.length / buffer.sampleRate;
    this.adjustedTrimStartSeconds = this.trimStartSeconds;
    this.adjustedTrimEndSeconds = this.trimEndSeconds;

    // Some effects will modify the playback rate and/or number of samples.
    // Need to precompute those values to create the offline audio context.
    const pitchRatio = Math.pow(2, 4 / 12); // A major third
    let sampleCount = buffer.length;
    const affectedSampleCount = Math.floor((this.trimEndSeconds - this.trimStartSeconds) * buffer.sampleRate);
    let adjustedAffectedSampleCount = affectedSampleCount;
    const unaffectedSampleCount = sampleCount - affectedSampleCount;
    this.playbackRate = 1;
    switch (name) {
      case audio_effects_effectTypes.ECHO:
        sampleCount = Math.max(sampleCount, Math.floor((this.trimEndSeconds + echo_effect.TAIL_SECONDS) * buffer.sampleRate));
        break;
      case audio_effects_effectTypes.FASTER:
        this.playbackRate = pitchRatio;
        adjustedAffectedSampleCount = Math.floor(affectedSampleCount / this.playbackRate);
        sampleCount = unaffectedSampleCount + adjustedAffectedSampleCount;
        break;
      case audio_effects_effectTypes.SLOWER:
        this.playbackRate = 1 / pitchRatio;
        adjustedAffectedSampleCount = Math.floor(affectedSampleCount / this.playbackRate);
        sampleCount = unaffectedSampleCount + adjustedAffectedSampleCount;
        break;
    }
    const durationSeconds = sampleCount / buffer.sampleRate;
    this.adjustedTrimEndSeconds = this.trimStartSeconds + adjustedAffectedSampleCount / buffer.sampleRate;
    this.adjustedTrimStart = this.adjustedTrimStartSeconds / durationSeconds;
    this.adjustedTrimEnd = this.adjustedTrimEndSeconds / durationSeconds;
    if (window.OfflineAudioContext) {
      this.audioContext = new window.OfflineAudioContext(1, sampleCount, buffer.sampleRate);
    } else {
      // Need to use webkitOfflineAudioContext, which doesn't support all sample rates.
      // Resample by adjusting sample count to make room and set offline context to desired sample rate.
      const sampleScale = 44100 / buffer.sampleRate;
      this.audioContext = new window.webkitOfflineAudioContext(1, sampleScale * sampleCount, 44100);
    }

    // For the reverse effect we need to manually reverse the data into a new audio buffer
    // to prevent overwriting the original, so that the undo stack works correctly.
    // Doing buffer.reverse() would mutate the original data.
    if (name === audio_effects_effectTypes.REVERSE) {
      const originalBufferData = buffer.getChannelData(0);
      const newBuffer = this.audioContext.createBuffer(1, buffer.length, buffer.sampleRate);
      const newBufferData = newBuffer.getChannelData(0);
      const bufferLength = buffer.length;
      const startSamples = Math.floor(this.trimStartSeconds * buffer.sampleRate);
      const endSamples = Math.floor(this.trimEndSeconds * buffer.sampleRate);
      let counter = 0;
      for (let i = 0; i < bufferLength; i++) {
        if (i >= startSamples && i < endSamples) {
          newBufferData[i] = originalBufferData[endSamples - counter - 1];
          counter++;
        } else {
          newBufferData[i] = originalBufferData[i];
        }
      }
      this.buffer = newBuffer;
    } else {
      // All other effects use the original buffer because it is not modified.
      this.buffer = buffer;
    }
    this.source = this.audioContext.createBufferSource();
    this.source.buffer = this.buffer;
    this.name = name;
  }
  process(done) {
    // Some effects need to use more nodes and must expose an input and output
    let input;
    let output;
    switch (this.name) {
      case audio_effects_effectTypes.FASTER:
      case audio_effects_effectTypes.SLOWER:
        this.source.playbackRate.setValueAtTime(this.playbackRate, this.adjustedTrimStartSeconds);
        this.source.playbackRate.setValueAtTime(1.0, this.adjustedTrimEndSeconds);
        break;
      case audio_effects_effectTypes.LOUDER:
        ({
          input,
          output
        } = new volume_effect(this.audioContext, 1.25, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
      case audio_effects_effectTypes.SOFTER:
        ({
          input,
          output
        } = new volume_effect(this.audioContext, 0.75, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
      case audio_effects_effectTypes.ECHO:
        ({
          input,
          output
        } = new echo_effect(this.audioContext, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
      case audio_effects_effectTypes.ROBOT:
        ({
          input,
          output
        } = new robot_effect(this.audioContext, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
      case audio_effects_effectTypes.FADEIN:
        ({
          input,
          output
        } = new fade_effect(this.audioContext, true, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
      case audio_effects_effectTypes.FADEOUT:
        ({
          input,
          output
        } = new fade_effect(this.audioContext, false, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
      case audio_effects_effectTypes.MUTE:
        ({
          input,
          output
        } = new mute_effect(this.audioContext, this.adjustedTrimStartSeconds, this.adjustedTrimEndSeconds));
        break;
    }
    if (input && output) {
      this.source.connect(input);
      output.connect(this.audioContext.destination);
    } else {
      // No effects nodes are needed, wire directly to the output
      this.source.connect(this.audioContext.destination);
    }
    this.source.start();
    this.audioContext.startRendering();
    this.audioContext.oncomplete = _ref => {
      let {
        renderedBuffer
      } = _ref;
      done(renderedBuffer, this.adjustedTrimStart, this.adjustedTrimEnd);
    };
  }
}
/* harmony default export */ var audio_effects = (audio_effects_AudioEffects);
// CONCATENATED MODULE: ./src/components/audio-trimmer/audio-selector.jsx







const audio_selector_AudioSelector = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.selector),
  ref: props.containerRef,
  onMouseDown: props.onNewSelectionMouseDown,
  onTouchStart: props.onNewSelectionMouseDown
}, props.trimStart === null ? null : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.absolute),
  style: {
    left: "".concat(props.trimStart * 100, "%"),
    width: "".concat(100 * (props.trimEnd - props.trimStart), "%")
  }
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(audio_trimmer_default.a.absolute, audio_trimmer_default.a.selectionBackground)
}), /*#__PURE__*/react_default.a.createElement(selection_handle, {
  handleStyle: audio_trimmer_default.a.leftHandle,
  onMouseDown: props.onTrimStartMouseDown
}), /*#__PURE__*/react_default.a.createElement(selection_handle, {
  handleStyle: audio_trimmer_default.a.rightHandle,
  onMouseDown: props.onTrimEndMouseDown
})), props.playhead ? /*#__PURE__*/react_default.a.createElement(playhead, {
  playbackPosition: props.playhead
}) : null);
audio_selector_AudioSelector.propTypes = {
  containerRef: prop_types_default.a.func,
  onNewSelectionMouseDown: prop_types_default.a.func.isRequired,
  onTrimEndMouseDown: prop_types_default.a.func.isRequired,
  onTrimStartMouseDown: prop_types_default.a.func.isRequired,
  playhead: prop_types_default.a.number,
  trimEnd: prop_types_default.a.number,
  trimStart: prop_types_default.a.number
};
/* harmony default export */ var audio_selector = (audio_selector_AudioSelector);
// CONCATENATED MODULE: ./src/containers/audio-selector.jsx






const audio_selector_MIN_LENGTH = 0.01;
const MIN_DURATION = 500;
class containers_audio_selector_AudioSelector extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleNewSelectionMouseDown', 'handleTrimStartMouseDown', 'handleTrimEndMouseDown', 'handleTrimStartMouseMove', 'handleTrimEndMouseMove', 'handleTrimStartMouseUp', 'handleTrimEndMouseUp', 'storeRef']);
    this.state = {
      trimStart: props.trimStart,
      trimEnd: props.trimEnd
    };
    this.clickStartTime = 0;
    this.trimStartDragRecognizer = new drag_recognizer({
      onDrag: this.handleTrimStartMouseMove,
      onDragEnd: this.handleTrimStartMouseUp,
      touchDragAngle: 90,
      distanceThreshold: 0
    });
    this.trimEndDragRecognizer = new drag_recognizer({
      onDrag: this.handleTrimEndMouseMove,
      onDragEnd: this.handleTrimEndMouseUp,
      touchDragAngle: 90,
      distanceThreshold: 0
    });
  }
  componentWillReceiveProps(newProps) {
    const {
      trimStart,
      trimEnd
    } = this.props;
    if (newProps.trimStart === trimStart && newProps.trimEnd === trimEnd) return;
    this.setState({
      trimStart: newProps.trimStart,
      trimEnd: newProps.trimEnd
    });
  }
  clearSelection() {
    this.props.onSetTrim(null, null);
  }
  handleNewSelectionMouseDown(e) {
    const {
      width,
      left
    } = this.containerElement.getBoundingClientRect();
    this.initialTrimEnd = (getEventXY(e).x - left) / width;
    this.initialTrimStart = this.initialTrimEnd;
    this.props.onSetTrim(this.initialTrimStart, this.initialTrimEnd);
    this.clickStartTime = Date.now();
    this.containerSize = width;
    this.trimEndDragRecognizer.start(e);
    e.preventDefault();
  }
  handleTrimStartMouseMove(currentOffset, initialOffset) {
    const dx = (currentOffset.x - initialOffset.x) / this.containerSize;
    const newTrim = Math.max(0, Math.min(1, this.initialTrimStart + dx));
    if (newTrim > this.initialTrimEnd) {
      this.setState({
        trimStart: this.initialTrimEnd,
        trimEnd: newTrim
      });
    } else {
      this.setState({
        trimStart: newTrim,
        trimEnd: this.initialTrimEnd
      });
    }
  }
  handleTrimEndMouseMove(currentOffset, initialOffset) {
    const dx = (currentOffset.x - initialOffset.x) / this.containerSize;
    const newTrim = Math.min(1, Math.max(0, this.initialTrimEnd + dx));
    if (newTrim < this.initialTrimStart) {
      this.setState({
        trimStart: newTrim,
        trimEnd: this.initialTrimStart
      });
    } else {
      this.setState({
        trimStart: this.initialTrimStart,
        trimEnd: newTrim
      });
    }
  }
  handleTrimStartMouseUp() {
    this.props.onSetTrim(this.state.trimStart, this.state.trimEnd);
  }
  handleTrimEndMouseUp() {
    // If the selection was made quickly (tooFast) and is small (tooShort),
    // deselect instead. This allows click-to-deselect even if you drag
    // a little bit by accident. It also allows very quickly making a
    // selection, as long as it is above a minimum length.
    const tooFast = Date.now() - this.clickStartTime < MIN_DURATION;
    const tooShort = this.state.trimEnd - this.state.trimStart < audio_selector_MIN_LENGTH;
    if (tooFast && tooShort) {
      this.clearSelection();
    } else {
      this.props.onSetTrim(this.state.trimStart, this.state.trimEnd);
    }
  }
  handleTrimStartMouseDown(e) {
    this.containerSize = this.containerElement.getBoundingClientRect().width;
    this.trimStartDragRecognizer.start(e);
    this.initialTrimStart = this.props.trimStart;
    this.initialTrimEnd = this.props.trimEnd;
    e.stopPropagation();
    e.preventDefault();
  }
  handleTrimEndMouseDown(e) {
    this.containerSize = this.containerElement.getBoundingClientRect().width;
    this.trimEndDragRecognizer.start(e);
    this.initialTrimEnd = this.props.trimEnd;
    this.initialTrimStart = this.props.trimStart;
    e.stopPropagation();
    e.preventDefault();
  }
  storeRef(el) {
    this.containerElement = el;
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(audio_selector, {
      containerRef: this.storeRef,
      playhead: this.props.playhead,
      trimEnd: this.state.trimEnd,
      trimStart: this.state.trimStart,
      onNewSelectionMouseDown: this.handleNewSelectionMouseDown,
      onTrimEndMouseDown: this.handleTrimEndMouseDown,
      onTrimStartMouseDown: this.handleTrimStartMouseDown
    });
  }
}
containers_audio_selector_AudioSelector.propTypes = {
  onSetTrim: prop_types_default.a.func,
  playhead: prop_types_default.a.number,
  trimEnd: prop_types_default.a.number,
  trimStart: prop_types_default.a.number
};
/* harmony default export */ var containers_audio_selector = (containers_audio_selector_AudioSelector);
// EXTERNAL MODULE: ./src/components/icon-button/icon-button.css
var icon_button = __webpack_require__(295);
var icon_button_default = /*#__PURE__*/__webpack_require__.n(icon_button);

// CONCATENATED MODULE: ./src/components/icon-button/icon-button.jsx




const IconButton = _ref => {
  let {
    img,
    disabled,
    className,
    title,
    onClick
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(icon_button_default.a.container, className, disabled ? icon_button_default.a.disabled : null),
    role: "button",
    onClick: disabled ? null : onClick
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: icon_button_default.a.icon,
    draggable: false,
    src: img
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: icon_button_default.a.title
  }, title));
};
IconButton.propTypes = {
  className: prop_types_default.a.string,
  disabled: prop_types_default.a.bool,
  img: prop_types_default.a.string,
  onClick: prop_types_default.a.func.isRequired,
  title: prop_types_default.a.node.isRequired
};
/* harmony default export */ var icon_button_icon_button = (IconButton);
// EXTERNAL MODULE: ./src/components/sound-editor/sound-editor.css
var sound_editor = __webpack_require__(35);
var sound_editor_default = /*#__PURE__*/__webpack_require__.n(sound_editor);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--play.svg
var sound_editor_icon_play = __webpack_require__(826);
var sound_editor_icon_play_default = /*#__PURE__*/__webpack_require__.n(sound_editor_icon_play);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--stop.svg
var sound_editor_icon_stop = __webpack_require__(827);
var sound_editor_icon_stop_default = /*#__PURE__*/__webpack_require__.n(sound_editor_icon_stop);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--redo.svg
var icon_redo = __webpack_require__(828);
var icon_redo_default = /*#__PURE__*/__webpack_require__.n(icon_redo);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--undo.svg
var icon_undo = __webpack_require__(829);
var icon_undo_default = /*#__PURE__*/__webpack_require__.n(icon_undo);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--faster.svg
var icon_faster = __webpack_require__(830);
var icon_faster_default = /*#__PURE__*/__webpack_require__.n(icon_faster);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--slower.svg
var icon_slower = __webpack_require__(831);
var icon_slower_default = /*#__PURE__*/__webpack_require__.n(icon_slower);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--louder.svg
var icon_louder = __webpack_require__(832);
var icon_louder_default = /*#__PURE__*/__webpack_require__.n(icon_louder);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--softer.svg
var icon_softer = __webpack_require__(833);
var icon_softer_default = /*#__PURE__*/__webpack_require__.n(icon_softer);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--robot.svg
var icon_robot = __webpack_require__(834);
var icon_robot_default = /*#__PURE__*/__webpack_require__.n(icon_robot);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--echo.svg
var icon_echo = __webpack_require__(835);
var icon_echo_default = /*#__PURE__*/__webpack_require__.n(icon_echo);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--reverse.svg
var icon_reverse = __webpack_require__(836);
var icon_reverse_default = /*#__PURE__*/__webpack_require__.n(icon_reverse);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--fade-out.svg
var icon_fade_out = __webpack_require__(837);
var icon_fade_out_default = /*#__PURE__*/__webpack_require__.n(icon_fade_out);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--fade-in.svg
var icon_fade_in = __webpack_require__(838);
var icon_fade_in_default = /*#__PURE__*/__webpack_require__.n(icon_fade_in);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--mute.svg
var icon_mute = __webpack_require__(839);
var icon_mute_default = /*#__PURE__*/__webpack_require__.n(icon_mute);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--delete.svg
var sound_editor_icon_delete = __webpack_require__(840);
var sound_editor_icon_delete_default = /*#__PURE__*/__webpack_require__.n(sound_editor_icon_delete);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--copy.svg
var icon_copy = __webpack_require__(841);
var icon_copy_default = /*#__PURE__*/__webpack_require__.n(icon_copy);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--paste.svg
var icon_paste = __webpack_require__(842);
var icon_paste_default = /*#__PURE__*/__webpack_require__.n(icon_paste);

// EXTERNAL MODULE: ./src/components/sound-editor/icon--copy-to-new.svg
var icon_copy_to_new = __webpack_require__(843);
var icon_copy_to_new_default = /*#__PURE__*/__webpack_require__.n(icon_copy_to_new);

// CONCATENATED MODULE: ./src/components/sound-editor/sound-editor.jsx





























const sound_editor_BufferedInput = Object(buffered_input_hoc["a" /* default */])(forms_input["a" /* default */]);
const sound_editor_messages = Object(index_es["d" /* defineMessages */])({
  sound: {
    "id": "gui.soundEditor.sound",
    "defaultMessage": "Sound"
  },
  play: {
    "id": "gui.soundEditor.play",
    "defaultMessage": "Play"
  },
  stop: {
    "id": "gui.soundEditor.stop",
    "defaultMessage": "Stop"
  },
  copy: {
    "id": "gui.soundEditor.copy",
    "defaultMessage": "Copy"
  },
  paste: {
    "id": "gui.soundEditor.paste",
    "defaultMessage": "Paste"
  },
  copyToNew: {
    "id": "gui.soundEditor.copyToNew",
    "defaultMessage": "Copy to New"
  },
  delete: {
    "id": "gui.soundEditor.delete",
    "defaultMessage": "Delete"
  },
  save: {
    "id": "gui.soundEditor.save",
    "defaultMessage": "Save"
  },
  undo: {
    "id": "gui.soundEditor.undo",
    "defaultMessage": "Undo"
  },
  redo: {
    "id": "gui.soundEditor.redo",
    "defaultMessage": "Redo"
  },
  faster: {
    "id": "gui.soundEditor.faster",
    "defaultMessage": "Faster"
  },
  slower: {
    "id": "gui.soundEditor.slower",
    "defaultMessage": "Slower"
  },
  echo: {
    "id": "gui.soundEditor.echo",
    "defaultMessage": "Echo"
  },
  robot: {
    "id": "gui.soundEditor.robot",
    "defaultMessage": "Robot"
  },
  louder: {
    "id": "gui.soundEditor.louder",
    "defaultMessage": "Louder"
  },
  softer: {
    "id": "gui.soundEditor.softer",
    "defaultMessage": "Softer"
  },
  reverse: {
    "id": "gui.soundEditor.reverse",
    "defaultMessage": "Reverse"
  },
  fadeOut: {
    "id": "gui.soundEditor.fadeOut",
    "defaultMessage": "Fade out"
  },
  fadeIn: {
    "id": "gui.soundEditor.fadeIn",
    "defaultMessage": "Fade in"
  },
  mute: {
    "id": "gui.soundEditor.mute",
    "defaultMessage": "Mute"
  }
});
const sound_editor_SoundEditor = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.editorContainer,
  ref: props.setRef,
  onMouseDown: props.onContainerClick
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.row
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.inputGroup
}, /*#__PURE__*/react_default.a.createElement(components_forms_label, {
  text: props.intl.formatMessage(sound_editor_messages.sound)
}, /*#__PURE__*/react_default.a.createElement(sound_editor_BufferedInput, {
  tabIndex: "1",
  type: "text",
  value: props.name,
  onSubmit: props.onChangeName
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.buttonGroup
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: sound_editor_default.a.button,
  disabled: !props.canUndo,
  title: props.intl.formatMessage(sound_editor_messages.undo),
  onClick: props.onUndo
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: sound_editor_default.a.undoIcon,
  draggable: false,
  src: icon_undo_default.a
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: sound_editor_default.a.button,
  disabled: !props.canRedo,
  title: props.intl.formatMessage(sound_editor_messages.redo),
  onClick: props.onRedo
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: sound_editor_default.a.redoIcon,
  draggable: false,
  src: icon_redo_default.a
})))), /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.inputGroup
}, /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.toolButton,
  img: icon_copy_default.a,
  title: props.intl.formatMessage(sound_editor_messages.copy),
  onClick: props.onCopy
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.toolButton,
  disabled: props.canPaste === false,
  img: icon_paste_default.a,
  title: props.intl.formatMessage(sound_editor_messages.paste),
  onClick: props.onPaste
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: classnames_default()(sound_editor_default.a.toolButton, sound_editor_default.a.flipInRtl),
  img: icon_copy_to_new_default.a,
  title: props.intl.formatMessage(sound_editor_messages.copyToNew),
  onClick: props.onCopyToNew
})), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.toolButton,
  disabled: props.trimStart === null,
  img: sound_editor_icon_delete_default.a,
  title: props.intl.formatMessage(sound_editor_messages.delete),
  onClick: props.onDelete
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.row
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.waveformContainer
}, /*#__PURE__*/react_default.a.createElement(waveform_waveform, {
  data: props.chunkLevels,
  height: 160,
  width: 600
}), /*#__PURE__*/react_default.a.createElement(containers_audio_selector, {
  playhead: props.playhead,
  trimEnd: props.trimEnd,
  trimStart: props.trimStart,
  onPlay: props.onPlay,
  onSetTrim: props.onSetTrim,
  onStop: props.onStop
}))), /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(sound_editor_default.a.row, sound_editor_default.a.rowReverse)
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: sound_editor_default.a.inputGroup
}, props.playhead ? /*#__PURE__*/react_default.a.createElement("button", {
  className: classnames_default()(sound_editor_default.a.roundButton, sound_editor_default.a.stopButtonn),
  title: props.intl.formatMessage(sound_editor_messages.stop),
  onClick: props.onStop
}, /*#__PURE__*/react_default.a.createElement("img", {
  draggable: false,
  src: sound_editor_icon_stop_default.a
})) : /*#__PURE__*/react_default.a.createElement("button", {
  className: classnames_default()(sound_editor_default.a.roundButton, sound_editor_default.a.playButton),
  title: props.intl.formatMessage(sound_editor_messages.play),
  onClick: props.onPlay
}, /*#__PURE__*/react_default.a.createElement("img", {
  draggable: false,
  src: sound_editor_icon_play_default.a
}))), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_faster_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.faster),
  onClick: props.onFaster
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_slower_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.slower),
  onClick: props.onSlower
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  disabled: props.tooLoud,
  className: classnames_default()(sound_editor_default.a.effectButton, sound_editor_default.a.flipInRtl),
  img: icon_louder_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.louder),
  onClick: props.onLouder
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: classnames_default()(sound_editor_default.a.effectButton, sound_editor_default.a.flipInRtl),
  img: icon_softer_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.softer),
  onClick: props.onSofter
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: classnames_default()(sound_editor_default.a.effectButton, sound_editor_default.a.flipInRtl),
  img: icon_mute_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.mute),
  onClick: props.onMute
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_fade_in_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.fadeIn),
  onClick: props.onFadeIn
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_fade_out_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.fadeOut),
  onClick: props.onFadeOut
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_reverse_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.reverse),
  onClick: props.onReverse
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_robot_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.robot),
  onClick: props.onRobot
}), /*#__PURE__*/react_default.a.createElement(icon_button_icon_button, {
  className: sound_editor_default.a.effectButton,
  img: icon_echo_default.a,
  title: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], sound_editor_messages.echo),
  onClick: props.onEcho
})));
sound_editor_SoundEditor.propTypes = {
  canPaste: prop_types_default.a.bool.isRequired,
  canRedo: prop_types_default.a.bool.isRequired,
  canUndo: prop_types_default.a.bool.isRequired,
  chunkLevels: prop_types_default.a.arrayOf(prop_types_default.a.number).isRequired,
  intl: index_es["f" /* intlShape */],
  name: prop_types_default.a.string.isRequired,
  onChangeName: prop_types_default.a.func.isRequired,
  onContainerClick: prop_types_default.a.func.isRequired,
  onCopy: prop_types_default.a.func.isRequired,
  onCopyToNew: prop_types_default.a.func.isRequired,
  onDelete: prop_types_default.a.func,
  onEcho: prop_types_default.a.func.isRequired,
  onFadeIn: prop_types_default.a.func.isRequired,
  onFadeOut: prop_types_default.a.func.isRequired,
  onFaster: prop_types_default.a.func.isRequired,
  onLouder: prop_types_default.a.func.isRequired,
  onMute: prop_types_default.a.func.isRequired,
  onPaste: prop_types_default.a.func.isRequired,
  onPlay: prop_types_default.a.func.isRequired,
  onRedo: prop_types_default.a.func.isRequired,
  onReverse: prop_types_default.a.func.isRequired,
  onRobot: prop_types_default.a.func.isRequired,
  onSetTrim: prop_types_default.a.func,
  onSlower: prop_types_default.a.func.isRequired,
  onSofter: prop_types_default.a.func.isRequired,
  onStop: prop_types_default.a.func.isRequired,
  onUndo: prop_types_default.a.func.isRequired,
  playhead: prop_types_default.a.number,
  setRef: prop_types_default.a.func,
  tooLoud: prop_types_default.a.bool.isRequired,
  trimEnd: prop_types_default.a.number,
  trimStart: prop_types_default.a.number
};
/* harmony default export */ var sound_editor_sound_editor = (Object(index_es["e" /* injectIntl */])(sound_editor_SoundEditor));
// CONCATENATED MODULE: ./src/containers/sound-editor.jsx
function sound_editor_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function sound_editor_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? sound_editor_ownKeys(Object(t), !0).forEach(function (r) { sound_editor_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : sound_editor_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function sound_editor_defineProperty(obj, key, value) { key = sound_editor_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function sound_editor_toPropertyKey(arg) { var key = sound_editor_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function sound_editor_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }











const UNDO_STACK_SIZE = 99;
const MAX_RMS = 1.2;
class containers_sound_editor_SoundEditor extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['copy', 'copyCurrentBuffer', 'handleCopyToNew', 'handleStoppedPlaying', 'handleChangeName', 'handlePlay', 'handleStopPlaying', 'handleUpdatePlayhead', 'handleDelete', 'handleUpdateTrim', 'handleEffect', 'handleUndo', 'handleRedo', 'submitNewSamples', 'handleCopy', 'handlePaste', 'paste', 'handleKeyPress', 'handleContainerClick', 'setRef', 'resampleBufferToRate']);
    this.state = {
      copyBuffer: null,
      chunkLevels: computeChunkedRMS(this.props.samples),
      playhead: null,
      // null is not playing, [0 -> 1] is playing percent
      trimStart: null,
      trimEnd: null
    };
    this.redoStack = [];
    this.undoStack = [];
    this.ref = null;
  }
  componentDidMount() {
    this.audioBufferPlayer = new audio_buffer_player(this.props.samples, this.props.sampleRate);
    document.addEventListener('keydown', this.handleKeyPress);
  }
  componentWillReceiveProps(newProps) {
    if (newProps.soundId !== this.props.soundId) {
      // A different sound has been selected
      this.redoStack = [];
      this.undoStack = [];
      this.resetState(newProps.samples, newProps.sampleRate);
      this.setState({
        trimStart: null,
        trimEnd: null
      });
    }
  }
  componentWillUnmount() {
    this.audioBufferPlayer.stop();
    document.removeEventListener('keydown', this.handleKeyPress);
  }
  handleKeyPress(event) {
    if (event.target instanceof HTMLInputElement) {
      // Ignore keyboard shortcuts if a text input field is focused
      return;
    }
    if (this.props.isFullScreen) {
      // Ignore keyboard shortcuts if the stage is fullscreen mode
      return;
    }
    if (event.key === ' ') {
      event.preventDefault();
      if (this.state.playhead) {
        this.handleStopPlaying();
      } else {
        this.handlePlay();
      }
    }
    if (event.key === 'Delete' || event.key === 'Backspace') {
      event.preventDefault();
      if (event.shiftKey) {
        this.handleDeleteInverse();
      } else {
        this.handleDelete();
      }
    }
    if (event.key === 'Escape') {
      event.preventDefault();
      this.handleUpdateTrim(null, null);
    }
    if (event.metaKey || event.ctrlKey) {
      if (event.shiftKey && event.key.toLowerCase() === 'z') {
        event.preventDefault();
        if (this.redoStack.length > 0) {
          this.handleRedo();
        }
      } else if (event.key === 'z') {
        if (this.undoStack.length > 0) {
          event.preventDefault();
          this.handleUndo();
        }
      } else if (event.key === 'c') {
        event.preventDefault();
        this.handleCopy();
      } else if (event.key === 'v') {
        event.preventDefault();
        this.handlePaste();
      } else if (event.key === 'a') {
        event.preventDefault();
        this.handleUpdateTrim(0, 1);
      }
    }
  }
  resetState(samples, sampleRate) {
    this.audioBufferPlayer.stop();
    this.audioBufferPlayer = new audio_buffer_player(samples, sampleRate);
    this.setState({
      chunkLevels: computeChunkedRMS(samples),
      playhead: null
    });
  }
  submitNewSamples(samples, sampleRate, skipUndo) {
    return downsampleIfNeeded({
      samples,
      sampleRate
    }, this.resampleBufferToRate).then(_ref => {
      let {
        samples: newSamples,
        sampleRate: newSampleRate
      } = _ref;
      return wav_encoder_default.a.encode({
        sampleRate: newSampleRate,
        channelData: [newSamples]
      }).then(wavBuffer => {
        if (!skipUndo) {
          this.redoStack = [];
          if (this.undoStack.length >= UNDO_STACK_SIZE) {
            this.undoStack.shift(); // Drop the first element off the array
          }

          this.undoStack.push(this.getUndoItem());
        }
        this.resetState(newSamples, newSampleRate);
        this.props.vm.updateSoundBuffer(this.props.soundIndex, this.audioBufferPlayer.buffer, new Uint8Array(wavBuffer));
        return true; // Edit was successful
      });
    }).catch(e => {
      // Encoding failed, or the sound was too large to save so edit is rejected
      log["default"].error("Encountered error while trying to encode sound update: ".concat(e.message));
      return false; // Edit was not applied
    });
  }

  handlePlay() {
    this.audioBufferPlayer.stop();
    this.audioBufferPlayer.play(this.state.trimStart || 0, this.state.trimEnd || 1, this.handleUpdatePlayhead, this.handleStoppedPlaying);
  }
  handleStopPlaying() {
    this.audioBufferPlayer.stop();
    this.handleStoppedPlaying();
  }
  handleStoppedPlaying() {
    this.setState({
      playhead: null
    });
  }
  handleUpdatePlayhead(playhead) {
    this.setState({
      playhead
    });
  }
  handleChangeName(name) {
    this.props.vm.renameSound(this.props.soundIndex, name);
  }
  handleDelete() {
    const {
      samples,
      sampleRate
    } = this.copyCurrentBuffer();
    const sampleCount = samples.length;
    const startIndex = Math.floor(this.state.trimStart * sampleCount);
    const endIndex = Math.floor(this.state.trimEnd * sampleCount);
    const firstPart = samples.slice(0, startIndex);
    const secondPart = samples.slice(endIndex, sampleCount);
    const newLength = firstPart.length + secondPart.length;
    let newSamples;
    if (newLength === 0) {
      newSamples = new Float32Array(1);
    } else {
      newSamples = new Float32Array(newLength);
      newSamples.set(firstPart, 0);
      newSamples.set(secondPart, firstPart.length);
    }
    this.submitNewSamples(newSamples, sampleRate).then(() => {
      this.setState({
        trimStart: null,
        trimEnd: null
      });
    });
  }
  handleDeleteInverse() {
    // Delete everything outside of the trimmers
    const {
      samples,
      sampleRate
    } = this.copyCurrentBuffer();
    const sampleCount = samples.length;
    const startIndex = Math.floor(this.state.trimStart * sampleCount);
    const endIndex = Math.floor(this.state.trimEnd * sampleCount);
    let clippedSamples = samples.slice(startIndex, endIndex);
    if (clippedSamples.length === 0) {
      clippedSamples = new Float32Array(1);
    }
    this.submitNewSamples(clippedSamples, sampleRate).then(success => {
      if (success) {
        this.setState({
          trimStart: null,
          trimEnd: null
        });
      }
    });
  }
  handleUpdateTrim(trimStart, trimEnd) {
    this.setState({
      trimStart,
      trimEnd
    });
    this.handleStopPlaying();
  }
  effectFactory(name) {
    return () => this.handleEffect(name);
  }
  copyCurrentBuffer() {
    // Cannot reliably use props.samples because it gets detached by Firefox
    return {
      samples: this.audioBufferPlayer.buffer.getChannelData(0),
      sampleRate: this.audioBufferPlayer.buffer.sampleRate
    };
  }
  handleEffect(name) {
    const trimStart = this.state.trimStart === null ? 0.0 : this.state.trimStart;
    const trimEnd = this.state.trimEnd === null ? 1.0 : this.state.trimEnd;

    // Offline audio context needs at least 2 samples
    if (this.audioBufferPlayer.buffer.length < 2) {
      return;
    }
    const effects = new audio_effects(this.audioBufferPlayer.buffer, name, trimStart, trimEnd);
    effects.process((renderedBuffer, adjustedTrimStart, adjustedTrimEnd) => {
      const samples = renderedBuffer.getChannelData(0);
      const sampleRate = renderedBuffer.sampleRate;
      this.submitNewSamples(samples, sampleRate).then(success => {
        if (success) {
          if (this.state.trimStart === null) {
            this.handlePlay();
          } else {
            this.setState({
              trimStart: adjustedTrimStart,
              trimEnd: adjustedTrimEnd
            }, this.handlePlay);
          }
        }
      });
    });
  }
  tooLoud() {
    const numChunks = this.state.chunkLevels.length;
    const startIndex = this.state.trimStart === null ? 0 : Math.floor(this.state.trimStart * numChunks);
    const endIndex = this.state.trimEnd === null ? numChunks - 1 : Math.ceil(this.state.trimEnd * numChunks);
    const trimChunks = this.state.chunkLevels.slice(startIndex, endIndex);
    let max = 0;
    for (const i of trimChunks) {
      if (i > max) {
        max = i;
      }
    }
    return max > MAX_RMS;
  }
  getUndoItem() {
    return sound_editor_objectSpread(sound_editor_objectSpread({}, this.copyCurrentBuffer()), {}, {
      trimStart: this.state.trimStart,
      trimEnd: this.state.trimEnd
    });
  }
  handleUndo() {
    this.redoStack.push(this.getUndoItem());
    const {
      samples,
      sampleRate,
      trimStart,
      trimEnd
    } = this.undoStack.pop();
    if (samples) {
      return this.submitNewSamples(samples, sampleRate, true).then(success => {
        if (success) {
          this.setState({
            trimStart: trimStart,
            trimEnd: trimEnd
          }, this.handlePlay);
        }
      });
    }
  }
  handleRedo() {
    const {
      samples,
      sampleRate,
      trimStart,
      trimEnd
    } = this.redoStack.pop();
    if (samples) {
      this.undoStack.push(this.getUndoItem());
      return this.submitNewSamples(samples, sampleRate, true).then(success => {
        if (success) {
          this.setState({
            trimStart: trimStart,
            trimEnd: trimEnd
          }, this.handlePlay);
        }
      });
    }
  }
  handleCopy() {
    this.copy();
  }
  copy(callback) {
    const trimStart = this.state.trimStart === null ? 0.0 : this.state.trimStart;
    const trimEnd = this.state.trimEnd === null ? 1.0 : this.state.trimEnd;
    const newCopyBuffer = this.copyCurrentBuffer();
    const trimStartSamples = trimStart * newCopyBuffer.samples.length;
    const trimEndSamples = trimEnd * newCopyBuffer.samples.length;
    newCopyBuffer.samples = newCopyBuffer.samples.slice(trimStartSamples, trimEndSamples);
    this.setState({
      copyBuffer: newCopyBuffer
    }, callback);
  }
  handleCopyToNew() {
    this.copy(() => {
      audio_util_encodeAndAddSoundToVM(this.props.vm, this.state.copyBuffer.samples, this.state.copyBuffer.sampleRate, this.props.name);
    });
  }
  resampleBufferToRate(buffer, newRate) {
    return new Promise((resolve, reject) => {
      const sampleRateRatio = newRate / buffer.sampleRate;
      const newLength = sampleRateRatio * buffer.samples.length;
      let offlineContext;
      // Try to use either OfflineAudioContext or webkitOfflineAudioContext to resample
      // The constructors will throw if trying to resample at an unsupported rate
      // (e.g. Safari/webkitOAC does not support lower than 44khz).
      try {
        if (window.OfflineAudioContext) {
          offlineContext = new window.OfflineAudioContext(1, newLength, newRate);
        } else if (window.webkitOfflineAudioContext) {
          offlineContext = new window.webkitOfflineAudioContext(1, newLength, newRate);
        }
      } catch (_unused) {
        // If no OAC available and downsampling by 2, downsample by dropping every other sample.
        if (newRate === buffer.sampleRate / 2) {
          return resolve(dropEveryOtherSample(buffer));
        }
        return reject(new Error('Could not resample'));
      }
      const source = offlineContext.createBufferSource();
      const audioBuffer = offlineContext.createBuffer(1, buffer.samples.length, buffer.sampleRate);
      audioBuffer.getChannelData(0).set(buffer.samples);
      source.buffer = audioBuffer;
      source.connect(offlineContext.destination);
      source.start();
      offlineContext.startRendering();
      offlineContext.oncomplete = _ref2 => {
        let {
          renderedBuffer
        } = _ref2;
        resolve({
          samples: renderedBuffer.getChannelData(0),
          sampleRate: newRate
        });
      };
    });
  }
  paste() {
    // If there's no selection, paste at the end of the sound
    const {
      samples
    } = this.copyCurrentBuffer();
    if (this.state.trimStart === null) {
      const newLength = samples.length + this.state.copyBuffer.samples.length;
      const newSamples = new Float32Array(newLength);
      newSamples.set(samples, 0);
      newSamples.set(this.state.copyBuffer.samples, samples.length);
      this.submitNewSamples(newSamples, this.props.sampleRate, false).then(success => {
        if (success) {
          this.handlePlay();
        }
      });
    } else {
      // else replace the selection with the pasted sound
      const trimStartSamples = this.state.trimStart * samples.length;
      const trimEndSamples = this.state.trimEnd * samples.length;
      const firstPart = samples.slice(0, trimStartSamples);
      const lastPart = samples.slice(trimEndSamples);
      const newLength = firstPart.length + this.state.copyBuffer.samples.length + lastPart.length;
      const newSamples = new Float32Array(newLength);
      newSamples.set(firstPart, 0);
      newSamples.set(this.state.copyBuffer.samples, firstPart.length);
      newSamples.set(lastPart, firstPart.length + this.state.copyBuffer.samples.length);
      const trimStartSeconds = trimStartSamples / this.props.sampleRate;
      const trimEndSeconds = trimStartSeconds + this.state.copyBuffer.samples.length / this.state.copyBuffer.sampleRate;
      const newDurationSeconds = newSamples.length / this.state.copyBuffer.sampleRate;
      const adjustedTrimStart = trimStartSeconds / newDurationSeconds;
      const adjustedTrimEnd = trimEndSeconds / newDurationSeconds;
      this.submitNewSamples(newSamples, this.props.sampleRate, false).then(success => {
        if (success) {
          this.setState({
            trimStart: adjustedTrimStart,
            trimEnd: adjustedTrimEnd
          }, this.handlePlay);
        }
      });
    }
  }
  handlePaste() {
    if (!this.state.copyBuffer) return;
    if (this.state.copyBuffer.sampleRate === this.props.sampleRate) {
      this.paste();
    } else {
      this.resampleBufferToRate(this.state.copyBuffer, this.props.sampleRate).then(buffer => {
        this.setState({
          copyBuffer: buffer
        }, this.paste);
      });
    }
  }
  setRef(element) {
    this.ref = element;
  }
  handleContainerClick(e) {
    // If the click is on the sound editor's div (and not any other element), delesect
    if (e.target === this.ref && this.state.trimStart !== null) {
      this.handleUpdateTrim(null, null);
    }
  }
  render() {
    const {
      effectTypes
    } = audio_effects;
    return /*#__PURE__*/react_default.a.createElement(sound_editor_sound_editor, {
      canPaste: this.state.copyBuffer !== null,
      canRedo: this.redoStack.length > 0,
      canUndo: this.undoStack.length > 0,
      chunkLevels: this.state.chunkLevels,
      name: this.props.name,
      playhead: this.state.playhead,
      setRef: this.setRef,
      tooLoud: this.tooLoud(),
      trimEnd: this.state.trimEnd,
      trimStart: this.state.trimStart,
      onChangeName: this.handleChangeName,
      onContainerClick: this.handleContainerClick,
      onCopy: this.handleCopy,
      onCopyToNew: this.handleCopyToNew,
      onDelete: this.handleDelete,
      onEcho: this.effectFactory(effectTypes.ECHO),
      onFadeIn: this.effectFactory(effectTypes.FADEIN),
      onFadeOut: this.effectFactory(effectTypes.FADEOUT),
      onFaster: this.effectFactory(effectTypes.FASTER),
      onLouder: this.effectFactory(effectTypes.LOUDER),
      onMute: this.effectFactory(effectTypes.MUTE),
      onPaste: this.handlePaste,
      onPlay: this.handlePlay,
      onRedo: this.handleRedo,
      onReverse: this.effectFactory(effectTypes.REVERSE),
      onRobot: this.effectFactory(effectTypes.ROBOT),
      onSetTrim: this.handleUpdateTrim,
      onSlower: this.effectFactory(effectTypes.SLOWER),
      onSofter: this.effectFactory(effectTypes.SOFTER),
      onStop: this.handleStopPlaying,
      onUndo: this.handleUndo
    });
  }
}
containers_sound_editor_SoundEditor.propTypes = {
  isFullScreen: prop_types_default.a.bool,
  name: prop_types_default.a.string.isRequired,
  sampleRate: prop_types_default.a.number,
  samples: prop_types_default.a.instanceOf(Float32Array),
  soundId: prop_types_default.a.string,
  soundIndex: prop_types_default.a.number,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const sound_editor_mapStateToProps = (state, _ref3) => {
  let {
    soundIndex
  } = _ref3;
  const sprite = state.scratchGui.vm.editingTarget.sprite;
  // Make sure the sound index doesn't go out of range.
  const index = soundIndex < sprite.sounds.length ? soundIndex : sprite.sounds.length - 1;
  const sound = state.scratchGui.vm.editingTarget.sprite.sounds[index];
  const audioBuffer = state.scratchGui.vm.getSoundBuffer(index);
  return {
    soundId: sound.soundId,
    sampleRate: audioBuffer.sampleRate,
    samples: audioBuffer.getChannelData(0),
    isFullScreen: state.scratchGui.mode.isFullScreen,
    name: sound.name,
    vm: state.scratchGui.vm
  };
};
/* harmony default export */ var containers_sound_editor = (Object(react_redux_es["b" /* connect */])(sound_editor_mapStateToProps)(containers_sound_editor_SoundEditor));
// EXTERNAL MODULE: ./src/components/library-item/lib-icon--sound.svg
var lib_icon_sound = __webpack_require__(844);
var lib_icon_sound_default = /*#__PURE__*/__webpack_require__.n(lib_icon_sound);

// EXTERNAL MODULE: ./src/components/library-item/lib-icon--sound-rtl.svg
var lib_icon_sound_rtl = __webpack_require__(845);
var lib_icon_sound_rtl_default = /*#__PURE__*/__webpack_require__.n(lib_icon_sound_rtl);

// CONCATENATED MODULE: ./src/lib/libraries/sound-tags.js

/* harmony default export */ var sound_tags = ([{
  tag: 'animals',
  intlLabel: tag_messages.animals
}, {
  tag: 'effects',
  intlLabel: tag_messages.effects
}, {
  tag: 'loops',
  intlLabel: tag_messages.loops
}, {
  tag: 'notes',
  intlLabel: tag_messages.notes
}, {
  tag: 'percussion',
  intlLabel: tag_messages.percussion
}, {
  tag: 'space',
  intlLabel: tag_messages.space
}, {
  tag: 'sports',
  intlLabel: tag_messages.sports
}, {
  tag: 'voice',
  intlLabel: tag_messages.voice
}, {
  tag: 'wacky',
  intlLabel: tag_messages.wacky
}]);
// CONCATENATED MODULE: ./src/containers/sound-library.jsx
const sound_library_excluded = ["md5ext"];
function sound_library_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function sound_library_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? sound_library_ownKeys(Object(t), !0).forEach(function (r) { sound_library_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : sound_library_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function sound_library_defineProperty(obj, key, value) { key = sound_library_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function sound_library_toPropertyKey(arg) { var key = sound_library_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function sound_library_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function sound_library_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = sound_library_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function sound_library_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }












const sound_library_messages = Object(index_es["d" /* defineMessages */])({
  libraryTitle: {
    "id": "gui.soundLibrary.chooseASound",
    "defaultMessage": "Choose a Sound"
  }
});

// @todo need to use this hack to avoid library using md5 for image
const getSoundLibraryThumbnailData = (soundLibraryContent, isRtl) => soundLibraryContent.map(sound => {
  const {
      md5ext
    } = sound,
    otherData = sound_library_objectWithoutProperties(sound, sound_library_excluded);
  return sound_library_objectSpread({
    _md5: md5ext,
    rawURL: isRtl ? lib_icon_sound_rtl_default.a : lib_icon_sound_default.a
  }, otherData);
});
class sound_library_SoundLibrary extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleItemSelected', 'handleItemMouseEnter', 'handleItemMouseLeave', 'onStop', 'setStopHandler']);

    /**
     * AudioEngine that will decode and play sounds for us.
     * @type {AudioEngine}
     */
    this.audioEngine = null;
    /**
     * A promise for the sound queued to play as soon as it loads and
     * decodes.
     * @type {Promise<SoundPlayer>}
     */
    this.playingSoundPromise = null;

    /**
     * function to call when the sound ends
     */
    this.handleStop = null;
    const soundLibrary = getSoundLibrary();
    this.state = {
      data: Array.isArray(soundLibrary) ? getSoundLibraryThumbnailData(soundLibrary, this.props.isRtl) : soundLibrary
    };
  }
  componentDidMount() {
    if (this.state.data.then) {
      this.state.data.then(data => {
        this.setState({
          data: getSoundLibraryThumbnailData(data, this.props.isRtl)
        });
      });
    }
    this.audioEngine = new scratch_audio_src_default.a();
    this.playingSoundPromise = null;
  }
  componentWillUnmount() {
    this.stopPlayingSound();
  }
  onStop() {
    if (this.playingSoundPromise !== null) {
      this.playingSoundPromise.then(soundPlayer => soundPlayer && soundPlayer.removeListener('stop', this.onStop));
      if (this.handleStop) this.handleStop();
    }
  }
  setStopHandler(func) {
    this.handleStop = func;
  }
  stopPlayingSound() {
    // Playback is queued, playing, or has played recently and finished
    // normally.
    if (this.playingSoundPromise !== null) {
      // Forcing sound to stop, so stop listening for sound ending:
      this.playingSoundPromise.then(soundPlayer => soundPlayer && soundPlayer.removeListener('stop', this.onStop));
      // Queued playback began playing before this method.
      if (this.playingSoundPromise.isPlaying) {
        // Fetch the player from the promise and stop playback soon.
        this.playingSoundPromise.then(soundPlayer => {
          soundPlayer.stop();
        });
      } else {
        // Fetch the player from the promise and stop immediately. Since
        // the sound is not playing yet, this callback will be called
        // immediately after the sound starts playback. Stopping it
        // immediately will have the effect of no sound being played.
        this.playingSoundPromise.then(soundPlayer => {
          if (soundPlayer) soundPlayer.stopImmediately();
        });
      }
      // No further work should be performed on this promise and its
      // soundPlayer.
      this.playingSoundPromise = null;
    }
  }
  handleItemMouseEnter(soundItem) {
    const md5ext = soundItem._md5;
    const idParts = md5ext.split('.');
    const md5 = idParts[0];
    const vm = this.props.vm;

    // In case enter is called twice without a corresponding leave
    // inbetween, stop the last playback before queueing a new sound.
    this.stopPlayingSound();

    // Save the promise so code to stop the sound may queue the stop
    // instruction after the play instruction.
    this.playingSoundPromise = vm.runtime.storage.load(vm.runtime.storage.AssetType.Sound, md5).then(soundAsset => {
      if (soundAsset) {
        const sound = {
          md5: md5ext,
          name: soundItem.name,
          format: soundItem.format,
          data: soundAsset.data
        };
        return this.audioEngine.decodeSoundPlayer(sound).then(soundPlayer => {
          soundPlayer.connect(this.audioEngine);
          // Play the sound. Playing the sound will always come before a
          // paired stop if the sound must stop early.
          soundPlayer.play();
          soundPlayer.addListener('stop', this.onStop);
          // Set that the sound is playing. This affects the type of stop
          // instruction given if the sound must stop early.
          if (this.playingSoundPromise !== null) {
            this.playingSoundPromise.isPlaying = true;
          }
          return soundPlayer;
        });
      }
    });
  }
  handleItemMouseLeave() {
    this.stopPlayingSound();
  }
  handleItemSelected(soundItem) {
    const vmSound = {
      format: soundItem.format,
      md5: soundItem._md5,
      rate: soundItem.rate,
      sampleCount: soundItem.sampleCount,
      name: soundItem.name
    };
    this.props.vm.addSound(vmSound).then(() => {
      this.props.onNewSound();
    });
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(library_library, {
      showPlayButton: true,
      data: this.state.data,
      id: "soundLibrary",
      setStopHandler: this.setStopHandler,
      tags: sound_tags,
      title: this.props.intl.formatMessage(sound_library_messages.libraryTitle),
      onItemMouseEnter: this.handleItemMouseEnter,
      onItemMouseLeave: this.handleItemMouseLeave,
      onItemSelected: this.handleItemSelected,
      onRequestClose: this.props.onRequestClose
    });
  }
}
sound_library_SoundLibrary.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  isRtl: prop_types_default.a.bool,
  onNewSound: prop_types_default.a.func.isRequired,
  onRequestClose: prop_types_default.a.func,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const sound_library_mapStateToProps = state => ({
  isRtl: state.locales.isRtl
});
const sound_library_mapDispatchToProps = () => ({});
/* harmony default export */ var sound_library = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(sound_library_mapStateToProps, sound_library_mapDispatchToProps)(sound_library_SoundLibrary)));
// CONCATENATED MODULE: ./src/containers/sound-tab.jsx


























class sound_tab_SoundTab extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleSelectSound', 'handleDeleteSound', 'handleDuplicateSound', 'handleExportSound', 'handleNewSound', 'handleSurpriseSound', 'handleFileUploadClick', 'handleSoundUpload', 'handleDrop', 'setFileInput']);
    this.state = {
      selectedSoundIndex: 0
    };
  }
  componentWillReceiveProps(nextProps) {
    const {
      editingTarget,
      sprites,
      stage
    } = nextProps;
    const target = editingTarget && sprites[editingTarget] ? sprites[editingTarget] : stage;
    if (!target || !target.sounds) {
      return;
    }

    // If switching editing targets, reset the sound index
    if (this.props.editingTarget !== editingTarget) {
      this.setState({
        selectedSoundIndex: 0
      });
    } else if (this.state.selectedSoundIndex > target.sounds.length - 1) {
      this.setState({
        selectedSoundIndex: Math.max(target.sounds.length - 1, 0)
      });
    }
  }
  handleSelectSound(soundIndex) {
    this.setState({
      selectedSoundIndex: soundIndex
    });
  }
  handleDeleteSound(soundIndex) {
    const restoreFun = this.props.vm.deleteSound(soundIndex);
    if (soundIndex >= this.state.selectedSoundIndex) {
      this.setState({
        selectedSoundIndex: Math.max(0, soundIndex - 1)
      });
    }
    this.props.dispatchUpdateRestore({
      restoreFun,
      deletedItem: 'Sound'
    });
  }
  handleExportSound(soundIndex) {
    const item = this.props.vm.editingTarget.sprite.sounds[soundIndex];
    const blob = new Blob([item.asset.data], {
      type: item.asset.assetType.contentType
    });
    Object(download_blob["a" /* default */])("".concat(item.name, ".").concat(item.asset.dataFormat), blob);
  }
  handleDuplicateSound(soundIndex) {
    this.props.vm.duplicateSound(soundIndex).then(() => {
      this.setState({
        selectedSoundIndex: soundIndex + 1
      });
    });
  }
  handleNewSound() {
    if (!this.props.vm.editingTarget) {
      return null;
    }
    const sprite = this.props.vm.editingTarget.sprite;
    const sounds = sprite.sounds ? sprite.sounds : [];
    this.setState({
      selectedSoundIndex: Math.max(sounds.length - 1, 0)
    });
  }
  async handleSurpriseSound() {
    const soundLibraryContent = await getSoundLibrary();
    const soundItem = soundLibraryContent[Math.floor(Math.random() * soundLibraryContent.length)];
    const vmSound = {
      format: soundItem.dataFormat,
      md5: soundItem.md5ext,
      rate: soundItem.rate,
      sampleCount: soundItem.sampleCount,
      name: soundItem.name
    };
    this.props.vm.addSound(vmSound).then(() => {
      this.handleNewSound();
    });
  }
  handleFileUploadClick() {
    this.fileInput.click();
  }
  handleSoundUpload(e) {
    const storage = this.props.vm.runtime.storage;
    const targetId = this.props.vm.editingTarget.id;
    this.props.onShowImporting();
    handleFileUpload(e.target, (buffer, fileType, fileName, fileIndex, fileCount) => {
      soundUpload(buffer, fileType, storage, newSound => {
        newSound.name = fileName;
        this.props.vm.addSound(newSound, targetId).then(() => {
          this.handleNewSound();
          if (fileIndex === fileCount - 1) {
            this.props.onCloseImporting();
          }
        });
      }, this.props.onCloseImporting);
    }, this.props.onCloseImporting);
  }
  handleDrop(dropInfo) {
    if (dropInfo.dragType === drag_constants.SOUND) {
      const sprite = this.props.vm.editingTarget.sprite;
      const activeSound = sprite.sounds[this.state.selectedSoundIndex];
      this.props.vm.reorderSound(this.props.vm.editingTarget.id, dropInfo.index, dropInfo.newIndex);
      this.setState({
        selectedSoundIndex: sprite.sounds.indexOf(activeSound)
      });
    } else if (dropInfo.dragType === drag_constants.BACKPACK_COSTUME) {
      this.props.onActivateCostumesTab();
      this.props.vm.addCostume(dropInfo.payload.body, {
        name: dropInfo.payload.name
      });
    } else if (dropInfo.dragType === drag_constants.BACKPACK_SOUND) {
      this.props.vm.addSound({
        md5: dropInfo.payload.body,
        name: dropInfo.payload.name
      }).then(this.handleNewSound);
    }
  }
  setFileInput(input) {
    this.fileInput = input;
  }
  render() {
    const {
      dispatchUpdateRestore,
      // eslint-disable-line no-unused-vars
      intl,
      isRtl,
      vm,
      onNewSoundFromLibraryClick,
      onNewSoundFromRecordingClick
    } = this.props;
    if (!vm.editingTarget) {
      return null;
    }
    const sprite = vm.editingTarget.sprite;
    const sounds = sprite.sounds ? sprite.sounds.map(sound => ({
      url: isRtl ? icon_sound_rtl_default.a : icon_sound_default.a,
      name: sound.name,
      details: (sound.sampleCount / sound.rate).toFixed(2),
      dragPayload: sound
    })) : [];
    const messages = Object(index_es["d" /* defineMessages */])({
      fileUploadSound: {
        "id": "gui.soundTab.fileUploadSound",
        "defaultMessage": "Upload Sound"
      },
      surpriseSound: {
        "id": "gui.soundTab.surpriseSound",
        "defaultMessage": "Surprise"
      },
      recordSound: {
        "id": "gui.soundTab.recordSound",
        "defaultMessage": "Record"
      },
      addSound: {
        "id": "gui.soundTab.addSoundFromLibrary",
        "defaultMessage": "Choose a Sound"
      }
    });
    return /*#__PURE__*/react_default.a.createElement(asset_panel_asset_panel, {
      buttons: [{
        title: intl.formatMessage(messages.addSound),
        img: icon_add_sound_lib_default.a,
        onClick: onNewSoundFromLibraryClick
      }, {
        title: intl.formatMessage(messages.fileUploadSound),
        img: icon_file_upload_default.a,
        onClick: this.handleFileUploadClick,
        fileAccept: '.wav, .mp3',
        fileChange: this.handleSoundUpload,
        fileInput: this.setFileInput,
        fileMultiple: true
      }, {
        title: intl.formatMessage(messages.surpriseSound),
        img: icon_surprise_default.a,
        onClick: this.handleSurpriseSound
      }, {
        title: intl.formatMessage(messages.recordSound),
        img: icon_add_sound_record_default.a,
        onClick: onNewSoundFromRecordingClick
      }, {
        title: intl.formatMessage(messages.addSound),
        img: icon_search_default.a,
        onClick: onNewSoundFromLibraryClick
      }],
      dragType: drag_constants.SOUND,
      isRtl: isRtl,
      items: sounds,
      selectedItemIndex: this.state.selectedSoundIndex,
      onDeleteClick: this.handleDeleteSound,
      onDrop: this.handleDrop,
      onDuplicateClick: this.handleDuplicateSound,
      onExportClick: this.handleExportSound,
      onItemClick: this.handleSelectSound
    }, sprite.sounds && sprite.sounds[this.state.selectedSoundIndex] ? /*#__PURE__*/react_default.a.createElement(containers_sound_editor, {
      soundIndex: this.state.selectedSoundIndex
    }) : null, this.props.soundRecorderVisible ? /*#__PURE__*/react_default.a.createElement(containers_record_modal, {
      onNewSound: this.handleNewSound
    }) : null, this.props.soundLibraryVisible ? /*#__PURE__*/react_default.a.createElement(sound_library, {
      vm: this.props.vm,
      onNewSound: this.handleNewSound,
      onRequestClose: this.props.onRequestCloseSoundLibrary
    }) : null);
  }
}
sound_tab_SoundTab.propTypes = {
  dispatchUpdateRestore: prop_types_default.a.func,
  editingTarget: prop_types_default.a.string,
  intl: index_es["f" /* intlShape */],
  isRtl: prop_types_default.a.bool,
  onActivateCostumesTab: prop_types_default.a.func.isRequired,
  onCloseImporting: prop_types_default.a.func.isRequired,
  onNewSoundFromLibraryClick: prop_types_default.a.func.isRequired,
  onNewSoundFromRecordingClick: prop_types_default.a.func.isRequired,
  onRequestCloseSoundLibrary: prop_types_default.a.func.isRequired,
  onShowImporting: prop_types_default.a.func.isRequired,
  soundLibraryVisible: prop_types_default.a.bool,
  soundRecorderVisible: prop_types_default.a.bool,
  sprites: prop_types_default.a.shape({
    id: prop_types_default.a.shape({
      sounds: prop_types_default.a.arrayOf(prop_types_default.a.shape({
        name: prop_types_default.a.string.isRequired
      }))
    })
  }),
  stage: prop_types_default.a.shape({
    sounds: prop_types_default.a.arrayOf(prop_types_default.a.shape({
      name: prop_types_default.a.string.isRequired
    }))
  }),
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const sound_tab_mapStateToProps = state => ({
  editingTarget: state.scratchGui.targets.editingTarget,
  isRtl: state.locales.isRtl,
  sprites: state.scratchGui.targets.sprites,
  stage: state.scratchGui.targets.stage,
  soundLibraryVisible: state.scratchGui.modals.soundLibrary,
  soundRecorderVisible: state.scratchGui.modals.soundRecorder
});
const sound_tab_mapDispatchToProps = dispatch => ({
  onActivateCostumesTab: () => dispatch(Object(editor_tab["d" /* activateTab */])(editor_tab["b" /* COSTUMES_TAB_INDEX */])),
  onNewSoundFromLibraryClick: e => {
    e.preventDefault();
    dispatch(Object(modals["x" /* openSoundLibrary */])());
  },
  onNewSoundFromRecordingClick: () => {
    dispatch(Object(modals["y" /* openSoundRecorder */])());
  },
  onRequestCloseSoundLibrary: () => {
    dispatch(Object(modals["h" /* closeSoundLibrary */])());
  },
  dispatchUpdateRestore: restoreState => {
    dispatch(Object(restore_deletion["c" /* setRestore */])(restoreState));
  },
  onCloseImporting: () => dispatch(Object(alerts["c" /* closeAlertWithId */])('importingAsset')),
  onShowImporting: () => dispatch(Object(alerts["i" /* showStandardAlert */])('importingAsset'))
});
/* harmony default export */ var sound_tab = (Object(error_boundary_hoc["a" /* default */])('Sound Tab')(Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(sound_tab_mapStateToProps, sound_tab_mapDispatchToProps)(sound_tab_SoundTab))));
// EXTERNAL MODULE: ./src/reducers/stage-size.js
var stage_size = __webpack_require__(226);

// EXTERNAL MODULE: ./src/reducers/mode.js
var mode = __webpack_require__(73);

// EXTERNAL MODULE: ./src/components/green-flag/icon--green-flag.svg
var icon_green_flag = __webpack_require__(355);
var icon_green_flag_default = /*#__PURE__*/__webpack_require__.n(icon_green_flag);

// EXTERNAL MODULE: ./src/components/green-flag/green-flag.css
var green_flag = __webpack_require__(465);
var green_flag_default = /*#__PURE__*/__webpack_require__.n(green_flag);

// CONCATENATED MODULE: ./src/components/green-flag/green-flag.jsx
const green_flag_excluded = ["active", "className", "onClick", "title"];
function green_flag_extends() { green_flag_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return green_flag_extends.apply(this, arguments); }
function green_flag_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = green_flag_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function green_flag_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const green_flag_GreenFlagComponent = function GreenFlagComponent(props) {
  const {
      active,
      className,
      onClick,
      title
    } = props,
    componentProps = green_flag_objectWithoutProperties(props, green_flag_excluded);
  return /*#__PURE__*/react_default.a.createElement("img", green_flag_extends({
    className: classnames_default()(className, green_flag_default.a.greenFlag, {
      [green_flag_default.a.isActive]: active
    }),
    draggable: false,
    src: icon_green_flag_default.a,
    title: title,
    onClick: onClick
    // tw: also fire click when opening context menu (right click on all systems and alt+click on chromebooks)
    ,
    onContextMenu: onClick
  }, componentProps));
};
green_flag_GreenFlagComponent.propTypes = {
  active: prop_types_default.a.bool,
  className: prop_types_default.a.string,
  onClick: prop_types_default.a.func.isRequired,
  title: prop_types_default.a.string
};
green_flag_GreenFlagComponent.defaultProps = {
  active: false,
  title: 'Go'
};
/* harmony default export */ var green_flag_green_flag = (green_flag_GreenFlagComponent);
// EXTERNAL MODULE: ./src/components/stop-all/icon--stop-all.svg
var icon_stop_all = __webpack_require__(846);
var icon_stop_all_default = /*#__PURE__*/__webpack_require__.n(icon_stop_all);

// EXTERNAL MODULE: ./src/components/stop-all/stop-all.css
var stop_all = __webpack_require__(466);
var stop_all_default = /*#__PURE__*/__webpack_require__.n(stop_all);

// CONCATENATED MODULE: ./src/components/stop-all/stop-all.jsx
const stop_all_excluded = ["active", "className", "onClick", "title"];
function stop_all_extends() { stop_all_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return stop_all_extends.apply(this, arguments); }
function stop_all_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = stop_all_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function stop_all_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const stop_all_StopAllComponent = function StopAllComponent(props) {
  const {
      active,
      className,
      onClick,
      title
    } = props,
    componentProps = stop_all_objectWithoutProperties(props, stop_all_excluded);
  return /*#__PURE__*/react_default.a.createElement("img", stop_all_extends({
    className: classnames_default()(className, stop_all_default.a.stopAll, {
      [stop_all_default.a.isActive]: active
    }),
    draggable: false,
    src: icon_stop_all_default.a,
    title: title,
    onClick: onClick
  }, componentProps));
};
stop_all_StopAllComponent.propTypes = {
  active: prop_types_default.a.bool,
  className: prop_types_default.a.string,
  onClick: prop_types_default.a.func.isRequired,
  title: prop_types_default.a.string
};
stop_all_StopAllComponent.defaultProps = {
  active: false,
  title: 'Stop'
};
/* harmony default export */ var stop_all_stop_all = (stop_all_StopAllComponent);
// EXTERNAL MODULE: ./src/components/turbo-mode/icon--turbo.svg
var icon_turbo = __webpack_require__(847);
var icon_turbo_default = /*#__PURE__*/__webpack_require__.n(icon_turbo);

// EXTERNAL MODULE: ./src/components/turbo-mode/turbo-mode.css
var turbo_mode = __webpack_require__(373);
var turbo_mode_default = /*#__PURE__*/__webpack_require__.n(turbo_mode);

// CONCATENATED MODULE: ./src/components/turbo-mode/turbo-mode.jsx





const TurboMode = _ref => {
  let {
    isSmall
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: turbo_mode_default.a.turboContainer
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: turbo_mode_default.a.turboIcon,
    src: icon_turbo_default.a
  }), !isSmall && /*#__PURE__*/react_default.a.createElement("div", {
    className: turbo_mode_default.a.turboLabel
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Turbo Mode",
    id: "gui.turboMode.active"
  })));
};
TurboMode.propTypes = {
  isSmall: prop_types_default.a.bool
};
TurboMode.defaultProps = {
  isSmall: false
};
/* harmony default export */ var turbo_mode_turbo_mode = (TurboMode);
// EXTERNAL MODULE: ./src/components/tw-framerate-indicator/framerate-indicator.css
var framerate_indicator = __webpack_require__(296);
var framerate_indicator_default = /*#__PURE__*/__webpack_require__.n(framerate_indicator);

// CONCATENATED MODULE: ./src/components/tw-framerate-indicator/framerate-indicator.jsx




const FramerateIndicator = _ref => {
  let {
    framerate,
    interpolation
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, framerate !== 30 && framerate !== 0 && /*#__PURE__*/react_default.a.createElement("div", {
    className: framerate_indicator_default.a.framerateContainer
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: framerate_indicator_default.a.framerateLabel
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "{framerate} FPS",
    id: "tw.fps",
    values: {
      framerate: framerate
    }
  }))), interpolation && /*#__PURE__*/react_default.a.createElement("div", {
    className: framerate_indicator_default.a.framerateContainer
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: framerate_indicator_default.a.framerateLabel
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Interpolation",
    id: "tw.interpolationEnabled"
  }))));
};
FramerateIndicator.propTypes = {
  framerate: prop_types_default.a.number,
  interpolation: prop_types_default.a.bool
};
/* harmony default export */ var tw_framerate_indicator_framerate_indicator = (FramerateIndicator);
// EXTERNAL MODULE: ./src/components/controls/controls.css
var controls = __webpack_require__(848);
var controls_default = /*#__PURE__*/__webpack_require__.n(controls);

// CONCATENATED MODULE: ./src/components/controls/controls.jsx
const controls_excluded = ["active", "className", "intl", "onGreenFlagClick", "onStopAllClick", "turbo", "framerate", "interpolation", "isSmall"];
function controls_extends() { controls_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return controls_extends.apply(this, arguments); }
function controls_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = controls_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function controls_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }










const controls_messages = Object(index_es["d" /* defineMessages */])({
  goTitle: {
    "id": "gui.controls.go",
    "defaultMessage": "Go"
  },
  stopTitle: {
    "id": "gui.controls.stop",
    "defaultMessage": "Stop"
  }
});
const controls_Controls = function Controls(props) {
  const {
      active,
      className,
      intl,
      onGreenFlagClick,
      onStopAllClick,
      turbo,
      framerate,
      interpolation,
      isSmall
    } = props,
    componentProps = controls_objectWithoutProperties(props, controls_excluded);
  return /*#__PURE__*/react_default.a.createElement("div", controls_extends({
    className: classnames_default()(controls_default.a.controlsContainer, className)
  }, componentProps), /*#__PURE__*/react_default.a.createElement(green_flag_green_flag, {
    active: active,
    title: intl.formatMessage(controls_messages.goTitle),
    onClick: onGreenFlagClick
  }), /*#__PURE__*/react_default.a.createElement(stop_all_stop_all, {
    active: active,
    title: intl.formatMessage(controls_messages.stopTitle),
    onClick: onStopAllClick
  }), turbo ? /*#__PURE__*/react_default.a.createElement(turbo_mode_turbo_mode, {
    isSmall: isSmall
  }) : null, !isSmall && /*#__PURE__*/react_default.a.createElement(tw_framerate_indicator_framerate_indicator, {
    framerate: framerate,
    interpolation: interpolation
  }));
};
controls_Controls.propTypes = {
  active: prop_types_default.a.bool,
  className: prop_types_default.a.string,
  intl: index_es["f" /* intlShape */].isRequired,
  onGreenFlagClick: prop_types_default.a.func.isRequired,
  onStopAllClick: prop_types_default.a.func.isRequired,
  framerate: prop_types_default.a.number,
  interpolation: prop_types_default.a.bool,
  isSmall: prop_types_default.a.bool,
  turbo: prop_types_default.a.bool
};
controls_Controls.defaultProps = {
  active: false,
  turbo: false,
  isSmall: false
};
/* harmony default export */ var controls_controls = (Object(index_es["e" /* injectIntl */])(controls_Controls));
// CONCATENATED MODULE: ./src/containers/controls.jsx
const containers_controls_excluded = ["vm", "isStarted", "projectRunning", "turbo"];
function containers_controls_extends() { containers_controls_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_controls_extends.apply(this, arguments); }
function containers_controls_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = containers_controls_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function containers_controls_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







class containers_controls_Controls extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleGreenFlagClick', 'handleStopAllClick']);
  }
  handleGreenFlagClick(e) {
    e.preventDefault();
    // tw: implement alt+click and right click to toggle FPS
    if (e.shiftKey || e.altKey || e.type === 'contextmenu') {
      if (e.shiftKey) {
        this.props.vm.setTurboMode(!this.props.turbo);
      }
      if (e.altKey || e.type === 'contextmenu') {
        if (this.props.framerate === 30) {
          this.props.vm.setFramerate(60);
        } else {
          this.props.vm.setFramerate(30);
        }
      }
    } else {
      if (!this.props.isStarted) {
        this.props.vm.start();
      }
      this.props.vm.greenFlag();
    }
  }
  handleStopAllClick(e) {
    e.preventDefault();
    this.props.vm.stopAll();
  }
  render() {
    const _this$props = this.props,
      {
        vm,
        // eslint-disable-line no-unused-vars
        isStarted,
        // eslint-disable-line no-unused-vars
        projectRunning,
        turbo
      } = _this$props,
      props = containers_controls_objectWithoutProperties(_this$props, containers_controls_excluded);
    return /*#__PURE__*/react_default.a.createElement(controls_controls, containers_controls_extends({}, props, {
      active: projectRunning && isStarted,
      turbo: turbo,
      onGreenFlagClick: this.handleGreenFlagClick,
      onStopAllClick: this.handleStopAllClick
    }));
  }
}
containers_controls_Controls.propTypes = {
  isStarted: prop_types_default.a.bool.isRequired,
  projectRunning: prop_types_default.a.bool.isRequired,
  turbo: prop_types_default.a.bool.isRequired,
  framerate: prop_types_default.a.number.isRequired,
  interpolation: prop_types_default.a.bool.isRequired,
  isSmall: prop_types_default.a.bool,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const controls_mapStateToProps = state => ({
  isStarted: state.scratchGui.vmStatus.started,
  projectRunning: state.scratchGui.vmStatus.running,
  framerate: state.scratchGui.tw.framerate,
  interpolation: state.scratchGui.tw.interpolation,
  turbo: state.scratchGui.vmStatus.turbo
});
// no-op function to prevent dispatch prop being passed to component
const controls_mapDispatchToProps = () => ({});
/* harmony default export */ var containers_controls = (Object(react_redux_es["b" /* connect */])(controls_mapStateToProps, controls_mapDispatchToProps)(containers_controls_Controls));
// CONCATENATED MODULE: ./src/lib/screen-utils.js

const maxScaleParam = typeof URLSearchParams !== 'undefined' && new URLSearchParams(location.search).get('scale');

/**
 * @typedef {object} StageDimensions
 * @property {int} height - the height to be used for the stage in the current situation.
 * @property {int} width - the width to be used for the stage in the current situation.
 * @property {number} scale - the scale factor from the stage's default size to its current size.
 * @property {int} heightDefault - the height of the stage in its default (large) size.
 * @property {int} widthDefault - the width of the stage in its default (large) size.
 */

const STAGE_DIMENSION_DEFAULTS = {
  // referencing css/units.css,
  // spacingBorderAdjustment = 2 * $full-screen-top-bottom-margin +
  //   2 * $full-screen-border-width
  fullScreenSpacingBorderAdjustment: 12,
  // referencing css/units.css,
  // menuHeightAdjustment = $stage-menu-height
  menuHeightAdjustment: 44
};

/**
 * Resolve the current GUI and browser state to an actual stage size enum value.
 * @param {STAGE_SIZE_MODES} stageSizeMode - the state of the stage size toggle button.
 * @param {boolean} isFullSize - true if the window is large enough for the large stage at its full size.
 * @return {STAGE_DISPLAY_SIZES} - the stage size enum value we should use in this situation.
 */
const resolveStageSize = (stageSizeMode, isFullSize) => {
  if (stageSizeMode === layout_constants["d" /* STAGE_SIZE_MODES */].small) {
    return layout_constants["c" /* STAGE_DISPLAY_SIZES */].small;
  }
  if (isFullSize) {
    return layout_constants["c" /* STAGE_DISPLAY_SIZES */].large;
  }
  return layout_constants["c" /* STAGE_DISPLAY_SIZES */].largeConstrained;
};

/**
 * Retrieve info used to determine the actual stage size based on the current GUI and browser state.
 * @param {STAGE_DISPLAY_SIZES} stageSize - the current fully-resolved stage size.
 * @param {{width: number, height: number}} customStageSize Custom stage size
 * @param {boolean} isFullScreen - true if full-screen mode is enabled.
 * @return {StageDimensions} - an object describing the dimensions of the stage.
 */
const getStageDimensions = (stageSize, customStageSize, isFullScreen) => {
  const stageDimensions = {
    heightDefault: customStageSize.height,
    widthDefault: customStageSize.width,
    height: 0,
    width: 0,
    scale: 0
  };
  if (isFullScreen) {
    stageDimensions.height = window.innerHeight - STAGE_DIMENSION_DEFAULTS.menuHeightAdjustment - STAGE_DIMENSION_DEFAULTS.fullScreenSpacingBorderAdjustment;
    stageDimensions.width = stageDimensions.height * (customStageSize.width / customStageSize.height);
    const maxWidth = maxScaleParam ? Math.min(window.innerWidth, maxScaleParam * customStageSize.width) : window.innerWidth;
    if (stageDimensions.width > maxWidth) {
      stageDimensions.width = maxWidth;
      stageDimensions.height = stageDimensions.width * (customStageSize.height / customStageSize.width);
    }
    stageDimensions.scale = stageDimensions.width / stageDimensions.widthDefault;
  } else {
    stageDimensions.scale = layout_constants["b" /* STAGE_DISPLAY_SCALES */][stageSize];
    stageDimensions.height = stageDimensions.scale * stageDimensions.heightDefault;
    stageDimensions.width = stageDimensions.scale * stageDimensions.widthDefault;
  }

  // Round off dimensions to prevent resampling/blurriness
  stageDimensions.height = Math.round(stageDimensions.height);
  stageDimensions.width = Math.round(stageDimensions.width);
  return stageDimensions;
};
const getMinWidth = stageSize => layout_constants["b" /* STAGE_DISPLAY_SCALES */][stageSize] * 480;

/**
 * Take a pair of sizes for the stage (a target height and width and a default height and width),
 * calculate the ratio between them, and return a CSS transform to scale to that ratio.
 * @param {object} sizeInfo An object containing dimensions of the target and default stage sizes.
 * @param {number} sizeInfo.width The target width
 * @param {number} sizeInfo.height The target height
 * @param {number} sizeInfo.widthDefault The default width
 * @param {number} sizeInfo.heightDefault The default height
 * @returns {object} the CSS transform
 */
const stageSizeToTransform = _ref => {
  let {
    width,
    height,
    widthDefault,
    heightDefault
  } = _ref;
  const scaleX = width / widthDefault;
  const scaleY = height / heightDefault;
  if (scaleX === 1 && scaleY === 1) {
    // Do not set a transform if the scale is 1 because
    // it messes up `position: fixed` elements like the context menu.
    return;
  }
  return {
    transform: "scale(".concat(scaleX, ",").concat(scaleY, ")")
  };
};

// EXTERNAL MODULE: ./src/components/stage-header/icon--fullscreen.svg
var icon_fullscreen = __webpack_require__(467);
var icon_fullscreen_default = /*#__PURE__*/__webpack_require__.n(icon_fullscreen);

// EXTERNAL MODULE: ./src/components/stage-header/icon--large-stage.svg
var icon_large_stage = __webpack_require__(849);
var icon_large_stage_default = /*#__PURE__*/__webpack_require__.n(icon_large_stage);

// EXTERNAL MODULE: ./src/components/stage-header/icon--small-stage.svg
var icon_small_stage = __webpack_require__(850);
var icon_small_stage_default = /*#__PURE__*/__webpack_require__.n(icon_small_stage);

// EXTERNAL MODULE: ./src/components/stage-header/icon--unfullscreen.svg
var icon_unfullscreen = __webpack_require__(851);
var icon_unfullscreen_default = /*#__PURE__*/__webpack_require__.n(icon_unfullscreen);

// EXTERNAL MODULE: ./src/components/stage-header/stage-header.css
var stage_header = __webpack_require__(58);
var stage_header_default = /*#__PURE__*/__webpack_require__.n(stage_header);

// EXTERNAL MODULE: ./src/lib/tw-fullscreen-api.js
var tw_fullscreen_api = __webpack_require__(178);

// CONCATENATED MODULE: ./src/components/stage-header/stage-header.jsx

















const stage_header_messages = Object(index_es["d" /* defineMessages */])({
  largeStageSizeMessage: {
    "id": "gui.stageHeader.stageSizeLarge",
    "defaultMessage": "Switch to large stage"
  },
  smallStageSizeMessage: {
    "id": "gui.stageHeader.stageSizeSmall",
    "defaultMessage": "Switch to small stage"
  },
  fullStageSizeMessage: {
    "id": "gui.stageHeader.stageSizeFull",
    "defaultMessage": "Enter full screen mode"
  },
  unFullStageSizeMessage: {
    "id": "gui.stageHeader.stageSizeUnFull",
    "defaultMessage": "Exit full screen mode"
  },
  fullscreenControl: {
    "id": "gui.stageHeader.fullscreenControl",
    "defaultMessage": "Full Screen Control"
  }
});
const stage_header_StageHeaderComponent = function StageHeaderComponent(props) {
  const {
    customStageSize,
    isFullScreen,
    isPlayerOnly,
    onKeyPress,
    onSetStageLarge,
    onSetStageSmall,
    onSetStageFull,
    onSetStageUnFull,
    isEmbedded,
    stageSizeMode,
    vm
  } = props;
  let header = null;
  if (isFullScreen || isEmbedded) {
    const stageDimensions = getStageDimensions(null, customStageSize, true);
    const stageButton = isEmbedded && !tw_fullscreen_api["a" /* default */].available() ? null : isFullScreen ? /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: stage_header_default.a.stageButton,
      onClick: onSetStageUnFull,
      onKeyPress: onKeyPress
    }, /*#__PURE__*/react_default.a.createElement("img", {
      alt: props.intl.formatMessage(stage_header_messages.unFullStageSizeMessage),
      className: stage_header_default.a.stageButtonIcon,
      draggable: false,
      src: icon_unfullscreen_default.a,
      title: props.intl.formatMessage(stage_header_messages.fullscreenControl)
    })) : /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: stage_header_default.a.stageButton,
      onClick: onSetStageFull
    }, /*#__PURE__*/react_default.a.createElement("img", {
      alt: props.intl.formatMessage(stage_header_messages.fullStageSizeMessage),
      className: stage_header_default.a.stageButtonIcon,
      draggable: false,
      src: icon_fullscreen_default.a,
      title: props.intl.formatMessage(stage_header_messages.fullscreenControl)
    }));
    header = /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: classnames_default()(stage_header_default.a.stageHeaderWrapperOverlay, {
        [stage_header_default.a.embedded]: isEmbedded
      })
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: stage_header_default.a.stageMenuWrapper,
      style: {
        width: stageDimensions.width
      }
    }, /*#__PURE__*/react_default.a.createElement(containers_controls, {
      vm: vm
    }), stageButton));
  } else {
    const stageControls = isPlayerOnly ? [] : /*#__PURE__*/react_default.a.createElement("div", {
      className: stage_header_default.a.stageSizeToggleGroup
    }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: classnames_default()(stage_header_default.a.stageButton, stage_header_default.a.stageButtonFirst, stageSizeMode === layout_constants["d" /* STAGE_SIZE_MODES */].small ? null : stage_header_default.a.stageButtonToggledOff),
      onClick: onSetStageSmall
    }, /*#__PURE__*/react_default.a.createElement("img", {
      alt: props.intl.formatMessage(stage_header_messages.smallStageSizeMessage),
      className: stage_header_default.a.stageButtonIcon,
      draggable: false,
      src: icon_small_stage_default.a
    }))), /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: classnames_default()(stage_header_default.a.stageButton, stage_header_default.a.stageButtonLast, stageSizeMode === layout_constants["d" /* STAGE_SIZE_MODES */].large ? null : stage_header_default.a.stageButtonToggledOff),
      onClick: onSetStageLarge
    }, /*#__PURE__*/react_default.a.createElement("img", {
      alt: props.intl.formatMessage(stage_header_messages.largeStageSizeMessage),
      className: stage_header_default.a.stageButtonIcon,
      draggable: false,
      src: icon_large_stage_default.a
    }))));
    header = /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: stage_header_default.a.stageHeaderWrapper
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: stage_header_default.a.stageMenuWrapper
    }, /*#__PURE__*/react_default.a.createElement(containers_controls, {
      vm: vm,
      isSmall: stageSizeMode === layout_constants["d" /* STAGE_SIZE_MODES */].small
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: stage_header_default.a.stageSizeRow
    }, stageControls, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: stage_header_default.a.stageButton,
      onClick: onSetStageFull
    }, /*#__PURE__*/react_default.a.createElement("img", {
      alt: props.intl.formatMessage(stage_header_messages.fullStageSizeMessage),
      className: stage_header_default.a.stageButtonIcon,
      draggable: false,
      src: icon_fullscreen_default.a,
      title: props.intl.formatMessage(stage_header_messages.fullscreenControl)
    }))))));
  }
  return header;
};
const stage_header_mapStateToProps = state => ({
  customStageSize: state.scratchGui.customStageSize,
  // This is the button's mode, as opposed to the actual current state
  stageSizeMode: state.scratchGui.stageSize.stageSize
});
stage_header_StageHeaderComponent.propTypes = {
  intl: index_es["f" /* intlShape */],
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number
  }),
  isFullScreen: prop_types_default.a.bool.isRequired,
  isPlayerOnly: prop_types_default.a.bool.isRequired,
  onKeyPress: prop_types_default.a.func.isRequired,
  onSetStageFull: prop_types_default.a.func.isRequired,
  onSetStageLarge: prop_types_default.a.func.isRequired,
  onSetStageSmall: prop_types_default.a.func.isRequired,
  onSetStageUnFull: prop_types_default.a.func.isRequired,
  isEmbedded: prop_types_default.a.bool.isRequired,
  stageSizeMode: prop_types_default.a.oneOf(Object.keys(layout_constants["d" /* STAGE_SIZE_MODES */])),
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
stage_header_StageHeaderComponent.defaultProps = {
  stageSizeMode: layout_constants["d" /* STAGE_SIZE_MODES */].large
};
/* harmony default export */ var stage_header_stage_header = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(stage_header_mapStateToProps)(stage_header_StageHeaderComponent)));
// CONCATENATED MODULE: ./src/containers/stage-header.jsx
function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure " + obj); }
function stage_header_extends() { stage_header_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return stage_header_extends.apply(this, arguments); }










// eslint-disable-next-line react/prefer-stateless-function
class stage_header_StageHeader extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleKeyPress']);
  }
  componentDidMount() {
    document.addEventListener('keydown', this.handleKeyPress);
  }
  componentWillUnmount() {
    document.removeEventListener('keydown', this.handleKeyPress);
  }
  handleKeyPress(event) {
    if (event.key === 'Escape' && this.props.isFullScreen) {
      this.props.onSetStageUnFull(false);
    }
  }
  render() {
    const _this$props = this.props,
      props = stage_header_extends({}, (_objectDestructuringEmpty(_this$props), _this$props));
    return /*#__PURE__*/react_default.a.createElement(stage_header_stage_header, stage_header_extends({}, props, {
      onKeyPress: this.handleKeyPress
    }));
  }
}
stage_header_StageHeader.propTypes = {
  isFullScreen: prop_types_default.a.bool,
  // tw: update when dimensions or isWindowFullScreen changes
  isWindowFullScreen: prop_types_default.a.bool,
  dimensions: prop_types_default.a.arrayOf(prop_types_default.a.number),
  isPlayerOnly: prop_types_default.a.bool,
  onSetStageUnFull: prop_types_default.a.func.isRequired,
  // tw: replace showBranding
  isEmbedded: prop_types_default.a.bool,
  stageSizeMode: prop_types_default.a.oneOf(Object.keys(layout_constants["d" /* STAGE_SIZE_MODES */])),
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const containers_stage_header_mapStateToProps = state => ({
  stageSizeMode: state.scratchGui.stageSize.stageSize,
  // tw: replace showBranding
  isEmbedded: state.scratchGui.mode.isEmbedded,
  isFullScreen: state.scratchGui.mode.isFullScreen,
  // tw: update when dimensions or isWindowFullScreen changes
  isWindowFullScreen: state.scratchGui.tw.isWindowFullScreen,
  dimensions: state.scratchGui.tw.dimensions,
  isPlayerOnly: state.scratchGui.mode.isPlayerOnly
});
const stage_header_mapDispatchToProps = dispatch => ({
  onSetStageLarge: () => dispatch(Object(stage_size["b" /* setStageSize */])(layout_constants["d" /* STAGE_SIZE_MODES */].large)),
  onSetStageSmall: () => dispatch(Object(stage_size["b" /* setStageSize */])(layout_constants["d" /* STAGE_SIZE_MODES */].small)),
  onSetStageFull: () => dispatch(Object(mode["c" /* setFullScreen */])(true)),
  onSetStageUnFull: () => dispatch(Object(mode["c" /* setFullScreen */])(false))
});
/* harmony default export */ var containers_stage_header = (Object(react_redux_es["b" /* connect */])(containers_stage_header_mapStateToProps, stage_header_mapDispatchToProps)(stage_header_StageHeader));
// CONCATENATED MODULE: ./src/lib/video/camera.js


// Single Setup For All Video Streams used by the GUI
// While VideoProvider uses a private _singleSetup
// property to ensure that each instance of a VideoProvider
// use the same setup, this ensures that all instances
// of VideoProviders use a single stream. This way, closing a camera modal
// does not affect the video on the stage, and a program running and disabling
// video on the stage will not affect the camera modal's video.
const requestStack = [];
const requestVideoStream = videoDesc => {
  let streamPromise;
  if (requestStack.length === 0) {
    streamPromise = get_user_media_promise_default()({
      audio: false,
      video: videoDesc
    });
    requestStack.push(streamPromise);
  } else if (requestStack.length > 0) {
    streamPromise = requestStack[0];
    requestStack.push(true);
  }
  return streamPromise;
};
const requestDisableVideo = () => {
  requestStack.pop();
  if (requestStack.length > 0) return false;
  return true;
};

// CONCATENATED MODULE: ./src/lib/video/video-provider.js



/**
 * Video Manager for video extensions.
 */
class video_provider_VideoProvider {
  constructor() {
    /**
     * Default value for mirrored frames.
     * @type boolean
     */
    this.mirror = true;

    /**
     * Cache frames for this many ms.
     * @type number
     */
    this._frameCacheTimeout = 16;

    /**
     * DOM Video element
     * @private
     */
    this._video = null;

    /**
     * Usermedia stream track
     * @private
     */
    this._track = null;

    /**
     * Stores some canvas/frame data per resolution/mirror states
     */
    this._workspace = [];
  }
  static get FORMAT_IMAGE_DATA() {
    return 'image-data';
  }
  static get FORMAT_CANVAS() {
    return 'canvas';
  }

  /**
   * Dimensions the video stream is analyzed at after its rendered to the
   * sample canvas.
   * @type {Array.<number>}
   */
  static get DIMENSIONS() {
    return [480, 360];
  }

  /**
   * Order preview drawable is inserted at in the renderer.
   * @type {number}
   */
  static get ORDER() {
    return 1;
  }

  /**
   * Get the HTML video element containing the stream
   */
  get video() {
    return this._video;
  }

  /**
   * Request video be enabled.  Sets up video, creates video skin and enables preview.
   *
   * @return {Promise.<Video>} resolves a promise to this video provider when video is ready.
   */
  enableVideo() {
    this.enabled = true;
    return this._setupVideo();
  }

  /**
   * Disable video stream (turn video off)
   */
  disableVideo() {
    this.enabled = false;
    // If we have begun a setup process, call _teardown after it completes
    if (this._singleSetup) {
      this._singleSetup.then(this._teardown.bind(this)).catch(err => this.onError(err));
    }
  }

  /**
   * async part of disableVideo
   * @private
   */
  _teardown() {
    // we might be asked to re-enable before _teardown is called, just ignore it.
    if (this.enabled === false) {
      const disableTrack = requestDisableVideo();
      this._singleSetup = null;
      // by clearing refs to video and track, we should lose our hold over the camera
      this._video = null;
      if (this._track && disableTrack) {
        this._track.stop();
      }
      this._track = null;
    }
  }

  /**
   * Return frame data from the video feed in a specified dimensions, format, and mirroring.
   *
   * @param {object} frameInfo A descriptor of the frame you would like to receive.
   * @param {Array.<number>} frameInfo.dimensions [width, height] array of numbers.  Defaults to [480,360]
   * @param {boolean} frameInfo.mirror If you specificly want a mirror/non-mirror frame, defaults to true
   * @param {string} frameInfo.format Requested video format, available formats are 'image-data' and 'canvas'.
   * @param {number} frameInfo.cacheTimeout Will reuse previous image data if the time since capture is less than
   *                                        the cacheTimeout.  Defaults to 16ms.
   *
   * @return {ArrayBuffer|Canvas|string|null} Frame data in requested format, null when errors.
   */
  getFrame(_ref) {
    let {
      dimensions = video_provider_VideoProvider.DIMENSIONS,
      mirror = this.mirror,
      format = video_provider_VideoProvider.FORMAT_IMAGE_DATA,
      cacheTimeout = this._frameCacheTimeout
    } = _ref;
    if (!this.videoReady) {
      return null;
    }
    const [width, height] = dimensions;
    const workspace = this._getWorkspace({
      dimensions,
      mirror: Boolean(mirror)
    });
    const {
      videoWidth,
      videoHeight
    } = this._video;
    const {
      canvas,
      context,
      lastUpdate,
      cacheData
    } = workspace;
    const now = Date.now();

    // if the canvas hasn't been updated...
    if (lastUpdate + cacheTimeout < now) {
      if (mirror) {
        context.scale(-1, 1);
        context.translate(width * -1, 0);
      }
      context.drawImage(this._video,
      // source x, y, width, height
      0, 0, videoWidth, videoHeight,
      // dest x, y, width, height
      0, 0, width, height);

      // context.resetTransform() doesn't work on Edge but the following should
      context.setTransform(1, 0, 0, 1, 0, 0);
      workspace.lastUpdate = now;
    }

    // each data type has it's own data cache, but the canvas is the same
    if (!cacheData[format]) {
      cacheData[format] = {
        lastUpdate: 0
      };
    }
    const formatCache = cacheData[format];
    if (formatCache.lastUpdate + cacheTimeout < now) {
      if (format === video_provider_VideoProvider.FORMAT_IMAGE_DATA) {
        formatCache.lastData = context.getImageData(0, 0, width, height);
      } else if (format === video_provider_VideoProvider.FORMAT_CANVAS) {
        // this will never change
        formatCache.lastUpdate = Infinity;
        formatCache.lastData = canvas;
      } else {
        log["default"].error("video io error - unimplemented format ".concat(format));
        // cache the null result forever, don't log about it again..
        formatCache.lastUpdate = Infinity;
        formatCache.lastData = null;
      }

      // rather than set to now, this data is as stale as it's canvas is
      formatCache.lastUpdate = Math.max(workspace.lastUpdate, formatCache.lastUpdate);
    }
    return formatCache.lastData;
  }

  /**
   * Method called when an error happens.  Default implementation is just to log error.
   *
   * @abstract
   * @param {Error} error An error object from getUserMedia or other source of error.
   */
  onError(error) {
    log["default"].error('Unhandled video io device error', error);
  }

  /**
   * Create a video stream.
   * @private
   * @return {Promise} When video has been received, rejected if video is not received
   */
  _setupVideo() {
    // We cache the result of this setup so that we can only ever have a single
    // video/getUserMedia request happen at a time.
    if (this._singleSetup) {
      return this._singleSetup;
    }
    this._singleSetup = requestVideoStream({
      width: {
        min: 480,
        ideal: 640
      },
      height: {
        min: 360,
        ideal: 480
      }
    }).then(stream => {
      this._video = document.createElement('video');

      // Use the new srcObject API, falling back to createObjectURL
      try {
        this._video.srcObject = stream;
      } catch (error) {
        this._video.src = window.URL.createObjectURL(stream);
      }
      // Hint to the stream that it should load. A standard way to do this
      // is add the video tag to the DOM. Since this extension wants to
      // hide the video tag and instead render a sample of the stream into
      // the webgl rendered Scratch canvas, another hint like this one is
      // needed.
      this._video.play(); // Needed for Safari/Firefox, Chrome auto-plays.
      this._track = stream.getTracks()[0];
      return this;
    }).catch(error => {
      this._singleSetup = null;
      this.onError(error);
    });
    return this._singleSetup;
  }
  get videoReady() {
    if (!this.enabled) {
      return false;
    }
    if (!this._video) {
      return false;
    }
    if (!this._track) {
      return false;
    }
    const {
      videoWidth,
      videoHeight
    } = this._video;
    if (typeof videoWidth !== 'number' || typeof videoHeight !== 'number') {
      return false;
    }
    if (videoWidth === 0 || videoHeight === 0) {
      return false;
    }
    return true;
  }

  /**
   * get an internal workspace for canvas/context/caches
   * this uses some document stuff to create a canvas and what not, probably needs abstraction
   * into the renderer layer?
   * @private
   * @return {object} A workspace for canvas/data storage.  Internal format not documented intentionally
   */
  _getWorkspace(_ref2) {
    let {
      dimensions,
      mirror
    } = _ref2;
    let workspace = this._workspace.find(space => space.dimensions.join('-') === dimensions.join('-') && space.mirror === mirror);
    if (!workspace) {
      workspace = {
        dimensions,
        mirror,
        canvas: document.createElement('canvas'),
        lastUpdate: 0,
        cacheData: {}
      };
      workspace.canvas.width = dimensions[0];
      workspace.canvas.height = dimensions[1];
      workspace.context = workspace.canvas.getContext('2d');
      this._workspace.push(workspace);
    }
    return workspace;
  }
}
/* harmony default export */ var video_provider = (video_provider_VideoProvider);
// EXTERNAL MODULE: ./src/containers/dom-element-renderer.jsx
var dom_element_renderer = __webpack_require__(141);

// EXTERNAL MODULE: ./src/components/loupe/loupe.css
var loupe = __webpack_require__(852);
var loupe_default = /*#__PURE__*/__webpack_require__.n(loupe);

// CONCATENATED MODULE: ./src/components/loupe/loupe.jsx
const loupe_excluded = ["colorInfo"];
function loupe_extends() { loupe_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return loupe_extends.apply(this, arguments); }
function loupe_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = loupe_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function loupe_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const zoomScale = 3;
class loupe_LoupeComponent extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['setCanvas']);
  }
  componentDidUpdate() {
    this.draw();
  }
  draw() {
    const boxSize = 6 / zoomScale;
    const boxLineWidth = 1 / zoomScale;
    const colorRingWidth = 15 / zoomScale;
    const ctx = this.canvas.getContext('2d');
    const {
      color,
      data,
      width,
      height
    } = this.props.colorInfo;
    this.canvas.width = zoomScale * width;
    this.canvas.height = zoomScale * height;

    // In order to scale the image data, must draw to a tmp canvas first
    const tmpCanvas = document.createElement('canvas');
    tmpCanvas.width = width;
    tmpCanvas.height = height;
    const tmpCtx = tmpCanvas.getContext('2d');
    const imageData = tmpCtx.createImageData(width, height);
    imageData.data.set(data);
    tmpCtx.putImageData(imageData, 0, 0);

    // Scale the loupe canvas and draw the zoomed image
    ctx.save();
    ctx.scale(zoomScale, zoomScale);
    ctx.drawImage(tmpCanvas, 0, 0, width, height);

    // Draw an outlined square at the cursor position (cursor is hidden)
    ctx.lineWidth = boxLineWidth;
    ctx.strokeStyle = 'black';
    ctx.fillStyle = "rgba(".concat(color.r, ", ").concat(color.g, ", ").concat(color.b, ", ").concat(color.a, ")");
    ctx.beginPath();
    ctx.rect(width / 2 - boxSize / 2, height / 2 - boxSize / 2, boxSize, boxSize);
    ctx.fill();
    ctx.stroke();

    // Draw a thick ring around the loupe showing the current color
    ctx.strokeStyle = "rgba(".concat(color.r, ", ").concat(color.g, ", ").concat(color.b, ", ").concat(color.a, ")");
    ctx.lineWidth = colorRingWidth;
    ctx.beginPath();
    ctx.moveTo(width, height / 2);
    ctx.arc(width / 2, height / 2, width / 2, 0, 2 * Math.PI);
    ctx.stroke();
    ctx.restore();
  }
  setCanvas(element) {
    this.canvas = element;
  }
  render() {
    const _this$props = this.props,
      {
        colorInfo
      } = _this$props,
      boxProps = loupe_objectWithoutProperties(_this$props, loupe_excluded);
    const x = colorInfo.x - zoomScale * colorInfo.width / 2;
    const y = colorInfo.y - zoomScale * colorInfo.height / 2;
    return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], loupe_extends({}, boxProps, {
      className: loupe_default.a.colorPicker,
      componentRef: this.setCanvas,
      element: "canvas",
      height: colorInfo.height,
      style: {
        transform: "translate(".concat(x, "px, ").concat(y, "px)"),
        width: colorInfo.width * zoomScale,
        height: colorInfo.height * zoomScale
      },
      width: colorInfo.width
    }));
  }
}
loupe_LoupeComponent.propTypes = {
  colorInfo: prop_types_default.a.shape({
    color: prop_types_default.a.shape({
      r: prop_types_default.a.number,
      g: prop_types_default.a.number,
      b: prop_types_default.a.number,
      a: prop_types_default.a.number
    }),
    data: prop_types_default.a.instanceOf(Uint8Array),
    width: prop_types_default.a.number,
    height: prop_types_default.a.number,
    x: prop_types_default.a.number,
    y: prop_types_default.a.number
  })
};
/* harmony default export */ var loupe_loupe = (loupe_LoupeComponent);
// EXTERNAL MODULE: ./src/reducers/monitor-layout.js
var monitor_layout = __webpack_require__(119);

// CONCATENATED MODULE: ./src/lib/opcode-labels.js

const opcode_labels_messages = Object(index_es["d" /* defineMessages */])({
  motion_direction: {
    "id": "gui.opcodeLabels.direction",
    "defaultMessage": "direction"
  },
  motion_xposition: {
    "id": "gui.opcodeLabels.xposition",
    "defaultMessage": "x position"
  },
  motion_yposition: {
    "id": "gui.opcodeLabels.yposition",
    "defaultMessage": "y position"
  },
  // Looks
  looks_size: {
    "id": "gui.opcodeLabels.size",
    "defaultMessage": "size"
  },
  looks_costumename: {
    "id": "gui.opcodeLabels.costumename",
    "defaultMessage": "costume name"
  },
  looks_costumenumber: {
    "id": "gui.opcodeLabels.costumenumber",
    "defaultMessage": "costume number"
  },
  looks_backdropname: {
    "id": "gui.opcodeLabels.backdropname",
    "defaultMessage": "backdrop name"
  },
  looks_backdropnumber: {
    "id": "gui.opcodeLabels.backdropnumber",
    "defaultMessage": "backdrop number"
  },
  // Sound
  sound_volume: {
    "id": "gui.opcodeLabels.volume",
    "defaultMessage": "volume"
  },
  sound_tempo: {
    "id": "gui.opcodeLabels.tempo",
    "defaultMessage": "tempo"
  },
  // Sensing
  sensing_answer: {
    "id": "gui.opcodeLabels.answer",
    "defaultMessage": "answer"
  },
  sensing_loudness: {
    "id": "gui.opcodeLabels.loudness",
    "defaultMessage": "loudness"
  },
  sensing_username: {
    "id": "gui.opcodeLabels.username",
    "defaultMessage": "username"
  },
  sensing_current_year: {
    "id": "gui.opcodeLabels.year",
    "defaultMessage": "year"
  },
  sensing_current_month: {
    "id": "gui.opcodeLabels.month",
    "defaultMessage": "month"
  },
  sensing_current_date: {
    "id": "gui.opcodeLabels.date",
    "defaultMessage": "date"
  },
  sensing_current_dayofweek: {
    "id": "gui.opcodeLabels.dayofweek",
    "defaultMessage": "day of week"
  },
  sensing_current_hour: {
    "id": "gui.opcodeLabels.hour",
    "defaultMessage": "hour"
  },
  sensing_current_minute: {
    "id": "gui.opcodeLabels.minute",
    "defaultMessage": "minute"
  },
  sensing_current_second: {
    "id": "gui.opcodeLabels.second",
    "defaultMessage": "second"
  },
  sensing_timer: {
    "id": "gui.opcodeLabels.timer",
    "defaultMessage": "timer"
  }
});
class OpcodeLabels {
  constructor() {
    /**
     * Translation function for labels. By default just return the defaultMessage
     * @private
     * @param {object} message A message object compatible with react-intl formatMessage
     * @return {string} Return the default string initially
     */
    this._translator = message => message.defaultMessage;

    /**
     * Initial opcode map, with categories defined
     * @private
     */
    this._opcodeMap = {
      // Motion
      motion_direction: {
        category: 'motion'
      },
      motion_xposition: {
        category: 'motion'
      },
      motion_yposition: {
        category: 'motion'
      },
      // Looks
      looks_size: {
        category: 'looks'
      },
      looks_costumenumbername: {
        category: 'looks'
      },
      looks_backdropnumbername: {
        category: 'looks'
      },
      looks_backdropname: {
        category: 'looks'
      },
      // Data
      data_variable: {
        category: 'data'
      },
      data_listcontents: {
        category: 'list'
      },
      // Sound
      sound_volume: {
        category: 'sound'
      },
      sound_tempo: {
        category: 'sound'
      },
      // Sensing
      sensing_answer: {
        category: 'sensing'
      },
      sensing_loudness: {
        category: 'sensing'
      },
      sensing_username: {
        category: 'sensing'
      },
      sensing_current: {
        category: 'sensing'
      },
      sensing_timer: {
        category: 'sensing'
      }
    };

    // Initialize opcodeMap with default strings
    this._refreshOpcodeMap();
  }

  /**
   * Set the translation function for monitor labels. The function should accept
   * a message object as defined by react-intl defineMessages
   * @param {function} translator the function to use for localization
   */
  setTranslatorFunction(translator) {
    this._translator = translator;
    this._refreshOpcodeMap();
  }

  /**
   * Internal function to update opcode Map when translation function is defined
   * @private
   */
  _refreshOpcodeMap() {
    // Motion
    this._opcodeMap.motion_direction.labelFn = () => this._translator(opcode_labels_messages.motion_direction);
    this._opcodeMap.motion_xposition.labelFn = () => this._translator(opcode_labels_messages.motion_xposition);
    this._opcodeMap.motion_yposition.labelFn = () => this._translator(opcode_labels_messages.motion_yposition);

    // Looks
    this._opcodeMap.looks_size.labelFn = () => this._translator(opcode_labels_messages.looks_size);
    this._opcodeMap.looks_costumenumbername.labelFn = params => {
      if (params.NUMBER_NAME === 'number') {
        return this._translator(opcode_labels_messages.looks_costumenumber);
      }
      return this._translator(opcode_labels_messages.looks_costumename);
    };
    this._opcodeMap.looks_backdropnumbername.labelFn = params => {
      if (params.NUMBER_NAME === 'number') {
        return this._translator(opcode_labels_messages.looks_backdropnumber);
      }
      return this._translator(opcode_labels_messages.looks_backdropname);
    };
    this._opcodeMap.looks_backdropname.labelFn = () => this._translator(opcode_labels_messages.looks_backdropname);

    // Data
    this._opcodeMap.data_variable.labelFn = params => params.VARIABLE;
    this._opcodeMap.data_listcontents.labelFn = params => params.LIST;

    // Sound
    this._opcodeMap.sound_volume.labelFn = () => this._translator(opcode_labels_messages.sound_volume);
    this._opcodeMap.sound_tempo.labelFn = () => this._translator(opcode_labels_messages.sound_tempo);

    // Sensing
    this._opcodeMap.sensing_answer.labelFn = () => this._translator(opcode_labels_messages.sensing_answer);
    this._opcodeMap.sensing_loudness.labelFn = () => this._translator(opcode_labels_messages.sensing_loudness);
    this._opcodeMap.sensing_username.labelFn = () => this._translator(opcode_labels_messages.sensing_username);
    this._opcodeMap.sensing_current.labelFn = params => {
      switch (params.CURRENTMENU.toLowerCase()) {
        case 'year':
          return this._translator(opcode_labels_messages.sensing_current_year);
        case 'month':
          return this._translator(opcode_labels_messages.sensing_current_month);
        case 'date':
          return this._translator(opcode_labels_messages.sensing_current_date);
        case 'dayofweek':
          return this._translator(opcode_labels_messages.sensing_current_dayofweek);
        case 'hour':
          return this._translator(opcode_labels_messages.sensing_current_hour);
        case 'minute':
          return this._translator(opcode_labels_messages.sensing_current_minute);
        case 'second':
          return this._translator(opcode_labels_messages.sensing_current_second);
      }
    };
    this._opcodeMap.sensing_timer.labelFn = () => this._translator(opcode_labels_messages.sensing_timer);
  }

  /**
   * Return the label for an opcode
   * @param {string} opcode the opcode you want a label for
   * @return {object} object with  label and category
   */
  getLabel(opcode) {
    if (opcode in this._opcodeMap) return this._opcodeMap[opcode];
    return {
      category: 'extension',
      label: opcode
    };
  }
}
/* harmony default export */ var opcode_labels = (new OpcodeLabels());
// CONCATENATED MODULE: ./src/lib/monitor-adapter.js

const isUndefined = a => typeof a === 'undefined';

/**
 * Convert monitors from VM format to what the GUI needs to render.
 * - Convert opcode to a label and a category
 * @param {string} block.id - The id of the monitor block
 * @param {string} block.spriteName - Present only if the monitor applies only to the sprite
 *     with given target ID. The name of the target sprite when the monitor was created
 * @param {string} block.opcode - The opcode of the monitor
 * @param {object} block.params - Extra params to the monitor block
 * @param {string|number|Array} block.value - The monitor value
 * @param {VirtualMachine} block.vm - the VM instance which owns the block
 * @return {object} The adapted monitor with label and category
 */
/* harmony default export */ var monitor_adapter = (function (_ref) {
  let {
    id,
    spriteName,
    opcode,
    params,
    value,
    vm
  } = _ref;
  // Extension monitors get their labels from the Runtime through `getLabelForOpcode`.
  // Other monitors' labels are hard-coded in `OpcodeLabels`.
  let {
    label,
    category,
    labelFn
  } = vm && vm.runtime.getLabelForOpcode(opcode) || opcode_labels.getLabel(opcode);

  // Use labelFn if provided for dynamic labelling (e.g. variables)
  if (!isUndefined(labelFn)) label = labelFn(params);

  // Append sprite name for sprite-specific monitors
  if (spriteName) {
    label = "".concat(spriteName, ": ").concat(label);
  }

  // If value is a number, round it to six decimal places
  if (typeof value === 'number') {
    value = Number(value.toFixed(6));
  }

  // Turn the value to a string, for handle boolean values
  if (typeof value === 'boolean') {
    value = value.toString();
  }

  // Lists can contain booleans, which should also be turned to strings
  if (Array.isArray(value)) {
    value = value.slice();
    for (let i = 0; i < value.length; i++) {
      const item = value[i];
      if (typeof item === 'boolean') {
        value[i] = item.toString();
      }
    }
  }
  return {
    id,
    label,
    category,
    value
  };
});
// EXTERNAL MODULE: ./node_modules/react-draggable/dist/react-draggable.js
var react_draggable = __webpack_require__(356);
var react_draggable_default = /*#__PURE__*/__webpack_require__.n(react_draggable);

// EXTERNAL MODULE: ./src/components/monitor/monitor.css
var monitor = __webpack_require__(38);
var monitor_default = /*#__PURE__*/__webpack_require__.n(monitor);

// CONCATENATED MODULE: ./src/components/monitor/default-monitor.jsx



const DefaultMonitor = _ref => {
  let {
    categoryColor,
    label,
    value
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.defaultMonitor
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.row
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.label
  }, label), /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.value,
    style: {
      background: categoryColor
    }
  }, value)));
};
DefaultMonitor.propTypes = {
  categoryColor: prop_types_default.a.string.isRequired,
  label: prop_types_default.a.string.isRequired,
  value: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])
};
/* harmony default export */ var default_monitor = (DefaultMonitor);
// CONCATENATED MODULE: ./src/components/monitor/large-monitor.jsx



const LargeMonitor = _ref => {
  let {
    categoryColor,
    value
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.largeMonitor
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.largeValue,
    style: {
      background: categoryColor
    }
  }, value));
};
LargeMonitor.propTypes = {
  categoryColor: prop_types_default.a.string,
  value: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])
};
/* harmony default export */ var large_monitor = (LargeMonitor);
// CONCATENATED MODULE: ./src/lib/variable-utils.js
// Utility functions for updating variables in the VM
// TODO (VM#1145) these should be moved to top-level VM API
const getVariable = (vm, targetId, variableId) => {
  const target = targetId ? vm.runtime.getTargetById(targetId) : vm.runtime.getTargetForStage();
  return target.variables[variableId];
};
const getVariableValue = (vm, targetId, variableId) => {
  const variable = getVariable(vm, targetId, variableId);
  // If array, return a new copy for mutating, ensuring that updates stay immutable.
  if (variable.value instanceof Array) return variable.value.slice();
  return variable.value;
};
const setVariableValue = (vm, targetId, variableId, value) => {
  getVariable(vm, targetId, variableId).value = value;
};

// CONCATENATED MODULE: ./src/components/monitor/slider-monitor.jsx




const slider_monitor_SliderMonitor = _ref => {
  let {
    categoryColor,
    isDiscrete,
    label,
    min,
    max,
    value,
    onSliderUpdate
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.defaultMonitor
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.row
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.label
  }, label), /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.value,
    style: {
      background: categoryColor
    }
  }, value)), /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.row
  }, /*#__PURE__*/react_default.a.createElement("input", {
    className: classnames_default()(monitor_default.a.slider, 'no-drag') // Class used on parent Draggable to prevent drags
    ,
    max: max,
    min: min,
    step: isDiscrete ? 1 : 0.01,
    type: "range",
    value: value,
    onChange: onSliderUpdate
  })));
};
slider_monitor_SliderMonitor.propTypes = {
  categoryColor: prop_types_default.a.string.isRequired,
  isDiscrete: prop_types_default.a.bool,
  label: prop_types_default.a.string.isRequired,
  max: prop_types_default.a.number,
  min: prop_types_default.a.number,
  onSliderUpdate: prop_types_default.a.func.isRequired,
  value: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])
};
slider_monitor_SliderMonitor.defaultProps = {
  isDiscrete: true,
  min: 0,
  max: 100
};
/* harmony default export */ var slider_monitor = (slider_monitor_SliderMonitor);
// CONCATENATED MODULE: ./src/containers/slider-monitor.jsx
const slider_monitor_excluded = ["vm", "value"];
function slider_monitor_extends() { slider_monitor_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return slider_monitor_extends.apply(this, arguments); }
function slider_monitor_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = slider_monitor_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function slider_monitor_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







class containers_slider_monitor_SliderMonitor extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleSliderUpdate']);
    this.state = {
      value: props.value
    };
  }
  componentWillReceiveProps(nextProps) {
    if (this.state.value !== nextProps.value) {
      this.setState({
        value: nextProps.value
      });
    }
  }
  handleSliderUpdate(e) {
    this.setState({
      value: Number(e.target.value)
    });
    const {
      vm,
      targetId,
      id: variableId
    } = this.props;
    setVariableValue(vm, targetId, variableId, Number(e.target.value));
  }
  render() {
    const _this$props = this.props,
      {
        vm,
        // eslint-disable-line no-unused-vars
        value // eslint-disable-line no-unused-vars
      } = _this$props,
      props = slider_monitor_objectWithoutProperties(_this$props, slider_monitor_excluded);
    return /*#__PURE__*/react_default.a.createElement(slider_monitor, slider_monitor_extends({}, props, {
      value: this.state.value,
      onSliderUpdate: this.handleSliderUpdate
    }));
  }
}
containers_slider_monitor_SliderMonitor.propTypes = {
  id: prop_types_default.a.string,
  targetId: prop_types_default.a.string,
  value: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const slider_monitor_mapStateToProps = state => ({
  vm: state.scratchGui.vm
});
/* harmony default export */ var containers_slider_monitor = (Object(react_redux_es["b" /* connect */])(slider_monitor_mapStateToProps)(containers_slider_monitor_SliderMonitor));
// EXTERNAL MODULE: ./node_modules/react-virtualized/dist/es/index.js + 65 modules
var dist_es = __webpack_require__(892);

// CONCATENATED MODULE: ./src/components/monitor/list-monitor-scroller.jsx







class list_monitor_scroller_ListMonitorScroller extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['rowRenderer', 'noRowsRenderer', 'handleEventFactory']);
  }
  handleEventFactory(index) {
    return () => this.props.onActivate(index);
  }
  noRowsRenderer() {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(monitor_default.a.listRow, monitor_default.a.listEmpty)
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "(empty)",
      id: "gui.monitor.listMonitor.empty"
    }));
  }
  rowRenderer(_ref) {
    let {
      index,
      key,
      style
    } = _ref;
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: monitor_default.a.listRow,
      key: key,
      style: style
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: monitor_default.a.listIndex
    }, index + 1 /* one indexed */), /*#__PURE__*/react_default.a.createElement("div", {
      className: monitor_default.a.listValue,
      dataIndex: index,
      style: {
        background: this.props.categoryColor
      },
      onClick: this.props.draggable ? this.handleEventFactory(index) : null
    }, this.props.draggable && this.props.activeIndex === index ? /*#__PURE__*/react_default.a.createElement("div", {
      className: monitor_default.a.inputWrapper
    }, /*#__PURE__*/react_default.a.createElement("input", {
      autoFocus: true,
      autoComplete: false,
      className: classnames_default()(monitor_default.a.listInput, 'no-drag'),
      spellCheck: false,
      type: "text",
      value: this.props.activeValue,
      onBlur: this.props.onDeactivate,
      onChange: this.props.onInput,
      onFocus: this.props.onFocus,
      onKeyDown: this.props.onKeyPress // key down to get ahead of blur
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: monitor_default.a.removeButton,
      onMouseDown: this.props.onRemove // mousedown to get ahead of blur
    }, '✖︎')) : /*#__PURE__*/react_default.a.createElement("div", {
      className: monitor_default.a.valueInner
    }, this.props.values[index])));
  }
  render() {
    const {
      height,
      values,
      width,
      activeIndex,
      activeValue
    } = this.props;
    // Keep the active index in view if defined, else must be undefined for List component
    const scrollToIndex = activeIndex === null ? undefined : activeIndex; /* eslint-disable-line no-undefined */
    return /*#__PURE__*/react_default.a.createElement(dist_es["a" /* List */], {
      activeIndex: activeIndex,
      activeValue: activeValue,
      height: height - 44 /* Header/footer size, approx */,
      noRowsRenderer: this.noRowsRenderer,
      rowCount: values.length,
      rowHeight: 24 /* Row size is same for all rows */,
      rowRenderer: this.rowRenderer,
      scrollToIndex: scrollToIndex /* eslint-disable-line no-undefined */,
      values: values,
      width: width
    });
  }
}
list_monitor_scroller_ListMonitorScroller.propTypes = {
  activeIndex: prop_types_default.a.number,
  activeValue: prop_types_default.a.string,
  categoryColor: prop_types_default.a.string,
  draggable: prop_types_default.a.bool,
  height: prop_types_default.a.number,
  onActivate: prop_types_default.a.func,
  onDeactivate: prop_types_default.a.func,
  onFocus: prop_types_default.a.func,
  onInput: prop_types_default.a.func,
  onKeyPress: prop_types_default.a.func,
  onRemove: prop_types_default.a.func,
  values: prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])),
  width: prop_types_default.a.number
};
/* harmony default export */ var list_monitor_scroller = (list_monitor_scroller_ListMonitorScroller);
// CONCATENATED MODULE: ./src/components/monitor/list-monitor.jsx
const list_monitor_excluded = ["draggable", "label", "width", "height", "value", "onResizeMouseDown", "onAdd"];
function list_monitor_extends() { list_monitor_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return list_monitor_extends.apply(this, arguments); }
function list_monitor_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = list_monitor_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function list_monitor_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const list_monitor_ListMonitor = _ref => {
  let {
      draggable,
      label,
      width,
      height,
      value,
      onResizeMouseDown,
      onAdd
    } = _ref,
    rowProps = list_monitor_objectWithoutProperties(_ref, list_monitor_excluded);
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.listMonitor,
    style: {
      width: "".concat(width, "px"),
      height: "".concat(height, "px")
    }
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.listHeader
  }, label), /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.listBody
  }, /*#__PURE__*/react_default.a.createElement(list_monitor_scroller, list_monitor_extends({
    draggable: draggable,
    height: height,
    values: value,
    width: width
  }, rowProps))), /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.listFooter
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(draggable ? monitor_default.a.addButton : null, 'no-drag'),
    onClick: draggable ? onAdd : null
  }, '+' /* TODO waiting on asset */), /*#__PURE__*/react_default.a.createElement("div", {
    className: monitor_default.a.footerLength
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "length {length}",
    id: "gui.monitor.listMonitor.listLength",
    values: {
      length: value.length
    }
  })), /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(draggable ? monitor_default.a.resizeHandle : null, 'no-drag'),
    onMouseDown: draggable ? onResizeMouseDown : null
  }, '=' /* TODO waiting on asset */)));
};

list_monitor_ListMonitor.propTypes = {
  activeIndex: prop_types_default.a.number,
  categoryColor: prop_types_default.a.string.isRequired,
  draggable: prop_types_default.a.bool.isRequired,
  height: prop_types_default.a.number,
  label: prop_types_default.a.string.isRequired,
  onActivate: prop_types_default.a.func,
  onAdd: prop_types_default.a.func,
  onResizeMouseDown: prop_types_default.a.func,
  value: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number, prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]))]),
  width: prop_types_default.a.number
};
list_monitor_ListMonitor.defaultProps = {
  width: 110,
  height: 200
};
/* harmony default export */ var list_monitor = (list_monitor_ListMonitor);
// EXTERNAL MODULE: ./node_modules/immutable/dist/immutable.js
var immutable = __webpack_require__(85);

// CONCATENATED MODULE: ./src/containers/list-monitor.jsx
const containers_list_monitor_excluded = ["vm"];
function containers_list_monitor_extends() { containers_list_monitor_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_list_monitor_extends.apply(this, arguments); }
function containers_list_monitor_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = containers_list_monitor_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function containers_list_monitor_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }









class containers_list_monitor_ListMonitor extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleActivate', 'handleDeactivate', 'handleInput', 'handleRemove', 'handleKeyPress', 'handleFocus', 'handleAdd', 'handleResizeMouseDown']);
    this.state = {
      activeIndex: null,
      activeValue: null,
      width: props.width || 100,
      height: props.height || 200
    };
  }
  handleActivate(index) {
    // Do nothing if activating the currently active item
    if (this.state.activeIndex === index) {
      return;
    }
    this.setState({
      activeIndex: index,
      activeValue: this.props.value[index]
    });
  }
  handleDeactivate() {
    // Submit any in-progress value edits on blur
    if (this.state.activeIndex !== null) {
      const {
        vm,
        targetId,
        id: variableId
      } = this.props;
      const newListValue = getVariableValue(vm, targetId, variableId);
      newListValue[this.state.activeIndex] = this.state.activeValue;
      setVariableValue(vm, targetId, variableId, newListValue);
      this.setState({
        activeIndex: null,
        activeValue: null
      });
    }
  }
  handleFocus(e) {
    // Select all the text in the input when it is focused.
    e.target.select();
  }
  handleKeyPress(e) {
    // Special case for tab, arrow keys and enter.
    // Tab / shift+tab navigate down / up the list.
    // Arrow down / arrow up navigate down / up the list.
    // Enter / shift+enter insert new blank item below / above.
    const previouslyActiveIndex = this.state.activeIndex;
    const {
      vm,
      targetId,
      id: variableId
    } = this.props;
    let navigateDirection = 0;
    if (e.key === 'Tab') navigateDirection = e.shiftKey ? -1 : 1;else if (e.key === 'ArrowUp') navigateDirection = -1;else if (e.key === 'ArrowDown') navigateDirection = 1;
    if (navigateDirection) {
      this.handleDeactivate(); // Submit in-progress edits
      const newIndex = this.wrapListIndex(previouslyActiveIndex + navigateDirection, this.props.value.length);
      this.setState({
        activeIndex: newIndex,
        activeValue: this.props.value[newIndex]
      });
      e.preventDefault(); // Stop default tab behavior, handled by this state change
    } else if (e.key === 'Enter') {
      this.handleDeactivate(); // Submit in-progress edits
      const newListItemValue = ''; // Enter adds a blank item
      const newValueOffset = e.shiftKey ? 0 : 1; // Shift-enter inserts above
      const listValue = getVariableValue(vm, targetId, variableId);
      const newListValue = listValue.slice(0, previouslyActiveIndex + newValueOffset).concat([newListItemValue]).concat(listValue.slice(previouslyActiveIndex + newValueOffset));
      setVariableValue(vm, targetId, variableId, newListValue);
      const newIndex = this.wrapListIndex(previouslyActiveIndex + newValueOffset, newListValue.length);
      this.setState({
        activeIndex: newIndex,
        activeValue: newListItemValue
      });
    }
  }
  handleInput(e) {
    this.setState({
      activeValue: e.target.value
    });
  }
  handleRemove(e) {
    e.preventDefault(); // Default would blur input, prevent that.
    e.stopPropagation(); // Bubbling would activate, which will be handled here
    const {
      vm,
      targetId,
      id: variableId
    } = this.props;
    const listValue = getVariableValue(vm, targetId, variableId);
    const newListValue = listValue.slice(0, this.state.activeIndex).concat(listValue.slice(this.state.activeIndex + 1));
    setVariableValue(vm, targetId, variableId, newListValue);
    const newActiveIndex = Math.min(newListValue.length - 1, this.state.activeIndex);
    this.setState({
      activeIndex: newActiveIndex,
      activeValue: newListValue[newActiveIndex]
    });
  }
  handleAdd() {
    // Add button appends a blank value and switches to it
    const {
      vm,
      targetId,
      id: variableId
    } = this.props;
    const newListValue = getVariableValue(vm, targetId, variableId).concat(['']);
    setVariableValue(vm, targetId, variableId, newListValue);
    this.setState({
      activeIndex: newListValue.length - 1,
      activeValue: ''
    });
  }
  handleResizeMouseDown(e) {
    this.initialPosition = getEventXY(e);
    this.initialWidth = this.state.width;
    this.initialHeight = this.state.height;
    const onMouseMove = ev => {
      const newPosition = getEventXY(ev);
      const dx = newPosition.x - this.initialPosition.x;
      const dy = newPosition.y - this.initialPosition.y;
      this.setState({
        width: Math.max(Math.min(this.initialWidth + dx, this.props.customStageSize.width), 100),
        height: Math.max(Math.min(this.initialHeight + dy, this.props.customStageSize.height), 60)
      });
    };
    const onMouseUp = ev => {
      onMouseMove(ev); // Make sure width/height are up-to-date
      window.removeEventListener('mousemove', onMouseMove);
      window.removeEventListener('mouseup', onMouseUp);
      this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
        id: this.props.id,
        height: this.state.height,
        width: this.state.width
      }));
    };
    window.addEventListener('mousemove', onMouseMove);
    window.addEventListener('mouseup', onMouseUp);
  }
  wrapListIndex(index, length) {
    return (index + length) % length;
  }
  render() {
    const _this$props = this.props,
      {
        vm // eslint-disable-line no-unused-vars
      } = _this$props,
      props = containers_list_monitor_objectWithoutProperties(_this$props, containers_list_monitor_excluded);
    return /*#__PURE__*/react_default.a.createElement(list_monitor, containers_list_monitor_extends({}, props, {
      activeIndex: this.state.activeIndex,
      activeValue: this.state.activeValue,
      height: this.state.height,
      width: this.state.width,
      onActivate: this.handleActivate,
      onAdd: this.handleAdd,
      onDeactivate: this.handleDeactivate,
      onFocus: this.handleFocus,
      onInput: this.handleInput,
      onKeyPress: this.handleKeyPress,
      onRemove: this.handleRemove,
      onResizeMouseDown: this.handleResizeMouseDown
    }));
  }
}
containers_list_monitor_ListMonitor.propTypes = {
  height: prop_types_default.a.number,
  id: prop_types_default.a.string,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number
  }),
  targetId: prop_types_default.a.string,
  value: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),
  vm: prop_types_default.a.instanceOf(src_default.a),
  width: prop_types_default.a.number,
  x: prop_types_default.a.number,
  y: prop_types_default.a.number
};
const list_monitor_mapStateToProps = state => ({
  customStageSize: state.scratchGui.customStageSize,
  vm: state.scratchGui.vm
});
/* harmony default export */ var containers_list_monitor = (Object(react_redux_es["b" /* connect */])(list_monitor_mapStateToProps)(containers_list_monitor_ListMonitor));
// CONCATENATED MODULE: ./src/components/monitor/monitor.jsx
function monitor_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function monitor_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? monitor_ownKeys(Object(t), !0).forEach(function (r) { monitor_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : monitor_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function monitor_defineProperty(obj, key, value) { key = monitor_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function monitor_toPropertyKey(arg) { var key = monitor_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function monitor_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }













const categories = {
  data: '#FF8C1A',
  sensing: '#5CB1D6',
  sound: '#CF63CF',
  looks: '#9966FF',
  motion: '#4C97FF',
  list: '#FC662C',
  extension: '#0FBD8C'
};
const monitor_modes = {
  default: default_monitor,
  large: large_monitor,
  slider: containers_slider_monitor,
  list: containers_list_monitor
};
const MonitorComponent = props => /*#__PURE__*/react_default.a.createElement(es6["b" /* ContextMenuTrigger */], {
  disable: !props.draggable && !props.onExport,
  holdToDisplay: props.mode === 'slider' ? -1 : 1000,
  id: "monitor-".concat(props.label)
}, /*#__PURE__*/react_default.a.createElement(react_draggable_default.a, {
  bounds: ".monitor-overlay" // Class for monitor container
  ,
  cancel: ".no-drag" // Class used for slider input to prevent drag
  ,
  defaultClassNameDragging: monitor_default.a.dragging,
  disabled: !props.draggable,
  onStop: props.onDragEnd
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: monitor_default.a.monitorContainer,
  componentRef: props.componentRef,
  onDoubleClick: props.mode === 'list' || !props.draggable ? null : props.onNextMode
}, /*#__PURE__*/react_default.a.createElement(monitor_modes[props.mode], monitor_objectSpread({
  categoryColor: categories[props.category]
}, props)))), /*#__PURE__*/react_dom_default.a.createPortal(
/*#__PURE__*/
// Use a portal to render the context menu outside the flow to avoid
// positioning conflicts between the monitors `transform: scale` and
// the context menus `position: fixed`. For more details, see
// http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/
react_default.a.createElement(StyledContextMenu, {
  id: "monitor-".concat(props.label)
}, props.onSetModeToDefault && /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onSetModeToDefault
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "normal readout",
  id: "gui.monitor.contextMenu.default"
})), props.onSetModeToLarge && /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onSetModeToLarge
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "large readout",
  id: "gui.monitor.contextMenu.large"
})), props.onSetModeToSlider && /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onSetModeToSlider
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "slider",
  id: "gui.monitor.contextMenu.slider"
})), props.onSliderPromptOpen && props.mode === 'slider' && /*#__PURE__*/react_default.a.createElement(BorderedMenuItem, {
  onClick: props.onSliderPromptOpen
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "change slider range",
  id: "gui.monitor.contextMenu.sliderRange"
})), props.onImport && /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onImport
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "import",
  id: "gui.monitor.contextMenu.import"
})), props.onExport && /*#__PURE__*/react_default.a.createElement(StyledMenuItem, {
  onClick: props.onExport
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "export",
  id: "gui.monitor.contextMenu.export"
})), props.onHide && /*#__PURE__*/react_default.a.createElement(BorderedMenuItem, {
  onClick: props.onHide
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "hide",
  id: "gui.monitor.contextMenu.hide"
}))), document.body));
MonitorComponent.categories = categories;
const monitorModes = Object.keys(monitor_modes);
MonitorComponent.propTypes = {
  category: prop_types_default.a.oneOf(Object.keys(categories)),
  componentRef: prop_types_default.a.func.isRequired,
  draggable: prop_types_default.a.bool.isRequired,
  label: prop_types_default.a.string.isRequired,
  mode: prop_types_default.a.oneOf(monitorModes),
  onDragEnd: prop_types_default.a.func.isRequired,
  onExport: prop_types_default.a.func,
  onImport: prop_types_default.a.func,
  onHide: prop_types_default.a.func,
  onNextMode: prop_types_default.a.func.isRequired,
  onSetModeToDefault: prop_types_default.a.func,
  onSetModeToLarge: prop_types_default.a.func,
  onSetModeToSlider: prop_types_default.a.func,
  onSliderPromptOpen: prop_types_default.a.func
};
MonitorComponent.defaultProps = {
  category: 'extension',
  mode: 'default'
};

// EXTERNAL MODULE: ./node_modules/papaparse/papaparse.min.js
var papaparse_min = __webpack_require__(856);
var papaparse_min_default = /*#__PURE__*/__webpack_require__.n(papaparse_min);

// CONCATENATED MODULE: ./src/lib/import-csv.js

/* harmony default export */ var import_csv = (() => new Promise((resolve, reject) => {
  const fileInput = document.createElement('input');
  fileInput.setAttribute('type', 'file');
  fileInput.setAttribute('accept', '.csv, .tsv, .txt'); // parser auto-detects delimiter
  fileInput.onchange = e => {
    const file = e.target.files[0];
    const fr = new FileReader();
    fr.onload = () => {
      document.body.removeChild(fileInput);
      const text = fr.result;
      papaparse_min_default.a.parse(text, {
        header: false,
        complete: results => {
          resolve({
            rows: results.data,
            text
          });
        },
        error: err => {
          reject(err);
        }
      });
    };
    fr.onerror = () => {
      document.body.removeChild(fileInput);
      reject(new Error('Cannot read file'));
    };
    fr.readAsText(file);
  };
  document.body.appendChild(fileInput);
  fileInput.click();
}));
// EXTERNAL MODULE: ./src/components/slider-prompt/slider-prompt.css
var slider_prompt = __webpack_require__(132);
var slider_prompt_default = /*#__PURE__*/__webpack_require__.n(slider_prompt);

// CONCATENATED MODULE: ./src/components/slider-prompt/slider-prompt.jsx






const slider_prompt_messages = Object(index_es["d" /* defineMessages */])({
  minValue: {
    "id": "gui.sliderModal.min",
    "defaultMessage": "Lowest value"
  },
  maxValue: {
    "id": "gui.sliderModal.max",
    "defaultMessage": "Highest value"
  },
  title: {
    "id": "gui.sliderModal.title",
    "defaultMessage": "Change the slider range"
  }
});
const SliderPromptComponent = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: slider_prompt_default.a.modalContent,
  contentLabel: props.intl.formatMessage(slider_prompt_messages.title),
  id: "sliderPrompt",
  onRequestClose: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: slider_prompt_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: slider_prompt_default.a.label
}, props.intl.formatMessage(slider_prompt_messages.minValue)), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], null, /*#__PURE__*/react_default.a.createElement("input", {
  className: slider_prompt_default.a.minInput,
  name: props.intl.formatMessage(slider_prompt_messages.minValue),
  pattern: "-?[0-9]*(\\.[0-9]+)?",
  type: "text",
  value: props.minValue,
  onChange: props.onChangeMin,
  onKeyPress: props.onKeyPress
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: slider_prompt_default.a.label
}, props.intl.formatMessage(slider_prompt_messages.maxValue)), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], null, /*#__PURE__*/react_default.a.createElement("input", {
  className: slider_prompt_default.a.maxInput,
  name: props.intl.formatMessage(slider_prompt_messages.maxValue),
  pattern: "-?[0-9]*(\\.[0-9]+)?",
  type: "text",
  value: props.maxValue,
  onChange: props.onChangeMax,
  onKeyPress: props.onKeyPress
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: slider_prompt_default.a.buttonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: slider_prompt_default.a.cancelButton,
  onClick: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Cancel",
  id: "gui.sliderPrompt.cancel"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: slider_prompt_default.a.okButton,
  onClick: props.onOk
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "OK",
  id: "gui.sliderPrompt.ok"
})))));
SliderPromptComponent.propTypes = {
  intl: index_es["f" /* intlShape */],
  maxValue: prop_types_default.a.string,
  minValue: prop_types_default.a.string,
  onCancel: prop_types_default.a.func.isRequired,
  onChangeMax: prop_types_default.a.func.isRequired,
  onChangeMin: prop_types_default.a.func.isRequired,
  onKeyPress: prop_types_default.a.func.isRequired,
  onOk: prop_types_default.a.func.isRequired
};
/* harmony default export */ var slider_prompt_slider_prompt = (Object(index_es["e" /* injectIntl */])(SliderPromptComponent));
// CONCATENATED MODULE: ./src/containers/slider-prompt.jsx




class slider_prompt_SliderPrompt extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleOk', 'handleCancel', 'handleChangeMin', 'handleChangeMax', 'handleKeyPress', 'validates', 'shouldBeDiscrete']);
    const {
      isDiscrete,
      minValue,
      maxValue
    } = this.props;
    this.state = {
      // For internal use, convert values to strings based on isDiscrete
      // This is because `<input />` always returns values as strings.
      minValue: isDiscrete ? minValue.toFixed(0) : minValue.toFixed(2),
      maxValue: isDiscrete ? maxValue.toFixed(0) : maxValue.toFixed(2)
    };
  }
  handleKeyPress(event) {
    if (event.key === 'Enter') this.handleOk();
  }
  handleOk() {
    const {
      minValue,
      maxValue
    } = this.state;
    if (!this.validates(minValue, maxValue)) {
      this.props.onCancel();
      return;
    }
    this.props.onOk(parseFloat(minValue), parseFloat(maxValue), this.shouldBeDiscrete(minValue, maxValue));
  }
  handleCancel() {
    this.props.onCancel();
  }
  handleChangeMin(e) {
    this.setState({
      minValue: e.target.value
    });
  }
  handleChangeMax(e) {
    this.setState({
      maxValue: e.target.value
    });
  }
  shouldBeDiscrete(min, max) {
    return min.indexOf('.') + max.indexOf('.') === -2; // Both -1
  }

  validates(min, max) {
    return isFinite(min) && isFinite(max);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(slider_prompt_slider_prompt, {
      maxValue: this.state.maxValue,
      minValue: this.state.minValue,
      onCancel: this.handleCancel,
      onChangeMax: this.handleChangeMax,
      onChangeMin: this.handleChangeMin,
      onKeyPress: this.handleKeyPress,
      onOk: this.handleOk
    });
  }
}
slider_prompt_SliderPrompt.propTypes = {
  isDiscrete: prop_types_default.a.bool,
  maxValue: prop_types_default.a.number,
  minValue: prop_types_default.a.number,
  onCancel: prop_types_default.a.func.isRequired,
  onOk: prop_types_default.a.func.isRequired
};
slider_prompt_SliderPrompt.defaultProps = {
  maxValue: 100,
  minValue: 0,
  isDiscrete: true
};
/* harmony default export */ var containers_slider_prompt = (slider_prompt_SliderPrompt);
// CONCATENATED MODULE: ./src/containers/monitor.jsx
function monitor_extends() { monitor_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return monitor_extends.apply(this, arguments); }














const availableModes = opcode => monitorModes.filter(t => {
  if (opcode === 'data_variable') {
    return t !== 'list';
  } else if (opcode === 'data_listcontents') {
    return t === 'list';
  }
  return t !== 'slider' && t !== 'list';
});
const monitor_messages = Object(index_es["d" /* defineMessages */])({
  columnPrompt: {
    "id": "gui.monitors.importListColumnPrompt",
    "defaultMessage": "Which column should be used (1-{numberOfColumns})?"
  }
});
class monitor_Monitor extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleDragEnd', 'handleHide', 'handleNextMode', 'handleSetModeToDefault', 'handleSetModeToLarge', 'handleSetModeToSlider', 'handleSliderPromptClose', 'handleSliderPromptOk', 'handleSliderPromptOpen', 'handleImport', 'handleExport', 'setElement']);
    this.state = {
      sliderPrompt: false
    };
  }
  componentDidMount() {
    let rect;
    const isNum = num => typeof num === 'number' && !isNaN(num);

    // Load the VM provided position if not loaded already
    // If a monitor has numbers for the x and y positions, load the saved position.
    // Otherwise, auto-position the monitor.
    if (isNum(this.props.x) && isNum(this.props.y) && !this.props.monitorLayout.savedMonitorPositions[this.props.id]) {
      rect = {
        upperStart: {
          x: this.props.x,
          y: this.props.y
        },
        lowerEnd: {
          x: this.props.x + this.element.offsetWidth,
          y: this.props.y + this.element.offsetHeight
        }
      };
      this.props.addMonitorRect(this.props.id, rect, true /* savePosition */);
    } else {
      // Newly created user monitor
      rect = Object(monitor_layout["c" /* getInitialPosition */])(this.props.monitorLayout, this.props.id, this.element.offsetWidth, this.element.offsetHeight);
      this.props.addMonitorRect(this.props.id, rect);
      this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
        id: this.props.id,
        x: rect.upperStart.x,
        y: rect.upperStart.y
      }));
    }
    this.element.style.top = "".concat(rect.upperStart.y, "px");
    this.element.style.left = "".concat(rect.upperStart.x, "px");
  }
  shouldComponentUpdate(nextProps, nextState) {
    if (nextState !== this.state) {
      return true;
    }
    for (const key of Object.getOwnPropertyNames(nextProps)) {
      // Don't need to rerender when other monitors are moved.
      // monitorLayout is only used during initial layout.
      if (key !== 'monitorLayout' && nextProps[key] !== this.props[key]) {
        return true;
      }
    }
    return false;
  }
  componentDidUpdate() {
    // tw: if monitor is not draggable (ie. not in editor), do not calculate size of monitor for performance
    if (!this.props.draggable) {
      return;
    }
    this.props.resizeMonitorRect(this.props.id, this.element.offsetWidth, this.element.offsetHeight);
  }
  componentWillUnmount() {
    this.props.removeMonitorRect(this.props.id);
  }
  handleDragEnd(e, _ref) {
    let {
      x,
      y
    } = _ref;
    const newX = parseInt(this.element.style.left, 10) + x;
    const newY = parseInt(this.element.style.top, 10) + y;
    this.props.onDragEnd(this.props.id, newX, newY);
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      x: newX,
      y: newY
    }));
  }
  handleHide() {
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      visible: false
    }));
  }
  handleNextMode() {
    const modes = availableModes(this.props.opcode);
    const modeIndex = modes.indexOf(this.props.mode);
    const newMode = modes[(modeIndex + 1) % modes.length];
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      mode: newMode
    }));
  }
  handleSetModeToDefault() {
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      mode: 'default'
    }));
  }
  handleSetModeToLarge() {
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      mode: 'large'
    }));
  }
  handleSetModeToSlider() {
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      mode: 'slider'
    }));
  }
  handleSliderPromptClose() {
    this.setState({
      sliderPrompt: false
    });
  }
  handleSliderPromptOpen() {
    this.setState({
      sliderPrompt: true
    });
  }
  handleSliderPromptOk(min, max, isDiscrete) {
    const realMin = Math.min(min, max);
    const realMax = Math.max(min, max);
    this.props.vm.runtime.requestUpdateMonitor(Object(immutable["Map"])({
      id: this.props.id,
      sliderMin: realMin,
      sliderMax: realMax,
      isDiscrete: isDiscrete
    }));
    this.handleSliderPromptClose();
  }
  setElement(monitorElt) {
    this.element = monitorElt;
  }
  handleImport() {
    import_csv().then(_ref2 => {
      let {
        rows,
        text
      } = _ref2;
      const numberOfColumns = rows[0].length;
      let columnNumber = 1;
      if (numberOfColumns > 1) {
        const msg = this.props.intl.formatMessage(monitor_messages.columnPrompt, {
          numberOfColumns
        });
        columnNumber = parseInt(prompt(msg), 10); // eslint-disable-line no-alert
      }

      let newListValue;
      if (isNaN(columnNumber) || numberOfColumns === 1) {
        newListValue = text.replace(/\r/g, '').split('\n');
      } else {
        newListValue = rows.map(row => row[columnNumber - 1]).filter(item => typeof item === 'string'); // CSV importer can leave undefineds
      }

      const {
        vm,
        targetId,
        id: variableId
      } = this.props;
      setVariableValue(vm, targetId, variableId, newListValue);
    });
  }
  handleExport() {
    const {
      vm,
      targetId,
      id: variableId
    } = this.props;
    const variable = getVariable(vm, targetId, variableId);
    const text = variable.value.join('\r\n');
    const blob = new Blob([text], {
      type: 'text/plain;charset=utf-8'
    });
    Object(download_blob["a" /* default */])("".concat(variable.name, ".txt"), blob);
  }
  render() {
    const monitorProps = monitor_adapter(this.props);
    const showSliderOption = availableModes(this.props.opcode).indexOf('slider') !== -1;
    const isList = this.props.mode === 'list';
    return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, this.state.sliderPrompt && /*#__PURE__*/react_default.a.createElement(containers_slider_prompt, {
      isDiscrete: this.props.isDiscrete,
      maxValue: parseFloat(this.props.max),
      minValue: parseFloat(this.props.min),
      onCancel: this.handleSliderPromptClose,
      onOk: this.handleSliderPromptOk
    }), /*#__PURE__*/react_default.a.createElement(MonitorComponent, monitor_extends({
      componentRef: this.setElement
    }, monitorProps, {
      draggable: this.props.draggable,
      height: this.props.height,
      isDiscrete: this.props.isDiscrete,
      max: this.props.max,
      min: this.props.min,
      mode: this.props.mode,
      targetId: this.props.targetId,
      width: this.props.width,
      onDragEnd: this.handleDragEnd,
      onExport: isList ? this.handleExport : null,
      onImport: isList ? this.handleImport : null,
      onHide: this.handleHide,
      onNextMode: this.handleNextMode,
      onSetModeToDefault: isList ? null : this.handleSetModeToDefault,
      onSetModeToLarge: isList ? null : this.handleSetModeToLarge,
      onSetModeToSlider: showSliderOption ? this.handleSetModeToSlider : null,
      onSliderPromptOpen: this.handleSliderPromptOpen
    })));
  }
}
monitor_Monitor.propTypes = {
  addMonitorRect: prop_types_default.a.func.isRequired,
  draggable: prop_types_default.a.bool,
  height: prop_types_default.a.number,
  id: prop_types_default.a.string.isRequired,
  intl: index_es["f" /* intlShape */],
  isDiscrete: prop_types_default.a.bool,
  max: prop_types_default.a.number,
  min: prop_types_default.a.number,
  mode: prop_types_default.a.oneOf(['default', 'slider', 'large', 'list']),
  monitorLayout: prop_types_default.a.shape({
    monitors: prop_types_default.a.object,
    // eslint-disable-line react/forbid-prop-types
    savedMonitorPositions: prop_types_default.a.object // eslint-disable-line react/forbid-prop-types
  }).isRequired,
  onDragEnd: prop_types_default.a.func.isRequired,
  opcode: prop_types_default.a.string.isRequired,
  // eslint-disable-line react/no-unused-prop-types
  params: prop_types_default.a.object,
  // eslint-disable-line react/no-unused-prop-types, react/forbid-prop-types
  removeMonitorRect: prop_types_default.a.func.isRequired,
  resizeMonitorRect: prop_types_default.a.func.isRequired,
  spriteName: prop_types_default.a.string,
  // eslint-disable-line react/no-unused-prop-types
  targetId: prop_types_default.a.string,
  value: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number, prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]))]),
  // eslint-disable-line react/no-unused-prop-types
  vm: prop_types_default.a.instanceOf(src_default.a),
  width: prop_types_default.a.number,
  x: prop_types_default.a.number,
  y: prop_types_default.a.number
};
const monitor_mapStateToProps = state => ({
  monitorLayout: state.scratchGui.monitorLayout,
  vm: state.scratchGui.vm
});
const monitor_mapDispatchToProps = dispatch => ({
  addMonitorRect: (id, rect, savePosition) => dispatch(Object(monitor_layout["a" /* addMonitorRect */])(id, rect.upperStart, rect.lowerEnd, savePosition)),
  resizeMonitorRect: (id, newWidth, newHeight) => dispatch(Object(monitor_layout["h" /* resizeMonitorRect */])(id, newWidth, newHeight)),
  removeMonitorRect: id => dispatch(Object(monitor_layout["f" /* removeMonitorRect */])(id))
});
/* harmony default export */ var containers_monitor = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(monitor_mapStateToProps, monitor_mapDispatchToProps)(monitor_Monitor)));
// EXTERNAL MODULE: ./src/components/monitor-list/monitor-list.css
var monitor_list = __webpack_require__(468);
var monitor_list_default = /*#__PURE__*/__webpack_require__.n(monitor_list);

// CONCATENATED MODULE: ./src/components/monitor-list/monitor-list.jsx








const monitor_list_MonitorList = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */]
// Use static `monitor-overlay` class for bounds of draggables
, {
  className: classnames_default()(monitor_list_default.a.monitorList, 'monitor-overlay'),
  style: {
    width: props.stageSize.width,
    height: props.stageSize.height
  }
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: monitor_list_default.a.monitorListScaler,
  style: stageSizeToTransform(props.stageSize)
}, props.monitors.valueSeq().filter(m => m.visible).map(monitorData => /*#__PURE__*/react_default.a.createElement(containers_monitor, {
  draggable: props.draggable,
  height: monitorData.height,
  id: monitorData.id,
  isDiscrete: monitorData.isDiscrete,
  key: monitorData.id,
  max: monitorData.sliderMax,
  min: monitorData.sliderMin,
  mode: monitorData.mode,
  opcode: monitorData.opcode,
  params: monitorData.params,
  spriteName: monitorData.spriteName,
  targetId: monitorData.targetId,
  value: monitorData.value,
  width: monitorData.width,
  x: monitorData.x,
  y: monitorData.y,
  onDragEnd: props.onMonitorChange
}))));
monitor_list_MonitorList.propTypes = {
  draggable: prop_types_default.a.bool.isRequired,
  monitors: prop_types_default.a.instanceOf(immutable["OrderedMap"]),
  onMonitorChange: prop_types_default.a.func.isRequired,
  stageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number,
    widthDefault: prop_types_default.a.number,
    heightDefault: prop_types_default.a.number
  }).isRequired
};
/* harmony default export */ var monitor_list_monitor_list = (monitor_list_MonitorList);
// CONCATENATED MODULE: ./src/containers/monitor-list.jsx
function monitor_list_extends() { monitor_list_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return monitor_list_extends.apply(this, arguments); }









class containers_monitor_list_MonitorList extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleMonitorChange']);
    opcode_labels.setTranslatorFunction(props.intl.formatMessage);
    this.state = {
      key: 0
    };
  }
  componentWillReceiveProps(nextProps) {
    // TW: When stage size changes, we'll force all monitors to re-render completely
    // This is important because the VM moves monitors after resize to preserve locations but
    // Scratch's monitor layout logic is very complex and it won't notice that
    if (this.props.customStageSize !== nextProps.customStageSize) {
      this.props.resetMonitorLayout();
      this.setState({
        key: this.state.key + 1
      });
    }
  }
  handleMonitorChange(id, x, y) {
    // eslint-disable-line no-unused-vars
    this.props.moveMonitorRect(id, x, y);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(monitor_list_monitor_list, monitor_list_extends({
      onMonitorChange: this.handleMonitorChange,
      key: this.state.key
    }, this.props));
  }
}
containers_monitor_list_MonitorList.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.height
  }),
  monitorLayout: prop_types_default.a.shape({
    monitors: prop_types_default.a.object,
    // eslint-disable-line react/forbid-prop-types
    savedMonitorPositions: prop_types_default.a.object // eslint-disable-line react/forbid-prop-types
  }).isRequired,
  moveMonitorRect: prop_types_default.a.func.isRequired,
  resetMonitorLayout: prop_types_default.a.func
};
const monitor_list_mapStateToProps = state => ({
  customStageSize: state.scratchGui.customStageSize,
  monitors: state.scratchGui.monitors,
  monitorLayout: state.scratchGui.monitorLayout
});
const monitor_list_mapDispatchToProps = dispatch => ({
  moveMonitorRect: (id, x, y) => dispatch(Object(monitor_layout["e" /* moveMonitorRect */])(id, x, y)),
  resetMonitorLayout: () => dispatch(Object(monitor_layout["g" /* resetMonitorLayout */])())
});
/* harmony default export */ var containers_monitor_list = (Object(error_boundary_hoc["a" /* default */])('Monitors')(Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(monitor_list_mapStateToProps, monitor_list_mapDispatchToProps)(containers_monitor_list_MonitorList))));
// CONCATENATED MODULE: ./src/containers/target-highlight.jsx





class target_highlight_TargetHighlight extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['getPageCoords']);
  }

  // Transform scratch coordinates into page coordinates
  getPageCoords(x, y) {
    const {
      stageWidth,
      stageHeight,
      vm
    } = this.props;
    // The renderers "nativeSize" is the [width, height] of the stage in scratch-units
    const nativeSize = vm.renderer.getNativeSize();
    return [stageWidth / nativeSize[0] * x + stageWidth / 2, -(stageHeight / nativeSize[1] * y) + stageHeight / 2];
  }
  render() {
    const {
      className,
      highlightedTargetId,
      highlightedTargetTime,
      vm
    } = this.props;
    if (!(highlightedTargetId && vm && vm.renderer && vm.runtime.getTargetById(highlightedTargetId))) return null;
    const target = vm.runtime.getTargetById(highlightedTargetId);
    const bounds = vm.renderer.getBounds(target.drawableID);
    const [left, top] = this.getPageCoords(bounds.left, bounds.top);
    const [right, bottom] = this.getPageCoords(bounds.right, bounds.bottom);
    const pad = 2; // px

    return /*#__PURE__*/react_default.a.createElement("div", {
      className: className
      // Ensure new DOM element each update to restart animation
      ,
      key: highlightedTargetTime,
      style: {
        position: 'absolute',
        top: "".concat(top - pad, "px"),
        left: "".concat(left - pad, "px"),
        width: "".concat(right - left + 2 * pad, "px"),
        height: "".concat(bottom - top + 2 * pad, "px")
      }
    });
  }
}
target_highlight_TargetHighlight.propTypes = {
  className: prop_types_default.a.string,
  highlightedTargetId: prop_types_default.a.string,
  highlightedTargetTime: prop_types_default.a.number,
  stageHeight: prop_types_default.a.number,
  stageWidth: prop_types_default.a.number,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const target_highlight_mapStateToProps = state => ({
  highlightedTargetTime: state.scratchGui.targets.highlightedTargetTime,
  highlightedTargetId: state.scratchGui.targets.highlightedTargetId,
  vm: state.scratchGui.vm
});
const target_highlight_mapDispatchToProps = () => ({});
/* harmony default export */ var target_highlight = (Object(react_redux_es["b" /* connect */])(target_highlight_mapStateToProps, target_highlight_mapDispatchToProps)(target_highlight_TargetHighlight));
// CONCATENATED MODULE: ./src/containers/green-flag-overlay.jsx







class green_flag_overlay_GreenFlagOverlay extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClick']);
  }
  handleClick() {
    this.props.vm.start();
    this.props.vm.greenFlag();
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: this.props.wrapperClass,
      onClick: this.handleClick
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: this.props.className
    }, /*#__PURE__*/react_default.a.createElement("img", {
      draggable: false,
      src: icon_green_flag_default.a
    })));
  }
}
green_flag_overlay_GreenFlagOverlay.propTypes = {
  className: prop_types_default.a.string,
  vm: prop_types_default.a.instanceOf(src_default.a),
  wrapperClass: prop_types_default.a.string
};
const green_flag_overlay_mapStateToProps = state => ({
  vm: state.scratchGui.vm
});
const green_flag_overlay_mapDispatchToProps = () => ({});
/* harmony default export */ var green_flag_overlay = (Object(react_redux_es["b" /* connect */])(green_flag_overlay_mapStateToProps, green_flag_overlay_mapDispatchToProps)(green_flag_overlay_GreenFlagOverlay));
// EXTERNAL MODULE: ./src/components/question/question.css
var question_question = __webpack_require__(233);
var question_default = /*#__PURE__*/__webpack_require__.n(question_question);

// EXTERNAL MODULE: ./src/components/question/icon--enter.svg
var icon_enter = __webpack_require__(857);
var icon_enter_default = /*#__PURE__*/__webpack_require__.n(icon_enter);

// CONCATENATED MODULE: ./src/components/question/question.jsx





const QuestionComponent = props => {
  const {
    answer,
    className,
    question,
    onChange,
    onClick,
    onKeyPress
  } = props;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: className
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: question_default.a.questionContainer
  }, question ? /*#__PURE__*/react_default.a.createElement("div", {
    className: question_default.a.questionLabel
  }, question) : null, /*#__PURE__*/react_default.a.createElement("div", {
    className: question_default.a.questionInput
  }, /*#__PURE__*/react_default.a.createElement(forms_input["a" /* default */], {
    autoFocus: true,
    value: answer,
    onChange: onChange,
    onKeyPress: onKeyPress
  }), /*#__PURE__*/react_default.a.createElement("button", {
    className: question_default.a.questionSubmitButton,
    onClick: onClick
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: question_default.a.questionSubmitButtonIcon,
    draggable: false,
    src: icon_enter_default.a
  })))));
};
QuestionComponent.propTypes = {
  answer: prop_types_default.a.string,
  className: prop_types_default.a.string,
  onChange: prop_types_default.a.func.isRequired,
  onClick: prop_types_default.a.func.isRequired,
  onKeyPress: prop_types_default.a.func.isRequired,
  question: prop_types_default.a.string
};
/* harmony default export */ var components_question_question = (QuestionComponent);
// CONCATENATED MODULE: ./src/containers/question.jsx




class question_Question extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleChange', 'handleKeyPress', 'handleSubmit']);
    this.state = {
      answer: ''
    };
  }
  handleChange(e) {
    this.setState({
      answer: e.target.value
    });
  }
  handleKeyPress(event) {
    if (event.key === 'Enter') this.handleSubmit();
  }
  handleSubmit() {
    this.props.onQuestionAnswered(this.state.answer);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(components_question_question, {
      answer: this.state.answer,
      question: this.props.question,
      onChange: this.handleChange,
      onClick: this.handleSubmit,
      onKeyPress: this.handleKeyPress
    });
  }
}
question_Question.propTypes = {
  onQuestionAnswered: prop_types_default.a.func.isRequired,
  question: prop_types_default.a.string
};
/* harmony default export */ var containers_question = (question_Question);
// EXTERNAL MODULE: ./src/components/mic-indicator/mic-indicator.css
var mic_indicator_mic_indicator = __webpack_require__(858);
var mic_indicator_default = /*#__PURE__*/__webpack_require__.n(mic_indicator_mic_indicator);

// EXTERNAL MODULE: ./src/components/mic-indicator/mic-indicator.svg
var components_mic_indicator_mic_indicator = __webpack_require__(859);
var mic_indicator_mic_indicator_default = /*#__PURE__*/__webpack_require__.n(components_mic_indicator_mic_indicator);

// CONCATENATED MODULE: ./src/components/mic-indicator/mic-indicator.jsx





const MicIndicatorComponent = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: props.className,
  style: stageSizeToTransform(props.stageSize)
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: mic_indicator_default.a.micImg,
  src: mic_indicator_mic_indicator_default.a
}));
MicIndicatorComponent.propTypes = {
  className: prop_types_default.a.string,
  stageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number,
    widthDefault: prop_types_default.a.number,
    heightDefault: prop_types_default.a.number
  }).isRequired
};
/* harmony default export */ var src_components_mic_indicator_mic_indicator = (MicIndicatorComponent);
// EXTERNAL MODULE: ./src/components/stage/stage.css
var stage_stage = __webpack_require__(69);
var stage_default = /*#__PURE__*/__webpack_require__.n(stage_stage);

// CONCATENATED MODULE: ./src/components/stage/stage.jsx
const stage_excluded = ["canvas", "customStageSize", "dragRef", "isColorPicking", "isFullScreen", "isPlayerOnly", "isStarted", "colorInfo", "micIndicator", "question", "stageSize", "useEditorDragStyle", "onDeactivateColorPicker", "onDoubleClick", "onQuestionAnswered"];
function stage_extends() { stage_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return stage_extends.apply(this, arguments); }
function stage_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function stage_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? stage_ownKeys(Object(t), !0).forEach(function (r) { stage_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : stage_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function stage_defineProperty(obj, key, value) { key = stage_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function stage_toPropertyKey(arg) { var key = stage_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function stage_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function stage_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = stage_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function stage_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














const StageComponent = props => {
  const {
      canvas,
      customStageSize,
      dragRef,
      isColorPicking,
      isFullScreen,
      isPlayerOnly,
      isStarted,
      colorInfo,
      micIndicator,
      question,
      stageSize,
      useEditorDragStyle,
      onDeactivateColorPicker,
      onDoubleClick,
      onQuestionAnswered
    } = props,
    boxProps = stage_objectWithoutProperties(props, stage_excluded);
  const stageDimensions = getStageDimensions(stageSize, customStageSize, isFullScreen);
  const minWidth = getMinWidth(stageSize);
  const transformStyle = stageDimensions.width < minWidth && !isFullScreen ? {
    transform: "translateX(".concat((minWidth - stageDimensions.width) / 2, "px)")
  } : {};
  return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: classnames_default()(stage_default.a.stageWrapper, {
      [stage_default.a.withColorPicker]: !isFullScreen && isColorPicking
    }),
    onDoubleClick: onDoubleClick,
    style: isPlayerOnly ? null : {
      minWidth: "".concat(minWidth, "px")
    }
  }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: classnames_default()(stage_default.a.stage, {
      [stage_default.a.fullScreen]: isFullScreen
    }),
    style: stage_objectSpread({
      height: stageDimensions.height,
      width: stageDimensions.width
    }, transformStyle)
  }, /*#__PURE__*/react_default.a.createElement(dom_element_renderer["a" /* default */], stage_extends({
    domElement: canvas,
    style: {
      height: stageDimensions.height,
      width: stageDimensions.width
    }
  }, boxProps)), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: stage_default.a.customOverlays
  }, /*#__PURE__*/react_default.a.createElement(dom_element_renderer["a" /* default */], {
    domElement: props.overlay
  })), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: stage_default.a.monitorWrapper
  }, /*#__PURE__*/react_default.a.createElement(containers_monitor_list, {
    draggable: useEditorDragStyle,
    stageSize: stageDimensions
  })), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: stage_default.a.frameWrapper
  }, /*#__PURE__*/react_default.a.createElement(target_highlight, {
    className: stage_default.a.frame,
    stageHeight: stageDimensions.height,
    stageWidth: stageDimensions.width
  })), isColorPicking && colorInfo ? /*#__PURE__*/react_default.a.createElement(loupe_loupe, {
    colorInfo: colorInfo
  }) : null), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: classnames_default()(stage_default.a.stageOverlays, {
      [stage_default.a.fullScreen]: isFullScreen
    }),
    style: transformStyle
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: stage_default.a.stageBottomWrapper,
    style: {
      width: stageDimensions.width,
      height: stageDimensions.height
    }
  }, micIndicator ? /*#__PURE__*/react_default.a.createElement(src_components_mic_indicator_mic_indicator, {
    className: stage_default.a.micIndicator,
    stageSize: stageDimensions
  }) : null, question === null ? null : /*#__PURE__*/react_default.a.createElement("div", {
    className: stage_default.a.questionWrapper,
    style: {
      width: stageDimensions.width
    }
  }, /*#__PURE__*/react_default.a.createElement(containers_question, {
    question: question,
    onQuestionAnswered: onQuestionAnswered
  }))), /*#__PURE__*/react_default.a.createElement("canvas", {
    className: stage_default.a.draggingSprite,
    height: 0,
    ref: dragRef,
    width: 0
  })), isStarted ? null : /*#__PURE__*/react_default.a.createElement(green_flag_overlay, {
    className: stage_default.a.greenFlagOverlay,
    wrapperClass: stage_default.a.greenFlagOverlayWrapper
  })), isColorPicking ? /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: stage_default.a.colorPickerBackground,
    onClick: onDeactivateColorPicker
  }) : null);
};
StageComponent.propTypes = {
  canvas: prop_types_default.a.instanceOf(Element).isRequired,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.height
  }),
  overlay: prop_types_default.a.instanceOf(Element).isRequired,
  colorInfo: loupe_loupe.propTypes.colorInfo,
  dragRef: prop_types_default.a.func,
  isColorPicking: prop_types_default.a.bool,
  isFullScreen: prop_types_default.a.bool.isRequired,
  isPlayerOnly: prop_types_default.a.bool,
  isStarted: prop_types_default.a.bool,
  micIndicator: prop_types_default.a.bool,
  onDeactivateColorPicker: prop_types_default.a.func,
  onDoubleClick: prop_types_default.a.func,
  onQuestionAnswered: prop_types_default.a.func,
  question: prop_types_default.a.string,
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  useEditorDragStyle: prop_types_default.a.bool
};
StageComponent.defaultProps = {
  dragRef: () => {}
};
/* harmony default export */ var components_stage_stage = (StageComponent);
// CONCATENATED MODULE: ./src/containers/stage.jsx
const containers_stage_excluded = ["vm", "onActivateColorPicker", "disableEditingTargetChange"];
function containers_stage_extends() { containers_stage_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_stage_extends.apply(this, arguments); }
function containers_stage_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = containers_stage_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function containers_stage_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function containers_stage_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function containers_stage_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? containers_stage_ownKeys(Object(t), !0).forEach(function (r) { containers_stage_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : containers_stage_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function containers_stage_defineProperty(obj, key, value) { key = containers_stage_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function containers_stage_toPropertyKey(arg) { var key = containers_stage_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function containers_stage_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }













const colorPickerRadius = 20;
const dragThreshold = 3; // Same as the block drag threshold

class stage_Stage extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['attachMouseEvents', 'cancelMouseDownTimeout', 'detachMouseEvents', 'handleDoubleClick', 'handleQuestionAnswered', 'onMouseUp', 'onMouseMove', 'onMouseDown', 'onStartDrag', 'onStopDrag', 'onWheel', 'onContextMenu', 'updateRect', 'questionListener', 'setDragCanvas', 'clearDragCanvas', 'drawDragCanvas', 'positionDragCanvas']);
    this.state = {
      mouseDownTimeoutId: null,
      mouseDownPosition: null,
      isDragging: false,
      dragOffset: null,
      dragId: null,
      colorInfo: null,
      question: null
    };
    if (this.props.vm.renderer) {
      this.renderer = this.props.vm.renderer;
      this.canvas = this.renderer.canvas;
    } else {
      this.canvas = document.createElement('canvas');
      this.renderer = new scratch_render_src_default.a(this.canvas, -this.props.customStageSize.width / 2, this.props.customStageSize.width / 2, -this.props.customStageSize.height / 2, this.props.customStageSize.height / 2);
      this.props.vm.setStageSize(this.props.customStageSize.width, this.props.customStageSize.height);
      this.props.vm.attachRenderer(this.renderer);

      // Only attach a video provider once because it is stateful
      this.props.vm.setVideoProvider(new video_provider());

      // Calling draw a single time before any project is loaded just makes
      // the canvas white instead of solid black–needed because it is not
      // possible to use CSS to style the canvas to have a different
      // default color
      this.props.vm.renderer.draw();

      // tw: handle changes to high quality pen
      this.props.vm.renderer.on('UseHighQualityRenderChanged', this.props.onHighQualityPenChanged);
    }
    this.props.vm.attachV2BitmapAdapter(new scratch_svg_renderer_src["BitmapAdapter"]());
  }
  componentDidMount() {
    this.attachRectEvents();
    this.attachMouseEvents(this.canvas);
    this.updateRect();
    this.props.vm.runtime.addListener('QUESTION', this.questionListener);
  }
  shouldComponentUpdate(nextProps, nextState) {
    return this.props.stageSize !== nextProps.stageSize || this.props.isColorPicking !== nextProps.isColorPicking || this.state.colorInfo !== nextState.colorInfo || this.props.isFullScreen !== nextProps.isFullScreen || this.props.isWindowFullScreen !== nextProps.isWindowFullScreen || this.props.dimensions !== nextProps.dimensions || this.state.question !== nextState.question || this.props.micIndicator !== nextProps.micIndicator || this.props.isStarted !== nextProps.isStarted || this.props.customStageSize !== nextProps.customStageSize;
  }
  componentDidUpdate(prevProps) {
    if (this.props.isColorPicking && !prevProps.isColorPicking) {
      this.startColorPickingLoop();
    } else if (!this.props.isColorPicking && prevProps.isColorPicking) {
      this.stopColorPickingLoop();
    }
    this.updateRect();
    this.renderer.resize(this.rect.width, this.rect.height);
  }
  componentWillUnmount() {
    this.detachMouseEvents(this.canvas);
    this.detachRectEvents();
    this.stopColorPickingLoop();
    this.props.vm.runtime.removeListener('QUESTION', this.questionListener);
  }
  questionListener(question) {
    this.setState({
      question: question
    });
  }
  handleQuestionAnswered(answer) {
    this.setState({
      question: null
    }, () => {
      this.props.vm.runtime.emit('ANSWER', answer);
    });
  }
  startColorPickingLoop() {
    const callback = () => {
      this.animationFrameId = requestAnimationFrame(callback);
      if (typeof this.pickX === 'number') {
        this.setState({
          colorInfo: this.getColorInfo(this.pickX, this.pickY)
        });
      }
    };
    this.animationFrameId = requestAnimationFrame(callback);
  }
  stopColorPickingLoop() {
    cancelAnimationFrame(this.animationFrameId);
  }
  attachMouseEvents(canvas) {
    document.addEventListener('mousemove', this.onMouseMove);
    document.addEventListener('mouseup', this.onMouseUp);
    document.addEventListener('touchmove', this.onMouseMove);
    document.addEventListener('touchend', this.onMouseUp);
    canvas.addEventListener('mousedown', this.onMouseDown);
    canvas.addEventListener('touchstart', this.onMouseDown);
    canvas.addEventListener('wheel', this.onWheel);
    canvas.addEventListener('contextmenu', this.onContextMenu);
  }
  detachMouseEvents(canvas) {
    document.removeEventListener('mousemove', this.onMouseMove);
    document.removeEventListener('mouseup', this.onMouseUp);
    document.removeEventListener('touchmove', this.onMouseMove);
    document.removeEventListener('touchend', this.onMouseUp);
    canvas.removeEventListener('mousedown', this.onMouseDown);
    canvas.removeEventListener('touchstart', this.onMouseDown);
    canvas.removeEventListener('wheel', this.onWheel);
    canvas.removeEventListener('contextmenu', this.onContextMenu);
  }
  attachRectEvents() {
    window.addEventListener('resize', this.updateRect);
    window.addEventListener('scroll', this.updateRect);
  }
  detachRectEvents() {
    window.removeEventListener('resize', this.updateRect);
    window.removeEventListener('scroll', this.updateRect);
  }
  updateRect() {
    this.rect = this.canvas.getBoundingClientRect();
  }
  getScratchCoords(x, y) {
    const nativeSize = this.renderer.getNativeSize();
    return [nativeSize[0] / this.rect.width * (x - this.rect.width / 2), nativeSize[1] / this.rect.height * (y - this.rect.height / 2)];
  }
  getColorInfo(x, y) {
    return containers_stage_objectSpread({
      x: x,
      y: y
    }, this.renderer.extractColor(x, y, colorPickerRadius));
  }
  handleDoubleClick(e) {
    // tw: Disable editing target changing in certain circumstances to avoid lag
    if (this.props.disableEditingTargetChange) {
      return;
    }
    const {
      x,
      y
    } = getEventXY(e);
    // Set editing target from cursor position, if clicking on a sprite.
    const mousePosition = [x - this.rect.left, y - this.rect.top];
    const drawableId = this.renderer.pick(mousePosition[0], mousePosition[1]);
    if (drawableId === null) return;
    const targetId = this.props.vm.getTargetIdForDrawableId(drawableId);
    if (targetId === null) return;
    this.props.vm.setEditingTarget(targetId);
  }
  onMouseMove(e) {
    const {
      x,
      y
    } = getEventXY(e);
    const mousePosition = [x - this.rect.left, y - this.rect.top];
    if (this.props.isColorPicking) {
      // Set the pickX/Y for the color picker loop to pick up
      this.pickX = mousePosition[0];
      this.pickY = mousePosition[1];
    }
    if (this.state.mouseDown && !this.state.isDragging) {
      const distanceFromMouseDown = Math.sqrt(Math.pow(mousePosition[0] - this.state.mouseDownPosition[0], 2) + Math.pow(mousePosition[1] - this.state.mouseDownPosition[1], 2));
      if (distanceFromMouseDown > dragThreshold) {
        this.cancelMouseDownTimeout();
        this.onStartDrag(...this.state.mouseDownPosition);
      }
    }
    if (this.state.mouseDown && this.state.isDragging) {
      // Editor drag style only updates the drag canvas, does full update at the end of drag
      // Non-editor drag style just updates the sprite continuously.
      if (this.props.useEditorDragStyle) {
        this.positionDragCanvas(mousePosition[0], mousePosition[1]);
      } else {
        const spritePosition = this.getScratchCoords(mousePosition[0], mousePosition[1]);
        this.props.vm.postSpriteInfo({
          x: spritePosition[0] + this.state.dragOffset[0],
          y: -(spritePosition[1] + this.state.dragOffset[1]),
          force: true
        });
      }
    }
    const coordinates = {
      x: mousePosition[0],
      y: mousePosition[1],
      canvasWidth: this.rect.width,
      canvasHeight: this.rect.height
    };
    this.props.vm.postIOData('mouse', coordinates);
  }
  onMouseUp(e) {
    const {
      x,
      y
    } = getEventXY(e);
    const mousePosition = [x - this.rect.left, y - this.rect.top];
    this.cancelMouseDownTimeout();
    this.setState({
      mouseDown: false,
      mouseDownPosition: null
    });
    const data = {
      isDown: false,
      button: e.button,
      x: x - this.rect.left,
      y: y - this.rect.top,
      canvasWidth: this.rect.width,
      canvasHeight: this.rect.height,
      wasDragged: this.state.isDragging
    };
    if (this.state.isDragging) {
      this.onStopDrag(mousePosition[0], mousePosition[1]);
    }
    this.props.vm.postIOData('mouse', data);
    if (this.props.isColorPicking && mousePosition[0] > 0 && mousePosition[0] < this.rect.width && mousePosition[1] > 0 && mousePosition[1] < this.rect.height) {
      const {
        r,
        g,
        b
      } = this.state.colorInfo.color;
      const componentToString = c => {
        const hex = c.toString(16);
        return hex.length === 1 ? "0".concat(hex) : hex;
      };
      const colorString = "#".concat(componentToString(r)).concat(componentToString(g)).concat(componentToString(b));
      this.props.onDeactivateColorPicker(colorString);
      this.setState({
        colorInfo: null
      });
      this.pickX = null;
      this.pickY = null;
    }
  }
  onMouseDown(e) {
    this.updateRect();
    const {
      x,
      y
    } = getEventXY(e);
    const mousePosition = [x - this.rect.left, y - this.rect.top];
    if (this.props.isColorPicking) {
      // Set the pickX/Y for the color picker loop to pick up
      this.pickX = mousePosition[0];
      this.pickY = mousePosition[1];
      // Immediately update the color picker info
      this.setState({
        colorInfo: this.getColorInfo(this.pickX, this.pickY)
      });
    } else {
      const isTouchEvent = window.TouchEvent && e instanceof TouchEvent;
      if (e.button === 0 || isTouchEvent) {
        this.setState({
          mouseDown: true,
          mouseDownPosition: mousePosition,
          mouseDownTimeoutId: setTimeout(this.onStartDrag.bind(this, mousePosition[0], mousePosition[1]), 400)
        });
      }
      const data = {
        isDown: true,
        button: e.button,
        x: mousePosition[0],
        y: mousePosition[1],
        canvasWidth: this.rect.width,
        canvasHeight: this.rect.height
      };
      this.props.vm.postIOData('mouse', data);
      if (isTouchEvent && e.preventDefault) {
        // Prevent default to prevent touch from dragging page
        e.preventDefault();
        // But we do want any active input to be blurred
        if (document.activeElement && document.activeElement.blur) {
          document.activeElement.blur();
        }
      }
    }
  }
  onWheel(e) {
    const data = {
      deltaX: e.deltaX,
      deltaY: e.deltaY
    };
    this.props.vm.postIOData('mouseWheel', data);
  }
  onContextMenu(e) {
    if (this.props.vm.runtime.ioDevices.mouse.usesRightClickDown) {
      e.preventDefault();
    }
  }
  cancelMouseDownTimeout() {
    if (this.state.mouseDownTimeoutId !== null) {
      clearTimeout(this.state.mouseDownTimeoutId);
    }
    this.setState({
      mouseDownTimeoutId: null
    });
  }
  /**
   * Initialize the position of the "dragged sprite" canvas
   * @param {DrawableExtraction} drawableData The data returned from renderer.extractDrawableScreenSpace
   * @param {number} x The x position of the initial drag event
   * @param {number} y The y position of the initial drag event
   */
  drawDragCanvas(drawableData, x, y) {
    const {
      imageData,
      x: boundsX,
      y: boundsY,
      width: boundsWidth,
      height: boundsHeight
    } = drawableData;
    this.dragCanvas.width = imageData.width;
    this.dragCanvas.height = imageData.height;
    // On high-DPI devices, the canvas size in layout-pixels is not equal to the size of the extracted data.
    this.dragCanvas.style.width = "".concat(boundsWidth, "px");
    this.dragCanvas.style.height = "".concat(boundsHeight, "px");
    this.dragCanvas.getContext('2d').putImageData(imageData, 0, 0);
    // Position so that pick location is at (0, 0) so that  positionDragCanvas()
    // can use translation to move to mouse position smoothly.
    this.dragCanvas.style.left = "".concat(boundsX - x, "px");
    this.dragCanvas.style.top = "".concat(boundsY - y, "px");
    this.dragCanvas.style.display = 'block';
  }
  clearDragCanvas() {
    this.dragCanvas.width = this.dragCanvas.height = 0;
    this.dragCanvas.style.display = 'none';
  }
  positionDragCanvas(mouseX, mouseY) {
    // mouseX/Y are relative to stage top/left, and dragCanvas is already
    // positioned so that the pick location is at (0,0).
    this.dragCanvas.style.transform = "translate(".concat(mouseX, "px, ").concat(mouseY, "px)");
  }
  onStartDrag(x, y) {
    if (this.state.dragId) return;
    const drawableId = this.renderer.pick(x, y);
    if (drawableId === null) return;
    const targetId = this.props.vm.getTargetIdForDrawableId(drawableId);
    if (targetId === null) return;
    const target = this.props.vm.runtime.getTargetById(targetId);

    // Do not start drag unless in editor drag mode or target is draggable
    if (!(this.props.useEditorDragStyle || target.draggable)) return;

    // Dragging always brings the target to the front
    target.goToFront();
    const [scratchMouseX, scratchMouseY] = this.getScratchCoords(x, y);
    const offsetX = target.x - scratchMouseX;
    const offsetY = -(target.y + scratchMouseY);
    this.props.vm.startDrag(targetId);
    this.setState({
      isDragging: true,
      dragId: targetId,
      dragOffset: [offsetX, offsetY]
    });
    if (this.props.useEditorDragStyle) {
      // Extract the drawable art
      const drawableData = this.renderer.extractDrawableScreenSpace(drawableId);
      this.drawDragCanvas(drawableData, x, y);
      this.positionDragCanvas(x, y);
      this.props.vm.postSpriteInfo({
        visible: false
      });
      this.props.vm.renderer.draw();
    }
  }
  onStopDrag(mouseX, mouseY) {
    const dragId = this.state.dragId;
    const commonStopDragActions = () => {
      this.props.vm.stopDrag(dragId);
      this.setState({
        isDragging: false,
        dragOffset: null,
        dragId: null
      });
    };
    if (this.props.useEditorDragStyle) {
      // Need to sequence these actions to prevent flickering.
      const spriteInfo = {
        visible: true
      };
      // First update the sprite position if dropped in the stage.
      if (mouseX > 0 && mouseX < this.rect.width && mouseY > 0 && mouseY < this.rect.height) {
        const spritePosition = this.getScratchCoords(mouseX, mouseY);
        spriteInfo.x = spritePosition[0] + this.state.dragOffset[0];
        spriteInfo.y = -(spritePosition[1] + this.state.dragOffset[1]);
        spriteInfo.force = true;
      }
      this.props.vm.postSpriteInfo(spriteInfo);
      // Then clear the dragging canvas and stop drag (potentially slow if selecting sprite)
      this.clearDragCanvas();
      commonStopDragActions();
      this.props.vm.renderer.draw();
    } else {
      commonStopDragActions();
    }
  }
  setDragCanvas(canvas) {
    this.dragCanvas = canvas;
  }
  render() {
    const _this$props = this.props,
      {
        vm,
        // eslint-disable-line no-unused-vars
        onActivateColorPicker,
        // eslint-disable-line no-unused-vars
        disableEditingTargetChange // eslint-disable-line no-unused-vars
      } = _this$props,
      props = containers_stage_objectWithoutProperties(_this$props, containers_stage_excluded);
    return /*#__PURE__*/react_default.a.createElement(components_stage_stage, containers_stage_extends({
      canvas: this.canvas,
      overlay: this.props.vm.runtime.renderer.overlayContainer,
      colorInfo: this.state.colorInfo,
      dragRef: this.setDragCanvas,
      question: this.state.question,
      onDoubleClick: this.handleDoubleClick,
      onQuestionAnswered: this.handleQuestionAnswered
    }, props));
  }
}
stage_Stage.propTypes = {
  onHighQualityPenChanged: prop_types_default.a.func,
  highQualityPen: prop_types_default.a.bool,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number
  }),
  disableEditingTargetChange: prop_types_default.a.bool,
  isColorPicking: prop_types_default.a.bool,
  isFullScreen: prop_types_default.a.bool.isRequired,
  isPlayerOnly: prop_types_default.a.bool,
  isWindowFullScreen: prop_types_default.a.bool,
  dimensions: prop_types_default.a.arrayOf(prop_types_default.a.number),
  isStarted: prop_types_default.a.bool,
  micIndicator: prop_types_default.a.bool,
  onActivateColorPicker: prop_types_default.a.func,
  onDeactivateColorPicker: prop_types_default.a.func,
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  useEditorDragStyle: prop_types_default.a.bool,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
stage_Stage.defaultProps = {
  useEditorDragStyle: true
};
const stage_mapStateToProps = state => ({
  highQualityPen: state.scratchGui.tw.highQualityPen,
  customStageSize: state.scratchGui.customStageSize,
  disableEditingTargetChange: state.scratchGui.mode.isFullScreen || state.scratchGui.mode.isEmbedded || state.scratchGui.mode.isPlayerOnly,
  isColorPicking: state.scratchGui.colorPicker.active,
  isFullScreen: state.scratchGui.mode.isFullScreen || state.scratchGui.mode.isEmbedded,
  isPlayerOnly: state.scratchGui.mode.isPlayerOnly,
  isWindowFullScreen: state.scratchGui.tw.isWindowFullScreen,
  dimensions: state.scratchGui.tw.dimensions,
  isStarted: state.scratchGui.vmStatus.started,
  micIndicator: state.scratchGui.micIndicator,
  // Do not use editor drag style in fullscreen or player mode.
  useEditorDragStyle: !(state.scratchGui.mode.isFullScreen || state.scratchGui.mode.isPlayerOnly)
});
const stage_mapDispatchToProps = dispatch => ({
  // tw: handler for syncing high quality pen option changes
  onHighQualityPenChanged: enabled => dispatch(Object(tw["setHighQualityPenState"])(enabled)),
  onActivateColorPicker: () => dispatch(Object(color_picker["a" /* activateColorPicker */])()),
  onDeactivateColorPicker: color => dispatch(Object(color_picker["c" /* deactivateColorPicker */])(color))
});
/* harmony default export */ var containers_stage = (Object(react_redux_es["b" /* connect */])(stage_mapStateToProps, stage_mapDispatchToProps)(stage_Stage));
// EXTERNAL MODULE: ./src/components/loader/loader.css
var loader = __webpack_require__(104);
var loader_default = /*#__PURE__*/__webpack_require__.n(loader);

// EXTERNAL MODULE: ./src/components/loader/top-block.svg
var top_block = __webpack_require__(860);
var top_block_default = /*#__PURE__*/__webpack_require__.n(top_block);

// EXTERNAL MODULE: ./src/components/loader/middle-block.svg
var middle_block = __webpack_require__(861);
var middle_block_default = /*#__PURE__*/__webpack_require__.n(middle_block);

// EXTERNAL MODULE: ./src/components/loader/bottom-block.svg
var bottom_block = __webpack_require__(862);
var bottom_block_default = /*#__PURE__*/__webpack_require__.n(bottom_block);

// CONCATENATED MODULE: ./src/components/loader/loader.jsx











// tw:
// we make some rather large changes here:
//  - remove random message, replaced with message dependent on what is actually being loaded
//  - add a progress bar
//  - bring in intl so that we can translate everything
// The way of doing this is extremely unusual and weird compared to how things are typically done for performance.
// This is because react updates are too performance crippling to handle the progress bar rapidly updating.

const mainMessages = {
  'gui.loader.headline': /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Loading Project",
    id: "gui.loader.headline"
  }),
  'gui.loader.creating': /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Creating Project",
    id: "gui.loader.creating"
  })
};
const loader_messages = Object(index_es["d" /* defineMessages */])({
  generic: {
    "id": "tw.loader.generic",
    "defaultMessage": "Loading project \u2026"
  },
  projectData: {
    "id": "tw.loader.data",
    "defaultMessage": "Downloading project data \u2026"
  },
  assetsKnown: {
    "id": "tw.loader.assets.known",
    "defaultMessage": "Downloading assets ({complete}/{total}) \u2026"
  },
  assetsUnknown: {
    "id": "tw.loader.assets.unknown",
    "defaultMessage": "Downloading assets \u2026"
  }
});
class loader_LoaderComponent extends react_default.a.Component {
  constructor(props) {
    super(props);
    this._state = 0;
    this.progress = 0;
    this.complete = 0;
    this.total = 0;
    lodash_bindall_default()(this, ['barInnerRef', 'handleProgressChange', 'messageRef']);
  }
  componentDidMount() {
    setProgressHandler(this.handleProgressChange);
    this.updateMessage();
  }
  componentDidUpdate() {
    this.update();
  }
  componentWillUnmount() {
    setProgressHandler(() => {});
  }
  handleProgressChange(state, progress, complete, total) {
    if (state !== this._state) {
      this._state = state;
      this.updateMessage();
    }
    this.progress = progress;
    this.complete = complete;
    this.total = total;
    this.update();
  }
  update() {
    this.barInner.style.width = "".concat(this.progress * 100, "%");
    if (this._state === 2) {
      this.updateMessage();
    }
  }
  updateMessage() {
    if (this._state === 0) {
      this.message.textContent = this.props.intl.formatMessage(loader_messages.generic);
    } else if (this._state === 1) {
      this.message.textContent = this.props.intl.formatMessage(loader_messages.projectData);
    } else if (this.total > 0) {
      this.message.textContent = this.props.intl.formatMessage(loader_messages.assetsKnown, {
        complete: this.complete,
        total: this.total
      });
    } else {
      this.message.textContent = this.props.intl.formatMessage(loader_messages.assetsUnknown);
    }
  }
  barInnerRef(element) {
    this.barInner = element;
  }
  messageRef(element) {
    this.message = element;
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(loader_default.a.background, {
        [loader_default.a.fullscreen]: this.props.isFullScreen
      })
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.container
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.blockAnimation
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: loader_default.a.topBlock,
      src: top_block_default.a
    }), /*#__PURE__*/react_default.a.createElement("img", {
      className: loader_default.a.middleBlock,
      src: middle_block_default.a
    }), /*#__PURE__*/react_default.a.createElement("img", {
      className: loader_default.a.bottomBlock,
      src: bottom_block_default.a
    })), /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.title
    }, mainMessages[this.props.messageId]), /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.messageContainerOuter
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.messageContainerInner,
      ref: this.messageRef
    })), /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.twProgressOuter
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: loader_default.a.twProgressInner,
      ref: this.barInnerRef
    }))));
  }
}
loader_LoaderComponent.propTypes = {
  isFullScreen: prop_types_default.a.bool,
  intl: index_es["f" /* intlShape */].isRequired,
  messageId: prop_types_default.a.string
};
loader_LoaderComponent.defaultProps = {
  isFullScreen: false,
  messageId: 'gui.loader.headline'
};
/* harmony default export */ var loader_loader = (Object(index_es["e" /* injectIntl */])(loader_LoaderComponent));
// EXTERNAL MODULE: ./src/components/stage-wrapper/stage-wrapper.css
var stage_wrapper = __webpack_require__(234);
var stage_wrapper_default = /*#__PURE__*/__webpack_require__.n(stage_wrapper);

// CONCATENATED MODULE: ./src/components/stage-wrapper/stage-wrapper.jsx










const stage_wrapper_StageWrapperComponent = function StageWrapperComponent(props) {
  const {
    isEmbedded,
    isFullScreen,
    isRtl,
    isRendererSupported,
    loading,
    stageSize,
    vm
  } = props;
  return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: classnames_default()(stage_wrapper_default.a.stageWrapper, {
      [stage_wrapper_default.a.embedded]: isEmbedded
    }, {
      [stage_wrapper_default.a.fullScreen]: isFullScreen
    }),
    dir: isRtl ? 'rtl' : 'ltr'
  }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: stage_wrapper_default.a.stageMenuWrapper
  }, /*#__PURE__*/react_default.a.createElement(containers_stage_header, {
    stageSize: stageSize,
    vm: vm
  })), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: stage_wrapper_default.a.stageCanvasWrapper
  }, isRendererSupported ? /*#__PURE__*/react_default.a.createElement(containers_stage, {
    stageSize: stageSize,
    vm: vm
  }) : null), loading ? /*#__PURE__*/react_default.a.createElement(loader_loader, {
    isFullScreen: isFullScreen
  }) : null);
};
stage_wrapper_StageWrapperComponent.propTypes = {
  isEmbedded: prop_types_default.a.bool,
  isFullScreen: prop_types_default.a.bool,
  isRendererSupported: prop_types_default.a.bool.isRequired,
  isRtl: prop_types_default.a.bool.isRequired,
  loading: prop_types_default.a.bool,
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var stage_wrapper_stage_wrapper = (stage_wrapper_StageWrapperComponent);
// CONCATENATED MODULE: ./src/containers/stage-wrapper.jsx





const StageWrapper = props => /*#__PURE__*/react_default.a.createElement(stage_wrapper_stage_wrapper, props);
StageWrapper.propTypes = {
  isRendererSupported: prop_types_default.a.bool.isRequired,
  stageSize: prop_types_default.a.oneOf(Object.keys(layout_constants["c" /* STAGE_DISPLAY_SIZES */])).isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var containers_stage_wrapper = (StageWrapper);
// EXTERNAL MODULE: ./src/components/menu-bar/menu-bar.jsx + 21 modules
var menu_bar = __webpack_require__(174);

// CONCATENATED MODULE: ./src/containers/costume-library.jsx








const costume_library_messages = Object(index_es["d" /* defineMessages */])({
  libraryTitle: {
    "id": "gui.costumeLibrary.chooseACostume",
    "defaultMessage": "Choose a Costume"
  }
});
class costume_library_CostumeLibrary extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleItemSelected']);
  }
  handleItemSelected(item) {
    const vmCostume = {
      name: item.name,
      rotationCenterX: item.rotationCenterX,
      rotationCenterY: item.rotationCenterY,
      bitmapResolution: item.bitmapResolution,
      skinId: null
    };
    this.props.vm.addCostumeFromLibrary(item.md5ext, vmCostume);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(library_library, {
      data: getCostumeLibrary(),
      id: "costumeLibrary",
      tags: sprite_tags,
      title: this.props.intl.formatMessage(costume_library_messages.libraryTitle),
      onItemSelected: this.handleItemSelected,
      onRequestClose: this.props.onRequestClose
    });
  }
}
costume_library_CostumeLibrary.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  onRequestClose: prop_types_default.a.func,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var costume_library = (Object(index_es["e" /* injectIntl */])(costume_library_CostumeLibrary));
// CONCATENATED MODULE: ./src/lib/libraries/backdrop-tags.js

/* harmony default export */ var backdrop_tags = ([{
  tag: 'fantasy',
  intlLabel: tag_messages.fantasy
}, {
  tag: 'music',
  intlLabel: tag_messages.music
}, {
  tag: 'sports',
  intlLabel: tag_messages.sports
}, {
  tag: 'outdoors',
  intlLabel: tag_messages.outdoors
}, {
  tag: 'indoors',
  intlLabel: tag_messages.indoors
}, {
  tag: 'space',
  intlLabel: tag_messages.space
}, {
  tag: 'underwater',
  intlLabel: tag_messages.underwater
}, {
  tag: 'patterns',
  intlLabel: tag_messages.patterns
}]);
// CONCATENATED MODULE: ./src/containers/backdrop-library.jsx








const backdrop_library_messages = Object(index_es["d" /* defineMessages */])({
  libraryTitle: {
    "id": "gui.costumeLibrary.chooseABackdrop",
    "defaultMessage": "Choose a Backdrop"
  }
});
class backdrop_library_BackdropLibrary extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleItemSelect']);
  }
  handleItemSelect(item) {
    const vmBackdrop = {
      name: item.name,
      rotationCenterX: item.rotationCenterX,
      rotationCenterY: item.rotationCenterY,
      bitmapResolution: item.bitmapResolution,
      skinId: null
    };
    // Do not switch to stage, just add the backdrop
    this.props.vm.addBackdrop(item.md5ext, vmBackdrop);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(library_library, {
      data: getBackdropLibrary(),
      id: "backdropLibrary",
      tags: backdrop_tags,
      title: this.props.intl.formatMessage(backdrop_library_messages.libraryTitle),
      onItemSelected: this.handleItemSelect,
      onRequestClose: this.props.onRequestClose
    });
  }
}
backdrop_library_BackdropLibrary.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  onRequestClose: prop_types_default.a.func,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var backdrop_library = (Object(index_es["e" /* injectIntl */])(backdrop_library_BackdropLibrary));
// EXTERNAL MODULE: ./src/components/watermark/watermark.css
var watermark = __webpack_require__(873);
var watermark_default = /*#__PURE__*/__webpack_require__.n(watermark);

// CONCATENATED MODULE: ./src/components/watermark/watermark.jsx



const watermark_Watermark = props => /*#__PURE__*/react_default.a.createElement("img", {
  className: watermark_default.a.spriteImage,
  src: props.costumeURL
});
watermark_Watermark.propTypes = {
  costumeURL: prop_types_default.a.string
};
/* harmony default export */ var watermark_watermark = (watermark_Watermark);
// CONCATENATED MODULE: ./src/containers/watermark.jsx
function watermark_extends() { watermark_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return watermark_extends.apply(this, arguments); }










class containers_watermark_Watermark extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['getCostumeData']);
  }
  getCostumeData() {
    if (!this.props.asset) return null;
    return getCostumeUrl(this.props.asset);
  }
  render() {
    const componentProps = lodash_omit_default()(this.props, ['asset', 'vm']);
    return /*#__PURE__*/react_default.a.createElement(watermark_watermark, watermark_extends({
      costumeURL: this.getCostumeData()
    }, componentProps));
  }
}
containers_watermark_Watermark.propTypes = {
  asset: prop_types_default.a.instanceOf(lib_storage["a" /* default */].Asset),
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const watermark_mapStateToProps = state => {
  const targets = state.scratchGui.targets;
  const currentTargetId = targets.editingTarget;
  let asset;
  if (currentTargetId) {
    if (targets.stage.id === currentTargetId) {
      asset = targets.stage.costume.asset;
    } else if (targets.sprites.hasOwnProperty(currentTargetId)) {
      const currentSprite = targets.sprites[currentTargetId];
      asset = currentSprite.costume.asset;
    }
  }
  return {
    vm: state.scratchGui.vm,
    asset: asset
  };
};
const watermark_ConnectedComponent = Object(react_redux_es["b" /* connect */])(watermark_mapStateToProps)(throttled_property_hoc('asset', 500)(containers_watermark_Watermark));
/* harmony default export */ var containers_watermark = (watermark_ConnectedComponent);
// EXTERNAL MODULE: ./src/components/coming-soon/coming-soon.jsx
var coming_soon = __webpack_require__(291);

// EXTERNAL MODULE: ./src/components/backpack/backpack.css
var backpack = __webpack_require__(123);
var backpack_default = /*#__PURE__*/__webpack_require__.n(backpack);

// CONCATENATED MODULE: ./src/components/backpack/backpack.jsx









// TODO make sprite selector item not require onClick
const noop = () => {};
const dragTypeMap = {
  // Keys correspond with the backpack-server item types
  costume: drag_constants.BACKPACK_COSTUME,
  sound: drag_constants.BACKPACK_SOUND,
  script: drag_constants.BACKPACK_CODE,
  sprite: drag_constants.BACKPACK_SPRITE
};
const labelMap = Object(index_es["d" /* defineMessages */])({
  costume: {
    "id": "gui.backpack.costumeLabel",
    "defaultMessage": "costume"
  },
  sound: {
    "id": "gui.backpack.soundLabel",
    "defaultMessage": "sound"
  },
  script: {
    "id": "gui.backpack.scriptLabel",
    "defaultMessage": "script"
  },
  sprite: {
    "id": "gui.backpack.spriteLabel",
    "defaultMessage": "sprite"
  }
});
const backpack_Backpack = _ref => {
  let {
    blockDragOver,
    containerRef,
    contents,
    dragOver,
    error,
    expanded,
    intl,
    loading,
    showMore,
    onToggle,
    onDelete,
    onRename,
    onMouseEnter,
    onMouseLeave,
    onMore
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: backpack_default.a.backpackContainer
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: backpack_default.a.backpackHeader,
    onClick: onToggle
  }, onToggle ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Backpack",
    id: "gui.backpack.header"
  }) : /*#__PURE__*/react_default.a.createElement(coming_soon["a" /* ComingSoonTooltip */], {
    place: "top",
    tooltipId: "backpack-tooltip"
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Backpack",
    id: "gui.backpack.header"
  }))), expanded ? /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(backpack_default.a.backpackList, {
      [backpack_default.a.dragOver]: dragOver || blockDragOver
    }),
    ref: containerRef,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave
  }, error ? /*#__PURE__*/react_default.a.createElement("div", {
    className: backpack_default.a.statusMessage
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Error loading backpack",
    id: "gui.backpack.errorBackpack"
  })) : loading ? /*#__PURE__*/react_default.a.createElement("div", {
    className: backpack_default.a.statusMessage
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Loading...",
    id: "gui.backpack.loadingBackpack"
  })) : contents.length > 0 ? /*#__PURE__*/react_default.a.createElement("div", {
    className: backpack_default.a.backpackListInner
  }, contents.map(item => /*#__PURE__*/react_default.a.createElement(containers_sprite_selector_item, {
    className: backpack_default.a.backpackItem,
    costumeURL: item.thumbnailUrl,
    details: item.name,
    dragPayload: item,
    dragType: dragTypeMap[item.type],
    id: item.id,
    key: item.id,
    name: intl.formatMessage(labelMap[item.type]),
    selected: false,
    onClick: noop,
    onDeleteButtonClick: onDelete
    // Currently, renaming sprites is not supported.
    ,
    onRenameButtonClick: item.type === 'sprite' ? null : onRename
  })), showMore && /*#__PURE__*/react_default.a.createElement("button", {
    className: backpack_default.a.more,
    onClick: onMore
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "More",
    id: "gui.backpack.more"
  }))) : /*#__PURE__*/react_default.a.createElement("div", {
    className: backpack_default.a.statusMessage
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Backpack is empty",
    id: "gui.backpack.emptyBackpack"
  }))) : null);
};
backpack_Backpack.propTypes = {
  blockDragOver: prop_types_default.a.bool,
  containerRef: prop_types_default.a.func,
  contents: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    id: prop_types_default.a.string,
    thumbnailUrl: prop_types_default.a.string,
    type: prop_types_default.a.string,
    name: prop_types_default.a.string
  })),
  dragOver: prop_types_default.a.bool,
  error: prop_types_default.a.bool,
  expanded: prop_types_default.a.bool,
  intl: index_es["f" /* intlShape */],
  loading: prop_types_default.a.bool,
  onDelete: prop_types_default.a.func,
  onRename: prop_types_default.a.func,
  onMore: prop_types_default.a.func,
  onMouseEnter: prop_types_default.a.func,
  onMouseLeave: prop_types_default.a.func,
  onToggle: prop_types_default.a.func,
  showMore: prop_types_default.a.bool
};
backpack_Backpack.defaultProps = {
  blockDragOver: false,
  contents: [],
  dragOver: false,
  expanded: false,
  loading: false,
  showMore: false,
  onMore: null,
  onToggle: null
};
/* harmony default export */ var backpack_backpack = (Object(index_es["e" /* injectIntl */])(backpack_Backpack));
// CONCATENATED MODULE: ./src/containers/backpack.jsx
function backpack_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function backpack_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? backpack_ownKeys(Object(t), !0).forEach(function (r) { backpack_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : backpack_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function backpack_defineProperty(obj, key, value) { key = backpack_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function backpack_toPropertyKey(arg) { var key = backpack_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function backpack_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }











const backpack_dragTypes = [drag_constants.COSTUME, drag_constants.SOUND, drag_constants.SPRITE];
const DroppableBackpack = drop_area_hoc(backpack_dragTypes)(backpack_backpack);
const backpack_messages = Object(index_es["d" /* defineMessages */])({
  rename: {
    "id": "tw.backpack.rename",
    "defaultMessage": "New name:"
  }
});
class containers_backpack_Backpack extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleDrop', 'handleToggle', 'handleDelete', 'handleRename', 'getBackpackAssetURL', 'getContents', 'handleMouseEnter', 'handleMouseLeave', 'handleBlockDragEnd', 'handleBlockDragUpdate', 'handleMore']);
    this.state = {
      // While the DroppableHOC manages drop interactions for asset tiles,
      // we still need to micromanage drops coming from the block workspace.
      // TODO this may be refactorable with the share-the-love logic in SpriteSelectorItem
      blockDragOutsideWorkspace: false,
      blockDragOverBackpack: false,
      error: false,
      itemsPerPage: 20,
      moreToLoad: false,
      loading: false,
      expanded: false,
      contents: []
    };

    // If a host is given, add it as a web source to the storage module
    // TODO remove the hacky flag that prevents double adding
    if (props.host && !lib_storage["a" /* default */]._hasAddedBackpackSource && props.host !== LOCAL_API) {
      lib_storage["a" /* default */].addWebSource([lib_storage["a" /* default */].AssetType.ImageVector, lib_storage["a" /* default */].AssetType.ImageBitmap, lib_storage["a" /* default */].AssetType.Sound], this.getBackpackAssetURL);
      lib_storage["a" /* default */]._hasAddedBackpackSource = true;
    }
  }
  componentDidMount() {
    this.props.vm.addListener('BLOCK_DRAG_END', this.handleBlockDragEnd);
    this.props.vm.addListener('BLOCK_DRAG_UPDATE', this.handleBlockDragUpdate);
  }
  componentWillUnmount() {
    this.props.vm.removeListener('BLOCK_DRAG_END', this.handleBlockDragEnd);
    this.props.vm.removeListener('BLOCK_DRAG_UPDATE', this.handleBlockDragUpdate);
  }
  getBackpackAssetURL(asset) {
    return "".concat(this.props.host, "/").concat(asset.assetId, ".").concat(asset.dataFormat);
  }
  handleToggle() {
    const newState = !this.state.expanded;
    this.setState({
      expanded: newState,
      contents: []
    }, () => {
      // Emit resize on window to get blocks to resize
      window.dispatchEvent(new Event('resize'));
    });
    if (newState) {
      this.getContents();
    }
  }
  handleDrop(dragInfo) {
    let payloader = null;
    let presaveAsset = null;
    switch (dragInfo.dragType) {
      case drag_constants.COSTUME:
        payloader = costume_payload;
        presaveAsset = dragInfo.payload.asset;
        break;
      case drag_constants.SOUND:
        payloader = sound_payload;
        presaveAsset = dragInfo.payload.asset;
        break;
      case drag_constants.SPRITE:
        payloader = sprite_payload;
        break;
      case drag_constants.CODE:
        payloader = code_payload;
        break;
    }
    if (!payloader) return;

    // Creating the payload is async, so set loading before starting
    this.setState({
      loading: true
    }, () => {
      payloader(dragInfo.payload, this.props.vm).then(payload => {
        // Force the asset to save to the asset server before storing in backpack
        // Ensures any asset present in the backpack is also on the asset server
        if (presaveAsset && !presaveAsset.clean && !this.props.host === LOCAL_API) {
          return lib_storage["a" /* default */].store(presaveAsset.assetType, presaveAsset.dataFormat, presaveAsset.data, presaveAsset.assetId).then(() => payload);
        }
        return payload;
      }).then(payload => backpack_api_saveBackpackObject(backpack_objectSpread({
        host: this.props.host,
        token: this.props.token,
        username: this.props.username
      }, payload))).then(item => {
        this.setState({
          loading: false,
          contents: [item].concat(this.state.contents)
        });
      }).catch(error => {
        this.setState({
          error: true,
          loading: false
        });
        throw error;
      });
    });
  }
  handleDelete(id) {
    this.setState({
      loading: true
    }, () => {
      backpack_api_deleteBackpackObject({
        host: this.props.host,
        token: this.props.token,
        username: this.props.username,
        id: id
      }).then(() => {
        this.setState({
          loading: false,
          contents: this.state.contents.filter(o => o.id !== id)
        });
      }).catch(error => {
        this.setState({
          error: true,
          loading: false
        });
        throw error;
      });
    });
  }
  findItemById(id) {
    return this.state.contents.find(i => i.id === id);
  }
  handleRename(id) {
    const item = this.findItemById(id);
    // eslint-disable-next-line no-alert
    const newName = prompt(this.props.intl.formatMessage(backpack_messages.rename), item.name);
    if (!newName) {
      return;
    }
    this.setState({
      loading: true
    }, () => {
      backpack_api_updateBackpackObject(backpack_objectSpread(backpack_objectSpread({
        host: this.props.host
      }, item), {}, {
        name: newName
      })).then(newItem => {
        this.setState({
          loading: false,
          contents: this.state.contents.map(i => i === item ? newItem : i)
        });
      }).catch(error => {
        this.setState({
          error: true,
          loading: false
        });
        throw error;
      });
    });
  }
  getContents() {
    if (this.props.token && this.props.username || this.props.host === LOCAL_API) {
      this.setState({
        loading: true,
        error: false
      }, () => {
        backpack_api_getBackpackContents({
          host: this.props.host,
          token: this.props.token,
          username: this.props.username,
          offset: this.state.contents.length,
          limit: this.state.itemsPerPage
        }).then(contents => {
          this.setState({
            contents: this.state.contents.concat(contents),
            moreToLoad: contents.length === this.state.itemsPerPage,
            loading: false
          });
        }).catch(error => {
          this.setState({
            error: true,
            loading: false
          });
          throw error;
        });
      });
    }
  }
  handleBlockDragUpdate(isOutsideWorkspace) {
    this.setState({
      blockDragOutsideWorkspace: isOutsideWorkspace
    });
  }
  handleMouseEnter() {
    if (this.state.blockDragOutsideWorkspace) {
      this.setState({
        blockDragOverBackpack: true
      });
    }
  }
  handleMouseLeave() {
    this.setState({
      blockDragOverBackpack: false
    });
  }
  handleBlockDragEnd(blocks, topBlockId) {
    if (this.state.blockDragOverBackpack) {
      this.handleDrop({
        dragType: drag_constants.CODE,
        payload: {
          blockObjects: blocks,
          topBlockId: topBlockId
        }
      });
    }
    this.setState({
      blockDragOverBackpack: false,
      blockDragOutsideWorkspace: false
    });
  }
  handleMore() {
    this.getContents();
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(DroppableBackpack, {
      blockDragOver: this.state.blockDragOverBackpack,
      contents: this.state.contents,
      error: this.state.error,
      expanded: this.state.expanded,
      loading: this.state.loading,
      showMore: this.state.moreToLoad,
      onDelete: this.handleDelete,
      onRename: this.handleRename,
      onDrop: this.handleDrop,
      onMore: this.handleMore,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      onToggle: this.props.host ? this.handleToggle : null
    });
  }
}
containers_backpack_Backpack.propTypes = {
  intl: index_es["f" /* intlShape */],
  host: prop_types_default.a.string,
  token: prop_types_default.a.string,
  username: prop_types_default.a.string,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const getTokenAndUsername = state => {
  // Look for the session state provided by scratch-www
  if (state.session && state.session.session && state.session.session.user) {
    return {
      token: state.session.session.user.token,
      username: state.session.session.user.username
    };
  }
  // Otherwise try to pull testing params out of the URL, or return nulls
  // TODO a hack for testing the backpack
  const tokenMatches = window.location.href.match(/[?&]token=([^&]*)&?/);
  const usernameMatches = window.location.href.match(/[?&]username=([^&]*)&?/);
  return {
    token: tokenMatches ? tokenMatches[1] : null,
    username: usernameMatches ? usernameMatches[1] : null
  };
};
const backpack_mapStateToProps = state => Object.assign({
  dragInfo: state.scratchGui.assetDrag,
  vm: state.scratchGui.vm,
  blockDrag: state.scratchGui.blockDrag
}, getTokenAndUsername(state));
const backpack_mapDispatchToProps = () => ({});
/* harmony default export */ var containers_backpack = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(backpack_mapStateToProps, backpack_mapDispatchToProps)(containers_backpack_Backpack)));
// EXTERNAL MODULE: ./src/containers/webgl-modal.jsx + 1 modules
var webgl_modal = __webpack_require__(175);

// EXTERNAL MODULE: ./src/components/browser-modal/browser-modal.jsx
var browser_modal = __webpack_require__(171);

// CONCATENATED MODULE: ./src/lib/libraries/tutorial-tags.js

/* harmony default export */ var tutorial_tags = ([{
  tag: 'animation',
  intlLabel: tag_messages.animation
}, {
  tag: 'art',
  intlLabel: tag_messages.art
}, {
  tag: 'music',
  intlLabel: tag_messages.music
}, {
  tag: 'games',
  intlLabel: tag_messages.games
}, {
  tag: 'stories',
  intlLabel: tag_messages.stories
}]);
// EXTERNAL MODULE: ./src/lib/isScratchDesktop.js
var lib_isScratchDesktop = __webpack_require__(139);

// CONCATENATED MODULE: ./src/containers/tips-library.jsx












const tips_library_messages = Object(index_es["d" /* defineMessages */])({
  tipsLibraryTitle: {
    "id": "gui.tipsLibrary.tutorials",
    "defaultMessage": "Choose a Tutorial"
  }
});
class tips_library_TipsLibrary extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleItemSelect']);
  }
  handleItemSelect(item) {
    analytics["a" /* default */].event({
      category: 'library',
      action: 'Select How-to',
      label: item.id
    });

    /*
        Support tutorials that require specific starter projects.
        If a tutorial declares "requiredProjectId", check that the URL contains
        it. If it is not, open a new page with this tutorial and project id.
         TODO remove this at first opportunity. If this is still here after HOC2018,
             blame Eric R. Andrew is also on record saying "this is temporary".
        UPDATE well now Paul is wrapped into this as well. Sigh...
            eventually we will find a solution that doesn't involve loading a whole project
    */
    if (item.requiredProjectId && item.requiredProjectId !== this.props.projectId) {
      const urlParams = "/projects/".concat(item.requiredProjectId, "/editor?tutorial=").concat(item.urlId);
      return window.open(window.location.origin + urlParams, '_blank');
    }
    this.props.onActivateDeck(item.id);
  }
  render() {
    const decksLibraryThumbnailData = Object.keys(decks["a" /* default */]).filter(id => {
      if (Object(lib_isScratchDesktop["b" /* notScratchDesktop */])()) return true; // Do not filter anything in online editor
      const deck = decks["a" /* default */][id];
      // Scratch Desktop doesn't want tutorials with `requiredProjectId`
      if (deck.hasOwnProperty('requiredProjectId')) return false;
      // Scratch Desktop should not load tutorials that are _only_ videos
      if (deck.steps.filter(s => s.title).length === 0) return false;
      // Allow any other tutorials
      return true;
    }).map(id => ({
      rawURL: decks["a" /* default */][id].img,
      id: id,
      name: decks["a" /* default */][id].name,
      featured: true,
      tags: decks["a" /* default */][id].tags,
      urlId: decks["a" /* default */][id].urlId,
      requiredProjectId: decks["a" /* default */][id].requiredProjectId,
      hidden: decks["a" /* default */][id].hidden || false
    }));
    if (!this.props.visible) return null;
    return /*#__PURE__*/react_default.a.createElement(library_library, {
      filterable: true,
      data: decksLibraryThumbnailData,
      id: "tipsLibrary",
      tags: tutorial_tags,
      title: this.props.intl.formatMessage(tips_library_messages.tipsLibraryTitle),
      visible: this.props.visible,
      onItemSelected: this.handleItemSelect,
      onRequestClose: this.props.onRequestClose
    });
  }
}
tips_library_TipsLibrary.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  onActivateDeck: prop_types_default.a.func.isRequired,
  onRequestClose: prop_types_default.a.func,
  projectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
  visible: prop_types_default.a.bool
};
const tips_library_mapStateToProps = state => ({
  visible: state.scratchGui.modals.tipsLibrary,
  projectId: state.scratchGui.projectState.projectId
});
const tips_library_mapDispatchToProps = dispatch => ({
  onActivateDeck: id => dispatch(Object(cards["a" /* activateDeck */])(id)),
  onRequestClose: () => dispatch(Object(modals["l" /* closeTipsLibrary */])())
});
/* harmony default export */ var tips_library = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(tips_library_mapStateToProps, tips_library_mapDispatchToProps)(tips_library_TipsLibrary)));
// EXTERNAL MODULE: ./src/components/cards/card.css
var card = __webpack_require__(30);
var card_default = /*#__PURE__*/__webpack_require__.n(card);

// EXTERNAL MODULE: ./src/components/cards/icon--shrink.svg
var icon_shrink = __webpack_require__(875);
var icon_shrink_default = /*#__PURE__*/__webpack_require__.n(icon_shrink);

// EXTERNAL MODULE: ./src/components/cards/icon--expand.svg
var icon_expand = __webpack_require__(876);
var icon_expand_default = /*#__PURE__*/__webpack_require__.n(icon_expand);

// EXTERNAL MODULE: ./src/components/cards/icon--next.svg
var icon_next = __webpack_require__(474);
var icon_next_default = /*#__PURE__*/__webpack_require__.n(icon_next);

// EXTERNAL MODULE: ./src/components/cards/icon--prev.svg
var icon_prev = __webpack_require__(475);
var icon_prev_default = /*#__PURE__*/__webpack_require__.n(icon_prev);

// EXTERNAL MODULE: ./src/lib/assets/icon--tutorials.svg
var icon_tutorials = __webpack_require__(448);
var icon_tutorials_default = /*#__PURE__*/__webpack_require__.n(icon_tutorials);

// EXTERNAL MODULE: ./src/components/cards/icon--close.svg
var cards_icon_close = __webpack_require__(877);
var cards_icon_close_default = /*#__PURE__*/__webpack_require__.n(cards_icon_close);

// CONCATENATED MODULE: ./src/lib/libraries/decks/translate-video.js
/**
 * @fileoverview
 * Utility function to look up whether a translated video exists for a locale.
 */

// TODO: ja-Hira are copies of ja, replace with real ja-Hira when available.
const videos = {
  // tw: we don't use the videos, remove them
};

/**
 * Return a video identifier (on our video hosting service)
 * @param {string} videoId key in the videos object, or id string.
 * @param {string} locale locale to look up. If locale is not defined return the id for 'en' by default
 * @return {string} identifier for the video on our video hosting service.
 */
const translateVideo = (videoId, locale) => {
  // if the videoId is not recognized in the videos object, assume it's already a video id on wistia
  if (!videos.hasOwnProperty(videoId)) return videoId;
  if (videos[videoId].hasOwnProperty(locale)) {
    return videos[videoId][locale];
  }
  return videos[videoId].en;
};

// CONCATENATED MODULE: ./src/lib/libraries/decks/translate-image.js
/**
 * @fileoverview
 * Utility functions for handling tutorial images in multiple languages
 */

const defaultImages = {};
let savedImages = {};
let savedLocale = '';
const translations = {};
const loadImageData = locale => {
  if (translations.hasOwnProperty(locale)) {
    translations[locale]().then(newImages => {
      savedImages = newImages;
      savedLocale = locale;
    });
  }
};

/**
 * Return image data for tutorials based on locale (default: en)
 * @param {string} imageId key in the images object, or id string.
 * @param {string} locale requested locale
 * @return {string} image
 */
const translateImage = (imageId, locale) => {
  if (locale !== savedLocale || !savedImages.hasOwnProperty(imageId)) {
    return defaultImages[imageId];
  }
  return savedImages[imageId];
};

// CONCATENATED MODULE: ./src/components/cards/cards.jsx
const cards_excluded = ["activeDeckId", "content", "dragging", "isRtl", "locale", "onActivateDeckFactory", "onCloseCards", "onShrinkExpandCards", "onDrag", "onStartDrag", "onEndDrag", "onShowAll", "onNextStep", "onPrevStep", "showVideos", "step", "expanded"];
function cards_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = cards_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function cards_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














const CardHeader = _ref => {
  let {
    onCloseCards,
    onShrinkExpandCards,
    onShowAll,
    totalSteps,
    step,
    expanded
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: expanded ? card_default.a.headerButtons : classnames_default()(card_default.a.headerButtons, card_default.a.headerButtonsHidden)
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.allButton,
    onClick: onShowAll
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: card_default.a.helpIcon,
    src: icon_tutorials_default.a
  }), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Tutorials",
    id: "gui.cards.all-tutorials"
  })), totalSteps > 1 ? /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.stepsList
  }, Array(totalSteps).fill(0).map((_, i) => /*#__PURE__*/react_default.a.createElement("div", {
    className: i === step ? card_default.a.activeStepPip : card_default.a.inactiveStepPip,
    key: "pip-step-".concat(i)
  }))) : null, /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.headerButtonsRight
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.shrinkExpandButton,
    onClick: onShrinkExpandCards
  }, /*#__PURE__*/react_default.a.createElement("img", {
    draggable: false,
    src: expanded ? icon_shrink_default.a : icon_expand_default.a
  }), expanded ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Shrink",
    id: "gui.cards.shrink"
  }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Expand",
    id: "gui.cards.expand"
  })), /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.removeButton,
    onClick: onCloseCards
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: card_default.a.closeIcon,
    src: cards_icon_close_default.a
  }), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Close",
    id: "gui.cards.close"
  }))));
};
class cards_VideoStep extends react_default.a.Component {
  componentDidMount() {
    const script = document.createElement('script');
    script.src = "https://fast.wistia.com/embed/medias/".concat(this.props.video, ".jsonp");
    script.async = true;
    script.setAttribute('id', 'wistia-video-content');
    document.body.appendChild(script);
    const script2 = document.createElement('script');
    script2.src = 'https://fast.wistia.com/assets/external/E-v1.js';
    script2.async = true;
    script2.setAttribute('id', 'wistia-video-api');
    document.body.appendChild(script2);
  }

  // We use the Wistia API here to update or pause the video dynamically:
  // https://wistia.com/support/developers/player-api
  componentDidUpdate(prevProps) {
    // Ensure the wistia API is loaded and available
    if (!(window.Wistia && window.Wistia.api)) return;

    // Get a handle on the currently loaded video
    const video = window.Wistia.api(prevProps.video);

    // Reset the video source if a new video has been chosen from the library
    if (prevProps.video !== this.props.video) {
      video.replaceWith(this.props.video);
    }

    // Pause the video if the modal is being shrunken
    if (!this.props.expanded) {
      video.pause();
    }
  }
  componentWillUnmount() {
    const script = document.getElementById('wistia-video-content');
    script.parentNode.removeChild(script);
    const script2 = document.getElementById('wistia-video-api');
    script2.parentNode.removeChild(script2);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: card_default.a.stepVideo
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: "wistia_embed wistia_async_".concat(this.props.video),
      id: "video-div",
      style: {
        height: "257px",
        width: "466px"
      }
    }, "\xA0"));
  }
}
cards_VideoStep.propTypes = {
  expanded: prop_types_default.a.bool.isRequired,
  video: prop_types_default.a.string.isRequired
};
const ImageStep = _ref2 => {
  let {
    title,
    image
  } = _ref2;
  return /*#__PURE__*/react_default.a.createElement(react["Fragment"], null, /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.stepTitle
  }, title), /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.stepImageContainer
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: card_default.a.stepImage,
    draggable: false,
    key: image /* Use src as key to prevent hanging around on slow connections */,
    src: image
  })));
};
ImageStep.propTypes = {
  image: prop_types_default.a.string.isRequired,
  title: prop_types_default.a.node.isRequired
};
const NextPrevButtons = _ref3 => {
  let {
    isRtl,
    onNextStep,
    onPrevStep,
    expanded
  } = _ref3;
  return /*#__PURE__*/react_default.a.createElement(react["Fragment"], null, onNextStep ? /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("div", {
    className: expanded ? isRtl ? card_default.a.leftCard : card_default.a.rightCard : card_default.a.hidden
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: expanded ? isRtl ? card_default.a.leftButton : card_default.a.rightButton : card_default.a.hidden,
    onClick: onNextStep
  }, /*#__PURE__*/react_default.a.createElement("img", {
    draggable: false,
    src: isRtl ? icon_prev_default.a : icon_next_default.a
  }))) : null, onPrevStep ? /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("div", {
    className: expanded ? isRtl ? card_default.a.rightCard : card_default.a.leftCard : card_default.a.hidden
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: expanded ? isRtl ? card_default.a.rightButton : card_default.a.leftButton : card_default.a.hidden,
    onClick: onPrevStep
  }, /*#__PURE__*/react_default.a.createElement("img", {
    draggable: false,
    src: isRtl ? icon_next_default.a : icon_prev_default.a
  }))) : null);
};
NextPrevButtons.propTypes = {
  expanded: prop_types_default.a.bool.isRequired,
  isRtl: prop_types_default.a.bool,
  onNextStep: prop_types_default.a.func,
  onPrevStep: prop_types_default.a.func
};
CardHeader.propTypes = {
  expanded: prop_types_default.a.bool.isRequired,
  onCloseCards: prop_types_default.a.func.isRequired,
  onShowAll: prop_types_default.a.func.isRequired,
  onShrinkExpandCards: prop_types_default.a.func.isRequired,
  step: prop_types_default.a.number,
  totalSteps: prop_types_default.a.number
};
const PreviewsStep = _ref4 => {
  let {
    deckIds,
    content,
    onActivateDeckFactory,
    onShowAll
  } = _ref4;
  return /*#__PURE__*/react_default.a.createElement(react["Fragment"], null, /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.stepTitle
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "More things to try!",
    id: "gui.cards.more-things-to-try"
  })), /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.decks
  }, deckIds.slice(0, 2).map(id => /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.deck,
    key: "deck-preview-".concat(id),
    onClick: onActivateDeckFactory(id)
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: card_default.a.deckImage,
    draggable: false,
    src: content[id].img
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.deckName
  }, content[id].name)))), /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.seeAll
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: card_default.a.seeAllButton,
    onClick: onShowAll
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "See more",
    id: "gui.cards.see-more"
  }))));
};
PreviewsStep.propTypes = {
  content: prop_types_default.a.shape({
    id: prop_types_default.a.shape({
      name: prop_types_default.a.node.isRequired,
      img: prop_types_default.a.string.isRequired,
      steps: prop_types_default.a.arrayOf(prop_types_default.a.shape({
        title: prop_types_default.a.node,
        image: prop_types_default.a.string,
        video: prop_types_default.a.string,
        deckIds: prop_types_default.a.arrayOf(prop_types_default.a.string)
      }))
    })
  }).isRequired,
  deckIds: prop_types_default.a.arrayOf(prop_types_default.a.string).isRequired,
  onActivateDeckFactory: prop_types_default.a.func.isRequired,
  onShowAll: prop_types_default.a.func.isRequired
};
const cards_Cards = props => {
  const {
      activeDeckId,
      content,
      dragging,
      isRtl,
      locale,
      onActivateDeckFactory,
      onCloseCards,
      onShrinkExpandCards,
      onDrag,
      onStartDrag,
      onEndDrag,
      onShowAll,
      onNextStep,
      onPrevStep,
      showVideos,
      step,
      expanded
    } = props,
    posProps = cards_objectWithoutProperties(props, cards_excluded);
  let {
    x,
    y
  } = posProps;
  if (activeDeckId === null) return;

  // Tutorial cards need to calculate their own dragging bounds
  // to allow for dragging the cards off the left, right and bottom
  // edges of the workspace.
  const cardHorizontalDragOffset = 400; // ~80% of card width
  const cardVerticalDragOffset = expanded ? 257 : 0; // ~80% of card height, if expanded
  const menuBarHeight = 48; // TODO: get pre-calculated from elsewhere?
  const wideCardWidth = 500;
  if (x === 0 && y === 0) {
    // initialize positions
    x = isRtl ? -190 - wideCardWidth - cardHorizontalDragOffset : 292;
    x += cardHorizontalDragOffset;
    // The tallest cards are about 320px high, and the default position is pinned
    // to near the bottom of the blocks palette to allow room to work above.
    const tallCardHeight = 320;
    const bottomMargin = 60; // To avoid overlapping the backpack region
    y = window.innerHeight - tallCardHeight - bottomMargin - menuBarHeight;
  }
  const steps = content[activeDeckId].steps;
  return (
    /*#__PURE__*/
    // Custom overlay to act as the bounding parent for the draggable, using values from above
    react_default.a.createElement("div", {
      className: card_default.a.cardContainerOverlay,
      style: {
        width: "".concat(window.innerWidth + 2 * cardHorizontalDragOffset, "px"),
        height: "".concat(window.innerHeight - menuBarHeight + cardVerticalDragOffset, "px"),
        top: "".concat(menuBarHeight, "px"),
        left: "".concat(-cardHorizontalDragOffset, "px")
      }
    }, /*#__PURE__*/react_default.a.createElement(react_draggable_default.a, {
      bounds: "parent",
      cancel: "#video-div" // disable dragging on video div
      ,
      position: {
        x: x,
        y: y
      },
      onDrag: onDrag,
      onStart: onStartDrag,
      onStop: onEndDrag
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: card_default.a.cardContainer
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: card_default.a.card
    }, /*#__PURE__*/react_default.a.createElement(CardHeader, {
      expanded: expanded,
      step: step,
      totalSteps: steps.length,
      onCloseCards: onCloseCards,
      onShowAll: onShowAll,
      onShrinkExpandCards: onShrinkExpandCards
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: expanded ? card_default.a.stepBody : card_default.a.hidden
    }, steps[step].deckIds ? /*#__PURE__*/react_default.a.createElement(PreviewsStep, {
      content: content,
      deckIds: steps[step].deckIds,
      onActivateDeckFactory: onActivateDeckFactory,
      onShowAll: onShowAll
    }) : steps[step].video ? showVideos ? /*#__PURE__*/react_default.a.createElement(cards_VideoStep, {
      dragging: dragging,
      expanded: expanded,
      video: translateVideo(steps[step].video, locale)
    }) :
    /*#__PURE__*/
    // Else show the deck image and title
    react_default.a.createElement(ImageStep, {
      image: content[activeDeckId].img,
      title: content[activeDeckId].name
    }) : /*#__PURE__*/react_default.a.createElement(ImageStep, {
      image: translateImage(steps[step].image, locale),
      title: steps[step].title
    }), steps[step].trackingPixel && steps[step].trackingPixel), /*#__PURE__*/react_default.a.createElement(NextPrevButtons, {
      expanded: expanded,
      isRtl: isRtl,
      onNextStep: step < steps.length - 1 ? onNextStep : null,
      onPrevStep: step > 0 ? onPrevStep : null
    })))))
  );
};
cards_Cards.propTypes = {
  activeDeckId: prop_types_default.a.string.isRequired,
  content: prop_types_default.a.shape({
    id: prop_types_default.a.shape({
      name: prop_types_default.a.node.isRequired,
      img: prop_types_default.a.string.isRequired,
      steps: prop_types_default.a.arrayOf(prop_types_default.a.shape({
        title: prop_types_default.a.node,
        image: prop_types_default.a.string,
        video: prop_types_default.a.string,
        deckIds: prop_types_default.a.arrayOf(prop_types_default.a.string)
      }))
    })
  }),
  dragging: prop_types_default.a.bool.isRequired,
  expanded: prop_types_default.a.bool.isRequired,
  isRtl: prop_types_default.a.bool.isRequired,
  locale: prop_types_default.a.string.isRequired,
  onActivateDeckFactory: prop_types_default.a.func.isRequired,
  onCloseCards: prop_types_default.a.func.isRequired,
  onDrag: prop_types_default.a.func,
  onEndDrag: prop_types_default.a.func,
  onNextStep: prop_types_default.a.func.isRequired,
  onPrevStep: prop_types_default.a.func.isRequired,
  onShowAll: prop_types_default.a.func,
  onShrinkExpandCards: prop_types_default.a.func.isRequired,
  onStartDrag: prop_types_default.a.func,
  showVideos: prop_types_default.a.bool,
  step: prop_types_default.a.number.isRequired,
  x: prop_types_default.a.number,
  y: prop_types_default.a.number
};
cards_Cards.defaultProps = {
  showVideos: true
};

// CONCATENATED MODULE: ./src/containers/cards.jsx








class containers_cards_Cards extends react_default.a.Component {
  componentDidMount() {
    if (this.props.locale !== 'en') {
      loadImageData(this.props.locale);
    }
  }
  componentDidUpdate(prevProps) {
    if (this.props.locale !== prevProps.locale) {
      loadImageData(this.props.locale);
    }
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(cards_Cards, this.props);
  }
}
containers_cards_Cards.propTypes = {
  locale: prop_types_default.a.string.isRequired
};
const cards_mapStateToProps = state => ({
  visible: state.scratchGui.cards.visible,
  content: state.scratchGui.cards.content,
  activeDeckId: state.scratchGui.cards.activeDeckId,
  step: state.scratchGui.cards.step,
  expanded: state.scratchGui.cards.expanded,
  x: state.scratchGui.cards.x,
  y: state.scratchGui.cards.y,
  isRtl: state.locales.isRtl,
  locale: state.locales.locale,
  dragging: state.scratchGui.cards.dragging,
  showVideos: Object(lib_isScratchDesktop["b" /* notScratchDesktop */])()
});
const cards_mapDispatchToProps = dispatch => ({
  onActivateDeckFactory: id => () => dispatch(Object(cards["a" /* activateDeck */])(id)),
  onShowAll: () => {
    dispatch(Object(modals["A" /* openTipsLibrary */])());
    dispatch(Object(cards["c" /* closeCards */])());
  },
  onCloseCards: () => dispatch(Object(cards["c" /* closeCards */])()),
  onShrinkExpandCards: () => dispatch(Object(cards["i" /* shrinkExpandCards */])()),
  onNextStep: () => dispatch(Object(cards["g" /* nextStep */])()),
  onPrevStep: () => dispatch(Object(cards["h" /* prevStep */])()),
  onDrag: (e_, data) => dispatch(Object(cards["e" /* dragCard */])(data.x, data.y)),
  onStartDrag: () => dispatch(Object(cards["j" /* startDrag */])()),
  onEndDrag: () => dispatch(Object(cards["f" /* endDrag */])())
});
/* harmony default export */ var containers_cards = (Object(react_redux_es["b" /* connect */])(cards_mapStateToProps, cards_mapDispatchToProps)(containers_cards_Cards));
// EXTERNAL MODULE: ./src/components/drag-layer/drag-layer.css
var drag_layer = __webpack_require__(375);
var drag_layer_default = /*#__PURE__*/__webpack_require__.n(drag_layer);

// CONCATENATED MODULE: ./src/components/drag-layer/drag-layer.jsx




/* eslint no-confusing-arrow: ["error", {"allowParens": true}] */
const DragLayer = _ref => {
  let {
    dragging,
    img,
    currentOffset
  } = _ref;
  return dragging ? /*#__PURE__*/react_default.a.createElement("div", {
    className: drag_layer_default.a.dragLayer
  }, /*#__PURE__*/react_default.a.createElement("div", {
    className: drag_layer_default.a.imageWrapper,
    style: {
      transform: "translate(".concat(currentOffset.x, "px, ").concat(currentOffset.y, "px)")
    }
  }, /*#__PURE__*/react_default.a.createElement("img", {
    className: drag_layer_default.a.image,
    src: img
  }))) : null;
};
DragLayer.propTypes = {
  currentOffset: prop_types_default.a.shape({
    x: prop_types_default.a.number.isRequired,
    y: prop_types_default.a.number.isRequired
  }),
  dragging: prop_types_default.a.bool.isRequired,
  img: prop_types_default.a.string
};
/* harmony default export */ var drag_layer_drag_layer = (DragLayer);
// CONCATENATED MODULE: ./src/containers/drag-layer.jsx


const drag_layer_mapStateToProps = state => ({
  dragging: state.scratchGui.assetDrag.dragging,
  currentOffset: state.scratchGui.assetDrag.currentOffset,
  img: state.scratchGui.assetDrag.img
});
/* harmony default export */ var containers_drag_layer = (Object(react_redux_es["b" /* connect */])(drag_layer_mapStateToProps)(drag_layer_drag_layer));
// EXTERNAL MODULE: ./node_modules/keymirror/index.js
var keymirror = __webpack_require__(53);
var keymirror_default = /*#__PURE__*/__webpack_require__.n(keymirror);

// EXTERNAL MODULE: ./src/components/connection-modal/connection-modal.css
var connection_modal_connection_modal = __webpack_require__(8);
var connection_modal_default = /*#__PURE__*/__webpack_require__.n(connection_modal_connection_modal);

// CONCATENATED MODULE: ./src/components/connection-modal/peripheral-tile.jsx







class peripheral_tile_PeripheralTile extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleConnecting']);
  }
  handleConnecting() {
    this.props.onConnecting(this.props.peripheralId);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.peripheralTile
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.peripheralTileName
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: connection_modal_default.a.peripheralTileImage,
      src: this.props.connectionSmallIconURL
    }), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.peripheralTileNameWrapper
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.peripheralTileNameLabel
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Device name",
      id: "gui.connection.peripheral-name-label"
    })), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.peripheralTileNameText
    }, this.props.name))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.peripheralTileWidgets
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: connection_modal_default.a.signalStrengthMeter
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(connection_modal_default.a.signalBar, {
        [connection_modal_default.a.greenBar]: this.props.rssi > -80
      })
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(connection_modal_default.a.signalBar, {
        [connection_modal_default.a.greenBar]: this.props.rssi > -60
      })
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(connection_modal_default.a.signalBar, {
        [connection_modal_default.a.greenBar]: this.props.rssi > -40
      })
    }), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(connection_modal_default.a.signalBar, {
        [connection_modal_default.a.greenBar]: this.props.rssi > -20
      })
    })), /*#__PURE__*/react_default.a.createElement("button", {
      onClick: this.handleConnecting
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Connect",
      id: "gui.connection.connect"
    }))));
  }
}
peripheral_tile_PeripheralTile.propTypes = {
  connectionSmallIconURL: prop_types_default.a.string,
  name: prop_types_default.a.string,
  onConnecting: prop_types_default.a.func,
  peripheralId: prop_types_default.a.string,
  rssi: prop_types_default.a.number
};
/* harmony default export */ var peripheral_tile = (peripheral_tile_PeripheralTile);
// CONCATENATED MODULE: ./src/components/connection-modal/dots.jsx





const Dots = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(props.className, connection_modal_default.a.dotsRow)
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(connection_modal_default.a.dotsHolder, {
    [connection_modal_default.a.dotsHolderError]: props.error,
    [connection_modal_default.a.dotsHolderSuccess]: props.success
  })
}, Array(props.total).fill(0).map((_, i) => {
  let type = 'inactive';
  if (props.counter === i) type = 'active';
  if (props.success) type = 'success';
  if (props.error) type = 'error';
  return /*#__PURE__*/react_default.a.createElement(Dot, {
    key: "dot-".concat(i),
    type: type
  });
})));
Dots.propTypes = {
  className: prop_types_default.a.string,
  counter: prop_types_default.a.number,
  error: prop_types_default.a.bool,
  success: prop_types_default.a.bool,
  total: prop_types_default.a.number
};
const Dot = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(connection_modal_default.a.dot, {
    [connection_modal_default.a.inactiveStepDot]: props.type === 'inactive',
    [connection_modal_default.a.activeStepDot]: props.type === 'active',
    [connection_modal_default.a.successDot]: props.type === 'success',
    [connection_modal_default.a.errorDot]: props.type === 'error'
  })
});
Dot.propTypes = {
  type: prop_types_default.a.string
};
/* harmony default export */ var dots = (Dots);
// EXTERNAL MODULE: ./src/components/connection-modal/icons/searching.png
var searching = __webpack_require__(292);
var searching_default = /*#__PURE__*/__webpack_require__.n(searching);

// EXTERNAL MODULE: ./src/components/connection-modal/icons/refresh.svg
var refresh = __webpack_require__(878);
var refresh_default = /*#__PURE__*/__webpack_require__.n(refresh);

// CONCATENATED MODULE: ./src/components/connection-modal/scanning-step.jsx










const scanning_step_ScanningStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.activityArea
}, props.scanning ? props.peripheralList.length === 0 ? /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.activityAreaInfo
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.centeredRow
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: classnames_default()(connection_modal_default.a.radarSmall, connection_modal_default.a.radarSpin),
  src: searching_default.a
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Looking for devices",
  id: "gui.connection.scanning.lookingforperipherals"
}))) : /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.peripheralTilePane
}, props.peripheralList.map(peripheral => /*#__PURE__*/react_default.a.createElement(peripheral_tile, {
  connectionSmallIconURL: props.connectionSmallIconURL,
  key: peripheral.peripheralId,
  name: peripheral.name,
  peripheralId: peripheral.peripheralId,
  rssi: peripheral.rssi,
  onConnecting: props.onConnecting
}))) : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.instructions
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "No devices found",
  id: "gui.connection.scanning.noPeripheralsFound"
}))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.bottomArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.instructions)
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Select your device in the list above.",
  id: "gui.connection.scanning.instructions"
})), /*#__PURE__*/react_default.a.createElement(dots, {
  className: connection_modal_default.a.bottomAreaItem,
  counter: 0,
  total: 3
}), /*#__PURE__*/react_default.a.createElement("button", {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.connectionButton),
  onClick: props.onRefresh
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Refresh",
  id: "gui.connection.search"
}), /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.buttonIconRight,
  src: refresh_default.a
}))));
scanning_step_ScanningStep.propTypes = {
  connectionSmallIconURL: prop_types_default.a.string,
  onConnecting: prop_types_default.a.func,
  onRefresh: prop_types_default.a.func,
  peripheralList: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    name: prop_types_default.a.string,
    rssi: prop_types_default.a.number,
    peripheralId: prop_types_default.a.string
  })),
  scanning: prop_types_default.a.bool.isRequired
};
scanning_step_ScanningStep.defaultProps = {
  peripheralList: [],
  scanning: true
};
/* harmony default export */ var scanning_step = (scanning_step_ScanningStep);
// CONCATENATED MODULE: ./src/containers/scanning-step.jsx





class containers_scanning_step_ScanningStep extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handlePeripheralListUpdate', 'handlePeripheralScanTimeout', 'handleRefresh']);
    this.state = {
      scanning: true,
      peripheralList: []
    };
  }
  componentDidMount() {
    this.props.vm.scanForPeripheral(this.props.extensionId);
    this.props.vm.on('PERIPHERAL_LIST_UPDATE', this.handlePeripheralListUpdate);
    this.props.vm.on('PERIPHERAL_SCAN_TIMEOUT', this.handlePeripheralScanTimeout);
  }
  componentWillUnmount() {
    // @todo: stop the peripheral scan here
    this.props.vm.removeListener('PERIPHERAL_LIST_UPDATE', this.handlePeripheralListUpdate);
    this.props.vm.removeListener('PERIPHERAL_SCAN_TIMEOUT', this.handlePeripheralScanTimeout);
  }
  handlePeripheralScanTimeout() {
    this.setState({
      scanning: false,
      peripheralList: []
    });
  }
  handlePeripheralListUpdate(newList) {
    // TODO: sort peripherals by signal strength? so they don't jump around
    const peripheralArray = Object.keys(newList).map(id => newList[id]);
    this.setState({
      peripheralList: peripheralArray
    });
  }
  handleRefresh() {
    this.props.vm.scanForPeripheral(this.props.extensionId);
    this.setState({
      scanning: true,
      peripheralList: []
    });
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(scanning_step, {
      connectionSmallIconURL: this.props.connectionSmallIconURL,
      peripheralList: this.state.peripheralList,
      phase: this.state.phase,
      scanning: this.state.scanning,
      title: this.props.extensionId,
      onConnected: this.props.onConnected,
      onConnecting: this.props.onConnecting,
      onRefresh: this.handleRefresh
    });
  }
}
containers_scanning_step_ScanningStep.propTypes = {
  connectionSmallIconURL: prop_types_default.a.string,
  extensionId: prop_types_default.a.string.isRequired,
  onConnected: prop_types_default.a.func.isRequired,
  onConnecting: prop_types_default.a.func.isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var containers_scanning_step = (containers_scanning_step_ScanningStep);
// EXTERNAL MODULE: ./src/components/connection-modal/icons/bluetooth-white.svg
var bluetooth_white = __webpack_require__(222);
var bluetooth_white_default = /*#__PURE__*/__webpack_require__.n(bluetooth_white);

// EXTERNAL MODULE: ./src/components/connection-modal/icons/back.svg
var back = __webpack_require__(223);
var back_default = /*#__PURE__*/__webpack_require__.n(back);

// CONCATENATED MODULE: ./src/components/connection-modal/auto-scanning-step.jsx












const PHASES = keymirror_default()({
  prescan: null,
  pressbutton: null,
  notfound: null
});
const auto_scanning_step_AutoScanningStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.activityArea
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.activityAreaInfo
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.centeredRow
}, props.phase === PHASES.prescan && /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.radarBig,
  src: searching_default.a
}), /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.bluetoothCenteredIcon,
  src: bluetooth_white_default.a
})), props.phase === PHASES.pressbutton && /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement("img", {
  className: classnames_default()(connection_modal_default.a.radarBig, connection_modal_default.a.radarSpin),
  src: searching_default.a
}), /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.connectionTipIcon,
  src: props.connectionTipIconURL
})), props.phase === PHASES.notfound && /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.instructions
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "No devices found",
  id: "gui.connection.auto-scanning.noPeripheralsFound"
}))))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.bottomArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.instructions)
}, props.phase === PHASES.prescan && /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Have your device nearby, then begin searching.",
  id: "gui.connection.auto-scanning.prescan"
}), props.phase === PHASES.pressbutton && /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Press the button on your device.",
  id: "gui.connection.auto-scanning.pressbutton"
})), /*#__PURE__*/react_default.a.createElement(dots, {
  className: connection_modal_default.a.bottomAreaItem,
  counter: 0,
  total: 3
}), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.buttonRow)
}, props.phase === PHASES.prescan && /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onStartScan
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Start Searching",
  id: "gui.connection.auto-scanning.start-search"
})), props.phase === PHASES.pressbutton && /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.segmentedButton
}, /*#__PURE__*/react_default.a.createElement("button", {
  disabled: true,
  className: connection_modal_default.a.connectionButton
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Searching...",
  id: "gui.connection.connecting-searchbutton"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onRefresh
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.abortConnectingIcon,
  src: icon_close_default.a
}))), props.phase === PHASES.notfound && /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onRefresh
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.buttonIconLeft,
  src: back_default.a
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Try again",
  id: "gui.connection.auto-scanning.try-again"
})))));
auto_scanning_step_AutoScanningStep.propTypes = {
  connectionTipIconURL: prop_types_default.a.string,
  onRefresh: prop_types_default.a.func,
  onStartScan: prop_types_default.a.func,
  phase: prop_types_default.a.oneOf(Object.keys(PHASES))
};
auto_scanning_step_AutoScanningStep.defaultProps = {
  phase: PHASES.prescan
};

// CONCATENATED MODULE: ./src/containers/auto-scanning-step.jsx





class containers_auto_scanning_step_AutoScanningStep extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handlePeripheralListUpdate', 'handlePeripheralScanTimeout', 'handleStartScan', 'handleRefresh']);
    this.state = {
      phase: PHASES.prescan
    };
  }
  componentWillUnmount() {
    // @todo: stop the peripheral scan here
    this.unbindPeripheralUpdates();
  }
  handlePeripheralScanTimeout() {
    this.setState({
      phase: PHASES.notfound
    });
    this.unbindPeripheralUpdates();
  }
  handlePeripheralListUpdate(newList) {
    // TODO: sort peripherals by signal strength? so they don't jump around
    const peripheralArray = Object.keys(newList).map(id => newList[id]);
    if (peripheralArray.length > 0) {
      this.props.onConnecting(peripheralArray[0].peripheralId);
    }
  }
  bindPeripheralUpdates() {
    this.props.vm.on('PERIPHERAL_LIST_UPDATE', this.handlePeripheralListUpdate);
    this.props.vm.on('PERIPHERAL_SCAN_TIMEOUT', this.handlePeripheralScanTimeout);
  }
  unbindPeripheralUpdates() {
    this.props.vm.removeListener('PERIPHERAL_LIST_UPDATE', this.handlePeripheralListUpdate);
    this.props.vm.removeListener('PERIPHERAL_SCAN_TIMEOUT', this.handlePeripheralScanTimeout);
  }
  handleRefresh() {
    // @todo: stop the peripheral scan here, it is more important for auto scan
    // due to timeout and cancellation
    this.setState({
      phase: PHASES.prescan
    });
    this.unbindPeripheralUpdates();
  }
  handleStartScan() {
    this.bindPeripheralUpdates();
    this.props.vm.scanForPeripheral(this.props.extensionId);
    this.setState({
      phase: PHASES.pressbutton
    });
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(auto_scanning_step_AutoScanningStep, {
      connectionTipIconURL: this.props.connectionTipIconURL,
      phase: this.state.phase,
      title: this.props.extensionId,
      onRefresh: this.handleRefresh,
      onStartScan: this.handleStartScan
    });
  }
}
containers_auto_scanning_step_AutoScanningStep.propTypes = {
  connectionTipIconURL: prop_types_default.a.string,
  extensionId: prop_types_default.a.string.isRequired,
  onConnecting: prop_types_default.a.func.isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
/* harmony default export */ var auto_scanning_step = (containers_auto_scanning_step_AutoScanningStep);
// CONCATENATED MODULE: ./src/components/connection-modal/connecting-step.jsx









const ConnectingStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.activityArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.centeredRow
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.peripheralActivity
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.peripheralActivityIcon,
  src: props.connectionIconURL
}), /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.bluetoothConnectingIcon,
  src: bluetooth_white_default.a
})))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.bottomArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.instructions)
}, props.connectingMessage), /*#__PURE__*/react_default.a.createElement(dots, {
  className: connection_modal_default.a.bottomAreaItem,
  counter: 1,
  total: 3
}), /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.segmentedButton)
}, /*#__PURE__*/react_default.a.createElement("button", {
  disabled: true,
  className: connection_modal_default.a.connectionButton
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Connecting...",
  id: "gui.connection.connecting-cancelbutton"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onDisconnect
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.abortConnectingIcon,
  src: icon_close_default.a
})))));
ConnectingStep.propTypes = {
  connectingMessage: prop_types_default.a.node.isRequired,
  connectionIconURL: prop_types_default.a.string.isRequired,
  onDisconnect: prop_types_default.a.func
};
/* harmony default export */ var connecting_step = (ConnectingStep);
// CONCATENATED MODULE: ./src/components/connection-modal/connected-step.jsx








const ConnectedStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.activityArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.centeredRow
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.peripheralActivity
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.peripheralActivityIcon,
  src: props.connectionIconURL
}), /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.bluetoothConnectedIcon,
  src: bluetooth_white_default.a
})))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.bottomArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.instructions)
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Connected",
  id: "gui.connection.connected"
})), /*#__PURE__*/react_default.a.createElement(dots, {
  success: true,
  className: connection_modal_default.a.bottomAreaItem,
  total: 3
}), /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.cornerButtons)
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: classnames_default()(connection_modal_default.a.redButton, connection_modal_default.a.connectionButton),
  onClick: props.onDisconnect
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Disconnect",
  id: "gui.connection.disconnect"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Go to Editor",
  id: "gui.connection.go-to-editor"
})))));
ConnectedStep.propTypes = {
  connectionIconURL: prop_types_default.a.string.isRequired,
  onCancel: prop_types_default.a.func,
  onDisconnect: prop_types_default.a.func
};
/* harmony default export */ var connected_step = (ConnectedStep);
// EXTERNAL MODULE: ./src/components/connection-modal/icons/help.svg
var help = __webpack_require__(360);
var help_default = /*#__PURE__*/__webpack_require__.n(help);

// CONCATENATED MODULE: ./src/components/connection-modal/error-step.jsx









const ErrorStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.activityArea
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.centeredRow
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.peripheralActivity
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.peripheralActivityIcon,
  src: props.connectionIconURL
})))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.bottomArea
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.instructions)
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Oops, looks like something went wrong.",
  id: "gui.connection.error.errorMessage"
})), /*#__PURE__*/react_default.a.createElement(dots, {
  error: true,
  className: connection_modal_default.a.bottomAreaItem,
  total: 3
}), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.buttonRow)
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onScanning
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: classnames_default()(connection_modal_default.a.buttonIconLeft, connection_modal_default.a.buttonIconBack),
  src: back_default.a
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Try again",
  id: "gui.connection.error.tryagainbutton"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onHelp
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.buttonIconLeft,
  src: help_default.a
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Help",
  id: "gui.connection.error.helpbutton"
})))));
ErrorStep.propTypes = {
  connectionIconURL: prop_types_default.a.string.isRequired,
  onHelp: prop_types_default.a.func,
  onScanning: prop_types_default.a.func
};
/* harmony default export */ var error_step = (ErrorStep);
// EXTERNAL MODULE: ./src/components/connection-modal/icons/bluetooth.svg
var icons_bluetooth = __webpack_require__(879);
var icons_bluetooth_default = /*#__PURE__*/__webpack_require__.n(icons_bluetooth);

// EXTERNAL MODULE: ./src/components/connection-modal/icons/scratchlink.svg
var scratchlink = __webpack_require__(880);
var scratchlink_default = /*#__PURE__*/__webpack_require__.n(scratchlink);

// CONCATENATED MODULE: ./src/components/connection-modal/unavailable-step.jsx











const UnavailableStep = props => /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.activityArea
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.scratchLinkHelp
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.scratchLinkHelpStep
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.helpStepNumber
}, '1'), /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.helpStepImage
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.scratchLinkIcon,
  src: scratchlink_default.a
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.helpStepText
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Make sure you have Scratch Link installed and running",
  id: "gui.connection.unavailable.installscratchlink"
}))), /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.scratchLinkHelpStep
}, /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.helpStepNumber
}, '2'), /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.helpStepImage
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.scratchLinkIcon,
  src: icons_bluetooth_default.a
})), /*#__PURE__*/react_default.a.createElement("div", {
  className: connection_modal_default.a.helpStepText
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Check that Bluetooth is enabled",
  id: "gui.connection.unavailable.enablebluetooth"
}))))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.bottomArea
}, /*#__PURE__*/react_default.a.createElement(dots, {
  error: true,
  className: connection_modal_default.a.bottomAreaItem,
  total: 3
}), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: classnames_default()(connection_modal_default.a.bottomAreaItem, connection_modal_default.a.buttonRow)
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onScanning
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: classnames_default()(connection_modal_default.a.buttonIconLeft, connection_modal_default.a.buttonIconBack),
  src: back_default.a
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Try again",
  id: "gui.connection.unavailable.tryagainbutton"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: connection_modal_default.a.connectionButton,
  onClick: props.onHelp
}, /*#__PURE__*/react_default.a.createElement("img", {
  className: connection_modal_default.a.buttonIconLeft,
  src: help_default.a
}), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Help",
  id: "gui.connection.unavailable.helpbutton"
})))));
UnavailableStep.propTypes = {
  onHelp: prop_types_default.a.func,
  onScanning: prop_types_default.a.func
};
/* harmony default export */ var unavailable_step = (UnavailableStep);
// CONCATENATED MODULE: ./src/components/connection-modal/connection-modal.jsx












const connection_modal_PHASES = keymirror_default()({
  scanning: null,
  connecting: null,
  connected: null,
  error: null,
  unavailable: null
});
const ConnectionModalComponent = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: connection_modal_default.a.modalContent,
  contentLabel: props.name,
  headerClassName: connection_modal_default.a.header,
  headerImage: props.connectionSmallIconURL,
  id: "connectionModal",
  onHelp: props.onHelp,
  onRequestClose: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: connection_modal_default.a.body
}, props.phase === connection_modal_PHASES.scanning && !props.useAutoScan && /*#__PURE__*/react_default.a.createElement(containers_scanning_step, props), props.phase === connection_modal_PHASES.scanning && props.useAutoScan && /*#__PURE__*/react_default.a.createElement(auto_scanning_step, props), props.phase === connection_modal_PHASES.connecting && /*#__PURE__*/react_default.a.createElement(connecting_step, props), props.phase === connection_modal_PHASES.connected && /*#__PURE__*/react_default.a.createElement(connected_step, props), props.phase === connection_modal_PHASES.error && /*#__PURE__*/react_default.a.createElement(error_step, props), props.phase === connection_modal_PHASES.unavailable && /*#__PURE__*/react_default.a.createElement(unavailable_step, props)));
ConnectionModalComponent.propTypes = {
  connectingMessage: prop_types_default.a.node.isRequired,
  connectionSmallIconURL: prop_types_default.a.string,
  connectionTipIconURL: prop_types_default.a.string,
  name: prop_types_default.a.node,
  onCancel: prop_types_default.a.func.isRequired,
  onHelp: prop_types_default.a.func.isRequired,
  phase: prop_types_default.a.oneOf(Object.keys(connection_modal_PHASES)).isRequired,
  title: prop_types_default.a.string.isRequired,
  useAutoScan: prop_types_default.a.bool.isRequired
};
ConnectionModalComponent.defaultProps = {
  connectingMessage: 'Connecting'
};

// CONCATENATED MODULE: ./src/containers/connection-modal.jsx









class connection_modal_ConnectionModal extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleScanning', 'handleCancel', 'handleConnected', 'handleConnecting', 'handleDisconnect', 'handleError', 'handleHelp']);
    this.state = {
      extension: extensions["a" /* default */].find(ext => ext.extensionId === props.extensionId),
      phase: props.vm.getPeripheralIsConnected(props.extensionId) ? connection_modal_PHASES.connected : connection_modal_PHASES.scanning
    };
  }
  componentDidMount() {
    this.props.vm.on('PERIPHERAL_CONNECTED', this.handleConnected);
    this.props.vm.on('PERIPHERAL_REQUEST_ERROR', this.handleError);
  }
  componentWillUnmount() {
    this.props.vm.removeListener('PERIPHERAL_CONNECTED', this.handleConnected);
    this.props.vm.removeListener('PERIPHERAL_REQUEST_ERROR', this.handleError);
  }
  handleScanning() {
    this.setState({
      phase: connection_modal_PHASES.scanning
    });
  }
  handleConnecting(peripheralId) {
    this.props.vm.connectPeripheral(this.props.extensionId, peripheralId);
    this.setState({
      phase: connection_modal_PHASES.connecting
    });
    analytics["a" /* default */].event({
      category: 'extensions',
      action: 'connecting',
      label: this.props.extensionId
    });
  }
  handleDisconnect() {
    try {
      this.props.vm.disconnectPeripheral(this.props.extensionId);
    } finally {
      this.props.onCancel();
    }
  }
  handleCancel() {
    try {
      // If we're not connected to a peripheral, close the websocket so we stop scanning.
      if (!this.props.vm.getPeripheralIsConnected(this.props.extensionId)) {
        this.props.vm.disconnectPeripheral(this.props.extensionId);
      }
    } finally {
      // Close the modal.
      this.props.onCancel();
    }
  }
  handleError() {
    // Assume errors that come in during scanning phase are the result of not
    // having scratch-link installed.
    if (this.state.phase === connection_modal_PHASES.scanning || this.state.phase === connection_modal_PHASES.unavailable) {
      this.setState({
        phase: connection_modal_PHASES.unavailable
      });
    } else {
      this.setState({
        phase: connection_modal_PHASES.error
      });
      analytics["a" /* default */].event({
        category: 'extensions',
        action: 'connecting error',
        label: this.props.extensionId
      });
    }
  }
  handleConnected() {
    this.setState({
      phase: connection_modal_PHASES.connected
    });
    analytics["a" /* default */].event({
      category: 'extensions',
      action: 'connected',
      label: this.props.extensionId
    });
  }
  handleHelp() {
    window.open(this.state.extension.helpLink, '_blank');
    analytics["a" /* default */].event({
      category: 'extensions',
      action: 'help',
      label: this.props.extensionId
    });
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(ConnectionModalComponent, {
      connectingMessage: this.state.extension && this.state.extension.connectingMessage,
      connectionIconURL: this.state.extension && this.state.extension.connectionIconURL,
      connectionSmallIconURL: this.state.extension && this.state.extension.connectionSmallIconURL,
      connectionTipIconURL: this.state.extension && this.state.extension.connectionTipIconURL,
      extensionId: this.props.extensionId,
      name: this.state.extension && this.state.extension.name,
      phase: this.state.phase,
      title: this.props.extensionId,
      useAutoScan: this.state.extension && this.state.extension.useAutoScan,
      vm: this.props.vm,
      onCancel: this.handleCancel,
      onConnected: this.handleConnected,
      onConnecting: this.handleConnecting,
      onDisconnect: this.handleDisconnect,
      onHelp: this.handleHelp,
      onScanning: this.handleScanning
    });
  }
}
connection_modal_ConnectionModal.propTypes = {
  extensionId: prop_types_default.a.string.isRequired,
  onCancel: prop_types_default.a.func.isRequired,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
const connection_modal_mapStateToProps = state => ({
  extensionId: state.scratchGui.connectionModal.extensionId
});
const connection_modal_mapDispatchToProps = dispatch => ({
  onCancel: () => {
    dispatch(Object(modals["b" /* closeConnectionModal */])());
  }
});
/* harmony default export */ var containers_connection_modal = (Object(react_redux_es["b" /* connect */])(connection_modal_mapStateToProps, connection_modal_mapDispatchToProps)(connection_modal_ConnectionModal));
// EXTERNAL MODULE: ./src/components/telemetry-modal/telemetry-modal.css
var telemetry_modal = __webpack_require__(111);
var telemetry_modal_default = /*#__PURE__*/__webpack_require__.n(telemetry_modal);

// CONCATENATED MODULE: ./src/components/telemetry-modal/telemetry-modal.jsx
function telemetry_modal_extends() { telemetry_modal_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return telemetry_modal_extends.apply(this, arguments); }







const telemetry_modal_messages = Object(index_es["d" /* defineMessages */])({
  label: {
    "id": "gui.telemetryOptIn.label",
    "defaultMessage": "Report statistics to improve Scratch"
  },
  bodyText1: {
    "id": "gui.telemetryOptIn.body1",
    "defaultMessage": "The Scratch Team is always looking to better understand how Scratch is used around the world. To help support this effort, you can allow Scratch to automatically send usage information to the Scratch Team."
  },
  bodyText2: {
    "id": "gui.telemetryOptIn.body2",
    "defaultMessage": "The information we collect includes language selection, blocks usage, and some events like saving, loading, and uploading a project. We DO NOT collect any personal information. Please see our {privacyPolicyLink} for more information."
  },
  privacyPolicyLink: {
    "id": "gui.telemetryOptIn.privacyPolicyLink",
    "defaultMessage": "Privacy Policy"
  },
  optInText: {
    "id": "gui.telemetryOptIn.optInText",
    "defaultMessage": "Share my usage data with the Scratch Team"
  },
  optInTooltip: {
    "id": "gui.telemetryOptIn.optInTooltip",
    "defaultMessage": "Enable telemetry"
  },
  optOutText: {
    "id": "gui.telemetryOptIn.optOutText",
    "defaultMessage": "Do not share my usage data with the Scratch Team"
  },
  optOutTooltip: {
    "id": "gui.telemetryOptIn.optOutTooltip",
    "defaultMessage": "Disable telemetry"
  },
  settingWasUpdated: {
    "id": "gui.telemetryOptIn.settingWasUpdated",
    "defaultMessage": "Your setting was updated."
  },
  closeButton: {
    "id": "gui.telemetryOptIn.buttonClose",
    "defaultMessage": "Close"
  }
});

// This should be at least as long as the CSS transition
const SETTING_WAS_UPDATED_DURATION_MS = 3000;
class telemetry_modal_TelemetryModal extends react_default.a.PureComponent {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleCancel', 'handleOptInOutChanged']);
    this.state = {
      // if the settingWasUpdated message is displayed, this will be the ID of its removal timer
      settingWasUpdatedTimer: null
    };
  }
  componentWillUnmount() {
    if (this.state.settingWasUpdatedTimer) {
      clearTimeout(this.state.settingWasUpdatedTimer);
    }
  }
  handleCancel() {
    this.props.onRequestClose();
    if (this.props.onCancel) {
      this.props.onCancel();
    }
  }
  handleOptInOutChanged(e) {
    if (e.target.value === 'true') {
      if (this.props.onOptIn) {
        this.props.onOptIn();
        this.handleSettingWasUpdated();
      }
    } else if (e.target.value === 'false') {
      if (this.props.onOptOut) {
        this.props.onOptOut();
        this.handleSettingWasUpdated();
      }
    }
  }
  handleSettingWasUpdated() {
    if (this.state.settingWasUpdatedTimer) {
      clearTimeout(this.state.settingWasUpdatedTimer);
    }
    const newTimer = setTimeout(() => this.handleSettingWasUpdatedTimeout(newTimer), SETTING_WAS_UPDATED_DURATION_MS);
    this.setState({
      settingWasUpdatedTimer: newTimer
    });
  }
  handleSettingWasUpdatedTimeout(thisTimer) {
    if (thisTimer !== this.state.settingWasUpdatedTimer) {
      // some other timer has taken over
      return;
    }
    this.setState({
      settingWasUpdatedTimer: null
    });
  }
  render() {
    const isUndecided = typeof this.props.isTelemetryEnabled !== 'boolean';
    const isOff = this.props.isTelemetryEnabled === false;
    const isOn = this.props.isTelemetryEnabled === true;
    const settingWasUpdated = this.state.settingWasUpdatedTimer && /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_messages.settingWasUpdated);
    return /*#__PURE__*/react_default.a.createElement(lib_default.a, {
      isOpen: true,
      className: telemetry_modal_default.a.modalContent,
      contentLabel: this.props.intl.formatMessage(telemetry_modal_messages.label),
      overlayClassName: telemetry_modal_default.a.modalOverlay,
      onRequestClose: this.handleCancel
    }, /*#__PURE__*/react_default.a.createElement("div", {
      dir: this.props.isRtl ? 'rtl' : 'ltr'
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: telemetry_modal_default.a.illustration
    }), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: telemetry_modal_default.a.body
    }, /*#__PURE__*/react_default.a.createElement("p", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_messages.bodyText1)), /*#__PURE__*/react_default.a.createElement("p", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_extends({}, telemetry_modal_messages.bodyText2, {
      values: {
        privacyPolicyLink: /*#__PURE__*/react_default.a.createElement("a", {
          className: telemetry_modal_default.a.privacyPolicyLink,
          href: "https://scratch.mit.edu/privacy_policy/",
          onClick: this.props.onShowPrivacyPolicy,
          target: "_blank",
          rel: "noopener noreferrer"
        }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_messages.privacyPolicyLink))
      }
    }))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: telemetry_modal_default.a.radioButtons
    }, /*#__PURE__*/react_default.a.createElement("label", {
      className: isOn ? telemetry_modal_default.a.labelSelected : null
    }, /*#__PURE__*/react_default.a.createElement("input", {
      name: "optInOut",
      type: "radio",
      value: "true",
      title: this.props.intl.formatMessage(telemetry_modal_messages.optInTooltip),
      checked: this.props.isTelemetryEnabled === true,
      onChange: this.handleOptInOutChanged
    }), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_messages.optInText)), /*#__PURE__*/react_default.a.createElement("label", {
      className: isOff ? telemetry_modal_default.a.labelSelected : null
    }, /*#__PURE__*/react_default.a.createElement("input", {
      name: "optInOut",
      type: "radio",
      value: "false",
      title: this.props.intl.formatMessage(telemetry_modal_messages.optOutTooltip),
      checked: this.props.isTelemetryEnabled === false,
      onChange: this.handleOptInOutChanged
    }), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_messages.optOutText))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: telemetry_modal_default.a.buttonRow
    }, /*#__PURE__*/react_default.a.createElement("span", {
      className: telemetry_modal_default.a.settingWasUpdated,
      key: this.state.settingWasUpdatedTimer // restart CSS fade when timer changes
    }, settingWasUpdated), /*#__PURE__*/react_default.a.createElement("button", {
      className: telemetry_modal_default.a.optIn,
      onClick: this.props.onRequestClose,
      disabled: isUndecided
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], telemetry_modal_messages.closeButton))))));
  }
}
telemetry_modal_TelemetryModal.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  isRtl: prop_types_default.a.bool,
  isTelemetryEnabled: prop_types_default.a.bool,
  // false=disabled, true=enabled, undefined=undecided
  onCancel: prop_types_default.a.func,
  onOptIn: prop_types_default.a.func.isRequired,
  onOptOut: prop_types_default.a.func.isRequired,
  onRequestClose: prop_types_default.a.func,
  onShowPrivacyPolicy: prop_types_default.a.func
};
/* harmony default export */ var telemetry_modal_telemetry_modal = (Object(index_es["e" /* injectIntl */])(telemetry_modal_TelemetryModal));
// EXTERNAL MODULE: ./src/components/tw-username-modal/username-modal.css
var username_modal = __webpack_require__(105);
var username_modal_default = /*#__PURE__*/__webpack_require__.n(username_modal);

// CONCATENATED MODULE: ./src/components/tw-username-modal/username-modal.jsx







const username_modal_messages = Object(index_es["d" /* defineMessages */])({
  title: {
    "id": "tw.usernameModal.title",
    "defaultMessage": "Change Username"
  }
});
const UsernameModalComponent = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: username_modal_default.a.modalContent,
  onRequestClose: props.onCancel,
  contentLabel: props.intl.formatMessage(username_modal_messages.title),
  id: "usernameModal"
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: username_modal_default.a.body
}, props.mustChangeUsername && /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, /*#__PURE__*/react_default.a.createElement("p", {
  className: classnames_default()(username_modal_default.a.helpText, username_modal_default.a.mustChange)
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
// eslint-disable-next-line max-len
, {
  defaultMessage: "Sorry, the cloud variable server thinks your username may be unsafe. Please change it to something else or {resetIt}.",
  id: "tw.usernameModal.mustChange",
  values: {
    resetIt: /*#__PURE__*/react_default.a.createElement("a", {
      className: username_modal_default.a.resetLink,
      onClick: props.onReset
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "reset it (recommended)",
      id: "tw.usernameModal.mustChange.resetIt"
    }))
  }
}))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], null, /*#__PURE__*/react_default.a.createElement("input", {
  autoFocus: true,
  className: username_modal_default.a.textInput,
  value: props.value,
  onChange: props.onChange,
  onFocus: props.onFocus,
  onKeyPress: props.onKeyPress,
  pattern: "^[a-zA-Z0-9_-]*$",
  maxLength: "20",
  spellCheck: "false"
})), /*#__PURE__*/react_default.a.createElement("p", {
  className: username_modal_default.a.helpText
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
// eslint-disable-next-line max-len
, {
  defaultMessage: "This value will be stored in your browser's storage. It may be logged when you interact with projects that contain cloud variables.",
  id: "tw.usernameModal.help"
})), /*#__PURE__*/react_default.a.createElement("p", {
  className: username_modal_default.a.helpText
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
// eslint-disable-next-line max-len
, {
  defaultMessage: "Values that do not correspond to a valid Scratch account will typically be rejected by the cloud variable server. We recommend leaving it as-is or changing it to your Scratch username.",
  id: "tw.usernameModal.help2"
})), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: username_modal_default.a.buttonRow
}, /*#__PURE__*/react_default.a.createElement("button", {
  className: username_modal_default.a.cancelButton,
  onClick: props.onReset
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Reset",
  id: "tw.usernameModal.reset"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: username_modal_default.a.cancelButton,
  onClick: props.onCancel
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Cancel",
  id: "gui.prompt.cancel"
})), /*#__PURE__*/react_default.a.createElement("button", {
  className: username_modal_default.a.okButton,
  onClick: props.onOk,
  disabled: !props.valueValid
}, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "OK",
  id: "gui.prompt.ok"
})))));
UsernameModalComponent.propTypes = {
  intl: index_es["f" /* intlShape */],
  mustChangeUsername: prop_types_default.a.bool.isRequired,
  value: prop_types_default.a.string.isRequired,
  valueValid: prop_types_default.a.bool.isRequired,
  onCancel: prop_types_default.a.func.isRequired,
  onChange: prop_types_default.a.func.isRequired,
  onFocus: prop_types_default.a.func.isRequired,
  onKeyPress: prop_types_default.a.func.isRequired,
  onOk: prop_types_default.a.func.isRequired,
  onReset: prop_types_default.a.func.isRequired
};
/* harmony default export */ var tw_username_modal_username_modal = (Object(index_es["e" /* injectIntl */])(UsernameModalComponent));
// EXTERNAL MODULE: ./src/lib/tw-username.js
var tw_username = __webpack_require__(344);

// CONCATENATED MODULE: ./src/containers/tw-username-modal.jsx








class tw_username_modal_UsernameModal extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleKeyPress', 'handleFocus', 'handleOk', 'handleCancel', 'handleChange', 'handleReset']);
    this.state = {
      value: this.props.username,
      valueValid: !this.props.usernameInvalid
    };
  }
  handleKeyPress(event) {
    if (event.key === 'Enter' && this.state.valueValid) {
      this.handleOk();
    }
  }
  handleFocus(event) {
    event.target.select();
  }
  handleOk() {
    this.props.onSetUsername(this.state.value);
    this.props.onCloseUsernameModal();
  }
  handleCancel() {
    this.props.onCloseUsernameModal();
  }
  handleChange(e) {
    this.setState({
      value: e.target.value,
      valueValid: e.target.checkValidity()
    });
  }
  handleReset() {
    const randomUsername = Object(tw_username["a" /* generateRandomUsername */])();
    this.props.onCloseUsernameModal();
    this.props.onSetUsername(randomUsername);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(tw_username_modal_username_modal, {
      mustChangeUsername: this.props.usernameInvalid,
      value: this.state.value,
      valueValid: this.state.valueValid,
      onKeyPress: this.handleKeyPress,
      onFocus: this.handleFocus,
      onOk: this.handleOk,
      onCancel: this.handleCancel,
      onChange: this.handleChange,
      onReset: this.handleReset
    });
  }
}
tw_username_modal_UsernameModal.propTypes = {
  onCloseUsernameModal: prop_types_default.a.func,
  onSetUsername: prop_types_default.a.func,
  username: prop_types_default.a.string,
  usernameInvalid: prop_types_default.a.bool
};
const tw_username_modal_mapStateToProps = state => ({
  username: state.scratchGui.tw.username,
  usernameInvalid: state.scratchGui.tw.usernameInvalid
});
const tw_username_modal_mapDispatchToProps = dispatch => ({
  onCloseUsernameModal: () => dispatch(Object(modals["m" /* closeUsernameModal */])()),
  onSetUsername: username => {
    dispatch(Object(tw["setUsername"])(username));
    dispatch(Object(tw["setUsernameInvalid"])(false));
  }
});
/* harmony default export */ var tw_username_modal = (Object(react_redux_es["b" /* connect */])(tw_username_modal_mapStateToProps, tw_username_modal_mapDispatchToProps)(tw_username_modal_UsernameModal));
// EXTERNAL MODULE: ./src/components/tw-fancy-checkbox/checkbox.css
var tw_fancy_checkbox_checkbox = __webpack_require__(881);
var checkbox_default = /*#__PURE__*/__webpack_require__.n(tw_fancy_checkbox_checkbox);

// CONCATENATED MODULE: ./src/components/tw-fancy-checkbox/checkbox.jsx
function checkbox_extends() { checkbox_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return checkbox_extends.apply(this, arguments); }




const FancyCheckbox = props => /*#__PURE__*/react_default.a.createElement("input", checkbox_extends({}, props, {
  className: classnames_default()(props.className, checkbox_default.a.checkbox)
}));
FancyCheckbox.propTypes = {
  className: prop_types_default.a.string
};
/* harmony default export */ var components_tw_fancy_checkbox_checkbox = (FancyCheckbox);
// CONCATENATED MODULE: ./src/components/tw-documentation-link/documentation-link.jsx


const DocumentationLink = _ref => {
  let {
    slug,
    children
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("a", {
    href: "https://docs.turbowarp.org/".concat(slug),
    target: "_blank",
    rel: "noopener noreferrer"
  }, children);
};
DocumentationLink.propTypes = {
  slug: prop_types_default.a.string,
  children: prop_types_default.a.node
};
/* harmony default export */ var documentation_link = (DocumentationLink);
// EXTERNAL MODULE: ./src/components/tw-settings-modal/settings-modal.css
var settings_modal = __webpack_require__(77);
var settings_modal_default = /*#__PURE__*/__webpack_require__.n(settings_modal);

// CONCATENATED MODULE: ./src/components/tw-settings-modal/settings-modal.jsx
const settings_modal_excluded = ["value", "onChange", "label"];
function settings_modal_extends() { settings_modal_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return settings_modal_extends.apply(this, arguments); }
function settings_modal_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = settings_modal_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function settings_modal_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













/* eslint-disable react/no-multi-comp */

const settings_modal_BufferedInput = Object(buffered_input_hoc["a" /* default */])(forms_input["a" /* default */]);
const settings_modal_messages = Object(index_es["d" /* defineMessages */])({
  title: {
    "id": "tw.settingsModal.title",
    "defaultMessage": "Advanced Settings"
  },
  help: {
    "id": "tw.settingsModal.help",
    "defaultMessage": "Click for help"
  }
});
const LearnMore = props => /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, ' ', /*#__PURE__*/react_default.a.createElement(documentation_link, props, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Learn more.",
  id: "gui.alerts.cloudInfoLearnMore"
})));
class settings_modal_UnwrappedSetting extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClickHelp']);
    this.state = {
      helpVisible: false
    };
  }
  componentDidUpdate(prevProps) {
    if (this.props.active && !prevProps.active) {
      // eslint-disable-next-line react/no-did-update-set-state
      this.setState({
        helpVisible: true
      });
    }
  }
  handleClickHelp() {
    this.setState(prevState => ({
      helpVisible: !prevState.helpVisible
    }));
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(settings_modal_default.a.setting, {
        [settings_modal_default.a.active]: this.props.active
      })
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: settings_modal_default.a.label
    }, this.props.primary, /*#__PURE__*/react_default.a.createElement("button", {
      className: settings_modal_default.a.helpIcon,
      onClick: this.handleClickHelp,
      title: this.props.intl.formatMessage(settings_modal_messages.help)
    })), this.state.helpVisible && /*#__PURE__*/react_default.a.createElement("div", {
      className: settings_modal_default.a.detail
    }, this.props.help, this.props.slug && /*#__PURE__*/react_default.a.createElement(LearnMore, {
      slug: this.props.slug
    })), this.props.secondary);
  }
}
settings_modal_UnwrappedSetting.propTypes = {
  intl: index_es["f" /* intlShape */],
  active: prop_types_default.a.bool,
  help: prop_types_default.a.node,
  primary: prop_types_default.a.node,
  secondary: prop_types_default.a.node,
  slug: prop_types_default.a.string
};
const Setting = Object(index_es["e" /* injectIntl */])(settings_modal_UnwrappedSetting);
const BooleanSetting = _ref => {
  let {
      value,
      onChange,
      label
    } = _ref,
    props = settings_modal_objectWithoutProperties(_ref, settings_modal_excluded);
  return /*#__PURE__*/react_default.a.createElement(Setting, settings_modal_extends({}, props, {
    active: value,
    primary: /*#__PURE__*/react_default.a.createElement("label", {
      className: settings_modal_default.a.label
    }, /*#__PURE__*/react_default.a.createElement(components_tw_fancy_checkbox_checkbox, {
      type: "checkbox",
      className: settings_modal_default.a.checkbox,
      checked: value,
      onChange: onChange
    }), label)
  }));
};
BooleanSetting.propTypes = {
  onChange: prop_types_default.a.func.isRequired,
  value: prop_types_default.a.bool.isRequired,
  label: prop_types_default.a.node.isRequired
};
const HighQualityPen = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "High Quality Pen",
    id: "tw.settingsModal.highQualityPen"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
  // eslint-disable-next-line max-len
  , {
    defaultMessage: "Allows pen projects to render at higher resolutions and disables some coordinate rounding in the editor. Not all projects benefit from this setting and it may impact performance.",
    id: "tw.settingsModal.highQualityPenHelp"
  }),
  slug: "high-quality-pen"
}));
const CustomFPS = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, {
  value: props.framerate !== 30,
  onChange: props.onChange,
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "60 FPS (Custom FPS)",
    id: "tw.settingsModal.fps"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
  // eslint-disable-next-line max-len
  , {
    defaultMessage: "Runs scripts 60 times per second instead of 30. Most projects will not work properly with this enabled. You should try Interpolation with 60 FPS mode disabled if that is the case. {customFramerate}.",
    id: "tw.settingsModal.fpsHelp",
    values: {
      customFramerate: /*#__PURE__*/react_default.a.createElement("a", {
        onClick: props.onCustomizeFramerate,
        tabIndex: "0"
      }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Click to use a framerate other than 30 or 60",
        id: "tw.settingsModal.fpsHelp.customFramerate"
      }))
    }
  }),
  slug: "custom-fps"
});
CustomFPS.propTypes = {
  framerate: prop_types_default.a.number,
  onChange: prop_types_default.a.func,
  onCustomizeFramerate: prop_types_default.a.func
};
const Interpolation = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Interpolation",
    id: "tw.settingsModal.interpolation"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
  // eslint-disable-next-line max-len
  , {
    defaultMessage: "Makes projects appear smoother by interpolating sprite motion. Interpolation should not be used on 3D projects, raytracers, pen projects, and laggy projects as interpolation will make them run slower without making them appear smoother.",
    id: "tw.settingsModal.interpolationHelp"
  }),
  slug: "interpolation"
}));
const InfiniteClones = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Infinite Clones",
    id: "tw.settingsModal.infiniteClones"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Disables Scratch's 300 clone limit.",
    id: "tw.settingsModal.infiniteClonesHelp"
  }),
  slug: "infinite-clones"
}));
const RemoveFencing = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Remove Fencing",
    id: "tw.settingsModal.removeFencing"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Allows sprites to move offscreen, become as large or as small as they want, and makes touching blocks work offscreen.",
    id: "tw.settingsModal.removeFencingHelp"
  }),
  slug: "remove-fencing"
}));
const RemoveMiscLimits = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Remove Miscellaneous Limits",
    id: "tw.settingsModal.removeMiscLimits"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Removes sound effect limits and pen size limits.",
    id: "tw.settingsModal.removeMiscLimitsHelp"
  }),
  slug: "remove-misc-limits"
}));
const WarpTimer = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Warp Timer",
    id: "tw.settingsModal.warpTimer"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
  // eslint-disable-next-line max-len
  , {
    defaultMessage: "Makes scripts check if they are stuck in a long or infinite loop and run at a low framerate instead of getting stuck until the loop finishes. This fixes most crashes but has a significant performance impact, so it's only enabled by default in the editor.",
    id: "tw.settingsModal.warpTimerHelp"
  }),
  slug: "warp-timer"
}));
const DisableCompiler = props => /*#__PURE__*/react_default.a.createElement(BooleanSetting, settings_modal_extends({}, props, {
  label: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Disable Compiler",
    id: "tw.settingsModal.disableCompiler"
  }),
  help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
  // eslint-disable-next-line max-len
  , {
    defaultMessage: "Disables the TurboWarp compiler. You may want to enable this while editing projects so that scripts update immediately. Otherwise, you should never enable this.",
    id: "tw.settingsModal.disableCompilerHelp"
  }),
  slug: "disable-compiler"
}));
const CustomStageSize = _ref2 => {
  let {
    customStageSizeEnabled,
    stageWidth,
    onStageWidthChange,
    stageHeight,
    onStageHeightChange
  } = _ref2;
  return /*#__PURE__*/react_default.a.createElement(Setting, {
    active: customStageSizeEnabled,
    primary: /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(settings_modal_default.a.label, settings_modal_default.a.customStageSize)
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Custom Stage Size:",
      id: "tw.settingsModal.customStageSize"
    }), /*#__PURE__*/react_default.a.createElement(settings_modal_BufferedInput, {
      value: stageWidth,
      onSubmit: onStageWidthChange,
      type: "number",
      min: "0",
      max: "1024",
      step: "1"
    }), /*#__PURE__*/react_default.a.createElement("span", null, '×'), /*#__PURE__*/react_default.a.createElement(settings_modal_BufferedInput, {
      value: stageHeight,
      onSubmit: onStageHeightChange,
      type: "number",
      min: "0",
      max: "1024",
      step: "1"
    })),
    secondary: (stageWidth >= 1000 || stageHeight >= 1000) && /*#__PURE__*/react_default.a.createElement("div", {
      className: settings_modal_default.a.warning
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
    // eslint-disable-next-line max-len
    , {
      defaultMessage: "Using a custom stage size this large is not recommended! Instead, use a lower size with the same aspect ratio and let fullscreen mode upscale it to match the user's display.",
      id: "tw.settingsModal.largeStageWarning"
    }), /*#__PURE__*/react_default.a.createElement(LearnMore, {
      slug: "custom-stage-size"
    })),
    help: /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
    // eslint-disable-next-line max-len
    , {
      defaultMessage: "Changes the size of the Scratch stage from 480x360 to something else. Try 640x360 to make the stage widescreen. Very few projects will handle this properly.",
      id: "tw.settingsModal.customStageSizeHelp"
    }),
    slug: "custom-stage-size"
  });
};
CustomStageSize.propTypes = {
  customStageSizeEnabled: prop_types_default.a.bool,
  stageWidth: prop_types_default.a.number,
  onStageWidthChange: prop_types_default.a.func,
  stageHeight: prop_types_default.a.number,
  onStageHeightChange: prop_types_default.a.func
};
const StoreProjectOptions = _ref3 => {
  let {
    onStoreProjectOptions
  } = _ref3;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: settings_modal_default.a.setting
  }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("button", {
    onClick: onStoreProjectOptions,
    className: settings_modal_default.a.button
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Store settings in project",
    id: "tw.settingsModal.storeProjectOptions"
  })), /*#__PURE__*/react_default.a.createElement("p", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
  // eslint-disable-next-line max-len
  , {
    defaultMessage: "Stores the selected settings in the project so they will be automatically applied when TurboWarp loads this project. Warp timer and disable compiler will not be saved.",
    id: "tw.settingsModal.storeProjectOptionsHelp"
  }))));
};
StoreProjectOptions.propTypes = {
  onStoreProjectOptions: prop_types_default.a.func
};
const Header = props => /*#__PURE__*/react_default.a.createElement("div", {
  className: settings_modal_default.a.header
}, props.children, /*#__PURE__*/react_default.a.createElement("div", {
  className: settings_modal_default.a.divider
}));
Header.propTypes = {
  children: prop_types_default.a.node
};
const SettingsModalComponent = props => /*#__PURE__*/react_default.a.createElement(containers_modal, {
  className: settings_modal_default.a.modalContent,
  onRequestClose: props.onClose,
  contentLabel: props.intl.formatMessage(settings_modal_messages.title),
  id: "settingsModal"
}, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
  className: settings_modal_default.a.body
}, /*#__PURE__*/react_default.a.createElement(Header, null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Featured",
  id: "tw.settingsModal.featured"
})), /*#__PURE__*/react_default.a.createElement(CustomFPS, {
  framerate: props.framerate,
  onChange: props.onFramerateChange,
  onCustomizeFramerate: props.onCustomizeFramerate
}), /*#__PURE__*/react_default.a.createElement(Interpolation, {
  value: props.interpolation,
  onChange: props.onInterpolationChange
}), /*#__PURE__*/react_default.a.createElement(HighQualityPen, {
  value: props.highQualityPen,
  onChange: props.onHighQualityPenChange
}), /*#__PURE__*/react_default.a.createElement(WarpTimer, {
  value: props.warpTimer,
  onChange: props.onWarpTimerChange
}), /*#__PURE__*/react_default.a.createElement(Header, null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Remove Limits",
  id: "tw.settingsModal.removeLimits"
})), /*#__PURE__*/react_default.a.createElement(InfiniteClones, {
  value: props.infiniteClones,
  onChange: props.onInfiniteClonesChange
}), /*#__PURE__*/react_default.a.createElement(RemoveFencing, {
  value: props.removeFencing,
  onChange: props.onRemoveFencingChange
}), /*#__PURE__*/react_default.a.createElement(RemoveMiscLimits, {
  value: props.removeLimits,
  onChange: props.onRemoveLimitsChange
}), /*#__PURE__*/react_default.a.createElement(Header, null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
  defaultMessage: "Danger Zone",
  id: "tw.settingsModal.dangerZone"
})), /*#__PURE__*/react_default.a.createElement(CustomStageSize, props), /*#__PURE__*/react_default.a.createElement(DisableCompiler, {
  value: props.disableCompiler,
  onChange: props.onDisableCompilerChange
}), /*#__PURE__*/react_default.a.createElement(StoreProjectOptions, props)));
SettingsModalComponent.propTypes = {
  intl: index_es["f" /* intlShape */],
  onClose: prop_types_default.a.func,
  framerate: prop_types_default.a.number,
  onFramerateChange: prop_types_default.a.func,
  onCustomizeFramerate: prop_types_default.a.func,
  highQualityPen: prop_types_default.a.bool,
  onHighQualityPenChange: prop_types_default.a.func,
  interpolation: prop_types_default.a.bool,
  onInterpolationChange: prop_types_default.a.func,
  infiniteClones: prop_types_default.a.bool,
  onInfiniteClonesChange: prop_types_default.a.func,
  removeFencing: prop_types_default.a.bool,
  onRemoveFencingChange: prop_types_default.a.func,
  removeLimits: prop_types_default.a.bool,
  onRemoveLimitsChange: prop_types_default.a.func,
  warpTimer: prop_types_default.a.bool,
  onWarpTimerChange: prop_types_default.a.func,
  disableCompiler: prop_types_default.a.bool,
  onDisableCompilerChange: prop_types_default.a.func
};
/* harmony default export */ var tw_settings_modal_settings_modal = (Object(index_es["e" /* injectIntl */])(SettingsModalComponent));
// CONCATENATED MODULE: ./src/containers/tw-settings-modal.jsx
const tw_settings_modal_excluded = ["onClose", "vm"];
function tw_settings_modal_extends() { tw_settings_modal_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return tw_settings_modal_extends.apply(this, arguments); }
function tw_settings_modal_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = tw_settings_modal_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function tw_settings_modal_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








const tw_settings_modal_messages = Object(index_es["d" /* defineMessages */])({
  newFramerate: {
    "id": "tw.menuBar.newFramerate",
    "defaultMessage": "New framerate:"
  }
});
class tw_settings_modal_UsernameModal extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleFramerateChange', 'handleCustomizeFramerate', 'handleHighQualityPenChange', 'handleInterpolationChange', 'handleInfiniteClonesChange', 'handleRemoveFencingChange', 'handleRemoveLimitsChange', 'handleWarpTimerChange', 'handleStageWidthChange', 'handleStageHeightChange', 'handleDisableCompilerChange', 'handleStoreProjectOptions']);
  }
  handleFramerateChange(e) {
    this.props.vm.setFramerate(e.target.checked ? 60 : 30);
  }
  handleCustomizeFramerate() {
    // eslint-disable-next-line no-alert
    const newFramerate = prompt(this.props.intl.formatMessage(tw_settings_modal_messages.newFramerate), this.props.framerate);
    const parsed = parseFloat(newFramerate);
    if (isFinite(parsed)) {
      this.props.vm.setFramerate(parsed);
    }
  }
  handleHighQualityPenChange(e) {
    this.props.vm.renderer.setUseHighQualityRender(e.target.checked);
  }
  handleInterpolationChange(e) {
    this.props.vm.setInterpolation(e.target.checked);
  }
  handleInfiniteClonesChange(e) {
    this.props.vm.setRuntimeOptions({
      maxClones: e.target.checked ? Infinity : 300
    });
  }
  handleRemoveFencingChange(e) {
    this.props.vm.setRuntimeOptions({
      fencing: !e.target.checked
    });
  }
  handleRemoveLimitsChange(e) {
    this.props.vm.setRuntimeOptions({
      miscLimits: !e.target.checked
    });
  }
  handleWarpTimerChange(e) {
    this.props.vm.setCompilerOptions({
      warpTimer: e.target.checked
    });
  }
  handleDisableCompilerChange(e) {
    this.props.vm.setCompilerOptions({
      enabled: !e.target.checked
    });
  }
  handleStageWidthChange(value) {
    this.props.vm.setStageSize(value, this.props.customStageSize.height);
  }
  handleStageHeightChange(value) {
    this.props.vm.setStageSize(this.props.customStageSize.width, value);
  }
  handleStoreProjectOptions() {
    this.props.vm.storeProjectOptions();
  }
  render() {
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        onClose,
        vm
        /* eslint-enable no-unused-vars */
      } = _this$props,
      props = tw_settings_modal_objectWithoutProperties(_this$props, tw_settings_modal_excluded);
    return /*#__PURE__*/react_default.a.createElement(tw_settings_modal_settings_modal, tw_settings_modal_extends({
      onClose: this.props.onClose,
      onFramerateChange: this.handleFramerateChange,
      onCustomizeFramerate: this.handleCustomizeFramerate,
      onHighQualityPenChange: this.handleHighQualityPenChange,
      onInterpolationChange: this.handleInterpolationChange,
      onInfiniteClonesChange: this.handleInfiniteClonesChange,
      onRemoveFencingChange: this.handleRemoveFencingChange,
      onRemoveLimitsChange: this.handleRemoveLimitsChange,
      onWarpTimerChange: this.handleWarpTimerChange,
      onStageWidthChange: this.handleStageWidthChange,
      onStageHeightChange: this.handleStageHeightChange,
      onDisableCompilerChange: this.handleDisableCompilerChange,
      stageWidth: this.props.customStageSize.width,
      stageHeight: this.props.customStageSize.height,
      customStageSizeEnabled: this.props.customStageSize.width !== custom_stage_size["c" /* defaultStageSize */].width || this.props.customStageSize.height !== custom_stage_size["c" /* defaultStageSize */].height,
      onStoreProjectOptions: this.handleStoreProjectOptions
    }, props));
  }
}
tw_settings_modal_UsernameModal.propTypes = {
  intl: index_es["f" /* intlShape */],
  onClose: prop_types_default.a.func,
  vm: prop_types_default.a.shape({
    renderer: prop_types_default.a.shape({
      setUseHighQualityRender: prop_types_default.a.func
    }),
    setFramerate: prop_types_default.a.func,
    setCompilerOptions: prop_types_default.a.func,
    setInterpolation: prop_types_default.a.func,
    setRuntimeOptions: prop_types_default.a.func,
    setStageSize: prop_types_default.a.func,
    storeProjectOptions: prop_types_default.a.func
  }),
  framerate: prop_types_default.a.number,
  highQualityPen: prop_types_default.a.bool,
  interpolation: prop_types_default.a.bool,
  infiniteClones: prop_types_default.a.bool,
  removeFencing: prop_types_default.a.bool,
  removeLimits: prop_types_default.a.bool,
  warpTimer: prop_types_default.a.bool,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number
  }),
  disableCompiler: prop_types_default.a.bool
};
const tw_settings_modal_mapStateToProps = state => ({
  vm: state.scratchGui.vm,
  framerate: state.scratchGui.tw.framerate,
  highQualityPen: state.scratchGui.tw.highQualityPen,
  interpolation: state.scratchGui.tw.interpolation,
  infiniteClones: state.scratchGui.tw.runtimeOptions.maxClones === Infinity,
  removeFencing: !state.scratchGui.tw.runtimeOptions.fencing,
  removeLimits: !state.scratchGui.tw.runtimeOptions.miscLimits,
  warpTimer: state.scratchGui.tw.compilerOptions.warpTimer,
  customStageSize: state.scratchGui.customStageSize,
  disableCompiler: !state.scratchGui.tw.compilerOptions.enabled
});
const tw_settings_modal_mapDispatchToProps = dispatch => ({
  onClose: () => dispatch(Object(modals["g" /* closeSettingsModal */])())
});
/* harmony default export */ var tw_settings_modal = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(tw_settings_modal_mapStateToProps, tw_settings_modal_mapDispatchToProps)(tw_settings_modal_UsernameModal)));
// EXTERNAL MODULE: ./src/containers/gm2-custom-extension.css
var gm2_custom_extension = __webpack_require__(207);
var gm2_custom_extension_default = /*#__PURE__*/__webpack_require__.n(gm2_custom_extension);

// CONCATENATED MODULE: ./src/containers/gm2-custom-extension.jsx
function gm2_custom_extension_defineProperty(obj, key, value) { key = gm2_custom_extension_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function gm2_custom_extension_toPropertyKey(arg) { var key = gm2_custom_extension_toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function gm2_custom_extension_toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }





class gm2_custom_extension_GM2CustomExtension extends react["Component"] {
  constructor(props) {
    super(props);
    gm2_custom_extension_defineProperty(this, "state", {
      urlMenu: true,
      jsMenu: false,
      isError: false
    });
    gm2_custom_extension_defineProperty(this, "toURLMenu", function () {
      this.setState({
        urlMenu: true,
        jsMenu: false,
        isError: false
      });
    });
    gm2_custom_extension_defineProperty(this, "toJSMenu", function () {
      this.setState({
        urlMenu: false,
        jsMenu: true,
        isError: false
      });
    });
    gm2_custom_extension_defineProperty(this, "addExtension", async function () {
      if (this.state.jsMenu) {
        var input = document.getElementById("gm2-js-ext");
        window.onExtensionExitButtonClick();
        this.vm.extensionManager.addTWExtensionJS(input.value);
      }
      if (this.state.urlMenu) {
        var input = document.getElementById("gm2-url-ext");
        try {
          await this.vm.extensionManager.addTWExtensionURL(input.value);
          window.onExtensionExitButtonClick();
        } catch (e) {
          this.setState({
            urlMenu: false,
            jsMenu: false,
            isError: true
          });
        }
      }
    });
    this.vm = window.vm || window.LatestVirtualMachine;
    this.toURLMenu = this.toURLMenu.bind(this);
    this.toJSMenu = this.toJSMenu.bind(this);
    this.addExtension = this.addExtension.bind(this);
  }
  render() {
    return /*#__PURE__*/react_default.a.createElement(containers_modal, {
      className: gm2_custom_extension_default.a.modalContent,
      onRequestClose: function onRequestClose() {
        window.onExtensionExitButtonClick();
      },
      contentLabel: "Add Custom Extension",
      id: "customExtensionModal"
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gm2_custom_extension_default.a.body
    }, !this.state.isError && /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("b", null, "WARNING:"), /*#__PURE__*/react_default.a.createElement("br", null), /*#__PURE__*/react_default.a.createElement("p", null, "Using extensions not created by the developers of Turbowarp or Gvbvdxxx Mod 2,", /*#__PURE__*/react_default.a.createElement("br", null), "might cause your device to get hacked if you do not know what your doing.", /*#__PURE__*/react_default.a.createElement("br", null), "Even worse, if your using a desktop build of Gvbvdxx Mod 2, your more likley to", /*#__PURE__*/react_default.a.createElement("br", null), "make your device COMPLETLEY unusable, due to it having direct access to your pc,", /*#__PURE__*/react_default.a.createElement("br", null), "like accessing your terminal and executing commands and installing programs and viruses."), /*#__PURE__*/react_default.a.createElement("br", null), this.state.jsMenu && /*#__PURE__*/react_default.a.createElement("button", {
      className: gm2_custom_extension_default.a.button,
      onClick: () => this.toURLMenu()
    }, "Import with URL"), this.state.urlMenu && /*#__PURE__*/react_default.a.createElement("button", {
      className: gm2_custom_extension_default.a.button,
      onClick: () => this.toJSMenu()
    }, "Import with JavaScript"), /*#__PURE__*/react_default.a.createElement("hr", null), this.state.urlMenu && /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("b", null, "Import from url:"), /*#__PURE__*/react_default.a.createElement("input", {
      type: "text",
      onChange: function onChange() {},
      defaultValue: "https://extensions.turbowarp.org/stretch.js",
      id: "gm2-url-ext"
    }), /*#__PURE__*/react_default.a.createElement("br", null)), this.state.jsMenu && /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("b", null, "Import using javascript language:"), /*#__PURE__*/react_default.a.createElement("br", null), /*#__PURE__*/react_default.a.createElement("textarea", {
      onChange: function onChange() {},
      defaultValue: "(function (Scratch) {\n//Do something...\n})(Scratch);",
      id: "gm2-js-ext"
    })), /*#__PURE__*/react_default.a.createElement("button", {
      className: gm2_custom_extension_default.a.button,
      onClick: () => this.addExtension()
    }, "Load Extension")), this.state.isError && /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("b", null, "There was an error loading the extension, make sure you have internet connection if your loading it over an url."), /*#__PURE__*/react_default.a.createElement("br", null), /*#__PURE__*/react_default.a.createElement("button", {
      className: gm2_custom_extension_default.a.button,
      onClick: () => this.toURLMenu()
    }, "OK"))));
  }
}
/* harmony default export */ var containers_gm2_custom_extension = (gm2_custom_extension_GM2CustomExtension);
// EXTERNAL MODULE: ./src/lib/tw-environment-support-prober.js
var tw_environment_support_prober = __webpack_require__(79);

// EXTERNAL MODULE: ./src/components/gui/gui.css
var gui = __webpack_require__(55);
var gui_default = /*#__PURE__*/__webpack_require__.n(gui);

// EXTERNAL MODULE: ./src/components/gui/icon--extensions.svg
var icon_extensions = __webpack_require__(882);
var icon_extensions_default = /*#__PURE__*/__webpack_require__.n(icon_extensions);

// EXTERNAL MODULE: ./src/components/gui/icon--code.svg
var icon_code = __webpack_require__(883);
var icon_code_default = /*#__PURE__*/__webpack_require__.n(icon_code);

// EXTERNAL MODULE: ./src/components/gui/icon--costumes.svg
var icon_costumes = __webpack_require__(884);
var icon_costumes_default = /*#__PURE__*/__webpack_require__.n(icon_costumes);

// EXTERNAL MODULE: ./src/components/gui/icon--sounds.svg
var icon_sounds = __webpack_require__(885);
var icon_sounds_default = /*#__PURE__*/__webpack_require__.n(icon_sounds);

// CONCATENATED MODULE: ./src/components/gui/gui.jsx
const gui_excluded = ["accountNavOpen", "activeTabIndex", "alertsVisible", "authorId", "authorThumbnailUrl", "authorUsername", "basePath", "backdropLibraryVisible", "backpackHost", "backpackVisible", "blocksTabVisible", "cardsVisible", "canChangeLanguage", "canCreateNew", "canEditTitle", "canManageFiles", "canRemix", "canSave", "canCreateCopy", "canShare", "canUseCloud", "children", "connectionModalVisible", "costumeLibraryVisible", "costumesTabVisible", "customStageSize", "enableCommunity", "intl", "isCreating", "isDark", "isEmbedded", "isFullScreen", "isPlayerOnly", "isRtl", "isShared", "isWindowFullScreen", "isTelemetryEnabled", "loading", "logo", "renderLogin", "onClickAbout", "onClickAccountNav", "onCloseAccountNav", "onClickAddonSettings", "onClickTheme", "onLogOut", "onOpenRegistration", "onToggleLoginOpen", "onActivateCostumesTab", "onActivateSoundsTab", "onActivateTab", "onClickLogo", "onExtensionButtonClick", "onProjectTelemetryEvent", "onRequestCloseBackdropLibrary", "onRequestCloseCostumeLibrary", "onRequestCloseTelemetryModal", "onSeeCommunity", "onShare", "onShowPrivacyPolicy", "onStartSelectingFileUpload", "onTelemetryModalCancel", "onTelemetryModalOptIn", "onTelemetryModalOptOut", "showComingSoon", "soundsTabVisible", "stageSizeMode", "targetIsStage", "telemetryModalVisible", "tipsLibraryVisible", "usernameModalVisible", "settingsModalVisible", "gmCustomExtensionVisible", "onExtensionCustomSelect", "onExtensionExitButtonClick", "vm"];
function gui_extends() { gui_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return gui_extends.apply(this, arguments); }
function gui_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = gui_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function gui_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }










































const gui_messages = Object(index_es["d" /* defineMessages */])({
  addExtension: {
    "id": "gui.gui.addExtension",
    "defaultMessage": "Add Extension"
  }
});
const GUIComponent = props => {
  const _omit = lodash_omit_default()(props, 'dispatch'),
    {
      accountNavOpen,
      activeTabIndex,
      alertsVisible,
      authorId,
      authorThumbnailUrl,
      authorUsername,
      basePath,
      backdropLibraryVisible,
      backpackHost,
      backpackVisible,
      blocksTabVisible,
      cardsVisible,
      canChangeLanguage,
      canCreateNew,
      canEditTitle,
      canManageFiles,
      canRemix,
      canSave,
      canCreateCopy,
      canShare,
      canUseCloud,
      children,
      connectionModalVisible,
      costumeLibraryVisible,
      costumesTabVisible,
      customStageSize,
      enableCommunity,
      intl,
      isCreating,
      isDark,
      isEmbedded,
      isFullScreen,
      isPlayerOnly,
      isRtl,
      isShared,
      isWindowFullScreen,
      isTelemetryEnabled,
      loading,
      logo,
      renderLogin,
      onClickAbout,
      onClickAccountNav,
      onCloseAccountNav,
      onClickAddonSettings,
      onClickTheme,
      onLogOut,
      onOpenRegistration,
      onToggleLoginOpen,
      onActivateCostumesTab,
      onActivateSoundsTab,
      onActivateTab,
      onClickLogo,
      onExtensionButtonClick,
      onProjectTelemetryEvent,
      onRequestCloseBackdropLibrary,
      onRequestCloseCostumeLibrary,
      onRequestCloseTelemetryModal,
      onSeeCommunity,
      onShare,
      onShowPrivacyPolicy,
      onStartSelectingFileUpload,
      onTelemetryModalCancel,
      onTelemetryModalOptIn,
      onTelemetryModalOptOut,
      showComingSoon,
      soundsTabVisible,
      stageSizeMode,
      targetIsStage,
      telemetryModalVisible,
      tipsLibraryVisible,
      usernameModalVisible,
      settingsModalVisible,
      gmCustomExtensionVisible,
      onExtensionCustomSelect,
      onExtensionExitButtonClick,
      vm
    } = _omit,
    componentProps = gui_objectWithoutProperties(_omit, gui_excluded);
  if (children) {
    return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], componentProps, children);
  }
  window.onExtensionCustomSelect = onExtensionCustomSelect;
  window.onExtensionExitButtonClick = onExtensionExitButtonClick;
  const tabClassNames = {
    tabs: gui_default.a.tabs,
    tab: classnames_default()(react_tabs_default.a.reactTabsTab, gui_default.a.tab),
    tabList: classnames_default()(react_tabs_default.a.reactTabsTabList, gui_default.a.tabList),
    tabPanel: classnames_default()(react_tabs_default.a.reactTabsTabPanel, gui_default.a.tabPanel),
    tabPanelSelected: classnames_default()(react_tabs_default.a.reactTabsTabPanelSelected, gui_default.a.isSelected),
    tabSelected: classnames_default()(react_tabs_default.a.reactTabsTabSelected, gui_default.a.isSelected)
  };
  const minWidth = layout_constants["e" /* default */].fullSizeMinWidth + Math.max(0, customStageSize.width - layout_constants["e" /* default */].referenceWidth);
  return /*#__PURE__*/react_default.a.createElement(react_responsive_default.a, {
    minWidth: minWidth
  }, isFullSize => {
    const stageSize = resolveStageSize(stageSizeMode, isFullSize);
    return isPlayerOnly ? /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, isWindowFullScreen ? /*#__PURE__*/react_default.a.createElement("div", {
      className: gui_default.a.fullscreenBackground
    }) : null, /*#__PURE__*/react_default.a.createElement(containers_stage_wrapper, {
      isFullScreen: isFullScreen,
      isEmbedded: isEmbedded,
      isRendererSupported: Object(tw_environment_support_prober["c" /* isRendererSupported */])(),
      isRtl: isRtl,
      loading: loading,
      stageSize: layout_constants["d" /* STAGE_SIZE_MODES */].large,
      vm: vm
    }, alertsVisible ? /*#__PURE__*/react_default.a.createElement(containers_alerts, {
      className: gui_default.a.alertsContainer
    }) : null), usernameModalVisible && /*#__PURE__*/react_default.a.createElement(tw_username_modal, null), settingsModalVisible && /*#__PURE__*/react_default.a.createElement(tw_settings_modal, null)) : /*#__PURE__*/react_default.a.createElement(box["a" /* default */], gui_extends({
      className: gui_default.a.pageWrapper,
      dir: isRtl ? 'rtl' : 'ltr'
    }, componentProps), usernameModalVisible && /*#__PURE__*/react_default.a.createElement(tw_username_modal, null), settingsModalVisible && /*#__PURE__*/react_default.a.createElement(tw_settings_modal, null), gmCustomExtensionVisible && /*#__PURE__*/react_default.a.createElement(containers_gm2_custom_extension, null), telemetryModalVisible ? /*#__PURE__*/react_default.a.createElement(telemetry_modal_telemetry_modal, {
      isRtl: isRtl,
      isTelemetryEnabled: isTelemetryEnabled,
      onCancel: onTelemetryModalCancel,
      onOptIn: onTelemetryModalOptIn,
      onOptOut: onTelemetryModalOptOut,
      onRequestClose: onRequestCloseTelemetryModal,
      onShowPrivacyPolicy: onShowPrivacyPolicy
    }) : null, loading ? /*#__PURE__*/react_default.a.createElement(loader_loader, {
      isFullScreen: true
    }) : null, isCreating ? /*#__PURE__*/react_default.a.createElement(loader_loader, {
      isFullScreen: true,
      messageId: "gui.loader.creating"
    }) : null, Object(tw_environment_support_prober["c" /* isRendererSupported */])() ? null : /*#__PURE__*/react_default.a.createElement(webgl_modal["a" /* default */], {
      isRtl: isRtl
    }), Object(tw_environment_support_prober["b" /* isBrowserSupported */])() ? null : /*#__PURE__*/react_default.a.createElement(browser_modal["a" /* default */], {
      isRtl: isRtl
    }), tipsLibraryVisible ? /*#__PURE__*/react_default.a.createElement(tips_library, null) : null, cardsVisible ? /*#__PURE__*/react_default.a.createElement(containers_cards, null) : null, alertsVisible ? /*#__PURE__*/react_default.a.createElement(containers_alerts, {
      className: gui_default.a.alertsContainer
    }) : null, connectionModalVisible ? /*#__PURE__*/react_default.a.createElement(containers_connection_modal, {
      vm: vm
    }) : null, costumeLibraryVisible ? /*#__PURE__*/react_default.a.createElement(costume_library, {
      vm: vm,
      onRequestClose: onRequestCloseCostumeLibrary
    }) : null, backdropLibraryVisible ? /*#__PURE__*/react_default.a.createElement(backdrop_library, {
      vm: vm,
      onRequestClose: onRequestCloseBackdropLibrary
    }) : null, /*#__PURE__*/react_default.a.createElement(menu_bar["a" /* default */], {
      accountNavOpen: accountNavOpen,
      authorId: authorId,
      authorThumbnailUrl: authorThumbnailUrl,
      authorUsername: authorUsername,
      canChangeLanguage: canChangeLanguage,
      canCreateCopy: canCreateCopy,
      canCreateNew: canCreateNew,
      canEditTitle: canEditTitle,
      canManageFiles: canManageFiles,
      canRemix: canRemix,
      canSave: canSave,
      canShare: canShare,
      className: gui_default.a.menuBarPosition,
      enableCommunity: enableCommunity,
      isShared: isShared,
      logo: logo,
      renderLogin: renderLogin,
      showComingSoon: showComingSoon,
      onClickAbout: onClickAbout,
      onClickAccountNav: onClickAccountNav,
      onClickAddonSettings: onClickAddonSettings,
      onClickTheme: onClickTheme,
      onClickLogo: onClickLogo,
      onCloseAccountNav: onCloseAccountNav,
      onLogOut: onLogOut,
      onOpenRegistration: onOpenRegistration,
      onProjectTelemetryEvent: onProjectTelemetryEvent,
      onSeeCommunity: onSeeCommunity,
      onShare: onShare,
      onStartSelectingFileUpload: onStartSelectingFileUpload,
      onToggleLoginOpen: onToggleLoginOpen
    }), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.bodyWrapper
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.flexWrapper
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.editorWrapper
    }, /*#__PURE__*/react_default.a.createElement(esm["d" /* Tabs */], {
      forceRenderTabPanel: true,
      className: tabClassNames.tabs,
      selectedIndex: activeTabIndex,
      selectedTabClassName: tabClassNames.tabSelected,
      selectedTabPanelClassName: tabClassNames.tabPanelSelected,
      onSelect: onActivateTab
    }, /*#__PURE__*/react_default.a.createElement(esm["b" /* TabList */], {
      className: tabClassNames.tabList
    }, /*#__PURE__*/react_default.a.createElement(esm["a" /* Tab */], {
      className: tabClassNames.tab
    }, /*#__PURE__*/react_default.a.createElement("img", {
      draggable: false,
      src: icon_code_default.a
    }), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Code",
      id: "gui.gui.codeTab"
    })), /*#__PURE__*/react_default.a.createElement(esm["a" /* Tab */], {
      className: tabClassNames.tab,
      onClick: onActivateCostumesTab
    }, /*#__PURE__*/react_default.a.createElement("img", {
      draggable: false,
      src: icon_costumes_default.a
    }), targetIsStage ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Backdrops",
      id: "gui.gui.backdropsTab"
    }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Costumes",
      id: "gui.gui.costumesTab"
    })), /*#__PURE__*/react_default.a.createElement(esm["a" /* Tab */], {
      className: tabClassNames.tab,
      onClick: onActivateSoundsTab
    }, /*#__PURE__*/react_default.a.createElement("img", {
      draggable: false,
      src: icon_sounds_default.a
    }), /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Sounds",
      id: "gui.gui.soundsTab"
    }))), /*#__PURE__*/react_default.a.createElement(esm["c" /* TabPanel */], {
      className: tabClassNames.tabPanel
    }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.blocksWrapper
    }, /*#__PURE__*/react_default.a.createElement(containers_blocks, {
      canUseCloud: canUseCloud,
      grow: 1,
      isVisible: blocksTabVisible,
      options: {
        media: "".concat(basePath, "static/blocks-media/")
      },
      stageSize: stageSize,
      vm: vm
    })), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.extensionButtonContainer
    }, /*#__PURE__*/react_default.a.createElement("button", {
      className: gui_default.a.extensionButton,
      title: intl.formatMessage(gui_messages.addExtension),
      onClick: onExtensionButtonClick
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: gui_default.a.extensionButtonIcon,
      draggable: false,
      src: icon_extensions_default.a
    }))), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.watermark
    }, /*#__PURE__*/react_default.a.createElement(containers_watermark, null))), /*#__PURE__*/react_default.a.createElement(esm["c" /* TabPanel */], {
      className: tabClassNames.tabPanel
    }, costumesTabVisible ? /*#__PURE__*/react_default.a.createElement(costume_tab, {
      vm: vm,
      isDark: isDark
    }) : null), /*#__PURE__*/react_default.a.createElement(esm["c" /* TabPanel */], {
      className: tabClassNames.tabPanel
    }, soundsTabVisible ? /*#__PURE__*/react_default.a.createElement(sound_tab, {
      vm: vm
    }) : null)), backpackVisible ? /*#__PURE__*/react_default.a.createElement(containers_backpack, {
      host: backpackHost
    }) : null), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: classnames_default()(gui_default.a.stageAndTargetWrapper, gui_default.a[stageSize])
    }, /*#__PURE__*/react_default.a.createElement(containers_stage_wrapper, {
      isFullScreen: isFullScreen,
      isRendererSupported: Object(tw_environment_support_prober["c" /* isRendererSupported */])(),
      isRtl: isRtl,
      stageSize: stageSize,
      vm: vm
    }), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: gui_default.a.targetWrapper
    }, /*#__PURE__*/react_default.a.createElement(containers_target_pane, {
      stageSize: stageSize,
      vm: vm
    }))))), /*#__PURE__*/react_default.a.createElement(containers_drag_layer, null));
  });
};
GUIComponent.propTypes = {
  accountNavOpen: prop_types_default.a.bool,
  activeTabIndex: prop_types_default.a.number,
  authorId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool]),
  // can be false
  authorThumbnailUrl: prop_types_default.a.string,
  authorUsername: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool]),
  // can be false
  backdropLibraryVisible: prop_types_default.a.bool,
  backpackHost: prop_types_default.a.string,
  backpackVisible: prop_types_default.a.bool,
  basePath: prop_types_default.a.string,
  blocksTabVisible: prop_types_default.a.bool,
  canChangeLanguage: prop_types_default.a.bool,
  canCreateCopy: prop_types_default.a.bool,
  canCreateNew: prop_types_default.a.bool,
  canEditTitle: prop_types_default.a.bool,
  canManageFiles: prop_types_default.a.bool,
  canRemix: prop_types_default.a.bool,
  canSave: prop_types_default.a.bool,
  canShare: prop_types_default.a.bool,
  canUseCloud: prop_types_default.a.bool,
  cardsVisible: prop_types_default.a.bool,
  children: prop_types_default.a.node,
  costumeLibraryVisible: prop_types_default.a.bool,
  costumesTabVisible: prop_types_default.a.bool,
  customStageSize: prop_types_default.a.shape({
    width: prop_types_default.a.number,
    height: prop_types_default.a.number
  }),
  enableCommunity: prop_types_default.a.bool,
  intl: index_es["f" /* intlShape */].isRequired,
  isCreating: prop_types_default.a.bool,
  isDark: prop_types_default.a.bool,
  isEmbedded: prop_types_default.a.bool,
  isFullScreen: prop_types_default.a.bool,
  isPlayerOnly: prop_types_default.a.bool,
  isRtl: prop_types_default.a.bool,
  isShared: prop_types_default.a.bool,
  isWindowFullScreen: prop_types_default.a.bool,
  loading: prop_types_default.a.bool,
  logo: prop_types_default.a.string,
  onActivateCostumesTab: prop_types_default.a.func,
  onActivateSoundsTab: prop_types_default.a.func,
  onActivateTab: prop_types_default.a.func,
  onClickAccountNav: prop_types_default.a.func,
  onClickAddonSettings: prop_types_default.a.func,
  onClickTheme: prop_types_default.a.func,
  onClickLogo: prop_types_default.a.func,
  onCloseAccountNav: prop_types_default.a.func,
  onExtensionButtonClick: prop_types_default.a.func,
  onLogOut: prop_types_default.a.func,
  onOpenRegistration: prop_types_default.a.func,
  onRequestCloseBackdropLibrary: prop_types_default.a.func,
  onRequestCloseCostumeLibrary: prop_types_default.a.func,
  onRequestCloseTelemetryModal: prop_types_default.a.func,
  onSeeCommunity: prop_types_default.a.func,
  onShare: prop_types_default.a.func,
  onShowPrivacyPolicy: prop_types_default.a.func,
  onStartSelectingFileUpload: prop_types_default.a.func,
  onTabSelect: prop_types_default.a.func,
  onTelemetryModalCancel: prop_types_default.a.func,
  onTelemetryModalOptIn: prop_types_default.a.func,
  onTelemetryModalOptOut: prop_types_default.a.func,
  onToggleLoginOpen: prop_types_default.a.func,
  renderLogin: prop_types_default.a.func,
  showComingSoon: prop_types_default.a.bool,
  soundsTabVisible: prop_types_default.a.bool,
  stageSizeMode: prop_types_default.a.oneOf(Object.keys(layout_constants["d" /* STAGE_SIZE_MODES */])),
  targetIsStage: prop_types_default.a.bool,
  telemetryModalVisible: prop_types_default.a.bool,
  tipsLibraryVisible: prop_types_default.a.bool,
  usernameModalVisible: prop_types_default.a.bool,
  settingsModalVisible: prop_types_default.a.bool,
  gmCustomExtensionVisible: prop_types_default.a.bool,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
GUIComponent.defaultProps = {
  backpackHost: null,
  backpackVisible: false,
  basePath: './',
  canChangeLanguage: true,
  canCreateNew: false,
  canEditTitle: false,
  canManageFiles: true,
  canRemix: false,
  canSave: false,
  canCreateCopy: false,
  canShare: false,
  canUseCloud: false,
  enableCommunity: false,
  isCreating: false,
  isShared: false,
  loading: false,
  showComingSoon: false,
  stageSizeMode: layout_constants["d" /* STAGE_SIZE_MODES */].large
};
const gui_mapStateToProps = state => ({
  customStageSize: state.scratchGui.customStageSize,
  isWindowFullScreen: state.scratchGui.tw.isWindowFullScreen,
  // This is the button's mode, as opposed to the actual current state
  stageSizeMode: state.scratchGui.stageSize.stageSize
});
/* harmony default export */ var gui_gui = (Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(gui_mapStateToProps)(GUIComponent)));
// CONCATENATED MODULE: ./src/containers/gui.jsx
const containers_gui_excluded = ["assetHost", "cloudHost", "error", "isError", "isScratchDesktop", "isShowingProject", "onProjectLoaded", "onStorageInit", "onUpdateProjectId", "onVmInit", "projectHost", "projectId", "children", "fetchingProject", "isLoading", "loadingStateVisible"];
function containers_gui_extends() { containers_gui_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return containers_gui_extends.apply(this, arguments); }
function containers_gui_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = containers_gui_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function containers_gui_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }


























class gui_GUI extends react_default.a.Component {
  componentDidMount() {
    Object(lib_isScratchDesktop["c" /* setIsScratchDesktop */])(this.props.isScratchDesktop);
    this.props.onStorageInit(lib_storage["a" /* default */]);
    this.props.onVmInit(this.props.vm);
  }
  componentDidUpdate(prevProps) {
    if (this.props.projectId !== prevProps.projectId && this.props.projectId !== null) {
      this.props.onUpdateProjectId(this.props.projectId);
    }
    if (this.props.isShowingProject && !prevProps.isShowingProject) {
      // this only notifies container when a project changes from not yet loaded to loaded
      // At this time the project view in www doesn't need to know when a project is unloaded
      this.props.onProjectLoaded();
    }
  }
  render() {
    if (this.props.isError) {
      throw new Error("Error in Scratch GUI [location=".concat(window.location, "]: ").concat(this.props.error));
    }
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        assetHost,
        cloudHost,
        error,
        isError,
        isScratchDesktop,
        isShowingProject,
        onProjectLoaded,
        onStorageInit,
        onUpdateProjectId,
        onVmInit,
        projectHost,
        projectId,
        /* eslint-enable no-unused-vars */
        children,
        fetchingProject,
        isLoading,
        loadingStateVisible
      } = _this$props,
      componentProps = containers_gui_objectWithoutProperties(_this$props, containers_gui_excluded);
    return /*#__PURE__*/react_default.a.createElement(gui_gui, containers_gui_extends({
      loading: fetchingProject || isLoading || loadingStateVisible
    }, componentProps), children);
  }
}
gui_GUI.propTypes = {
  assetHost: prop_types_default.a.string,
  children: prop_types_default.a.node,
  cloudHost: prop_types_default.a.string,
  error: prop_types_default.a.oneOfType([prop_types_default.a.object, prop_types_default.a.string]),
  fetchingProject: prop_types_default.a.bool,
  intl: index_es["f" /* intlShape */],
  isError: prop_types_default.a.bool,
  isEmbedded: prop_types_default.a.bool,
  isFullScreen: prop_types_default.a.bool,
  isLoading: prop_types_default.a.bool,
  isScratchDesktop: prop_types_default.a.bool,
  isShowingProject: prop_types_default.a.bool,
  loadingStateVisible: prop_types_default.a.bool,
  onProjectLoaded: prop_types_default.a.func,
  onSeeCommunity: prop_types_default.a.func,
  onStorageInit: prop_types_default.a.func,
  onUpdateProjectId: prop_types_default.a.func,
  onVmInit: prop_types_default.a.func,
  projectHost: prop_types_default.a.string,
  projectId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),
  telemetryModalVisible: prop_types_default.a.bool,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
gui_GUI.defaultProps = {
  isScratchDesktop: false,
  onStorageInit: storageInstance => storageInstance.addOfficialScratchWebStores(),
  onProjectLoaded: () => {},
  onUpdateProjectId: () => {},
  onVmInit: ( /* vm */) => {}
};
const containers_gui_mapStateToProps = state => {
  const loadingState = state.scratchGui.projectState.loadingState;
  return {
    activeTabIndex: state.scratchGui.editorTab.activeTabIndex,
    alertsVisible: state.scratchGui.alerts.visible,
    backdropLibraryVisible: state.scratchGui.modals.backdropLibrary,
    blocksTabVisible: state.scratchGui.editorTab.activeTabIndex === editor_tab["a" /* BLOCKS_TAB_INDEX */],
    cardsVisible: state.scratchGui.cards.visible,
    connectionModalVisible: state.scratchGui.modals.connectionModal,
    costumeLibraryVisible: state.scratchGui.modals.costumeLibrary,
    costumesTabVisible: state.scratchGui.editorTab.activeTabIndex === editor_tab["b" /* COSTUMES_TAB_INDEX */],
    error: state.scratchGui.projectState.error,
    isError: Object(project_state["k" /* getIsError */])(loadingState),
    isEmbedded: state.scratchGui.mode.isEmbedded,
    isFullScreen: state.scratchGui.mode.isFullScreen || state.scratchGui.mode.isEmbedded,
    isPlayerOnly: state.scratchGui.mode.isPlayerOnly,
    isRtl: state.locales.isRtl,
    isShowingProject: Object(project_state["r" /* getIsShowingProject */])(loadingState),
    loadingStateVisible: state.scratchGui.modals.loadingProject,
    projectId: state.scratchGui.projectState.projectId,
    soundsTabVisible: state.scratchGui.editorTab.activeTabIndex === editor_tab["c" /* SOUNDS_TAB_INDEX */],
    targetIsStage: state.scratchGui.targets.stage && state.scratchGui.targets.stage.id === state.scratchGui.targets.editingTarget,
    telemetryModalVisible: state.scratchGui.modals.telemetryModal,
    tipsLibraryVisible: state.scratchGui.modals.tipsLibrary,
    usernameModalVisible: state.scratchGui.modals.usernameModal,
    gmCustomExtensionVisible: state.scratchGui.modals.gmCustomExtension,
    settingsModalVisible: state.scratchGui.modals.settingsModal,
    vm: state.scratchGui.vm
  };
};
const gui_mapDispatchToProps = dispatch => ({
  onExtensionButtonClick: () => dispatch(Object(modals["u" /* openExtensionLibrary */])()),
  onExtensionExitButtonClick: () => dispatch(Object(modals["d" /* closeCustomExtModal */])()),
  onExtensionCustomSelect: () => dispatch(Object(modals["s" /* openCustomExtModal */])()),
  onActivateTab: tab => dispatch(Object(editor_tab["d" /* activateTab */])(tab)),
  onActivateCostumesTab: () => dispatch(Object(editor_tab["d" /* activateTab */])(editor_tab["b" /* COSTUMES_TAB_INDEX */])),
  onActivateSoundsTab: () => dispatch(Object(editor_tab["d" /* activateTab */])(editor_tab["c" /* SOUNDS_TAB_INDEX */])),
  onRequestCloseBackdropLibrary: () => dispatch(Object(modals["a" /* closeBackdropLibrary */])()),
  onRequestCloseCostumeLibrary: () => dispatch(Object(modals["c" /* closeCostumeLibrary */])()),
  onRequestCloseTelemetryModal: () => dispatch(Object(modals["k" /* closeTelemetryModal */])())
});
const ConnectedGUI = Object(index_es["e" /* injectIntl */])(Object(react_redux_es["b" /* connect */])(containers_gui_mapStateToProps, gui_mapDispatchToProps)(gui_GUI));

// note that redux's 'compose' function is just being used as a general utility to make
// the hierarchy of HOC constructor calls clearer here; it has nothing to do with redux's
// ability to compose reducers.
const WrappedGui = Object(es["d" /* compose */])(localization_hoc, Object(error_boundary_hoc["a" /* default */])('Top Level App'), font_loader_hoc_FontLoaderHOC,
// QueryParserHOC, // tw: HOC is unused
project_fetcher_hoc_ProjectFetcherHOC, titled_hoc_TitledHOC, project_saver_hoc_ProjectSaverHOC, vm_listener_hoc, vm_manager_hoc, sb_file_uploader_hoc["a" /* default */], cloud_manager_hoc, tw_fullscreen_resizer_hoc_TWFullScreenResizerHOC, tw_restore_point_hoc_TWRestorePointHOC)(ConnectedGUI);
WrappedGui.setAppElement = lib_default.a.setAppElement;
/* harmony default export */ var containers_gui = (WrappedGui);
// CONCATENATED MODULE: ./src/playground/render-gui.jsx
function render_gui_extends() { render_gui_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return render_gui_extends.apply(this, arguments); }


const render_gui_searchParams = new URLSearchParams(location.search);
const render_gui_cloudHost = render_gui_searchParams.get('cloud_host') || 'wss://gm2-cloud.glitch.me';
const RenderGUI = props => /*#__PURE__*/react_default.a.createElement(containers_gui, render_gui_extends({
  cloudHost: render_gui_cloudHost,
  canSave: false,
  basePath: "",
  canEditTitle: true,
  enableCommunity: true
}, props));
/* harmony default export */ var render_gui = __webpack_exports__["a"] = (RenderGUI);

/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(4);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules
var es = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/redux/es/index.js + 6 modules
var redux_es = __webpack_require__(42);

// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.es.js + 1 modules
var index_es = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(0);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/lodash.bindall/index.js
var lodash_bindall = __webpack_require__(5);
var lodash_bindall_default = /*#__PURE__*/__webpack_require__.n(lodash_bindall);

// EXTERNAL MODULE: ./node_modules/bowser/src/bowser.js
var bowser = __webpack_require__(354);
var bowser_default = /*#__PURE__*/__webpack_require__.n(bowser);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(1);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/scratch-vm/src/index.js
var src = __webpack_require__(12);
var src_default = /*#__PURE__*/__webpack_require__.n(src);

// EXTERNAL MODULE: ./src/components/box/box.jsx
var box = __webpack_require__(7);

// EXTERNAL MODULE: ./src/components/button/button.jsx
var button_button = __webpack_require__(56);

// EXTERNAL MODULE: ./src/components/menu-bar/icon--see-community.svg
var icon_see_community = __webpack_require__(359);
var icon_see_community_default = /*#__PURE__*/__webpack_require__.n(icon_see_community);

// EXTERNAL MODULE: ./src/components/menu-bar/community-button.css
var community_button = __webpack_require__(469);
var community_button_default = /*#__PURE__*/__webpack_require__.n(community_button);

// CONCATENATED MODULE: ./src/components/menu-bar/community-button.jsx







const CommunityButton = _ref => {
  let {
    className,
    onClick
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
    className: classnames_default()(className, community_button_default.a.communityButton),
    iconClassName: community_button_default.a.communityButtonIcon,
    iconSrc: icon_see_community_default.a,
    onClick: onClick
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "See Project Page",
    id: "gui.menuBar.seeProjectPage"
  }));
};
CommunityButton.propTypes = {
  className: prop_types_default.a.string,
  onClick: prop_types_default.a.func
};
CommunityButton.defaultProps = {
  onClick: () => {}
};
/* harmony default export */ var menu_bar_community_button = (CommunityButton);
// EXTERNAL MODULE: ./src/components/menu-bar/share-button.css
var share_button = __webpack_require__(470);
var share_button_default = /*#__PURE__*/__webpack_require__.n(share_button);

// CONCATENATED MODULE: ./src/components/menu-bar/share-button.jsx






const ShareButton = _ref => {
  let {
    className,
    isShared,
    onClick
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
    className: classnames_default()(className, share_button_default.a.shareButton, {
      [share_button_default.a.shareButtonIsShared]: isShared
    }),
    onClick: onClick
  }, isShared ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Shared",
    id: "gui.menuBar.isShared"
  }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Share",
    id: "gui.menuBar.share"
  }));
};
ShareButton.propTypes = {
  className: prop_types_default.a.string,
  isShared: prop_types_default.a.bool,
  onClick: prop_types_default.a.func
};
ShareButton.defaultProps = {
  onClick: () => {}
};
/* harmony default export */ var menu_bar_share_button = (ShareButton);
// EXTERNAL MODULE: ./src/components/coming-soon/coming-soon.jsx
var coming_soon = __webpack_require__(291);

// EXTERNAL MODULE: ./src/components/divider/divider.jsx
var divider = __webpack_require__(350);

// EXTERNAL MODULE: ./src/reducers/locales.js
var locales = __webpack_require__(195);

// EXTERNAL MODULE: ./src/reducers/menus.js
var menus = __webpack_require__(39);

// EXTERNAL MODULE: ./node_modules/@turbowarp/scratch-l10n/src/index.js + 2 modules
var scratch_l10n_src = __webpack_require__(101);

// EXTERNAL MODULE: ./src/components/language-selector/language-selector.css
var language_selector = __webpack_require__(865);
var language_selector_default = /*#__PURE__*/__webpack_require__.n(language_selector);

// CONCATENATED MODULE: ./src/components/language-selector/language-selector.jsx





// supported languages to exclude from the menu, but allow as a URL option
const ignore = [];
const language_selector_LanguageSelector = _ref => {
  let {
    currentLocale,
    label,
    onChange
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("select", {
    "aria-label": label,
    className: language_selector_default.a.languageSelect,
    value: currentLocale,
    onChange: onChange
  }, Object.keys(scratch_l10n_src["a" /* default */]).filter(l => !ignore.includes(l)).map(locale => /*#__PURE__*/react_default.a.createElement("option", {
    key: locale,
    value: locale
  }, scratch_l10n_src["a" /* default */][locale].name)));
};
language_selector_LanguageSelector.propTypes = {
  currentLocale: prop_types_default.a.string,
  label: prop_types_default.a.string,
  onChange: prop_types_default.a.func
};
/* harmony default export */ var language_selector_language_selector = (language_selector_LanguageSelector);
// CONCATENATED MODULE: ./src/containers/language-selector.jsx
const _excluded = ["onChangeLanguage", "messagesByLocale", "children"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







class containers_language_selector_LanguageSelector extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleChange']);
    document.documentElement.lang = props.currentLocale;
  }
  handleChange(e) {
    const newLocale = e.target.value;
    if (this.props.messagesByLocale[newLocale]) {
      this.props.onChangeLanguage(newLocale);
      document.documentElement.lang = newLocale;
    }
  }
  render() {
    const _this$props = this.props,
      {
        onChangeLanguage,
        // eslint-disable-line no-unused-vars
        messagesByLocale,
        // eslint-disable-line no-unused-vars
        children
      } = _this$props,
      props = _objectWithoutProperties(_this$props, _excluded);
    return /*#__PURE__*/react_default.a.createElement(language_selector_language_selector, _extends({
      onChange: this.handleChange
    }, props), children);
  }
}
containers_language_selector_LanguageSelector.propTypes = {
  children: prop_types_default.a.node,
  currentLocale: prop_types_default.a.string.isRequired,
  // Only checking key presence for messagesByLocale, no need to be more specific than object
  messagesByLocale: prop_types_default.a.object,
  // eslint-disable-line react/forbid-prop-types
  onChangeLanguage: prop_types_default.a.func.isRequired
};
const language_selector_mapStateToProps = state => ({
  currentLocale: state.locales.locale,
  messagesByLocale: state.locales.messagesByLocale
});
const language_selector_mapDispatchToProps = dispatch => ({
  onChangeLanguage: locale => {
    dispatch(Object(locales["d" /* selectLocale */])(locale));
    dispatch(Object(menus["h" /* closeLanguageMenu */])());
  }
});
/* harmony default export */ var containers_language_selector = (Object(es["b" /* connect */])(language_selector_mapStateToProps, language_selector_mapDispatchToProps)(containers_language_selector_LanguageSelector));
// EXTERNAL MODULE: ./src/reducers/project-state.js
var project_state = __webpack_require__(11);

// CONCATENATED MODULE: ./src/containers/project-watcher.jsx






/**
 * Watches for project to finish updating before taking some action.
 *
 * To use ProjectWatcher, pass it a callback function using the onDoneUpdating prop.
 * ProjectWatcher passes a waitForUpdate function to its children, which they can call
 * to set ProjectWatcher to request that it call the onDoneUpdating callback when
 * project is no longer updating.
 */
class project_watcher_ProjectWatcher extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['waitForUpdate']);
    this.state = {
      waiting: false
    };
  }
  componentDidUpdate(prevProps) {
    if (this.state.waiting && this.props.isShowingWithId && !prevProps.isShowingWithId) {
      this.fulfill();
    }
  }
  fulfill() {
    this.props.onDoneUpdating();
    this.setState({
      // eslint-disable-line react/no-did-update-set-state
      waiting: false
    });
  }
  waitForUpdate(isUpdating) {
    if (isUpdating) {
      this.setState({
        waiting: true
      });
    } else {
      // fulfill immediately
      this.fulfill();
    }
  }
  render() {
    return this.props.children(this.waitForUpdate);
  }
}
project_watcher_ProjectWatcher.propTypes = {
  children: prop_types_default.a.func,
  isShowingWithId: prop_types_default.a.bool,
  onDoneUpdating: prop_types_default.a.func
};
project_watcher_ProjectWatcher.defaultProps = {
  onDoneUpdating: () => {}
};
const project_watcher_mapStateToProps = state => {
  const loadingState = state.scratchGui.projectState.loadingState;
  return {
    isShowingWithId: Object(project_state["s" /* getIsShowingWithId */])(loadingState)
  };
};
const project_watcher_mapDispatchToProps = () => ({});
/* harmony default export */ var project_watcher = (Object(es["b" /* connect */])(project_watcher_mapStateToProps, project_watcher_mapDispatchToProps)(project_watcher_ProjectWatcher));
// EXTERNAL MODULE: ./src/components/menu/menu.css
var menu = __webpack_require__(206);
var menu_default = /*#__PURE__*/__webpack_require__.n(menu);

// CONCATENATED MODULE: ./src/components/menu/menu.jsx




const MenuComponent = _ref => {
  let {
    className = '',
    children,
    componentRef,
    place = 'right'
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("ul", {
    className: classnames_default()(menu_default.a.menu, className, {
      [menu_default.a.left]: place === 'left',
      [menu_default.a.right]: place === 'right'
    }),
    ref: componentRef
  }, children);
};
MenuComponent.propTypes = {
  children: prop_types_default.a.node,
  className: prop_types_default.a.string,
  componentRef: prop_types_default.a.func,
  place: prop_types_default.a.oneOf(['left', 'right'])
};
const MenuItem = _ref2 => {
  let {
    children,
    className,
    onClick
  } = _ref2;
  return /*#__PURE__*/react_default.a.createElement("li", {
    className: classnames_default()(menu_default.a.menuItem, menu_default.a.hoverable, className),
    onClick: onClick
  }, children);
};
MenuItem.propTypes = {
  children: prop_types_default.a.node,
  className: prop_types_default.a.string,
  onClick: prop_types_default.a.func
};
const addDividerClassToFirstChild = (child, id) => child && /*#__PURE__*/react_default.a.cloneElement(child, {
  className: classnames_default()(child.className, {
    [menu_default.a.menuSection]: id === 0
  }),
  key: id
});
const MenuSection = _ref3 => {
  let {
    children
  } = _ref3;
  return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, react_default.a.Children.map(children, addDividerClassToFirstChild));
};
MenuSection.propTypes = {
  children: prop_types_default.a.node
};

// CONCATENATED MODULE: ./src/containers/menu.jsx
const menu_excluded = ["open", "children"];
function menu_extends() { menu_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return menu_extends.apply(this, arguments); }
function menu_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = menu_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function menu_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




class menu_Menu extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['addListeners', 'removeListeners', 'handleClick', 'ref']);
  }
  componentDidMount() {
    if (this.props.open) this.addListeners();
  }
  componentDidUpdate(prevProps) {
    if (this.props.open && !prevProps.open) this.addListeners();
    if (!this.props.open && prevProps.open) this.removeListeners();
  }
  componentWillUnmount() {
    this.removeListeners();
  }
  addListeners() {
    document.addEventListener('mouseup', this.handleClick);
  }
  removeListeners() {
    document.removeEventListener('mouseup', this.handleClick);
  }
  handleClick(e) {
    if (this.props.open && !this.menu.contains(e.target)) {
      this.props.onRequestClose();
    }
  }
  ref(c) {
    this.menu = c;
  }
  render() {
    const _this$props = this.props,
      {
        open,
        children
      } = _this$props,
      props = menu_objectWithoutProperties(_this$props, menu_excluded);
    if (!open) return null;
    return /*#__PURE__*/react_default.a.createElement(MenuComponent, menu_extends({
      componentRef: this.ref
    }, props), children);
  }
}
menu_Menu.propTypes = {
  children: prop_types_default.a.node,
  onRequestClose: prop_types_default.a.func.isRequired,
  open: prop_types_default.a.bool.isRequired
};
/* harmony default export */ var containers_menu = (menu_Menu);
// CONCATENATED MODULE: ./src/components/menu-bar/menu-bar-menu.jsx



const MenuBarMenu = _ref => {
  let {
    children,
    className,
    onRequestClose,
    open,
    place = 'right'
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: className
  }, /*#__PURE__*/react_default.a.createElement(containers_menu, {
    open: open,
    place: place,
    onRequestClose: onRequestClose
  }, children));
};
MenuBarMenu.propTypes = {
  children: prop_types_default.a.node,
  className: prop_types_default.a.string,
  onRequestClose: prop_types_default.a.func,
  open: prop_types_default.a.bool,
  place: prop_types_default.a.oneOf(['left', 'right'])
};
/* harmony default export */ var menu_bar_menu = (MenuBarMenu);
// EXTERNAL MODULE: ./src/reducers/project-title.js
var project_title = __webpack_require__(94);

// EXTERNAL MODULE: ./src/components/forms/buffered-input-hoc.jsx
var buffered_input_hoc = __webpack_require__(129);

// EXTERNAL MODULE: ./src/components/forms/input.jsx
var input = __webpack_require__(108);

// EXTERNAL MODULE: ./src/components/menu-bar/project-title-input.css
var project_title_input = __webpack_require__(866);
var project_title_input_default = /*#__PURE__*/__webpack_require__.n(project_title_input);

// CONCATENATED MODULE: ./src/components/menu-bar/project-title-input.jsx








const BufferedInput = Object(buffered_input_hoc["a" /* default */])(input["a" /* default */]);

const messages = Object(index_es["d" /* defineMessages */])({
  projectTitlePlaceholder: {
    "id": "gui.gui.projectTitlePlaceholder",
    "defaultMessage": "Project title here"
  }
});
const ProjectTitleInput = _ref => {
  let {
    className,
    intl,
    onSubmit,
    projectTitle
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(BufferedInput, {
    className: classnames_default()(project_title_input_default.a.titleField, className),
    maxLength: "100",
    placeholder: intl.formatMessage(messages.projectTitlePlaceholder),
    tabIndex: "0",
    type: "text",
    value: projectTitle,
    onSubmit: onSubmit
  });
};
ProjectTitleInput.propTypes = {
  className: prop_types_default.a.string,
  intl: index_es["f" /* intlShape */].isRequired,
  onSubmit: prop_types_default.a.func,
  projectTitle: prop_types_default.a.string
};
const project_title_input_mapStateToProps = state => ({
  projectTitle: state.scratchGui.projectTitle
});
const project_title_input_mapDispatchToProps = dispatch => ({
  onSubmit: title => dispatch(Object(project_title["c" /* setProjectTitle */])(title))
});
/* harmony default export */ var menu_bar_project_title_input = (Object(index_es["e" /* injectIntl */])(Object(es["b" /* connect */])(project_title_input_mapStateToProps, project_title_input_mapDispatchToProps)(ProjectTitleInput)));
// EXTERNAL MODULE: ./src/components/menu-bar/user-avatar.css
var user_avatar = __webpack_require__(867);
var user_avatar_default = /*#__PURE__*/__webpack_require__.n(user_avatar);

// CONCATENATED MODULE: ./src/components/menu-bar/user-avatar.jsx




const UserAvatar = _ref => {
  let {
    className,
    imageUrl
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("img", {
    className: classnames_default()(className, user_avatar_default.a.userThumbnail),
    src: imageUrl
  });
};
UserAvatar.propTypes = {
  className: prop_types_default.a.string,
  imageUrl: prop_types_default.a.string
};
/* harmony default export */ var menu_bar_user_avatar = (UserAvatar);
// EXTERNAL MODULE: ./src/components/menu-bar/author-info.css
var author_info = __webpack_require__(183);
var author_info_default = /*#__PURE__*/__webpack_require__.n(author_info);

// CONCATENATED MODULE: ./src/components/menu-bar/author-info.jsx
const author_info_excluded = ["projectId"];
function author_info_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = author_info_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function author_info_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const ActualAuthorInfo = _ref => {
  let {
    className,
    imageUrl,
    projectTitle,
    // TODO: use userId to link to user's profile
    userId,
    // eslint-disable-line no-unused-vars
    username
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(className, author_info_default.a.authorInfo)
  }, /*#__PURE__*/react_default.a.createElement(menu_bar_user_avatar, {
    className: author_info_default.a.avatar,
    imageUrl: imageUrl
  }), /*#__PURE__*/react_default.a.createElement("div", {
    className: author_info_default.a.titleAuthor
  }, /*#__PURE__*/react_default.a.createElement("h1", {
    className: author_info_default.a.projectTitle
  }, projectTitle), /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("span", {
    className: author_info_default.a.usernameLine
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "by {username}",
    id: "gui.authorInfo.byUser",
    values: {
      username: /*#__PURE__*/react_default.a.createElement("span", {
        className: author_info_default.a.username
      }, username)
    }
  })))));
};
ActualAuthorInfo.propTypes = {
  className: prop_types_default.a.string,
  imageUrl: prop_types_default.a.string,
  projectTitle: prop_types_default.a.string,
  userId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool]),
  username: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool])
};
const AuthorInfo = _ref2 => {
  let {
      projectId
    } = _ref2,
    props = author_info_objectWithoutProperties(_ref2, author_info_excluded);
  return projectId ? /*#__PURE__*/react_default.a.createElement("a", {
    className: author_info_default.a.link,
    href: "https://scratch.mit.edu/projects/".concat(projectId),
    target: "_blank",
    rel: "noreferrer"
  }, /*#__PURE__*/react_default.a.createElement(ActualAuthorInfo, props)) : /*#__PURE__*/react_default.a.createElement(ActualAuthorInfo, props);
};
AuthorInfo.propTypes = {
  projectId: prop_types_default.a.string
};
/* harmony default export */ var menu_bar_author_info = (AuthorInfo);
// EXTERNAL MODULE: ./src/containers/sb3-downloader.jsx
var sb3_downloader = __webpack_require__(167);

// EXTERNAL MODULE: ./src/reducers/restore-deletion.js
var restore_deletion = __webpack_require__(115);

// CONCATENATED MODULE: ./src/containers/deletion-restorer.jsx
const deletion_restorer_excluded = ["children", "dispatchUpdateRestore"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function deletion_restorer_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = deletion_restorer_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function deletion_restorer_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






/**
 * DeletionRestorer component passes a restoreDeletion function to its child.
 * It expects this child to be a function with the signature
 *     function (restoreDeletion, props) {}
 * The component can then be used to attach deletion restoring functionality
 * to any other component:
 *
 * <DeletionRestorer>{(restoreDeletion, props) => (
 *     <MyCoolComponent
 *         onClick={restoreDeletion}
 *         {...props}
 *     />
 * )}</DeletionRestorer>
 */
class deletion_restorer_DeletionRestorer extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['restoreDeletion']);
  }
  restoreDeletion() {
    if (typeof this.props.restore === 'function') {
      this.props.restore();
      this.props.dispatchUpdateRestore({
        restoreFun: null,
        deletedItem: ''
      });
    }
  }
  render() {
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        children,
        dispatchUpdateRestore
        /* eslint-enable no-unused-vars */
      } = _this$props,
      props = deletion_restorer_objectWithoutProperties(_this$props, deletion_restorer_excluded);
    const restorable = typeof this.props.restore === 'function';
    return this.props.children(this.restoreDeletion, _objectSpread(_objectSpread({}, props), {}, {
      restorable
    }));
  }
}
deletion_restorer_DeletionRestorer.propTypes = {
  children: prop_types_default.a.func,
  deletedItem: prop_types_default.a.string,
  dispatchUpdateRestore: prop_types_default.a.func,
  restore: prop_types_default.a.func
};
const deletion_restorer_mapStateToProps = state => ({
  deletedItem: state.scratchGui.restoreDeletion.deletedItem,
  restore: state.scratchGui.restoreDeletion.restoreFun
});
const deletion_restorer_mapDispatchToProps = dispatch => ({
  dispatchUpdateRestore: updatedState => {
    dispatch(Object(restore_deletion["c" /* setRestore */])(updatedState));
  }
});
/* harmony default export */ var deletion_restorer = (Object(es["b" /* connect */])(deletion_restorer_mapStateToProps, deletion_restorer_mapDispatchToProps)(deletion_restorer_DeletionRestorer));
// CONCATENATED MODULE: ./src/containers/turbo-mode.jsx
const turbo_mode_excluded = ["children", "vm"];
function turbo_mode_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = turbo_mode_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function turbo_mode_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





/**
 * Turbo Mode component passes toggleTurboMode function to its child.
 * It also includes `turboMode` in the props passed to the children.
 * It expects this child to be a function with the signature
 *     function (toggleTurboMode, {turboMode, ...props}) {}
 * The component can then be used to attach turbo mode setting functionality
 * to any other component:
 *
 * <TurboMode>{(toggleTurboMode, props) => (
 *     <MyCoolComponent
 *         turboEnabled={props.turboMode}
 *         onClick={toggleTurboMode}
 *         {...props}
 *     />
 * )}</TurboMode>
 */
class turbo_mode_TurboMode extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['toggleTurboMode']);
  }
  toggleTurboMode() {
    this.props.vm.setTurboMode(!this.props.turboMode);
  }
  render() {
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        children,
        vm
        /* eslint-enable no-unused-vars */
      } = _this$props,
      props = turbo_mode_objectWithoutProperties(_this$props, turbo_mode_excluded);
    return this.props.children(this.toggleTurboMode, props);
  }
}
turbo_mode_TurboMode.propTypes = {
  children: prop_types_default.a.func,
  turboMode: prop_types_default.a.bool,
  vm: prop_types_default.a.shape({
    setTurboMode: prop_types_default.a.func
  })
};
const turbo_mode_mapStateToProps = state => ({
  vm: state.scratchGui.vm,
  turboMode: state.scratchGui.vmStatus.turbo
});
/* harmony default export */ var turbo_mode = (Object(es["b" /* connect */])(turbo_mode_mapStateToProps, () => ({}) // omit dispatch prop
)(turbo_mode_TurboMode));
// CONCATENATED MODULE: ./src/containers/menu-bar-hoc.jsx
const menu_bar_hoc_excluded = ["projectChanged"];
function menu_bar_hoc_extends() { menu_bar_hoc_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return menu_bar_hoc_extends.apply(this, arguments); }
function menu_bar_hoc_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = menu_bar_hoc_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function menu_bar_hoc_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





const menu_bar_hoc_MenuBarHOC = function MenuBarHOC(WrappedComponent) {
  class MenuBarContainer extends react_default.a.PureComponent {
    constructor(props) {
      super(props);
      lodash_bindall_default()(this, ['confirmReadyToReplaceProject', 'shouldSaveBeforeTransition']);
    }
    confirmReadyToReplaceProject(message) {
      let readyToReplaceProject = true;
      if (this.props.projectChanged && !this.props.canCreateNew) {
        readyToReplaceProject = this.props.confirmWithMessage(message);
      }
      return readyToReplaceProject;
    }
    shouldSaveBeforeTransition() {
      return this.props.canSave && this.props.projectChanged;
    }
    render() {
      const _this$props = this.props,
        {
          /* eslint-disable no-unused-vars */
          projectChanged
          /* eslint-enable no-unused-vars */
        } = _this$props,
        props = menu_bar_hoc_objectWithoutProperties(_this$props, menu_bar_hoc_excluded);
      return /*#__PURE__*/react_default.a.createElement(sb3_downloader["a" /* default */], null, (_className, _downloadProject, extended) => /*#__PURE__*/react_default.a.createElement(WrappedComponent, menu_bar_hoc_extends({
        confirmReadyToReplaceProject: this.confirmReadyToReplaceProject,
        shouldSaveBeforeTransition: this.shouldSaveBeforeTransition,
        handleSaveProject: extended.smartSave
      }, props)));
    }
  }
  MenuBarContainer.propTypes = {
    canCreateNew: prop_types_default.a.bool,
    canSave: prop_types_default.a.bool,
    confirmWithMessage: prop_types_default.a.func,
    projectChanged: prop_types_default.a.bool
  };
  MenuBarContainer.defaultProps = {
    // default to using standard js confirm
    confirmWithMessage: message => confirm(message) // eslint-disable-line no-alert
  };

  const mapStateToProps = state => ({
    projectChanged: state.scratchGui.projectChanged
  });
  const mapDispatchToProps = () => ({});
  // Allow incoming props to override redux-provided props. Used to mock in tests.
  const mergeProps = (stateProps, dispatchProps, ownProps) => Object.assign({}, stateProps, dispatchProps, ownProps);
  return Object(es["b" /* connect */])(mapStateToProps, mapDispatchToProps, mergeProps)(MenuBarContainer);
};
/* harmony default export */ var menu_bar_hoc = (menu_bar_hoc_MenuBarHOC);
// CONCATENATED MODULE: ./src/containers/tw-framerate-changer.jsx
const tw_framerate_changer_excluded = ["intl", "children", "vm"];
function tw_framerate_changer_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = tw_framerate_changer_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function tw_framerate_changer_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const tw_framerate_changer_messages = Object(index_es["d" /* defineMessages */])({
  newFramerate: {
    "id": "tw.menuBar.newFramerate",
    "defaultMessage": "New framerate:"
  }
});
class tw_framerate_changer_FramerateChanger extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['changeFramerate']);
  }
  changeFramerate(e) {
    if (e && (e.ctrlKey || e.shiftKey)) {
      // eslint-disable-next-line no-alert
      const newFPS = prompt(this.props.intl.formatMessage(tw_framerate_changer_messages.newFramerate), this.props.framerate);
      if (newFPS === null) {
        return;
      }
      const fps = +newFPS;
      if (isFinite(fps) && fps > 0) {
        this.props.vm.setFramerate(fps);
      }
    } else if (this.props.framerate === 60) {
      this.props.vm.setFramerate(30);
    } else {
      this.props.vm.setFramerate(60);
    }
  }
  render() {
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        intl,
        children,
        vm
        /* eslint-enable no-unused-vars */
      } = _this$props,
      props = tw_framerate_changer_objectWithoutProperties(_this$props, tw_framerate_changer_excluded);
    return this.props.children(this.changeFramerate, props);
  }
}
tw_framerate_changer_FramerateChanger.propTypes = {
  intl: index_es["f" /* intlShape */],
  children: prop_types_default.a.func,
  framerate: prop_types_default.a.number,
  vm: prop_types_default.a.instanceOf(src_default.a)
};
const tw_framerate_changer_mapStateToProps = state => ({
  framerate: state.scratchGui.tw.framerate,
  vm: state.scratchGui.vm
});
/* harmony default export */ var tw_framerate_changer = (Object(index_es["e" /* injectIntl */])(Object(es["b" /* connect */])(tw_framerate_changer_mapStateToProps, () => ({}) // omit dispatch prop
)(tw_framerate_changer_FramerateChanger)));
// EXTERNAL MODULE: ./src/reducers/modals.js
var modals = __webpack_require__(21);

// CONCATENATED MODULE: ./src/containers/tw-change-username.jsx







const tw_change_username_messages = Object(index_es["d" /* defineMessages */])({
  cannotChangeWhileRunning: {
    "id": "tw.changeUsername.cannotChangeWhileRunning",
    "defaultMessage": "Username cannot be changed while the project is running."
  }
});
class tw_change_username_ChangeUsername extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['changeUsername']);
  }
  changeUsername() {
    if (this.props.running) {
      // eslint-disable-next-line no-alert
      alert(this.props.intl.formatMessage(tw_change_username_messages.cannotChangeWhileRunning));
      return;
    }
    this.props.onOpenUsernameModal();
  }
  render() {
    return this.props.children(this.changeUsername);
  }
}
tw_change_username_ChangeUsername.propTypes = {
  children: prop_types_default.a.func,
  onOpenUsernameModal: prop_types_default.a.func,
  running: prop_types_default.a.bool,
  intl: index_es["f" /* intlShape */]
};
const tw_change_username_mapStateToProps = state => ({
  running: state.scratchGui.vmStatus.running
});
const tw_change_username_mapDispatchToProps = dispatch => ({
  onOpenUsernameModal: () => {
    dispatch(Object(modals["B" /* openUsernameModal */])());
    dispatch(Object(menus["e" /* closeEditMenu */])());
  }
});
/* harmony default export */ var tw_change_username = (Object(index_es["e" /* injectIntl */])(Object(es["b" /* connect */])(tw_change_username_mapStateToProps, tw_change_username_mapDispatchToProps)(tw_change_username_ChangeUsername)));
// EXTERNAL MODULE: ./src/reducers/tw.js
var tw = __webpack_require__(34);

// CONCATENATED MODULE: ./src/containers/tw-cloud-toggler.jsx
const tw_cloud_toggler_excluded = ["children"];
function tw_cloud_toggler_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = tw_cloud_toggler_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function tw_cloud_toggler_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const tw_cloud_toggler_messages = Object(index_es["d" /* defineMessages */])({
  cloudUnavailableAlert: {
    "id": "tw.menuBar.cloudUnavailableAlert",
    "defaultMessage": "Cannot use cloud variables, most likely because you opened the editor."
  }
});
class tw_cloud_toggler_CloudVariablesToggler extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['toggleCloudVariables']);
  }
  toggleCloudVariables() {
    if (!this.props.canUseCloudVariables) {
      // eslint-disable-next-line no-alert
      alert(this.props.intl.formatMessage(tw_cloud_toggler_messages.cloudUnavailableAlert));
      return;
    }
    this.props.onCloudChange(!this.props.enabled);
  }
  render() {
    const _this$props = this.props,
      {
        /* eslint-disable no-unused-vars */
        children
        /* eslint-enable no-unused-vars */
      } = _this$props,
      props = tw_cloud_toggler_objectWithoutProperties(_this$props, tw_cloud_toggler_excluded);
    return this.props.children(this.toggleCloudVariables, props);
  }
}
tw_cloud_toggler_CloudVariablesToggler.propTypes = {
  intl: index_es["f" /* intlShape */],
  children: prop_types_default.a.func,
  enabled: prop_types_default.a.bool,
  username: prop_types_default.a.string,
  onCloudChange: prop_types_default.a.func,
  canUseCloudVariables: prop_types_default.a.bool
};
const tw_cloud_toggler_mapStateToProps = state => ({
  username: state.scratchGui.tw.username,
  enabled: state.scratchGui.tw.cloud,
  canUseCloudVariables: !state.scratchGui.mode.hasEverEnteredEditor
});
const tw_cloud_toggler_mapDispatchToProps = dispatch => ({
  onCloudChange: enabled => dispatch(Object(tw["setCloud"])(enabled))
});
/* harmony default export */ var tw_cloud_toggler = (Object(index_es["e" /* injectIntl */])(Object(es["b" /* connect */])(tw_cloud_toggler_mapStateToProps, tw_cloud_toggler_mapDispatchToProps)(tw_cloud_toggler_CloudVariablesToggler)));
// EXTERNAL MODULE: ./src/containers/tw-restore-point-loader.jsx
var tw_restore_point_loader = __webpack_require__(447);

// EXTERNAL MODULE: ./src/reducers/alerts.js
var alerts = __webpack_require__(29);

// EXTERNAL MODULE: ./src/components/spinner/spinner.jsx
var spinner = __webpack_require__(220);

// EXTERNAL MODULE: ./src/lib/alerts/index.jsx
var lib_alerts = __webpack_require__(82);

// EXTERNAL MODULE: ./src/components/alerts/inline-message.css
var inline_message = __webpack_require__(374);
var inline_message_default = /*#__PURE__*/__webpack_require__.n(inline_message);

// CONCATENATED MODULE: ./src/components/alerts/inline-message.jsx






const InlineMessageComponent = _ref => {
  let {
    content,
    iconSpinner,
    level
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement("div", {
    className: classnames_default()(inline_message_default.a.inlineMessage, inline_message_default.a[level])
  }, iconSpinner && /*#__PURE__*/react_default.a.createElement(spinner["a" /* default */], {
    small: true,
    className: inline_message_default.a.spinner,
    level: 'info'
  }), content);
};
InlineMessageComponent.propTypes = {
  content: prop_types_default.a.element,
  iconSpinner: prop_types_default.a.bool,
  level: prop_types_default.a.string
};
InlineMessageComponent.defaultProps = {
  level: lib_alerts["a" /* AlertLevels */].INFO
};
/* harmony default export */ var alerts_inline_message = (InlineMessageComponent);
// CONCATENATED MODULE: ./src/containers/inline-messages.jsx





const InlineMessages = _ref => {
  let {
    alertsList,
    className
  } = _ref;
  if (!alertsList) {
    return null;
  }
  // only display inline alerts here
  const inlineAlerts = Object(alerts["e" /* filterInlineAlerts */])(alertsList);
  if (!inlineAlerts || !inlineAlerts.length) {
    return null;
  }

  // get first alert
  const firstInlineAlert = inlineAlerts[0];
  const {
    content,
    iconSpinner,
    level
  } = firstInlineAlert;
  return /*#__PURE__*/react_default.a.createElement(alerts_inline_message, {
    className: className,
    content: content,
    iconSpinner: iconSpinner,
    level: level
  });
};
InlineMessages.propTypes = {
  alertsList: prop_types_default.a.arrayOf(prop_types_default.a.object),
  className: prop_types_default.a.string
};
const inline_messages_mapStateToProps = state => ({
  alertsList: state.scratchGui.alerts.alertsList
});
const inline_messages_mapDispatchToProps = () => ({});
/* harmony default export */ var inline_messages = (Object(es["b" /* connect */])(inline_messages_mapStateToProps, inline_messages_mapDispatchToProps)(InlineMessages));
// EXTERNAL MODULE: ./src/components/menu-bar/save-status.css
var save_status = __webpack_require__(868);
var save_status_default = /*#__PURE__*/__webpack_require__.n(save_status);

// CONCATENATED MODULE: ./src/components/menu-bar/tw-save-status.jsx








const TWSaveStatus = _ref => {
  let {
    alertsList,
    fileHandle,
    projectChanged
  } = _ref;
  return Object(alerts["e" /* filterInlineAlerts */])(alertsList).length > 0 ? /*#__PURE__*/react_default.a.createElement(inline_messages, null) : projectChanged && /*#__PURE__*/react_default.a.createElement(sb3_downloader["a" /* default */], null, (_className, _downloadProjectCallback, _ref2) => {
    let {
      smartSave
    } = _ref2;
    return /*#__PURE__*/react_default.a.createElement("div", {
      onClick: smartSave,
      className: save_status_default.a.saveNow
    }, fileHandle ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save as {file}",
      id: "tw.menuBar.saveAs",
      values: {
        file: fileHandle.name
      }
    }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save to your computer",
      id: "gui.menuBar.downloadToComputer"
    }));
  });
};
TWSaveStatus.propTypes = {
  alertsList: prop_types_default.a.arrayOf(prop_types_default.a.object),
  fileHandle: prop_types_default.a.shape({
    name: prop_types_default.a.string
  }),
  projectChanged: prop_types_default.a.bool
};
const tw_save_status_mapStateToProps = state => ({
  alertsList: state.scratchGui.alerts.alertsList,
  fileHandle: state.scratchGui.tw.fileHandle,
  projectChanged: state.scratchGui.projectChanged
});
/* harmony default export */ var tw_save_status = (Object(es["b" /* connect */])(tw_save_status_mapStateToProps, () => ({}))(TWSaveStatus));
// EXTERNAL MODULE: ./src/reducers/mode.js
var mode = __webpack_require__(73);

// EXTERNAL MODULE: ./src/lib/collect-metadata.js
var collect_metadata = __webpack_require__(345);

// EXTERNAL MODULE: ./src/components/menu-bar/menu-bar.css
var menu_bar = __webpack_require__(15);
var menu_bar_default = /*#__PURE__*/__webpack_require__.n(menu_bar);

// EXTERNAL MODULE: ./src/lib/assets/icon--tutorials.svg
var icon_tutorials = __webpack_require__(448);

// EXTERNAL MODULE: ./src/components/menu-bar/icon--mystuff.png
var icon_mystuff = __webpack_require__(1774);

// EXTERNAL MODULE: ./src/components/menu-bar/icon--profile.png
var icon_profile = __webpack_require__(1775);

// EXTERNAL MODULE: ./src/components/menu-bar/icon--remix.svg
var icon_remix = __webpack_require__(869);
var icon_remix_default = /*#__PURE__*/__webpack_require__.n(icon_remix);

// EXTERNAL MODULE: ./src/components/menu-bar/dropdown-caret.svg
var dropdown_caret = __webpack_require__(471);
var dropdown_caret_default = /*#__PURE__*/__webpack_require__.n(dropdown_caret);

// EXTERNAL MODULE: ./src/components/language-selector/language-icon.svg
var language_icon = __webpack_require__(870);
var language_icon_default = /*#__PURE__*/__webpack_require__.n(language_icon);

// EXTERNAL MODULE: ./src/components/menu-bar/icon--about.svg
var icon_about = __webpack_require__(472);
var icon_about_default = /*#__PURE__*/__webpack_require__.n(icon_about);

// EXTERNAL MODULE: ./src/components/menu-bar/tw-error.svg
var tw_error = __webpack_require__(871);
var tw_error_default = /*#__PURE__*/__webpack_require__.n(tw_error);

// EXTERNAL MODULE: ./src/components/menu-bar/tw-moon.svg
var tw_moon = __webpack_require__(1776);

// EXTERNAL MODULE: ./src/components/menu-bar/scratch-logo.svg
var scratch_logo = __webpack_require__(872);
var scratch_logo_default = /*#__PURE__*/__webpack_require__.n(scratch_logo);

// EXTERNAL MODULE: ./src/lib/shared-messages.js
var shared_messages = __webpack_require__(84);

// EXTERNAL MODULE: ./src/components/menu-bar/tw-see-inside.css
var tw_see_inside = __webpack_require__(473);
var tw_see_inside_default = /*#__PURE__*/__webpack_require__.n(tw_see_inside);

// CONCATENATED MODULE: ./src/components/menu-bar/tw-see-inside.jsx







const SeeInsideButton = _ref => {
  let {
    className,
    onClick
  } = _ref;
  return /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
    className: classnames_default()(className, tw_see_inside_default.a.seeInsideButton),
    iconClassName: tw_see_inside_default.a.seeInsideButtonIcon,
    iconSrc: icon_see_community_default.a,
    iconWidth: "20",
    iconHeight: "20",
    onClick: onClick
  }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "See inside",
    id: "tw.menuBar.seeInside"
  }));
};
SeeInsideButton.propTypes = {
  className: prop_types_default.a.string,
  onClick: prop_types_default.a.func
};
SeeInsideButton.defaultProps = {
  onClick: () => {}
};
/* harmony default export */ var menu_bar_tw_see_inside = (SeeInsideButton);
// CONCATENATED MODULE: ./src/components/menu-bar/menu-bar.jsx

















































const ariaMessages = Object(index_es["d" /* defineMessages */])({
  language: {
    "id": "gui.menuBar.LanguageSelector",
    "defaultMessage": "language selector"
  },
  tutorials: {
    "id": "gui.menuBar.tutorialsLibrary",
    "defaultMessage": "Tutorials"
  }
});
const twMessages = Object(index_es["d" /* defineMessages */])({
  compileError: {
    "id": "tw.menuBar.compileError",
    "defaultMessage": "{sprite}: {error}"
  }
});
const MenuBarItemTooltip = _ref => {
  let {
    children,
    className,
    enable,
    id,
    place = 'bottom'
  } = _ref;
  if (enable) {
    return /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, children);
  }
  return /*#__PURE__*/react_default.a.createElement(coming_soon["a" /* ComingSoonTooltip */], {
    className: classnames_default()(menu_bar_default.a.comingSoon, className),
    place: place,
    tooltipClassName: menu_bar_default.a.comingSoonTooltip,
    tooltipId: id
  }, children);
};
MenuBarItemTooltip.propTypes = {
  children: prop_types_default.a.node,
  className: prop_types_default.a.string,
  enable: prop_types_default.a.bool,
  id: prop_types_default.a.string,
  place: prop_types_default.a.oneOf(['top', 'bottom', 'left', 'right'])
};
const MenuItemTooltip = _ref2 => {
  let {
    id,
    isRtl,
    children,
    className
  } = _ref2;
  return /*#__PURE__*/react_default.a.createElement(coming_soon["a" /* ComingSoonTooltip */], {
    className: classnames_default()(menu_bar_default.a.comingSoon, className),
    isRtl: isRtl,
    place: isRtl ? 'left' : 'right',
    tooltipClassName: menu_bar_default.a.comingSoonTooltip,
    tooltipId: id
  }, children);
};
MenuItemTooltip.propTypes = {
  children: prop_types_default.a.node,
  className: prop_types_default.a.string,
  id: prop_types_default.a.string,
  isRtl: prop_types_default.a.bool
};
const AboutButton = props => /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
  className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable),
  iconClassName: menu_bar_default.a.aboutIcon,
  iconSrc: icon_about_default.a,
  onClick: props.onClick
});
AboutButton.propTypes = {
  onClick: prop_types_default.a.func.isRequired
};

// Unlike <MenuItem href="">, this uses an actual <a>
const MenuItemLink = props => /*#__PURE__*/react_default.a.createElement("a", {
  href: props.href
  // _blank is safe because of noopener
  // eslint-disable-next-line react/jsx-no-target-blank
  ,
  target: "_blank",
  rel: "noopener",
  className: menu_bar_default.a.menuItemLink
}, /*#__PURE__*/react_default.a.createElement(MenuItem, null, props.children));
MenuItemLink.propTypes = {
  children: prop_types_default.a.node.isRequired,
  href: prop_types_default.a.string.isRequired
};
class menu_bar_MenuBar extends react_default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall_default()(this, ['handleClickSeeInside', 'handleClickNew', 'handleClickRemix', 'handleClickSave', 'handleClickSaveAsCopy', 'handleClickSeeCommunity', 'handleClickShare', 'handleKeyPress', 'handleLanguageMouseUp', 'handleRestoreOption', 'getSaveToComputerHandler', 'restoreOptionMessage']);
  }
  componentDidMount() {
    document.addEventListener('keydown', this.handleKeyPress);
  }
  componentWillUnmount() {
    document.removeEventListener('keydown', this.handleKeyPress);
  }
  handleClickNew() {
    // if the project is dirty, and user owns the project, we will autosave.
    // but if they are not logged in and can't save, user should consider
    // downloading or logging in first.
    // Note that if user is logged in and editing someone else's project,
    // they'll lose their work.
    const readyToReplaceProject = this.props.confirmReadyToReplaceProject(this.props.intl.formatMessage(shared_messages["a" /* default */].replaceProjectWarning));
    this.props.onRequestCloseFile();
    if (readyToReplaceProject) {
      this.props.onClickNew(this.props.canSave && this.props.canCreateNew);
    }
    this.props.onRequestCloseFile();
  }
  handleClickRemix() {
    this.props.onClickRemix();
    this.props.onRequestCloseFile();
  }
  handleClickSave() {
    this.props.onClickSave();
    this.props.onRequestCloseFile();
  }
  handleClickSaveAsCopy() {
    this.props.onClickSaveAsCopy();
    this.props.onRequestCloseFile();
  }
  handleClickSeeCommunity(waitForUpdate) {
    if (this.props.shouldSaveBeforeTransition()) {
      this.props.autoUpdateProject(); // save before transitioning to project page
      waitForUpdate(true); // queue the transition to project page
    } else {
      waitForUpdate(false); // immediately transition to project page
    }
  }

  handleClickShare(waitForUpdate) {
    if (!this.props.isShared) {
      if (this.props.canShare) {
        // save before transitioning to project page
        this.props.onShare();
      }
      if (this.props.canSave) {
        // save before transitioning to project page
        this.props.autoUpdateProject();
        waitForUpdate(true); // queue the transition to project page
      } else {
        waitForUpdate(false); // immediately transition to project page
      }
    }
  }

  handleRestoreOption(restoreFun) {
    return () => {
      restoreFun();
      this.props.onRequestCloseEdit();
    };
  }
  handleKeyPress(event) {
    const modifier = bowser_default.a.mac ? event.metaKey : event.ctrlKey;
    if (modifier && event.key === 's') {
      this.props.handleSaveProject();
      event.preventDefault();
    }
  }
  getSaveToComputerHandler(downloadProjectCallback) {
    return () => {
      this.props.onRequestCloseFile();
      downloadProjectCallback();
      if (this.props.onProjectTelemetryEvent) {
        const metadata = Object(collect_metadata["a" /* default */])(this.props.vm, this.props.projectTitle, this.props.locale);
        this.props.onProjectTelemetryEvent('projectDidSave', metadata);
      }
    };
  }
  handleLanguageMouseUp(e) {
    if (!this.props.languageMenuOpen) {
      this.props.onClickLanguage(e);
    }
  }
  restoreOptionMessage(deletedItem) {
    switch (deletedItem) {
      case 'Sprite':
        return /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
          defaultMessage: "Restore Sprite",
          id: "gui.menuBar.restoreSprite"
        });
      case 'Sound':
        return /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
          defaultMessage: "Restore Sound",
          id: "gui.menuBar.restoreSound"
        });
      case 'Costume':
        return /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
          defaultMessage: "Restore Costume",
          id: "gui.menuBar.restoreCostume"
        });
      default:
        {
          return /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
            defaultMessage: "Restore",
            /* eslint-disable-line max-len */
            id: "gui.menuBar.restore"
          });
        }
    }
  }
  handleClickSeeInside() {
    this.props.onClickSeeInside();
  }
  buildAboutMenu(onClickAbout) {
    if (!onClickAbout) {
      // hide the button
      return null;
    }
    if (typeof onClickAbout === 'function') {
      // make a button which calls a function
      return /*#__PURE__*/react_default.a.createElement(AboutButton, {
        onClick: onClickAbout
      });
    }
    // assume it's an array of objects
    // each item must have a 'title' FormattedMessage and a 'handleClick' function
    // generate a menu with items for each object in the array
    return /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable, {
        [menu_bar_default.a.active]: this.props.aboutMenuOpen
      }),
      onMouseUp: this.props.onRequestOpenAbout
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: menu_bar_default.a.aboutIcon,
      src: icon_about_default.a
    }), /*#__PURE__*/react_default.a.createElement(menu_bar_menu, {
      className: classnames_default()(menu_bar_default.a.menuBarMenu),
      open: this.props.aboutMenuOpen,
      place: this.props.isRtl ? 'right' : 'left',
      onRequestClose: this.props.onRequestCloseAbout
    }, onClickAbout.map(itemProps => /*#__PURE__*/react_default.a.createElement(MenuItem, {
      key: itemProps.title,
      isRtl: this.props.isRtl,
      onClick: this.wrapAboutMenuCallback(itemProps.onClick)
    }, itemProps.title))));
  }
  wrapAboutMenuCallback(callback) {
    return () => {
      callback();
      this.props.onRequestCloseAbout();
    };
  }
  render() {
    const saveNowMessage = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save now",
      id: "gui.menuBar.saveNow"
    });
    const createCopyMessage = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save as a copy",
      id: "gui.menuBar.saveAsCopy"
    });
    const remixMessage = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Remix",
      id: "gui.menuBar.remix"
    });
    const newProjectMessage = /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "New",
      id: "gui.menuBar.new"
    });
    const remixButton = /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: classnames_default()(menu_bar_default.a.menuBarButton, menu_bar_default.a.remixButton),
      iconClassName: menu_bar_default.a.remixButtonIcon,
      iconSrc: icon_remix_default.a,
      onClick: this.handleClickRemix
    }, remixMessage);
    // Show the About button only if we have a handler for it (like in the desktop app)
    const aboutButton = this.buildAboutMenu(this.props.onClickAbout);
    return /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
      className: classnames_default()(this.props.className, menu_bar_default.a.menuBar)
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: menu_bar_default.a.mainMenu
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: menu_bar_default.a.fileGroup
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem)
    }, /*#__PURE__*/react_default.a.createElement("img", {
      alt: "Scratch",
      className: classnames_default()(menu_bar_default.a.scratchLogo, {
        [menu_bar_default.a.clickable]: typeof this.props.onClickLogo !== 'undefined'
      }),
      draggable: false,
      src: "logo.svg",
      width: "100",
      height: "20",
      onClick: this.props.onClickLogo
    })), this.props.canChangeLanguage && /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable, menu_bar_default.a.languageMenu)
    }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("img", {
      className: menu_bar_default.a.languageIcon,
      src: language_icon_default.a,
      width: "24",
      height: "24"
    }), /*#__PURE__*/react_default.a.createElement("img", {
      className: menu_bar_default.a.languageCaret,
      src: dropdown_caret_default.a,
      width: "8",
      height: "5"
    })), /*#__PURE__*/react_default.a.createElement(containers_language_selector, {
      label: this.props.intl.formatMessage(ariaMessages.language)
    })), this.props.compileErrors.length > 0 && /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable, {
        [menu_bar_default.a.active]: this.props.errorsMenuOpen
      }),
      onMouseUp: this.props.onClickErrors
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.errorsMenu)
    }, /*#__PURE__*/react_default.a.createElement("img", {
      className: menu_bar_default.a.languageIcon,
      src: tw_error_default.a
    }), /*#__PURE__*/react_default.a.createElement("img", {
      className: menu_bar_default.a.languageCaret,
      src: dropdown_caret_default.a
    })), /*#__PURE__*/react_default.a.createElement(menu_bar_menu, {
      className: classnames_default()(menu_bar_default.a.menuBarMenu),
      open: this.props.errorsMenuOpen,
      place: this.props.isRtl ? 'left' : 'right',
      onRequestClose: this.props.onRequestCloseErrors
    }, /*#__PURE__*/react_default.a.createElement(MenuSection, null, /*#__PURE__*/react_default.a.createElement(MenuItemLink, {
      href: "https://scratch.mit.edu/users/GarboMuffin/#comments"
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Some scripts could not be compiled.",
      id: "tw.menuBar.reportError1"
    })), /*#__PURE__*/react_default.a.createElement(MenuItemLink, {
      href: "https://scratch.mit.edu/users/GarboMuffin/#comments"
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "This is a bug. Please report it to GarboMuffin.",
      id: "tw.menuBar.reportError2"
    }))), /*#__PURE__*/react_default.a.createElement(MenuSection, null, this.props.compileErrors.map(_ref3 => {
      let {
        id,
        sprite,
        error
      } = _ref3;
      return /*#__PURE__*/react_default.a.createElement(MenuItem, {
        key: id
      }, this.props.intl.formatMessage(twMessages.compileError, {
        sprite,
        error
      }));
    }))))), this.props.canManageFiles && /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable, {
        [menu_bar_default.a.active]: this.props.fileMenuOpen
      }),
      onMouseUp: this.props.onClickFile
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "File",
      id: "gui.menuBar.file"
    }), /*#__PURE__*/react_default.a.createElement(menu_bar_menu, {
      className: classnames_default()(menu_bar_default.a.menuBarMenu),
      open: this.props.fileMenuOpen,
      place: this.props.isRtl ? 'left' : 'right',
      onRequestClose: this.props.onRequestCloseFile
    }, /*#__PURE__*/react_default.a.createElement(MenuSection, null, /*#__PURE__*/react_default.a.createElement(MenuItem, {
      isRtl: this.props.isRtl,
      onClick: this.handleClickNew
    }, newProjectMessage)), (this.props.canSave || this.props.canCreateCopy || this.props.canRemix) && /*#__PURE__*/react_default.a.createElement(MenuSection, null, this.props.canSave && /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.handleClickSave
    }, saveNowMessage), this.props.canCreateCopy && /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.handleClickSaveAsCopy
    }, createCopyMessage), this.props.canRemix && /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.handleClickRemix
    }, remixMessage)), /*#__PURE__*/react_default.a.createElement(MenuSection, null, /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.props.onStartSelectingFileUpload
    }, this.props.intl.formatMessage(shared_messages["a" /* default */].loadFromComputerTitle)), /*#__PURE__*/react_default.a.createElement(sb3_downloader["a" /* default */], null, (_className, downloadProject, extended) => /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, extended.available && /*#__PURE__*/react_default.a.createElement(react_default.a.Fragment, null, extended.name !== null && /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.getSaveToComputerHandler(extended.saveToLastFile)
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save to {file}",
      id: "tw.saveTo",
      values: {
        file: extended.name
      }
    })), /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.getSaveToComputerHandler(extended.saveAsNew)
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save as...",
      // eslint-disable-line max-len
      id: "tw.saveAs"
    }))), /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.getSaveToComputerHandler(downloadProject)
    }, extended.available ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save to separate file...",
      id: "tw.oldDownload"
    }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Save to your computer",
      // eslint-disable-line max-len
      id: "gui.menuBar.downloadToComputer"
    }))))), /*#__PURE__*/react_default.a.createElement(MenuSection, null, /*#__PURE__*/react_default.a.createElement(tw_restore_point_loader["a" /* default */], null, (className, loadRestorePoint) => /*#__PURE__*/react_default.a.createElement(MenuItem, {
      className: className,
      onClick: loadRestorePoint
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Load restore point",
      id: "tw.menuBar.loadRestorePoint"
    })))))), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable, {
        [menu_bar_default.a.active]: this.props.editMenuOpen
      }),
      onMouseUp: this.props.onClickEdit
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.editMenu)
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Edit",
      id: "gui.menuBar.edit"
    })), /*#__PURE__*/react_default.a.createElement(menu_bar_menu, {
      className: classnames_default()(menu_bar_default.a.menuBarMenu),
      open: this.props.editMenuOpen,
      place: this.props.isRtl ? 'left' : 'right',
      onRequestClose: this.props.onRequestCloseEdit
    }, this.props.isPlayerOnly ? null : /*#__PURE__*/react_default.a.createElement(deletion_restorer, null, (handleRestore, _ref4) => {
      let {
        restorable,
        deletedItem
      } = _ref4;
      return /*#__PURE__*/react_default.a.createElement(MenuItem, {
        className: classnames_default()({
          [menu_bar_default.a.disabled]: !restorable
        }),
        onClick: this.handleRestoreOption(handleRestore)
      }, this.restoreOptionMessage(deletedItem));
    }), /*#__PURE__*/react_default.a.createElement(MenuSection, null, /*#__PURE__*/react_default.a.createElement(turbo_mode, null, (toggleTurboMode, _ref5) => {
      let {
        turboMode
      } = _ref5;
      return /*#__PURE__*/react_default.a.createElement(MenuItem, {
        onClick: toggleTurboMode
      }, turboMode ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Turn off Turbo Mode",
        id: "gui.menuBar.turboModeOff"
      }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Turn on Turbo Mode",
        id: "gui.menuBar.turboModeOn"
      }));
    }), /*#__PURE__*/react_default.a.createElement(tw_framerate_changer, null, (changeFramerate, _ref6) => {
      let {
        framerate
      } = _ref6;
      return /*#__PURE__*/react_default.a.createElement(MenuItem, {
        onClick: changeFramerate
      }, framerate === 60 ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Turn off 60 FPS Mode",
        id: "tw.menuBar.60off"
      }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Turn on 60 FPS Mode",
        id: "tw.menuBar.60on"
      }));
    }), /*#__PURE__*/react_default.a.createElement(tw_change_username, null, changeUsername => /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: changeUsername
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Change Username",
      id: "tw.menuBar.changeUsername"
    }))), /*#__PURE__*/react_default.a.createElement(tw_cloud_toggler, null, (toggleCloudVariables, _ref7) => {
      let {
        enabled,
        canUseCloudVariables
      } = _ref7;
      return /*#__PURE__*/react_default.a.createElement(MenuItem, {
        className: classnames_default()({
          [menu_bar_default.a.disabled]: !canUseCloudVariables
        }),
        onClick: toggleCloudVariables
      }, canUseCloudVariables ? enabled ? /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Disable Cloud Variables",
        id: "tw.menuBar.cloudOff"
      }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Enable Cloud Variables",
        id: "tw.menuBar.cloudOn"
      }) : /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "Cloud Variables are not Available",
        id: "tw.menuBar.cloudUnavailable"
      }));
    })), /*#__PURE__*/react_default.a.createElement(MenuSection, null, /*#__PURE__*/react_default.a.createElement(MenuItem, {
      onClick: this.props.onClickSettings
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Advanced Settings",
      id: "tw.menuBar.moreSettings"
    }))))), this.props.onClickAddonSettings && /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable),
      onMouseUp: this.props.onClickAddonSettings
    }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */]
    // Note: this string is used by scratch-vm for the addons blocks category
    , {
      defaultMessage: "Addons",
      id: "tw.menuBar.addons"
    }))), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.hoverable),
      onMouseUp: this.props.onClickSettings
    }, /*#__PURE__*/react_default.a.createElement("div", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Advanced",
      id: "tw.menuBar.advanced"
    })))), /*#__PURE__*/react_default.a.createElement(divider["a" /* default */], {
      className: classnames_default()(menu_bar_default.a.divider)
    }), this.props.canEditTitle ? /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.growable)
    }, /*#__PURE__*/react_default.a.createElement(MenuBarItemTooltip, {
      enable: true,
      id: "title-field"
    }, /*#__PURE__*/react_default.a.createElement(menu_bar_project_title_input, {
      className: classnames_default()(menu_bar_default.a.titleFieldGrowable)
    }))) : this.props.authorUsername && this.props.authorUsername !== this.props.username ? /*#__PURE__*/react_default.a.createElement(menu_bar_author_info, {
      className: menu_bar_default.a.authorInfo,
      imageUrl: this.props.authorThumbnailUrl,
      projectId: this.props.projectId,
      projectTitle: this.props.projectTitle,
      userId: this.props.authorId,
      username: this.props.authorUsername
    }) : null, /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem)
    }, this.props.canShare ? (this.props.isShowingProject || this.props.isUpdating) && /*#__PURE__*/react_default.a.createElement(project_watcher, {
      onDoneUpdating: this.props.onSeeCommunity
    }, waitForUpdate => /*#__PURE__*/react_default.a.createElement(menu_bar_share_button, {
      className: menu_bar_default.a.menuBarButton,
      isShared: this.props.isShared
      /* eslint-disable react/jsx-no-bind */,
      onClick: () => {
        this.handleClickShare(waitForUpdate);
      }
      /* eslint-enable react/jsx-no-bind */
    })) : this.props.showComingSoon ? /*#__PURE__*/react_default.a.createElement(MenuBarItemTooltip, {
      id: "share-button"
    }, /*#__PURE__*/react_default.a.createElement(menu_bar_share_button, {
      className: menu_bar_default.a.menuBarButton
    })) : [], this.props.canRemix ? remixButton : []), /*#__PURE__*/react_default.a.createElement("div", {
      className: classnames_default()(menu_bar_default.a.menuBarItem, menu_bar_default.a.communityButtonWrapper)
    }, this.props.enableCommunity ? (this.props.isShowingProject || this.props.isUpdating) && /*#__PURE__*/react_default.a.createElement(project_watcher, {
      onDoneUpdating: this.props.onSeeCommunity
    }, waitForUpdate => /*#__PURE__*/react_default.a.createElement(menu_bar_community_button, {
      className: menu_bar_default.a.menuBarButton
      /* eslint-disable react/jsx-no-bind */,
      onClick: () => {
        this.handleClickSeeCommunity(waitForUpdate);
      }
      /* eslint-enable react/jsx-no-bind */
    })) : this.props.showComingSoon ? /*#__PURE__*/react_default.a.createElement(MenuBarItemTooltip, {
      id: "community-button"
    }, /*#__PURE__*/react_default.a.createElement(menu_bar_community_button, {
      className: menu_bar_default.a.menuBarButton
    })) : this.props.enableSeeInside ? /*#__PURE__*/react_default.a.createElement(menu_bar_tw_see_inside, {
      className: menu_bar_default.a.menuBarButton,
      onClick: this.handleClickSeeInside
    }) : []), /*#__PURE__*/react_default.a.createElement("div", {
      className: menu_bar_default.a.menuBarItem
    }, /*#__PURE__*/react_default.a.createElement("a", {
      className: menu_bar_default.a.feedbackLink,
      href: "https://scratch.mit.edu/studios/31683180/",
      rel: "noopener noreferrer",
      target: "_blank"
    }, /*#__PURE__*/react_default.a.createElement(button_button["a" /* default */], {
      className: menu_bar_default.a.feedbackButton
    }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
      defaultMessage: "Gvbvdxx Mod 2 Feedback",
      id: "tw.feedbackButton"
    }))))), /*#__PURE__*/react_default.a.createElement("div", {
      className: menu_bar_default.a.accountInfoGroup
    }, /*#__PURE__*/react_default.a.createElement("div", {
      className: menu_bar_default.a.menuBarItem
    }, /*#__PURE__*/react_default.a.createElement(tw_save_status, null))), aboutButton);
  }
}
menu_bar_MenuBar.propTypes = {
  enableSeeInside: prop_types_default.a.bool,
  onClickSeeInside: prop_types_default.a.func,
  aboutMenuOpen: prop_types_default.a.bool,
  accountMenuOpen: prop_types_default.a.bool,
  authorId: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool]),
  authorThumbnailUrl: prop_types_default.a.string,
  authorUsername: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.bool]),
  autoUpdateProject: prop_types_default.a.func,
  canChangeLanguage: prop_types_default.a.bool,
  canCreateCopy: prop_types_default.a.bool,
  canCreateNew: prop_types_default.a.bool,
  canEditTitle: prop_types_default.a.bool,
  canManageFiles: prop_types_default.a.bool,
  canRemix: prop_types_default.a.bool,
  canSave: prop_types_default.a.bool,
  canShare: prop_types_default.a.bool,
  className: prop_types_default.a.string,
  compileErrors: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    sprite: prop_types_default.a.string,
    error: prop_types_default.a.string,
    id: prop_types_default.a.number
  })),
  confirmReadyToReplaceProject: prop_types_default.a.func,
  editMenuOpen: prop_types_default.a.bool,
  enableCommunity: prop_types_default.a.bool,
  fileMenuOpen: prop_types_default.a.bool,
  handleSaveProject: prop_types_default.a.func,
  intl: index_es["f" /* intlShape */],
  isPlayerOnly: prop_types_default.a.bool,
  isRtl: prop_types_default.a.bool,
  isShared: prop_types_default.a.bool,
  isShowingProject: prop_types_default.a.bool,
  isUpdating: prop_types_default.a.bool,
  languageMenuOpen: prop_types_default.a.bool,
  locale: prop_types_default.a.string.isRequired,
  loginMenuOpen: prop_types_default.a.bool,
  logo: prop_types_default.a.string,
  onClickAbout: prop_types_default.a.oneOfType([prop_types_default.a.func,
  // button mode: call this callback when the About button is clicked
  prop_types_default.a.arrayOf(
  // menu mode: list of items in the About menu
  prop_types_default.a.shape({
    title: prop_types_default.a.string,
    // text for the menu item
    onClick: prop_types_default.a.func // call this callback when the menu item is clicked
  }))]),

  onClickAccount: prop_types_default.a.func,
  onClickAddonSettings: prop_types_default.a.func,
  onClickTheme: prop_types_default.a.func,
  onClickEdit: prop_types_default.a.func,
  onClickFile: prop_types_default.a.func,
  onClickLanguage: prop_types_default.a.func,
  onClickLogin: prop_types_default.a.func,
  onClickLogo: prop_types_default.a.func,
  onClickNew: prop_types_default.a.func,
  onClickRemix: prop_types_default.a.func,
  onClickSave: prop_types_default.a.func,
  onClickSaveAsCopy: prop_types_default.a.func,
  onClickSettings: prop_types_default.a.func,
  onClickErrors: prop_types_default.a.func,
  onRequestCloseErrors: prop_types_default.a.func,
  onLogOut: prop_types_default.a.func,
  onOpenRegistration: prop_types_default.a.func,
  onOpenTipLibrary: prop_types_default.a.func,
  onProjectTelemetryEvent: prop_types_default.a.func,
  onRequestOpenAbout: prop_types_default.a.func,
  onRequestCloseAbout: prop_types_default.a.func,
  onRequestCloseAccount: prop_types_default.a.func,
  onRequestCloseEdit: prop_types_default.a.func,
  onRequestCloseFile: prop_types_default.a.func,
  onRequestCloseLanguage: prop_types_default.a.func,
  onRequestCloseLogin: prop_types_default.a.func,
  onSeeCommunity: prop_types_default.a.func,
  onShare: prop_types_default.a.func,
  onStartSelectingFileUpload: prop_types_default.a.func,
  onToggleLoginOpen: prop_types_default.a.func,
  projectId: prop_types_default.a.string,
  projectTitle: prop_types_default.a.string,
  renderLogin: prop_types_default.a.func,
  sessionExists: prop_types_default.a.bool,
  errorsMenuOpen: prop_types_default.a.bool,
  shouldSaveBeforeTransition: prop_types_default.a.func,
  showComingSoon: prop_types_default.a.bool,
  userOwnsProject: prop_types_default.a.bool,
  username: prop_types_default.a.string,
  vm: prop_types_default.a.instanceOf(src_default.a).isRequired
};
menu_bar_MenuBar.defaultProps = {
  logo: scratch_logo_default.a,
  onShare: () => {}
};
const menu_bar_mapStateToProps = (state, ownProps) => {
  const loadingState = state.scratchGui.projectState.loadingState;
  const user = state.session && state.session.session && state.session.session.user;
  return {
    aboutMenuOpen: Object(menus["a" /* aboutMenuOpen */])(state),
    accountMenuOpen: Object(menus["b" /* accountMenuOpen */])(state),
    authorThumbnailUrl: state.scratchGui.tw.author.thumbnail,
    authorUsername: state.scratchGui.tw.author.username,
    compileErrors: state.scratchGui.tw.compileErrors,
    fileMenuOpen: Object(menus["m" /* fileMenuOpen */])(state),
    editMenuOpen: Object(menus["k" /* editMenuOpen */])(state),
    isPlayerOnly: state.scratchGui.mode.isPlayerOnly,
    isRtl: state.locales.isRtl,
    isUpdating: Object(project_state["u" /* getIsUpdating */])(loadingState),
    isShowingProject: Object(project_state["r" /* getIsShowingProject */])(loadingState),
    languageMenuOpen: Object(menus["n" /* languageMenuOpen */])(state),
    locale: state.locales.locale,
    loginMenuOpen: Object(menus["o" /* loginMenuOpen */])(state),
    projectId: state.scratchGui.projectState.projectId,
    projectTitle: state.scratchGui.projectTitle,
    sessionExists: state.session && typeof state.session.session !== 'undefined',
    errorsMenuOpen: Object(menus["l" /* errorsMenuOpen */])(state),
    username: user ? user.username : null,
    userOwnsProject: ownProps.authorUsername && user && ownProps.authorUsername === user.username,
    vm: state.scratchGui.vm
  };
};
const menu_bar_mapDispatchToProps = dispatch => ({
  onClickSeeInside: () => dispatch(Object(mode["d" /* setPlayer */])(false)),
  autoUpdateProject: () => dispatch(Object(project_state["b" /* autoUpdateProject */])()),
  onOpenTipLibrary: () => dispatch(Object(modals["A" /* openTipsLibrary */])()),
  onClickAccount: () => dispatch(Object(menus["r" /* openAccountMenu */])()),
  onRequestCloseAccount: () => dispatch(Object(menus["d" /* closeAccountMenu */])()),
  onClickFile: () => dispatch(Object(menus["u" /* openFileMenu */])()),
  onRequestCloseFile: () => dispatch(Object(menus["g" /* closeFileMenu */])()),
  onClickEdit: () => dispatch(Object(menus["s" /* openEditMenu */])()),
  onRequestCloseEdit: () => dispatch(Object(menus["e" /* closeEditMenu */])()),
  onClickLanguage: () => dispatch(Object(menus["v" /* openLanguageMenu */])()),
  onRequestCloseLanguage: () => dispatch(Object(menus["h" /* closeLanguageMenu */])()),
  onClickLogin: () => dispatch(Object(menus["w" /* openLoginMenu */])()),
  onRequestCloseLogin: () => dispatch(Object(menus["i" /* closeLoginMenu */])()),
  onClickErrors: () => dispatch(Object(menus["t" /* openErrorsMenu */])()),
  onRequestCloseErrors: () => dispatch(Object(menus["f" /* closeErrorsMenu */])()),
  onRequestOpenAbout: () => dispatch(Object(menus["q" /* openAboutMenu */])()),
  onRequestCloseAbout: () => dispatch(Object(menus["c" /* closeAboutMenu */])()),
  onClickNew: needSave => {
    dispatch(Object(project_state["B" /* requestNewProject */])(needSave));
    dispatch(Object(tw["setFileHandle"])(null));
  },
  onClickRemix: () => dispatch(Object(project_state["A" /* remixProject */])()),
  onClickSave: () => dispatch(Object(project_state["v" /* manualUpdateProject */])()),
  onClickSaveAsCopy: () => dispatch(Object(project_state["D" /* saveProjectAsCopy */])()),
  onClickSettings: () => {
    dispatch(Object(modals["w" /* openSettingsModal */])());
    dispatch(Object(menus["e" /* closeEditMenu */])());
  },
  onSeeCommunity: () => dispatch(Object(mode["d" /* setPlayer */])(true))
});
var getDone = false;
setInterval(() => {
  if (getDone == false) {
    var a = document.getElementsByClassName("menu-bar_menu-bar-item_264qQ")[8];
    if (a) {
      getDone = true;
    }
    setInterval(() => {
      if (window.GM2Dekstop) {
        a.remove();
      }
    }, 1);
  }
}, 1);
/* harmony default export */ var menu_bar_menu_bar = __webpack_exports__["a"] = (Object(redux_es["d" /* compose */])(index_es["e" /* injectIntl */], menu_bar_hoc, Object(es["b" /* connect */])(menu_bar_mapStateToProps, menu_bar_mapDispatchToProps))(menu_bar_MenuBar));

/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(1);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(0);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/react-modal/lib/index.js
var lib = __webpack_require__(65);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: ./src/components/box/box.jsx
var box = __webpack_require__(7);

// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.es.js + 1 modules
var index_es = __webpack_require__(2);

// EXTERNAL MODULE: ./src/components/webgl-modal/webgl-modal.css
var webgl_modal = __webpack_require__(235);
var webgl_modal_default = /*#__PURE__*/__webpack_require__.n(webgl_modal);

// CONCATENATED MODULE: ./src/components/webgl-modal/webgl-modal.jsx
const _excluded = ["intl"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






const messages = Object(index_es["d" /* defineMessages */])({
  label: {
    "id": "gui.webglModal.label",
    "defaultMessage": "Your Browser Does Not Support WebGL"
  }
});
const webgl_modal_WebGlModal = _ref => {
  let {
      intl
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/react_default.a.createElement(lib_default.a, {
    isOpen: true,
    className: webgl_modal_default.a.modalContent,
    contentLabel: intl.formatMessage(_objectSpread({}, messages.label)),
    overlayClassName: webgl_modal_default.a.modalOverlay
  }, /*#__PURE__*/react_default.a.createElement("div", {
    dir: props.isRtl ? 'rtl' : 'ltr'
  }, /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: webgl_modal_default.a.illustration
  }), /*#__PURE__*/react_default.a.createElement(box["a" /* default */], {
    className: webgl_modal_default.a.body
  }, /*#__PURE__*/react_default.a.createElement("h2", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], messages.label)), /*#__PURE__*/react_default.a.createElement("p", null, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
    defaultMessage: "Unfortunately it looks like your browser or computer {webGlLink}. This technology is needed for this site to run. Try updating your browser and graphics drivers or restarting your computer.",
    id: "tw.webglModal.description",
    values: {
      webGlLink: /*#__PURE__*/react_default.a.createElement("a", {
        className: webgl_modal_default.a.faqLink,
        href: "https://get.webgl.org/"
      }, /*#__PURE__*/react_default.a.createElement(index_es["a" /* FormattedMessage */], {
        defaultMessage: "does not support WebGL",
        id: "gui.webglModal.webgllink"
      }))
    }
  })))));
};
webgl_modal_WebGlModal.propTypes = {
  intl: index_es["f" /* intlShape */].isRequired,
  isRtl: prop_types_default.a.bool
};
/* harmony default export */ var webgl_modal_webgl_modal = (Object(index_es["e" /* injectIntl */])(webgl_modal_WebGlModal));
// CONCATENATED MODULE: ./src/containers/webgl-modal.jsx



class containers_webgl_modal_WebGlModal extends react_default.a.Component {
  render() {
    return /*#__PURE__*/react_default.a.createElement(webgl_modal_webgl_modal, {
      isRtl: this.props.isRtl
    });
  }
}
containers_webgl_modal_WebGlModal.propTypes = {
  isRtl: prop_types_default.a.bool
};
/* harmony default export */ var containers_webgl_modal = __webpack_exports__["a"] = (containers_webgl_modal_WebGlModal);

/***/ }),
/* 176 */,
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return activateColorPicker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return deactivateColorPicker; });
/* unused harmony export setCallback */
const ACTIVATE_COLOR_PICKER = 'scratch-gui/color-picker/ACTIVATE_COLOR_PICKER';
const DEACTIVATE_COLOR_PICKER = 'scratch-gui/color-picker/DEACTIVATE_COLOR_PICKER';
const SET_CALLBACK = 'scratch-gui/color-picker/SET_CALLBACK';
const initialState = {
  active: false,
  callback: () => {
    throw new Error('Color picker callback not initialized');
  }
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case ACTIVATE_COLOR_PICKER:
      return Object.assign({}, state, {
        active: true,
        callback: action.callback
      });
    case DEACTIVATE_COLOR_PICKER:
      // Can be called without a string to deactivate without setting color
      // i.e. when clicking on the modal background
      if (typeof action.color === 'string') {
        state.callback(action.color);
      }
      return Object.assign({}, state, {
        active: false
      });
    case SET_CALLBACK:
      return Object.assign({}, state, {
        callback: action.callback
      });
    default:
      return state;
  }
};
const activateColorPicker = callback => ({
  type: ACTIVATE_COLOR_PICKER,
  callback: callback
});
const deactivateColorPicker = color => ({
  type: DEACTIVATE_COLOR_PICKER,
  color: color
});
const setCallback = callback => ({
  type: SET_CALLBACK,
  callback: callback
});


/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Return whether the fullscreen API is available in this environment.
 * @returns {boolean} true if the fullscreen API is available
 */
const available = () => document.fullscreenEnabled || document.webkitFullscreenEnabled;

/**
 * Return whether fullscreen is currently enabled.
 * @returns {boolean} true if in fullscreen
 */
const enabled = () => {
  if (typeof document.fullscreenElement !== 'undefined') {
    return document.fullscreenElement !== null;
  }
  if (typeof document.webkitFullscreenElement !== 'undefined') {
    return document.webkitFullscreenElement !== null;
  }
  return false;
};

/**
 * Request entering the document into fullscreen mode.
 */
const request = () => {
  if (document.body.requestFullscreen) {
    document.body.requestFullscreen();
  } else if (document.body.webkitRequestFullscreen) {
    document.body.webkitRequestFullscreen();
  }
};

/**
 * Exit fullscreen mode.
 */
const exit = () => {
  if (document.exitFullscreen) {
    document.exitFullscreen();
  } else if (document.webkitExitFullscreen) {
    document.webkitExitFullscreen();
  }
};
/* harmony default export */ __webpack_exports__["a"] = ({
  available,
  enabled,
  request,
  exit
});

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1640);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1657);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1676);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1765);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1770);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LANGUAGE_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return detectLocale; });
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(137);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_0__);
/**
 * @fileoverview
 * Utility function to detect locale from the browser setting or paramenter on the URL.
 */



// tw: read language from localStorage
const LANGUAGE_KEY = 'tw:language';

/**
 * look for language setting in the browser. Check against supported locales.
 * If there's a parameter in the URL, override the browser setting
 * @param {Array.string} supportedLocales An array of supported locale codes.
 * @return {string} the preferred locale
 */
const detectLocale = supportedLocales => {
  // tw: read language from localStorage
  try {
    const storedLanguage = localStorage.getItem(LANGUAGE_KEY);
    if (storedLanguage && supportedLocales.includes(storedLanguage)) {
      return storedLanguage;
    }
  } catch (e) {/* ignore */}
  let locale = 'en'; // default
  let browserLocale = window.navigator.userLanguage || window.navigator.language;
  browserLocale = browserLocale.toLowerCase();
  // try to set locale from browserLocale
  if (supportedLocales.includes(browserLocale)) {
    locale = browserLocale;
  } else {
    browserLocale = browserLocale.split('-')[0];
    if (supportedLocales.includes(browserLocale)) {
      locale = browserLocale;
    }
  }
  const queryParams = query_string__WEBPACK_IMPORTED_MODULE_0___default.a.parse(location.search);
  // Flatten potential arrays and remove falsy values
  const potentialLocales = [].concat(queryParams.locale, queryParams.lang).filter(l => l);
  if (!potentialLocales.length) {
    return locale;
  }
  const urlLocale = potentialLocales[0].toLowerCase();
  if (supportedLocales.includes(urlLocale)) {
    return urlLocale;
  }
  return locale;
};


/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const AddonHooks = {
  appStateReducer: () => {},
  appStateStore: null,
  blockly: null,
  blocklyCallbacks: []
};
/* harmony default export */ __webpack_exports__["a"] = (AddonHooks);

/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setConnectionModalExtensionId; });
const SET_ID = 'scratch-gui/connection-modal/setId';
const initialState = {
  extensionId: null
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_ID:
      return Object.assign({}, state, {
        extensionId: action.extensionId
      });
    default:
      return state;
  }
};
const setConnectionModalExtensionId = function setConnectionModalExtensionId(extensionId) {
  return {
    type: SET_ID,
    extensionId: extensionId
  };
};


/***/ }),
/* 194 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return updateTargets; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return highlightTarget; });
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
const UPDATE_TARGET_LIST = 'scratch-gui/targets/UPDATE_TARGET_LIST';
const HIGHLIGHT_TARGET = 'scratch-gui/targets/HIGHLIGHT_TARGET';
const initialState = {
  sprites: {},
  stage: {},
  highlightedTargetId: null,
  highlightedTargetTime: null
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case UPDATE_TARGET_LIST:
      return Object.assign({}, state, {
        sprites: action.targets.filter(target => !target.isStage).reduce((targets, target, listId) => Object.assign(targets, {
          [target.id]: _objectSpread({
            order: listId
          }, target)
        }), {}),
        stage: action.targets.filter(target => target.isStage)[0] || {},
        editingTarget: action.editingTarget
      });
    case HIGHLIGHT_TARGET:
      return Object.assign({}, state, {
        highlightedTargetId: action.targetId,
        highlightedTargetTime: action.updateTime
      });
    default:
      return state;
  }
};
const updateTargets = function updateTargets(targetList, editingTarget) {
  return {
    type: UPDATE_TARGET_LIST,
    targets: targetList,
    editingTarget: editingTarget
  };
};
const highlightTarget = function highlightTarget(targetId) {
  return {
    type: HIGHLIGHT_TARGET,
    targetId: targetId,
    updateTime: Date.now()
  };
};


/***/ }),
/* 195 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initLocale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return selectLocale; });
/* unused harmony export setLocales */
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _turbowarp_scratch_l10n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(101);
/* harmony import */ var _turbowarp_scratch_l10n_locales_editor_msgs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(450);
/* harmony import */ var _lib_detect_locale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(191);




Object(react_intl__WEBPACK_IMPORTED_MODULE_0__[/* addLocaleData */ "c"])(_turbowarp_scratch_l10n__WEBPACK_IMPORTED_MODULE_1__[/* localeData */ "c"]);
const UPDATE_LOCALES = 'scratch-gui/locales/UPDATE_LOCALES';
const SELECT_LOCALE = 'scratch-gui/locales/SELECT_LOCALE';
const initialState = {
  isRtl: false,
  locale: 'en',
  messagesByLocale: _turbowarp_scratch_l10n_locales_editor_msgs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"],
  messages: _turbowarp_scratch_l10n_locales_editor_msgs__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].en
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SELECT_LOCALE:
      return Object.assign({}, state, {
        isRtl: Object(_turbowarp_scratch_l10n__WEBPACK_IMPORTED_MODULE_1__[/* isRtl */ "b"])(action.locale),
        locale: action.locale,
        messagesByLocale: state.messagesByLocale,
        messages: state.messagesByLocale[action.locale]
      });
    case UPDATE_LOCALES:
      return Object.assign({}, state, {
        isRtl: state.isRtl,
        locale: state.locale,
        messagesByLocale: action.messagesByLocale,
        messages: action.messagesByLocale[state.locale]
      });
    default:
      return state;
  }
};
const selectLocale = function selectLocale(locale) {
  // tw: store language in localStorage
  try {
    localStorage.setItem(_lib_detect_locale_js__WEBPACK_IMPORTED_MODULE_3__[/* LANGUAGE_KEY */ "a"], locale);
  } catch (e) {/* ignore */}
  return {
    type: SELECT_LOCALE,
    locale: locale
  };
};
const setLocales = function setLocales(localesMessages) {
  return {
    type: UPDATE_LOCALES,
    messagesByLocale: localesMessages
  };
};
const initLocale = function initLocale(currentState, locale) {
  if (currentState.messagesByLocale.hasOwnProperty(locale)) {
    return Object.assign({}, currentState, {
      isRtl: Object(_turbowarp_scratch_l10n__WEBPACK_IMPORTED_MODULE_1__[/* isRtl */ "b"])(locale),
      locale: locale,
      messagesByLocale: currentState.messagesByLocale,
      messages: currentState.messagesByLocale[locale]
    });
  }
  // don't change locale if it's not in the current messages
  return currentState;
};


/***/ }),
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1490);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1647);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1675);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1681);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1767);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1794);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _spinner_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(293);
/* harmony import */ var _spinner_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_spinner_css__WEBPACK_IMPORTED_MODULE_3__);




const SpinnerComponent = function SpinnerComponent(props) {
  const {
    className,
    level,
    small,
    large
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(className, _spinner_css__WEBPACK_IMPORTED_MODULE_3___default.a.spinner, _spinner_css__WEBPACK_IMPORTED_MODULE_3___default.a[level], {
      [_spinner_css__WEBPACK_IMPORTED_MODULE_3___default.a.small]: small,
      [_spinner_css__WEBPACK_IMPORTED_MODULE_3___default.a.large]: large
    })
  });
};
SpinnerComponent.propTypes = {
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  large: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  level: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  small: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool
};
SpinnerComponent.defaultProps = {
  className: '',
  large: false,
  level: 'info',
  small: false
};
/* harmony default export */ __webpack_exports__["a"] = (SpinnerComponent);

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/94b06fb716871f81bec601724e29a457.svg";

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/0fd9fd69a38ab79358df5a77b29702c8.svg";

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/42157e6edddc19588c3c2ff188703799.svg";

/***/ }),
/* 224 */,
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return activateCustomProcedures; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return deactivateCustomProcedures; });
const ACTIVATE_CUSTOM_PROCEDURES = 'scratch-gui/custom-procedures/ACTIVATE_CUSTOM_PROCEDURES';
const DEACTIVATE_CUSTOM_PROCEDURES = 'scratch-gui/custom-procedures/DEACTIVATE_CUSTOM_PROCEDURES';
const SET_CALLBACK = 'scratch-gui/custom-procedures/SET_CALLBACK';
const initialState = {
  active: false,
  mutator: null,
  callback: null
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case ACTIVATE_CUSTOM_PROCEDURES:
      return Object.assign({}, state, {
        active: true,
        mutator: action.mutator,
        callback: action.callback
      });
    case DEACTIVATE_CUSTOM_PROCEDURES:
      // Can be called without a mutator to deactivate without new procedure
      // i.e. when clicking on the modal background
      if (action.mutator) {
        state.callback(action.mutator);
      }
      return Object.assign({}, state, {
        active: false,
        mutator: null,
        callback: null
      });
    case SET_CALLBACK:
      return Object.assign({}, state, {
        callback: action.callback
      });
    default:
      return state;
  }
};

/**
 * Action creator to open the custom procedures modal.
 * @param {!Element} mutator The XML node of the mutator for the procedure.
 * @param {!function(!Element)} callback The function to call when done editing procedure.
 *     Expect the callback to be a function that takes a new XML mutator node.
 * @returns {object} An action object with type ACTIVATE_CUSTOM_PROCEDURES.
 */
const activateCustomProcedures = (mutator, callback) => ({
  type: ACTIVATE_CUSTOM_PROCEDURES,
  mutator: mutator,
  callback: callback
});

/**
 * Action creator to close the custom procedures modal.
 * @param {?Element} mutator The new mutator, or null if the callback should not be called.
 * @returns {object} An action object with type ACTIVATE_CUSTOM_PROCEDURES.
 */
const deactivateCustomProcedures = mutator => ({
  type: DEACTIVATE_CUSTOM_PROCEDURES,
  mutator: mutator
});


/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return setStageSize; });
/* harmony import */ var _lib_layout_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23);

const SET_STAGE_SIZE = 'scratch-gui/StageSize/SET_STAGE_SIZE';
const initialState = {
  stageSize: _lib_layout_constants_js__WEBPACK_IMPORTED_MODULE_0__[/* STAGE_DISPLAY_SIZES */ "c"].large
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_STAGE_SIZE:
      return {
        stageSize: action.stageSize
      };
    default:
      return state;
  }
};
const setStageSize = function setStageSize(stageSize) {
  return {
    type: SET_STAGE_SIZE,
    stageSize: stageSize
  };
};


/***/ }),
/* 227 */,
/* 228 */,
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/bc45b073cd2fc0c2265374bdb4e05d67.svg";

/***/ }),
/* 230 */,
/* 231 */,
/* 232 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1671);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1758);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1762);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1780);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return updateAssetDrag; });
const DRAG_UPDATE = 'scratch-gui/asset-drag/DRAG_UPDATE';
const initialState = {
  dragging: false,
  currentOffset: null,
  img: null
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case DRAG_UPDATE:
      return Object.assign({}, state, action.state);
    default:
      return state;
  }
};
const updateAssetDrag = function updateAssetDrag(state) {
  return {
    type: DRAG_UPDATE,
    state: state
  };
};


/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return updateBlockDrag; });
const BLOCK_DRAG_UPDATE = 'scratch-gui/block-drag/BLOCK_DRAG_UPDATE';
const initialState = false;
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case BLOCK_DRAG_UPDATE:
      return action.areBlocksOverGui;
    default:
      return state;
  }
};
const updateBlockDrag = function updateBlockDrag(areBlocksOverGui) {
  return {
    type: BLOCK_DRAG_UPDATE,
    areBlocksOverGui: areBlocksOverGui,
    meta: {
      throttle: 30
    }
  };
};


/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return updateMicIndicator; });
const UPDATE = 'scratch-gui/mic-indicator/UPDATE';
const initialState = false;
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case UPDATE:
      return action.visible;
    default:
      return state;
  }
};
const updateMicIndicator = function updateMicIndicator(visible) {
  return {
    type: UPDATE,
    visible: visible
  };
};


/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return updateMonitors; });
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85);
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_0__);
const UPDATE_MONITORS = 'scratch-gui/monitors/UPDATE_MONITORS';

const initialState = Object(immutable__WEBPACK_IMPORTED_MODULE_0__["OrderedMap"])();
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case UPDATE_MONITORS:
      return action.monitors;
    default:
      return state;
  }
};
const updateMonitors = function updateMonitors(monitors) {
  return {
    type: UPDATE_MONITORS,
    monitors: monitors
  };
};


/***/ }),
/* 285 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setFontsLoaded; });
const SET_FONTS_LOADED = 'fontsLoaded/SET_FONTS_LOADED';
const initialState = false;
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_FONTS_LOADED:
      return action.loaded;
    default:
      return state;
  }
};
const setFontsLoaded = () => ({
  type: SET_FONTS_LOADED,
  loaded: true
});


/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return setAutoSaveTimeoutId; });
const SET_AUTOSAVE_TIMEOUT_ID = 'timeout/SET_AUTOSAVE_TIMEOUT_ID';
const initialState = {
  autoSaveTimeoutId: null
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_AUTOSAVE_TIMEOUT_ID:
      return Object.assign({}, state, {
        autoSaveTimeoutId: action.id
      });
    default:
      return state;
  }
};
const setAutoSaveTimeoutId = id => ({
  type: SET_AUTOSAVE_TIMEOUT_ID,
  id
});


/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return updateToolbox; });
/* harmony import */ var _lib_make_toolbox_xml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(334);
const UPDATE_TOOLBOX = 'scratch-gui/toolbox/UPDATE_TOOLBOX';

const initialState = {
  toolboxXML: Object(_lib_make_toolbox_xml__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(true)
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case UPDATE_TOOLBOX:
      return Object.assign({}, state, {
        toolboxXML: action.toolboxXML
      });
    default:
      return state;
  }
};
const updateToolbox = function updateToolbox(toolboxXML) {
  return {
    type: UPDATE_TOOLBOX,
    toolboxXML: toolboxXML
  };
};


/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return updateMetrics; });
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
const UPDATE_METRICS = 'scratch-gui/workspace-metrics/UPDATE_METRICS';
const initialState = {
  targets: {}
};
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case UPDATE_METRICS:
      return Object.assign({}, state, {
        targets: Object.assign({}, state.targets, {
          [action.targetID]: {
            scrollX: action.scrollX,
            scrollY: action.scrollY,
            scale: action.scale
          }
        })
      });
    default:
      return state;
  }
};
const updateMetrics = function updateMetrics(metrics) {
  return _objectSpread({
    type: UPDATE_METRICS
  }, metrics);
};


/***/ }),
/* 289 */,
/* 290 */,
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ComingSoonComponent */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ComingSoonTooltip; });
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_bindall__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66);
/* harmony import */ var react_tooltip__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_tooltip__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _coming_soon_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(182);
/* harmony import */ var _coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_coming_soon_css__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _aww_cat_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(863);
/* harmony import */ var _aww_cat_png__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_aww_cat_png__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _cool_cat_png__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(864);
/* harmony import */ var _cool_cat_png__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_cool_cat_png__WEBPACK_IMPORTED_MODULE_8__);
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }









const messages = Object(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* defineMessages */ "d"])({
  message1: {
    "id": "gui.comingSoon.message1",
    "defaultMessage": "Don't worry, we're on it {emoji}"
  },
  message2: {
    "id": "gui.comingSoon.message2",
    "defaultMessage": "Coming Soon..."
  },
  message3: {
    "id": "gui.comingSoon.message3",
    "defaultMessage": "We're working on it {emoji}"
  }
});
class ComingSoonContent extends react__WEBPACK_IMPORTED_MODULE_4___default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default()(this, ['setHide', 'setShow', 'getRandomMessage']);
    this.state = {
      isShowing: false
    };
  }
  setShow() {
    // needed to set the opacity to 1, since the default is .9 on show
    this.setState({
      isShowing: true
    });
  }
  setHide() {
    this.setState({
      isShowing: false
    });
  }
  getRandomMessage() {
    // randomly chooses a messages from `messages` to display in the tooltip.
    const images = [_aww_cat_png__WEBPACK_IMPORTED_MODULE_7___default.a, _cool_cat_png__WEBPACK_IMPORTED_MODULE_8___default.a];
    const messageNumber = Math.floor(Math.random() * Object.keys(messages).length) + 1;
    const imageNumber = Math.floor(Math.random() * Object.keys(images).length);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* FormattedMessage */ "a"], _extends({}, messages["message".concat(messageNumber)], {
      values: {
        emoji: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement("img", {
          className: _coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.comingSoonImage,
          src: images[imageNumber]
        })
      }
    }));
  }
  render() {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react_tooltip__WEBPACK_IMPORTED_MODULE_5___default.a, {
      afterHide: this.setHide,
      afterShow: this.setShow,
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(_coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.comingSoon, this.props.className, {
        [_coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.show]: this.state.isShowing,
        [_coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.left]: this.props.place === 'left',
        [_coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.right]: this.props.place === 'right',
        [_coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.top]: this.props.place === 'top',
        [_coming_soon_css__WEBPACK_IMPORTED_MODULE_6___default.a.bottom]: this.props.place === 'bottom'
      }),
      getContent: this.getRandomMessage,
      id: this.props.tooltipId
    });
  }
}
ComingSoonContent.propTypes = {
  className: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  intl: react_intl__WEBPACK_IMPORTED_MODULE_2__[/* intlShape */ "f"],
  place: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOf(['top', 'right', 'bottom', 'left']),
  tooltipId: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string.isRequired
};
ComingSoonContent.defaultProps = {
  place: 'bottom'
};
const ComingSoon = Object(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* injectIntl */ "e"])(ComingSoonContent);
const ComingSoonTooltip = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement("div", {
  className: props.className
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement("div", {
  "data-delay-hide": props.delayHide,
  "data-delay-show": props.delayShow,
  "data-effect": "solid",
  "data-for": props.tooltipId,
  "data-place": props.place,
  "data-tip": "tooltip"
}, props.children), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(ComingSoon, {
  className: props.tooltipClassName,
  place: props.place,
  tooltipId: props.tooltipId
}));
ComingSoonTooltip.propTypes = {
  children: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.node.isRequired,
  className: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  delayHide: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,
  delayShow: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.number,
  place: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOf(['top', 'right', 'bottom', 'left']),
  tooltipClassName: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  tooltipId: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string.isRequired
};
ComingSoonTooltip.defaultProps = {
  delayHide: 0,
  delayShow: 0
};


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/572a212c2e777e3a9061c97453497009.png";

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1649);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1673);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1687);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1692);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 297 */,
/* 298 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1782);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _public_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(895);
/* harmony import */ var _public_path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_public_path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_normalize_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(376);
/* harmony import */ var _lib_normalize_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_normalize_css__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable import/no-commonjs */

const SansSerif = __webpack_require__(999);
const Serif = __webpack_require__(1000);
const Handwriting = __webpack_require__(1001);
const Marker = __webpack_require__(1002);
const Curly = __webpack_require__(1003);
const Pixel = __webpack_require__(1004);
const Scratch = __webpack_require__(1005);
const log = __webpack_require__(18).default;
const fontSource = {
  'Sans Serif': SansSerif,
  'Serif': Serif,
  'Handwriting': Handwriting,
  'Marker': Marker,
  'Curly': Curly,
  'Pixel': Pixel,
  'Scratch': Scratch
};
const fontData = {};
const fetchFonts = () => {
  const promises = [];
  for (const fontName of Object.keys(fontSource)) {
    promises.push(fetch(fontSource[fontName]).then(res => {
      if (!res.ok) {
        throw new Error("Cannot load font: ".concat(fontName, " (invalid HTTP response)"));
      }
      return res.blob();
    }).then(blob => new Promise((resolve, reject) => {
      const fr = new FileReader();
      fr.onload = () => resolve(fr.result);
      fr.onerror = () => reject(new Error("Cannot load font: ".concat(fontName, " (could not read)")));
      fr.readAsDataURL(blob);
    })).then(url => {
      fontData[fontName] = "@font-face{font-family:\"".concat(fontName, "\";src:url(\"").concat(url, "\");}");
    }).catch(err => {
      log.error(err);
    }));
  }
  return Promise.all(promises);
};
const addFontsToDocument = () => {
  if (document.getElementById('scratch-font-styles')) {
    return;
  }
  let css = '';
  for (const fontName of Object.keys(fontSource)) {
    const fontCSS = fontData[fontName];
    if (fontCSS) {
      css += fontCSS;
    }
  }
  const documentStyleTag = document.createElement('style');
  documentStyleTag.id = 'scratch-font-styles';
  documentStyleTag.textContent = css;
  document.body.insertBefore(documentStyleTag, document.body.firstChild);
};
const waitForFontsToLoad = () => {
  const promises = [];
  if (document.fonts && document.fonts.load) {
    for (const fontName in fontData) {
      promises.push(document.fonts.load("12px ".concat(fontName)));
    }
  }
  return Promise.all(promises);
};
const loadFonts = () => fetchFonts().then(() => {
  addFontsToDocument();
  return waitForFontsToLoad();
}).catch(err => {
  log.error(err);
});
const getFonts = () => fontData;

// We have to use legacy module.exports as some parts of Scratch expect require('scratch-render-font') to be a function
module.exports = getFonts;
module.exports.loadFonts = loadFonts;
module.exports.FONTS = fontData;

/***/ }),
/* 327 */,
/* 328 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);


const mapStateToProps = state => ({
  key: state.locales.locale,
  locale: state.locales.locale,
  messages: state.locales.messages
});
/* harmony default export */ __webpack_exports__["a"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* connect */ "b"])(mapStateToProps)(react_intl__WEBPACK_IMPORTED_MODULE_0__[/* IntlProvider */ "b"]));

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/6be143c7cb9d23c787f7f20674a76f72.svg";

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/3286e2838658ebdb82f62d062b14e951.svg";

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/0f9efe3bd6e80747dfa3aeb9e19997b5.svg";

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/3d9e2585d6ed12b9fb994438e0c4c42a.svg";

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/7b6399d516d5921bb199f57cdd8bbbbe.svg";

/***/ }),
/* 334 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _tw_lazy_scratch_blocks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(109);

const categorySeparator = '<sep gap="36"/>';
const blockSeparator = '<sep gap="36"/>'; // At default scale, about 28px

const translate = (id, english) => {
  if (_tw_lazy_scratch_blocks__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].isLoaded()) {
    const ScratchBlocks = _tw_lazy_scratch_blocks__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].get();
    return ScratchBlocks.ScratchMsgs.translate(id, english);
  }
  return english;
};

/* eslint-disable no-unused-vars */
const motion = function motion(isInitialSetup, isStage, targetId) {
  const stageSelected = translate('MOTION_STAGE_SELECTED', 'Stage selected: no motion blocks');
  return "\n    <category name=\"%{BKY_CATEGORY_MOTION}\" id=\"motion\" colour=\"#4C97FF\" secondaryColour=\"#3373CC\">\n        ".concat(isStage ? "\n        <label text=\"".concat(stageSelected, "\"></label>\n        ") : "\n        <block type=\"motion_movesteps\">\n            <value name=\"STEPS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_turnright\">\n            <value name=\"DEGREES\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">15</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_turnleft\">\n            <value name=\"DEGREES\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">15</field>\n                </shadow>\n            </value>\n        </block>\n        ".concat(blockSeparator, "\n        <block type=\"motion_goto\">\n            <value name=\"TO\">\n                <shadow type=\"motion_goto_menu\">\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_gotoxy\">\n            <value name=\"X\">\n                <shadow id=\"movex\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n            <value name=\"Y\">\n                <shadow id=\"movey\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_glideto\" id=\"motion_glideto\">\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n            <value name=\"TO\">\n                <shadow type=\"motion_glideto_menu\">\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_glidesecstoxy\">\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n            <value name=\"X\">\n                <shadow id=\"glidex\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n            <value name=\"Y\">\n                <shadow id=\"glidey\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"motion_pointindirection\">\n            <value name=\"DIRECTION\">\n                <shadow type=\"math_angle\">\n                    <field name=\"NUM\">90</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_pointtowards\">\n            <value name=\"TOWARDS\">\n                <shadow type=\"motion_pointtowards_menu\">\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"motion_changexby\">\n            <value name=\"DX\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_setx\">\n            <value name=\"X\">\n                <shadow id=\"setx\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_changeyby\">\n            <value name=\"DY\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"motion_sety\">\n            <value name=\"Y\">\n                <shadow id=\"sety\" type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"motion_ifonedgebounce\"/>\n        ").concat(blockSeparator, "\n        <block type=\"motion_setrotationstyle\"/>\n        ").concat(blockSeparator, "\n        <block id=\"").concat(targetId, "_xposition\" type=\"motion_xposition\"/>\n        <block id=\"").concat(targetId, "_yposition\" type=\"motion_yposition\"/>\n        <block id=\"").concat(targetId, "_direction\" type=\"motion_direction\"/>"), "\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const xmlEscape = function xmlEscape(unsafe) {
  return unsafe.replace(/[<>&'"]/g, c => {
    switch (c) {
      case '<':
        return '&lt;';
      case '>':
        return '&gt;';
      case '&':
        return '&amp;';
      case '\'':
        return '&apos;';
      case '"':
        return '&quot;';
    }
  });
};
const looks = function looks(isInitialSetup, isStage, targetId, costumeName, backdropName) {
  const hello = translate('LOOKS_HELLO', 'Hello!');
  const hmm = translate('LOOKS_HMM', 'Hmm...');
  return "\n    <category name=\"%{BKY_CATEGORY_LOOKS}\" id=\"looks\" colour=\"#9966FF\" secondaryColour=\"#774DCB\">\n        ".concat(isStage ? '' : "\n        <block type=\"looks_sayforsecs\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">".concat(hello, "</field>\n                </shadow>\n            </value>\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">2</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_say\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">").concat(hello, "</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_thinkforsecs\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">").concat(hmm, "</field>\n                </shadow>\n            </value>\n            <value name=\"SECS\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">2</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_think\">\n            <value name=\"MESSAGE\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">").concat(hmm, "</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        "), "\n        ").concat(isStage ? "\n            <block type=\"looks_switchbackdropto\">\n                <value name=\"BACKDROP\">\n                    <shadow type=\"looks_backdrops\">\n                        <field name=\"BACKDROP\">".concat(backdropName, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_switchbackdroptoandwait\">\n                <value name=\"BACKDROP\">\n                    <shadow type=\"looks_backdrops\">\n                        <field name=\"BACKDROP\">").concat(backdropName, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_nextbackdrop\"/>\n        ") : "\n            <block id=\"".concat(targetId, "_switchcostumeto\" type=\"looks_switchcostumeto\">\n                <value name=\"COSTUME\">\n                    <shadow type=\"looks_costume\">\n                        <field name=\"COSTUME\">").concat(costumeName, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_nextcostume\"/>\n            <block type=\"looks_switchbackdropto\">\n                <value name=\"BACKDROP\">\n                    <shadow type=\"looks_backdrops\">\n                        <field name=\"BACKDROP\">").concat(backdropName, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_nextbackdrop\"/>\n            ").concat(blockSeparator, "\n            <block type=\"looks_changesizeby\">\n                <value name=\"CHANGE\">\n                    <shadow type=\"math_number\">\n                        <field name=\"NUM\">10</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"looks_setsizeto\">\n                <value name=\"SIZE\">\n                    <shadow type=\"math_number\">\n                        <field name=\"NUM\">100</field>\n                    </shadow>\n                </value>\n            </block>\n        "), "\n        ").concat(blockSeparator, "\n        <block type=\"looks_changeeffectby\">\n            <value name=\"CHANGE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">25</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_seteffectto\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">0</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"looks_cleargraphiceffects\"/>\n        ").concat(blockSeparator, "\n        ").concat(isStage ? '' : "\n            <block type=\"looks_show\"/>\n            <block type=\"looks_hide\"/>\n        ".concat(blockSeparator, "\n            <block type=\"looks_gotofrontback\"/>\n            <block type=\"looks_goforwardbackwardlayers\">\n                <value name=\"NUM\">\n                    <shadow type=\"math_integer\">\n                        <field name=\"NUM\">1</field>\n                    </shadow>\n                </value>\n            </block>\n        "), "\n        ").concat(isStage ? "\n            <block id=\"backdropnumbername\" type=\"looks_backdropnumbername\"/>\n        " : "\n            <block id=\"".concat(targetId, "_costumenumbername\" type=\"looks_costumenumbername\"/>\n            <block id=\"backdropnumbername\" type=\"looks_backdropnumbername\"/>\n            <block id=\"").concat(targetId, "_size\" type=\"looks_size\"/>\n        "), "\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const sound = function sound(isInitialSetup, isStage, targetId, soundName) {
  return "\n    <category name=\"%{BKY_CATEGORY_SOUND}\" id=\"sound\" colour=\"#D65CD6\" secondaryColour=\"#BD42BD\">\n        <block id=\"".concat(targetId, "_sound_playuntildone\" type=\"sound_playuntildone\">\n            <value name=\"SOUND_MENU\">\n                <shadow type=\"sound_sounds_menu\">\n                    <field name=\"SOUND_MENU\">").concat(soundName, "</field>\n                </shadow>\n            </value>\n        </block>\n        <block id=\"").concat(targetId, "_sound_play\" type=\"sound_play\">\n            <value name=\"SOUND_MENU\">\n                <shadow type=\"sound_sounds_menu\">\n                    <field name=\"SOUND_MENU\">").concat(soundName, "</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_stopallsounds\"/>\n        ").concat(blockSeparator, "\n        <block type=\"sound_changeeffectby\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_seteffectto\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">100</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_cleareffects\"/>\n        ").concat(blockSeparator, "\n        <block type=\"sound_changevolumeby\">\n            <value name=\"VOLUME\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">-10</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"sound_setvolumeto\">\n            <value name=\"VOLUME\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">100</field>\n                </shadow>\n            </value>\n        </block>\n        <block id=\"").concat(targetId, "_volume\" type=\"sound_volume\"/>\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const events = function events(isInitialSetup, isStage) {
  return "\n    <category name=\"%{BKY_CATEGORY_EVENTS}\" id=\"events\" colour=\"#FFD500\" secondaryColour=\"#CC9900\">\n        <block type=\"event_whenflagclicked\"/>\n        <block type=\"event_whenkeypressed\">\n        </block>\n        ".concat(isStage ? "\n            <block type=\"event_whenstageclicked\"/>\n        " : "\n            <block type=\"event_whenthisspriteclicked\"/>\n        ", "\n        <block type=\"event_whenbackdropswitchesto\">\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"event_whengreaterthan\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"event_whenbroadcastreceived\">\n        </block>\n        <block type=\"event_broadcast\">\n            <value name=\"BROADCAST_INPUT\">\n                <shadow type=\"event_broadcast_menu\"></shadow>\n            </value>\n        </block>\n        <block type=\"event_broadcastandwait\">\n            <value name=\"BROADCAST_INPUT\">\n              <shadow type=\"event_broadcast_menu\"></shadow>\n            </value>\n        </block>\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const control = function control(isInitialSetup, isStage) {
  return "\n    <category name=\"%{BKY_CATEGORY_CONTROL}\" id=\"control\" colour=\"#FFAB19\" secondaryColour=\"#CF8B17\">\n        <block type=\"control_wait\">\n            <value name=\"DURATION\">\n                <shadow type=\"math_positive_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n        </block>\n        ".concat(blockSeparator, "\n        <block type=\"control_repeat\">\n            <value name=\"TIMES\">\n                <shadow type=\"math_whole_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        <block id=\"forever\" type=\"control_forever\"/>\n        ").concat(blockSeparator, "\n        <block type=\"control_if\"/>\n        <block type=\"control_if_else\"/>\n        <block id=\"wait_until\" type=\"control_wait_until\"/>\n        <block id=\"repeat_until\" type=\"control_repeat_until\"/>\n        <block id=\"while\" type=\"control_while\"/>\n        <block id=\"for_each\" type=\"control_for_each\">\n            <value name=\"VALUE\">\n                <shadow type=\"math_whole_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"control_stop\"/>\n        ").concat(blockSeparator, "\n        ").concat(isStage ? "\n            <block type=\"control_create_clone_of\">\n                <value name=\"CLONE_OPTION\">\n                    <shadow type=\"control_create_clone_of_menu\"/>\n                </value>\n            </block>\n        " : "\n            <block type=\"control_start_as_clone\"/>\n            <block type=\"control_create_clone_of\">\n                <value name=\"CLONE_OPTION\">\n                    <shadow type=\"control_create_clone_of_menu\"/>\n                </value>\n            </block>\n            <block type=\"control_delete_this_clone\"/>\n        ", "\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const sensing = function sensing(isInitialSetup, isStage) {
  const name = translate('SENSING_ASK_TEXT', 'What\'s your name?');
  return "\n    <category name=\"%{BKY_CATEGORY_SENSING}\" id=\"sensing\" colour=\"#4CBFE6\" secondaryColour=\"#2E8EB8\">\n        ".concat(isStage ? '' : "\n            <block type=\"sensing_touchingobject\">\n                <value name=\"TOUCHINGOBJECTMENU\">\n                    <shadow type=\"sensing_touchingobjectmenu\"/>\n                </value>\n            </block>\n            <block type=\"sensing_touchingcolor\">\n                <value name=\"COLOR\">\n                    <shadow type=\"colour_picker\"/>\n                </value>\n            </block>\n            <block type=\"sensing_coloristouchingcolor\">\n                <value name=\"COLOR\">\n                    <shadow type=\"colour_picker\"/>\n                </value>\n                <value name=\"COLOR2\">\n                    <shadow type=\"colour_picker\"/>\n                </value>\n            </block>\n            <block type=\"sensing_distanceto\">\n                <value name=\"DISTANCETOMENU\">\n                    <shadow type=\"sensing_distancetomenu\"/>\n                </value>\n            </block>\n            ".concat(blockSeparator, "\n        "), "\n        ").concat(isInitialSetup ? '' : "\n            <block id=\"askandwait\" type=\"sensing_askandwait\">\n                <value name=\"QUESTION\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">".concat(name, "</field>\n                    </shadow>\n                </value>\n            </block>\n        "), "\n        <block id=\"answer\" type=\"sensing_answer\"/>\n        ").concat(blockSeparator, "\n        <block type=\"sensing_keypressed\">\n            <value name=\"KEY_OPTION\">\n                <shadow type=\"sensing_keyoptions\"/>\n            </value>\n        </block>\n        <block type=\"sensing_mousedown\"/>\n        <block type=\"sensing_mousex\"/>\n        <block type=\"sensing_mousey\"/>\n        ").concat(isStage ? '' : "\n            ".concat(blockSeparator, "\n            '<block type=\"sensing_setdragmode\" id=\"sensing_setdragmode\"></block>'+\n            ").concat(blockSeparator, "\n        "), "\n        ").concat(blockSeparator, "\n        <block id=\"loudness\" type=\"sensing_loudness\"/>\n        ").concat(blockSeparator, "\n        <block id=\"timer\" type=\"sensing_timer\"/>\n        <block type=\"sensing_resettimer\"/>\n        ").concat(blockSeparator, "\n        <block id=\"of\" type=\"sensing_of\">\n            <value name=\"OBJECT\">\n                <shadow id=\"sensing_of_object_menu\" type=\"sensing_of_object_menu\"/>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block id=\"current\" type=\"sensing_current\"/>\n        <block type=\"sensing_dayssince2000\"/>\n        ").concat(blockSeparator, "\n        <block type=\"sensing_username\"/>\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const operators = function operators(isInitialSetup) {
  const apple = translate('OPERATORS_JOIN_APPLE', 'apple');
  const banana = translate('OPERATORS_JOIN_BANANA', 'banana');
  const letter = translate('OPERATORS_LETTEROF_APPLE', 'a');
  return "\n    <category name=\"%{BKY_CATEGORY_OPERATORS}\" id=\"operators\" colour=\"#40BF4A\" secondaryColour=\"#389438\">\n        <block type=\"operator_add\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_subtract\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_multiply\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_divide\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        ".concat(blockSeparator, "\n        <block type=\"operator_random\">\n            <value name=\"FROM\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">1</field>\n                </shadow>\n            </value>\n            <value name=\"TO\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\">10</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"operator_gt\">\n            <value name=\"OPERAND1\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\"/>\n                </shadow>\n            </value>\n            <value name=\"OPERAND2\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">50</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_lt\">\n            <value name=\"OPERAND1\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\"/>\n                </shadow>\n            </value>\n            <value name=\"OPERAND2\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">50</field>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_equals\">\n            <value name=\"OPERAND1\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\"/>\n                </shadow>\n            </value>\n            <value name=\"OPERAND2\">\n                <shadow type=\"text\">\n                    <field name=\"TEXT\">50</field>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"operator_and\"/>\n        <block type=\"operator_or\"/>\n        <block type=\"operator_not\"/>\n        ").concat(blockSeparator, "\n        ").concat(isInitialSetup ? '' : "\n            <block type=\"operator_join\">\n                <value name=\"STRING1\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">".concat(apple, " </field>\n                    </shadow>\n                </value>\n                <value name=\"STRING2\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">").concat(banana, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"operator_letter_of\">\n                <value name=\"LETTER\">\n                    <shadow type=\"math_whole_number\">\n                        <field name=\"NUM\">1</field>\n                    </shadow>\n                </value>\n                <value name=\"STRING\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">").concat(apple, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"operator_length\">\n                <value name=\"STRING\">\n                    <shadow type=\"text\">\n                        <field name=\"TEXT\">").concat(apple, "</field>\n                    </shadow>\n                </value>\n            </block>\n            <block type=\"operator_contains\" id=\"operator_contains\">\n              <value name=\"STRING1\">\n                <shadow type=\"text\">\n                  <field name=\"TEXT\">").concat(apple, "</field>\n                </shadow>\n              </value>\n              <value name=\"STRING2\">\n                <shadow type=\"text\">\n                  <field name=\"TEXT\">").concat(letter, "</field>\n                </shadow>\n              </value>\n            </block>\n        "), "\n        ").concat(blockSeparator, "\n        <block type=\"operator_mod\">\n            <value name=\"NUM1\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n            <value name=\"NUM2\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        <block type=\"operator_round\">\n            <value name=\"NUM\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        ").concat(blockSeparator, "\n        <block type=\"operator_mathop\">\n            <value name=\"NUM\">\n                <shadow type=\"math_number\">\n                    <field name=\"NUM\"/>\n                </shadow>\n            </value>\n        </block>\n        ").concat(categorySeparator, "\n    </category>\n    ");
};
const variables = function variables() {
  return "\n    <category\n        name=\"%{BKY_CATEGORY_VARIABLES}\"\n        id=\"variables\"\n        colour=\"#FF8C1A\"\n        secondaryColour=\"#DB6E00\"\n        custom=\"VARIABLE\">\n    </category>\n    ";
};
const myBlocks = function myBlocks() {
  return "\n    <category\n        name=\"%{BKY_CATEGORY_MYBLOCKS}\"\n        id=\"myBlocks\"\n        colour=\"#FF6680\"\n        secondaryColour=\"#FF4D6A\"\n        custom=\"PROCEDURE\">\n    </category>\n    ";
};

// eslint-disable-next-line max-len
const extraTurboWarpBlocks = "\n<block type=\"argument_reporter_boolean\"><field name=\"VALUE\">is compiled?</field></block>\n<block type=\"argument_reporter_boolean\"><field name=\"VALUE\">is TurboWarp?</field></block>\n";
/* eslint-enable no-unused-vars */

const xmlOpen = '<xml style="display: none">';
const xmlClose = '</xml>';

/**
 * @param {!boolean} isInitialSetup - Whether the toolbox is for initial setup. If the mode is "initial setup",
 * blocks with localized default parameters (e.g. ask and wait) should not be loaded. (LLK/scratch-gui#5445)
 * @param {?boolean} isStage - Whether the toolbox is for a stage-type target. This is always set to true
 * when isInitialSetup is true.
 * @param {?string} targetId - The current editing target
 * @param {?Array.<object>} categoriesXML - optional array of `{id,xml}` for categories. This can include both core
 * and other extensions: core extensions will be placed in the normal Scratch order; others will go at the bottom.
 * @property {string} id - the extension / category ID.
 * @property {string} xml - the `<category>...</category>` XML for this extension / category.
 * @param {?string} costumeName - The name of the default selected costume dropdown.
 * @param {?string} backdropName - The name of the default selected backdrop dropdown.
 * @param {?string} soundName -  The name of the default selected sound dropdown.
 * @returns {string} - a ScratchBlocks-style XML document for the contents of the toolbox.
 */
const makeToolboxXML = function makeToolboxXML(isInitialSetup) {
  let isStage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  let targetId = arguments.length > 2 ? arguments[2] : undefined;
  let categoriesXML = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  let costumeName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  let backdropName = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
  let soundName = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';
  isStage = isInitialSetup || isStage;
  const gap = [categorySeparator];
  costumeName = xmlEscape(costumeName);
  backdropName = xmlEscape(backdropName);
  soundName = xmlEscape(soundName);
  categoriesXML = categoriesXML.slice();
  const moveCategory = categoryId => {
    const index = categoriesXML.findIndex(categoryInfo => categoryInfo.id === categoryId);
    if (index >= 0) {
      // remove the category from categoriesXML and return its XML
      const [categoryInfo] = categoriesXML.splice(index, 1);
      return categoryInfo.xml;
    }
    // return `undefined`
  };

  const motionXML = moveCategory('motion') || motion(isInitialSetup, isStage, targetId);
  const looksXML = moveCategory('looks') || looks(isInitialSetup, isStage, targetId, costumeName, backdropName);
  const soundXML = moveCategory('sound') || sound(isInitialSetup, isStage, targetId, soundName);
  const eventsXML = moveCategory('event') || events(isInitialSetup, isStage, targetId);
  const controlXML = moveCategory('control') || control(isInitialSetup, isStage, targetId);
  const sensingXML = moveCategory('sensing') || sensing(isInitialSetup, isStage, targetId);
  const operatorsXML = moveCategory('operators') || operators(isInitialSetup, isStage, targetId);
  const variablesXML = moveCategory('data') || variables(isInitialSetup, isStage, targetId);
  const myBlocksXML = moveCategory('procedures') || myBlocks(isInitialSetup, isStage, targetId);
  // Always display TurboWarp blocks as the first extension, if it exists,
  // and also add an "is compiled?" block to the top.
  let turbowarpXML = moveCategory('tw');
  if (turbowarpXML && !turbowarpXML.includes(extraTurboWarpBlocks)) {
    turbowarpXML = turbowarpXML.replace('<block', "".concat(extraTurboWarpBlocks, "<block"));
  }
  const everything = [xmlOpen, motionXML, gap, looksXML, gap, soundXML, gap, eventsXML, gap, controlXML, gap, sensingXML, gap, operatorsXML, gap, variablesXML, gap, myBlocksXML, gap];
  if (turbowarpXML) {
    everything.push(turbowarpXML);
  }
  for (const extensionCategory of categoriesXML) {
    everything.push(gap, extensionCategory.xml);
  }
  everything.push(xmlClose);
  return everything.join('\n');
};
/* harmony default export */ __webpack_exports__["a"] = (makeToolboxXML);

/***/ }),
/* 335 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return reducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vmInitialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setVM", function() { return setVM; });
/* harmony import */ var scratch_vm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(12);
/* harmony import */ var scratch_vm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(scratch_vm__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27);


const SET_VM = 'scratch-gui/vm/SET_VM';
const defaultVM = new scratch_vm__WEBPACK_IMPORTED_MODULE_0___default.a();
defaultVM.setCompatibilityMode(true);
defaultVM.extensionManager.workerMode = 'iframe';
defaultVM.attachStorage(_lib_storage__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"]);
const initialState = defaultVM;
const reducer = function reducer(state, action) {
  if (typeof state === 'undefined') state = initialState;
  switch (action.type) {
    case SET_VM:
      return action.vm;
    default:
      return state;
  }
};
const setVM = function setVM(vm) {
  return {
    type: SET_VM,
    vm: vm
  };
};


/***/ }),
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _box_box_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);
/* harmony import */ var _crash_message_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(202);
/* harmony import */ var _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_crash_message_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _reload_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(786);
/* harmony import */ var _reload_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_reload_svg__WEBPACK_IMPORTED_MODULE_5__);






const CrashMessage = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default.a.crashWrapper
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_box_box_jsx__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], {
  className: _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default.a.body
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("img", {
  className: _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default.a.reloadIcon,
  src: _reload_svg__WEBPACK_IMPORTED_MODULE_5___default.a
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", {
  className: _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default.a.header
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_3__[/* FormattedMessage */ "a"], {
  defaultMessage: "Oops! Something went wrong.",
  id: "gui.crashMessage.label"
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_3__[/* FormattedMessage */ "a"], {
  defaultMessage: 'We are so sorry, but it looks like the page has crashed.' + ' Please refresh your page to try' + ' again.',
  id: "tw.gui.crashMessage.description"
})), props.errorMessage && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", {
  className: _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default.a.errorMessage
}, props.errorMessage), props.eventId && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_3__[/* FormattedMessage */ "a"], {
  defaultMessage: "Your error was logged with id {errorId}",
  id: "gui.crashMessage.errorNumber",
  values: {
    errorId: props.eventId
  }
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("button", {
  className: _crash_message_css__WEBPACK_IMPORTED_MODULE_4___default.a.reloadButton,
  onClick: props.onReload
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react_intl__WEBPACK_IMPORTED_MODULE_3__[/* FormattedMessage */ "a"], {
  defaultMessage: "Reload",
  id: "gui.crashMessage.reload"
}))));
CrashMessage.propTypes = {
  eventId: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  errorMessage: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.string,
  onReload: prop_types__WEBPACK_IMPORTED_MODULE_0___default.a.func.isRequired
};
/* harmony default export */ __webpack_exports__["a"] = (CrashMessage);

/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return generateRandomUsername; });
const generateRandomUsername = () => {
  const DIGITS = 5;
  const randomNumber = Math.round(Math.random() * 10 ** DIGITS);
  const randomId = randomNumber.toString().padStart(DIGITS, '0');
  const randomUsername = "user".concat(randomId);
  return randomUsername;
};


/***/ }),
/* 345 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Report a telemetry event.
 * @param {string} event - one of `projectWasCreated`, `projectDidLoad`, `projectDidSave`, `projectWasUploaded`
 */
// TODO make a telemetry HOC and move this stuff there
const collectMetadata = function collectMetadata(vm) {
  let projectName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  let locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  // TODO move most or all of this into a collectMetadata() method on the VM/Runtime
  const metadata = {
    projectName: projectName,
    language: locale,
    spriteCount: 0,
    blocksCount: 0,
    costumesCount: 0,
    listsCount: 0,
    scriptCount: 0,
    soundsCount: 0,
    variablesCount: 0
  };
  for (const target of vm.runtime.targets) {
    ++metadata.spriteCount;
    metadata.blocksCount += Object.keys(target.sprite.blocks._blocks).length;
    metadata.costumesCount += target.sprite.costumes_.length;
    metadata.scriptCount += target.sprite.blocks._scripts.length;
    metadata.soundsCount += target.sprite.sounds.length;
    for (const variableName in target.variables) {
      const variable = target.variables[variableName];
      if (variable.type === 'list') {
        ++metadata.listsCount;
      } else {
        ++metadata.variablesCount;
      }
    }
  }
  return metadata;
};
/* harmony default export */ __webpack_exports__["a"] = (collectMetadata);

/***/ }),
/* 346 */,
/* 347 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(787);
/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_0__);


// Special constants -- do not change without care.
const DATABASE_NAME = 'TW_AutoSave';
const DATABASE_VERSION = 1;
const STORE_NAME = 'project';
let _db;
const openDB = () => {
  if (_db) {
    return _db;
  }
  if (!window.indexedDB) {
    throw new Error('indexedDB is not supported');
  }
  return new Promise((resolve, reject) => {
    const request = indexedDB.open(DATABASE_NAME, DATABASE_VERSION);
    request.onupgradeneeded = e => {
      const db = e.target.result;
      db.createObjectStore(STORE_NAME, {
        keyPath: 'file'
      });
    };
    request.onsuccess = e => {
      _db = e.target.result;
      resolve(_db);
    };
    request.onerror = () => {
      reject(new Error("DB error: ".concat(request.error)));
    };
  });
};

/**
 * Save a project to IDB.
 * @param {VirtualMachine} vm Scratch VM
 */
const save = async vm => {
  // To save a project, we will get all the assets inside it and save them to IDB.
  // We will not actually generate a zip as that is slow.
  const files = vm.saveProjectSb3DontZip();
  const db = await openDB();
  return new Promise((resolve, reject) => {
    const transaction = db.transaction(STORE_NAME, 'readwrite');
    transaction.onerror = () => {
      reject(new Error("Save transaction error: ".concat(transaction.error)));
    };

    // Remove unused assets and don't waste time updating assets that are already in IDB.
    const exists = [];
    const projectStore = transaction.objectStore(STORE_NAME);
    const request = projectStore.openCursor();
    request.onsuccess = e => {
      const cursor = e.target.result;
      if (cursor) {
        const key = cursor.key;
        if (files[key]) {
          exists.push(key);
        } else {
          cursor.delete();
        }
        cursor.continue();
      } else {
        // Cursor is done, save all new files and project.json to IDB.
        for (const file of Object.keys(files)) {
          if (file === 'project.json' || !exists.includes(file)) {
            projectStore.put({
              file,
              data: files[file].buffer
            });
          }
        }
        resolve();
      }
    };
  });
};

/**
 * Load a project from IDB.
 * @returns {Promise<ArrayBuffer>} sb3 project to load.
 */
const load = async () => {
  // To load a project, read the files from IDB and generate a .sb3
  const db = await openDB();
  return new Promise((resolve, reject) => {
    const transaction = db.transaction(STORE_NAME, 'readonly');
    transaction.onerror = () => {
      reject(new Error("Load transaction error: ".concat(transaction.error)));
    };
    const zip = new jszip__WEBPACK_IMPORTED_MODULE_0___default.a();
    const projectStore = transaction.objectStore(STORE_NAME);
    const request = projectStore.openCursor();
    request.onsuccess = e => {
      const cursor = e.target.result;
      if (cursor) {
        zip.file(cursor.key, cursor.value.data);
        cursor.continue();
      } else {
        // Cursor is done, all files added to zip.
        const hasJSON = zip.file('project.json');
        if (hasJSON) {
          resolve(zip.generateAsync({
            type: 'arraybuffer'
            // No reason to compress this zip.
          }));
        } else {
          reject(new Error('Could not find project'));
        }
      }
    };
  });
};
/* harmony default export */ __webpack_exports__["a"] = ({
  save,
  load
});

/***/ }),
/* 348 */,
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/aaa4a3575852fe11d04f44c4a972ae73.svg";

/***/ }),
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _divider_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(794);
/* harmony import */ var _divider_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_divider_css__WEBPACK_IMPORTED_MODULE_3__);




const Divider = _ref => {
  let {
    className
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(_divider_css__WEBPACK_IMPORTED_MODULE_3___default.a.divider, className)
  });
};
Divider.propTypes = {
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string
};
/* harmony default export */ __webpack_exports__["a"] = (Divider);

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/497f797eeffe5fa7e6a626abc0db08a1.svg";

/***/ }),
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/2e0c4790f8f9cf28e3c346b9cef0fcb6.svg";

/***/ }),
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/2f9cda00a530ac237fc24063067377c3.svg";

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/4b6100c9f591be6470cdfd4697de0b54.svg";

/***/ }),
/* 361 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ MISSING_PROJECT_ID; });

// EXTERNAL MODULE: ./node_modules/raw-loader!./src/lib/tw-missing-project/c17163c6954e9422ac2405de4c9d68c8.svg
var c17163c6954e9422ac2405de4c9d68c8 = __webpack_require__(743);
var c17163c6954e9422ac2405de4c9d68c8_default = /*#__PURE__*/__webpack_require__.n(c17163c6954e9422ac2405de4c9d68c8);

// CONCATENATED MODULE: ./src/lib/tw-missing-project/project-data.js
const projectData = () => ({
  targets: [{
    isStage: true,
    name: 'Stage',
    variables: {},
    lists: {},
    broadcasts: {},
    blocks: {},
    comments: {},
    currentCostume: 0,
    costumes: [{
      assetId: 'c17163c6954e9422ac2405de4c9d68c8',
      name: '',
      bitmapResolution: 1,
      md5ext: 'c17163c6954e9422ac2405de4c9d68c8.svg',
      dataFormat: 'svg',
      rotationCenterX: 207,
      rotationCenterY: 16
    }],
    sounds: [],
    volume: 100,
    layerOrder: 0
  }],
  monitors: [],
  extensions: [],
  meta: {
    semver: '3.0.0',
    vm: '0.2.0',
    agent: ''
  }
});
/* harmony default export */ var project_data = (projectData);
// EXTERNAL MODULE: ./src/lib/tw-text-encoder.js
var tw_text_encoder = __webpack_require__(114);

// CONCATENATED MODULE: ./src/lib/tw-missing-project/index.js
/* eslint-disable import/no-unresolved */

/* eslint-enable import/no-unresolved */



const MISSING_PROJECT_ID = '__missing__';
const missingProject = () => {
  const encoder = new tw_text_encoder["TextEncoder"]();
  const projectJson = project_data();
  return [{
    id: MISSING_PROJECT_ID,
    assetType: 'Project',
    dataFormat: 'JSON',
    data: JSON.stringify(projectJson)
  }, {
    id: 'c17163c6954e9422ac2405de4c9d68c8',
    assetType: 'ImageVector',
    dataFormat: 'SVG',
    data: encoder.encode(c17163c6954e9422ac2405de4c9d68c8_default.a)
  }];
};
/* harmony default export */ var tw_missing_project = __webpack_exports__["b"] = (missingProject);

/***/ }),
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1639);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1644);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1648);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1655);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1672);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1691);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1771);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1784);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(377);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\nhtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}\nbody{margin:0}\narticle,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}\naudio,canvas,progress,video{display:inline-block;vertical-align:baseline}\naudio:not([controls]){display:none;height:0}\n[hidden],template{display:none}\na{background-color:transparent}\na:active,a:hover{outline:0}\nabbr[title]{border-bottom:1px dotted}\nb,strong{font-weight:bold}\ndfn{font-style:italic}\nh1{font-size:2em;margin:.67em 0}\nmark{background:#ff0;color:#000}\nsmall{font-size:80%}\nsub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}\nsup{top:-0.5em}\nsub{bottom:-0.25em}\nimg{border:0}\nsvg:not(:root){overflow:hidden}\nfigure{margin:1em 40px}\nhr{box-sizing:content-box;height:0}\npre{overflow:auto}\ncode,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}\nbutton,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}\nbutton{overflow:visible}\nbutton,select{text-transform:none}\nbutton,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}\nbutton[disabled],html input[disabled]{cursor:default}\nbutton::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}\ninput{line-height:normal}\ninput[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}\ninput[type=\"number\"]::-webkit-inner-spin-button,input[type=\"number\"]::-webkit-outer-spin-button{height:auto}\ninput[type=\"search\"]{-webkit-appearance:textfield;box-sizing:content-box}\ninput[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}\nfieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}\nlegend{border:0;padding:0}\ntextarea{overflow:auto}\noptgroup{font-weight:bold}\ntable{border-collapse:collapse;border-spacing:0}\ntd,th{padding:0}\n", ""]);

// exports


/***/ }),
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PaintEditor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScratchPaintReducer", function() { return ScratchPaintReducer; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

let realScratchPaint;
const getRealScratchPaint = () => {
  if (!realScratchPaint) {
    realScratchPaint = __webpack_require__(1818);
  }
  return realScratchPaint;
};
const PaintEditor = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(getRealScratchPaint().default, props);
let hasSetupReducer = false;
const ScratchPaintReducer = (state, action) => {
  if (!hasSetupReducer && action.type === 'scratch-gui/navigation/ACTIVATE_TAB' && action.activeTabIndex === 1) {
    hasSetupReducer = true;
  }
  if (hasSetupReducer) {
    return getRealScratchPaint().ScratchPaintReducer(state, action);
  }
  return {};
};


/***/ }),
/* 446 */,
/* 447 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_bindall__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
/* harmony import */ var scratch_vm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12);
/* harmony import */ var scratch_vm__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(scratch_vm__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _reducers_menus__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39);
/* harmony import */ var _reducers_modals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(21);
/* harmony import */ var _reducers_project_state__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(11);
/* harmony import */ var _reducers_tw__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(34);
/* harmony import */ var _lib_tw_restore_point_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(347);











const messages = Object(react_intl__WEBPACK_IMPORTED_MODULE_4__[/* defineMessages */ "d"])({
  error: {
    "id": "tw.restorePoint.loadFail",
    "defaultMessage": "Could not load restore point: {error}"
  },
  confirm: {
    "id": "tw.restorePoint.confirm",
    "defaultMessage": "The editor automatically records one restore point in case something goes wrong and you forget to save. You shouldn't rely on this and we can't guarantee it will recover your project. Try to load it?"
  }
});
class RestorePointLoader extends react__WEBPACK_IMPORTED_MODULE_2___default.a.Component {
  constructor(props) {
    super(props);
    lodash_bindall__WEBPACK_IMPORTED_MODULE_0___default()(this, ['loadRestorePoint']);
  }
  loadRestorePoint() {
    // eslint-disable-next-line no-alert
    if (!confirm(this.props.intl.formatMessage(messages.confirm))) {
      return;
    }
    this.props.onLoadingStarted();
    this.props.requestProjectUpload(this.props.loadingState);
    _lib_tw_restore_point_api__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"].load().then(arrayBuffer => this.props.vm.loadProject(arrayBuffer)).then(() => {
      this.props.onLoadingFinished(this.props.loadingState, true);
    }).catch(error => {
      this.props.onLoadingFinished(this.props.loadingState, false);
      // eslint-disable-next-line no-alert
      alert(this.props.intl.formatMessage(messages.error, {
        error
      }));
    });
  }
  render() {
    return this.props.children(this.props.className, this.loadRestorePoint);
  }
}
RestorePointLoader.propTypes = {
  intl: react_intl__WEBPACK_IMPORTED_MODULE_4__[/* intlShape */ "f"],
  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  loadingState: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  onLoadingStarted: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  onLoadingFinished: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  requestProjectUpload: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  vm: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.instanceOf(scratch_vm__WEBPACK_IMPORTED_MODULE_5___default.a)
};
const mapStateToProps = state => ({
  loadingState: state.scratchGui.projectState.loadingState,
  vm: state.scratchGui.vm
});
const mapDispatchToProps = dispatch => ({
  onLoadingFinished: (loadingState, success) => {
    dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_8__[/* onLoadedProject */ "x"])(loadingState, false, success));
    dispatch(Object(_reducers_modals__WEBPACK_IMPORTED_MODULE_7__[/* closeLoadingProject */ "f"])());
    dispatch(Object(_reducers_menus__WEBPACK_IMPORTED_MODULE_6__[/* closeFileMenu */ "g"])());
    dispatch(Object(_reducers_tw__WEBPACK_IMPORTED_MODULE_9__["setFileHandle"])(null));
  },
  requestProjectUpload: loadingState => dispatch(Object(_reducers_project_state__WEBPACK_IMPORTED_MODULE_8__[/* requestProjectUpload */ "C"])(loadingState)),
  onLoadingStarted: () => dispatch(Object(_reducers_modals__WEBPACK_IMPORTED_MODULE_7__[/* openLoadingProject */ "v"])())
});
/* harmony default export */ __webpack_exports__["a"] = (Object(react_intl__WEBPACK_IMPORTED_MODULE_4__[/* injectIntl */ "e"])(Object(react_redux__WEBPACK_IMPORTED_MODULE_3__[/* connect */ "b"])(mapStateToProps, mapDispatchToProps)(RestorePointLoader)));

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/b433ee02a13fa2a12f7f7059f1f6729a.svg";

/***/ }),
/* 449 */,
/* 450 */,
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/63669ff0d79a6ba63aaef56433ec72c1.png";

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/84d61c4c190e1e08af23701627c51509.png";

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/0b6326bbeed3e789962d581f9991797b.png";

/***/ }),
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1643);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1654);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1674);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1680);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1682);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/b8f0b40efdf6eafc02c3f894a5941818.svg";

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1689);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1690);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/422b48c2206d5240a6717c92496ba21a.svg";

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1757);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1763);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1764);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/664d94e5cb8676c780c74c695f2e972c.svg";

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5dbf111a76a93a93613ec81c16dfc6d3.svg";

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1777);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/a80790c977586cc0595b5fe2f0bcb39a.svg";

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/33592a76d0d0fdaa4a32b2ea41db5e16.svg";

/***/ }),
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return guiReducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guiInitialState", function() { return guiInitialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guiMiddleware", function() { return guiMiddleware; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initEmbedded", function() { return initEmbedded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFullScreen", function() { return initFullScreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPlayer", function() { return initPlayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTelemetryModal", function() { return initTelemetryModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTutorialCard", function() { return initTutorialCard; });
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(42);
/* harmony import */ var _alerts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);
/* harmony import */ var _asset_drag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(281);
/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(75);
/* harmony import */ var _color_picker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(177);
/* harmony import */ var _connection_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(193);
/* harmony import */ var _custom_procedures__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(225);
/* harmony import */ var _block_drag__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(282);
/* harmony import */ var _editor_tab__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(43);
/* harmony import */ var _hovered_target__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(142);
/* harmony import */ var _menus__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(39);
/* harmony import */ var _mic_indicator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(283);
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(21);
/* harmony import */ var _mode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(73);
/* harmony import */ var _monitors__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(284);
/* harmony import */ var _monitor_layout__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(119);
/* harmony import */ var _project_changed__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(93);
/* harmony import */ var _project_state__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(11);
/* harmony import */ var _project_title__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(94);
/* harmony import */ var _fonts_loaded__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(285);
/* harmony import */ var _restore_deletion__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(115);
/* harmony import */ var _stage_size__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(226);
/* harmony import */ var _targets__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(194);
/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(286);
/* harmony import */ var _toolbox__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(287);
/* harmony import */ var _tw__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(34);
/* harmony import */ var _custom_stage_size__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(118);
/* harmony import */ var _vm__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(335);
/* harmony import */ var _vm_status__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(131);
/* harmony import */ var _workspace_metrics__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(288);
/* harmony import */ var redux_throttle__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(744);
/* harmony import */ var redux_throttle__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(redux_throttle__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var _lib_libraries_decks_index_jsx__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(80);































__webpack_require__(1450);

const guiMiddleware = Object(redux__WEBPACK_IMPORTED_MODULE_0__[/* compose */ "d"])(Object(redux__WEBPACK_IMPORTED_MODULE_0__[/* applyMiddleware */ "a"])(redux_throttle__WEBPACK_IMPORTED_MODULE_30___default()(300, {
  leading: true,
  trailing: true
})));
const guiInitialState = {
  alerts: _alerts__WEBPACK_IMPORTED_MODULE_1__[/* alertsInitialState */ "a"],
  assetDrag: _asset_drag__WEBPACK_IMPORTED_MODULE_2__[/* assetDragInitialState */ "a"],
  blockDrag: _block_drag__WEBPACK_IMPORTED_MODULE_7__[/* blockDragInitialState */ "a"],
  cards: _cards__WEBPACK_IMPORTED_MODULE_3__[/* cardsInitialState */ "b"],
  colorPicker: _color_picker__WEBPACK_IMPORTED_MODULE_4__[/* colorPickerInitialState */ "b"],
  connectionModal: _connection_modal__WEBPACK_IMPORTED_MODULE_5__[/* connectionModalInitialState */ "a"],
  customStageSize: _custom_stage_size__WEBPACK_IMPORTED_MODULE_26__[/* customStageSizeInitialState */ "a"],
  customProcedures: _custom_procedures__WEBPACK_IMPORTED_MODULE_6__[/* customProceduresInitialState */ "b"],
  editorTab: _editor_tab__WEBPACK_IMPORTED_MODULE_8__[/* editorTabInitialState */ "f"],
  mode: _mode__WEBPACK_IMPORTED_MODULE_13__[/* modeInitialState */ "b"],
  hoveredTarget: _hovered_target__WEBPACK_IMPORTED_MODULE_9__[/* hoveredTargetInitialState */ "b"],
  stageSize: _stage_size__WEBPACK_IMPORTED_MODULE_21__[/* stageSizeInitialState */ "c"],
  menus: _menus__WEBPACK_IMPORTED_MODULE_10__[/* menuInitialState */ "p"],
  micIndicator: _mic_indicator__WEBPACK_IMPORTED_MODULE_11__[/* micIndicatorInitialState */ "b"],
  modals: _modals__WEBPACK_IMPORTED_MODULE_12__[/* modalsInitialState */ "o"],
  monitors: _monitors__WEBPACK_IMPORTED_MODULE_14__[/* monitorsInitialState */ "b"],
  monitorLayout: _monitor_layout__WEBPACK_IMPORTED_MODULE_15__[/* monitorLayoutInitialState */ "d"],
  projectChanged: _project_changed__WEBPACK_IMPORTED_MODULE_16__[/* projectChangedInitialState */ "b"],
  projectState: _project_state__WEBPACK_IMPORTED_MODULE_17__[/* projectStateInitialState */ "z"],
  projectTitle: _project_title__WEBPACK_IMPORTED_MODULE_18__[/* projectTitleInitialState */ "b"],
  fontsLoaded: _fonts_loaded__WEBPACK_IMPORTED_MODULE_19__[/* fontsLoadedInitialState */ "b"],
  restoreDeletion: _restore_deletion__WEBPACK_IMPORTED_MODULE_20__[/* restoreDeletionInitialState */ "b"],
  targets: _targets__WEBPACK_IMPORTED_MODULE_22__[/* targetsInitialState */ "c"],
  timeout: _timeout__WEBPACK_IMPORTED_MODULE_23__[/* timeoutInitialState */ "c"],
  toolbox: _toolbox__WEBPACK_IMPORTED_MODULE_24__[/* toolboxInitialState */ "b"],
  tw: _tw__WEBPACK_IMPORTED_MODULE_25__["twInitialState"],
  vm: _vm__WEBPACK_IMPORTED_MODULE_27__["vmInitialState"],
  vmStatus: _vm_status__WEBPACK_IMPORTED_MODULE_28__[/* vmStatusInitialState */ "e"],
  workspaceMetrics: _workspace_metrics__WEBPACK_IMPORTED_MODULE_29__[/* workspaceMetricsInitialState */ "c"]
};
const initPlayer = function initPlayer(currentState) {
  return Object.assign({}, currentState, {
    mode: {
      isEmbedded: false,
      isFullScreen: currentState.mode.isFullScreen,
      isPlayerOnly: true,
      // When initializing in player mode, make sure to reset
      // hasEverEnteredEditorMode
      hasEverEnteredEditor: false
    }
  });
};
const initFullScreen = function initFullScreen(currentState) {
  return Object.assign({}, currentState, {
    mode: {
      isEmbedded: false,
      isFullScreen: true,
      isPlayerOnly: currentState.mode.isPlayerOnly,
      hasEverEnteredEditor: currentState.mode.hasEverEnteredEditor
    }
  });
};
const initEmbedded = function initEmbedded(currentState) {
  return Object.assign({}, currentState, {
    mode: {
      isEmbedded: true,
      // tw: embed does not need isFullScreen anymore
      isFullScreen: false,
      isPlayerOnly: true,
      hasEverEnteredEditor: false
    }
  });
};
const initTutorialCard = function initTutorialCard(currentState, deckId) {
  return Object.assign({}, currentState, {
    cards: {
      visible: true,
      content: _lib_libraries_decks_index_jsx__WEBPACK_IMPORTED_MODULE_31__[/* default */ "a"],
      activeDeckId: deckId,
      expanded: true,
      step: 0,
      x: 0,
      y: 0,
      dragging: false
    }
  });
};
const initTelemetryModal = function initTelemetryModal(currentState) {
  return Object.assign({}, currentState, {
    modals: {
      telemetryModal: true // this key must match `MODAL_TELEMETRY` in modals.js
    }
  });
};

const guiReducer = Object(redux__WEBPACK_IMPORTED_MODULE_0__[/* combineReducers */ "c"])({
  alerts: _alerts__WEBPACK_IMPORTED_MODULE_1__[/* default */ "d"],
  assetDrag: _asset_drag__WEBPACK_IMPORTED_MODULE_2__[/* default */ "b"],
  blockDrag: _block_drag__WEBPACK_IMPORTED_MODULE_7__[/* default */ "b"],
  cards: _cards__WEBPACK_IMPORTED_MODULE_3__[/* default */ "d"],
  colorPicker: _color_picker__WEBPACK_IMPORTED_MODULE_4__[/* default */ "d"],
  connectionModal: _connection_modal__WEBPACK_IMPORTED_MODULE_5__[/* default */ "b"],
  customStageSize: _custom_stage_size__WEBPACK_IMPORTED_MODULE_26__[/* default */ "b"],
  customProcedures: _custom_procedures__WEBPACK_IMPORTED_MODULE_6__[/* default */ "d"],
  editorTab: _editor_tab__WEBPACK_IMPORTED_MODULE_8__[/* default */ "e"],
  mode: _mode__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"],
  hoveredTarget: _hovered_target__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"],
  stageSize: _stage_size__WEBPACK_IMPORTED_MODULE_21__[/* default */ "a"],
  menus: _menus__WEBPACK_IMPORTED_MODULE_10__[/* default */ "j"],
  micIndicator: _mic_indicator__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"],
  modals: _modals__WEBPACK_IMPORTED_MODULE_12__[/* default */ "n"],
  monitors: _monitors__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"],
  monitorLayout: _monitor_layout__WEBPACK_IMPORTED_MODULE_15__[/* default */ "b"],
  projectChanged: _project_changed__WEBPACK_IMPORTED_MODULE_16__[/* default */ "a"],
  projectState: _project_state__WEBPACK_IMPORTED_MODULE_17__[/* default */ "d"],
  projectTitle: _project_title__WEBPACK_IMPORTED_MODULE_18__[/* default */ "a"],
  fontsLoaded: _fonts_loaded__WEBPACK_IMPORTED_MODULE_19__[/* default */ "a"],
  restoreDeletion: _restore_deletion__WEBPACK_IMPORTED_MODULE_20__[/* default */ "a"],
  targets: _targets__WEBPACK_IMPORTED_MODULE_22__[/* default */ "a"],
  timeout: _timeout__WEBPACK_IMPORTED_MODULE_23__[/* default */ "a"],
  toolbox: _toolbox__WEBPACK_IMPORTED_MODULE_24__[/* default */ "a"],
  tw: _tw__WEBPACK_IMPORTED_MODULE_25__["default"],
  vm: _vm__WEBPACK_IMPORTED_MODULE_27__["default"],
  vmStatus: _vm_status__WEBPACK_IMPORTED_MODULE_28__[/* default */ "a"],
  workspaceMetrics: _workspace_metrics__WEBPACK_IMPORTED_MODULE_29__[/* default */ "a"]
});


/***/ }),
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */,
/* 525 */,
/* 526 */,
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */,
/* 531 */,
/* 532 */,
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */,
/* 541 */,
/* 542 */,
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */,
/* 551 */,
/* 552 */,
/* 553 */,
/* 554 */,
/* 555 */,
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */,
/* 562 */,
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return dataURItoBlob; });
/**
 * Utility to convert data URIs to blobs
 * Adapted from https://stackoverflow.com/questions/12168909/blob-from-dataurl
 * @param {string} dataURI the data uri to blobify
 * @return {Blob} a blob representing the data uri
 */
function dataURItoBlob(dataURI) {
  const byteString = atob(dataURI.split(',')[1]);
  const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
  const arrayBuffer = new ArrayBuffer(byteString.length);
  const uintArray = new Uint8Array(arrayBuffer);
  for (let i = 0; i < byteString.length; i++) {
    uintArray[i] = byteString.charCodeAt(i);
  }
  const blob = new Blob([arrayBuffer], {
    type: mimeString
  });
  return blob;
}

/***/ }),
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */,
/* 612 */,
/* 613 */,
/* 614 */,
/* 615 */,
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */,
/* 620 */,
/* 621 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */,
/* 630 */,
/* 631 */,
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */,
/* 636 */,
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */,
/* 646 */,
/* 647 */,
/* 648 */,
/* 649 */,
/* 650 */,
/* 651 */,
/* 652 */,
/* 653 */,
/* 654 */,
/* 655 */,
/* 656 */,
/* 657 */,
/* 658 */,
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */,
/* 667 */,
/* 668 */,
/* 669 */,
/* 670 */,
/* 671 */,
/* 672 */,
/* 673 */,
/* 674 */,
/* 675 */,
/* 676 */,
/* 677 */,
/* 678 */,
/* 679 */,
/* 680 */,
/* 681 */,
/* 682 */,
/* 683 */,
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */
/***/ (function(module) {

module.exports = JSON.parse("{\"extensions\":[{\"slug\":\"lab/text\",\"id\":\"text\",\"name\":\"Animated Text\",\"description\":\"An easy way to display and animate text. Compatible with Scratch Lab's Animated Text experiment.\",\"image\":\"images/lab/text.svg\"},{\"slug\":\"stretch\",\"id\":\"stretch\",\"name\":\"Stretch\",\"description\":\"Stretch sprites horizontally or vertically.\",\"image\":\"images/stretch.svg\",\"samples\":[\"Stretch\"]},{\"slug\":\"gamepad\",\"id\":\"Gamepad\",\"name\":\"Gamepad\",\"description\":\"Directly access gamepads instead of just mapping buttons to keys.\",\"image\":\"images/gamepad.svg\"},{\"slug\":\"box2d\",\"id\":\"griffpatch\",\"name\":\"Box2D Physics\",\"description\":\"Two dimensional physics.\",\"image\":\"images/box2d.svg\",\"original\":[{\"name\":\"griffpatch\",\"link\":\"https://scratch.mit.edu/users/griffpatch/\"}],\"docs\":true,\"samples\":[\"Box2D\"]},{\"slug\":\"files\",\"id\":\"files\",\"name\":\"Files\",\"description\":\"Read and download files.\",\"image\":\"images/files.svg\"},{\"slug\":\"pointerlock\",\"id\":\"pointerlock\",\"name\":\"Pointerlock\",\"description\":\"Adds blocks for mouse locking. Mouse x & y blocks will report the change since the previous frame while the pointer is locked. Replaces the pointerlock experiment.\",\"image\":\"images/pointerlock.png\",\"samples\":[\"Moving Around with Pointer Lock\"]},{\"slug\":\"cursor\",\"id\":\"MouseCursor\",\"name\":\"Mouse Cursor\",\"description\":\"Use custom cursors or hide the cursor. Also allows replacing the cursor with any costume image.\",\"image\":\"images/cursor.png\",\"samples\":[\"Tickle Me\"]},{\"slug\":\"runtime-options\",\"id\":\"runtimeoptions\",\"name\":\"Runtime Options\",\"description\":\"Get and modify turbo mode, framerate, interpolation, clone limit, stage size, and more.\",\"image\":\"images/runtime-options.svg\"},{\"slug\":\"fetch\",\"id\":\"fetch\",\"name\":\"Fetch\",\"description\":\"Make requests to the broader internet.\",\"image\":\"images/fetch.svg\"},{\"slug\":\"text\",\"id\":\"strings\",\"name\":\"Text\",\"description\":\"Manipulate characters and text.\",\"image\":\"images/text.svg\",\"original\":[{\"name\":\"CST1229\",\"link\":\"https://scratch.mit.edu/users/CST1229/\"}]},{\"slug\":\"local-storage\",\"id\":\"localstorage\",\"name\":\"Local Storage\",\"description\":\"Store data persistently. Like cookies, but better.\",\"image\":\"images/local-storage.svg\",\"docs\":true},{\"slug\":\"true-fantom/base\",\"id\":\"truefantombase\",\"name\":\"Base\",\"description\":\"Convert numbers between bases.\",\"image\":\"images/true-fantom/base.svg\",\"by\":[{\"name\":\"TrueFantom\",\"link\":\"https://scratch.mit.edu/users/TrueFantom/\"}]},{\"slug\":\"bitwise\",\"id\":\"Bitwise\",\"name\":\"Bitwise\",\"description\":\"Blocks that operate on the binary representation of numbers in computers.\",\"image\":\"images/bitwise.svg\",\"by\":[{\"name\":\"TrueFantom\",\"link\":\"https://scratch.mit.edu/users/TrueFantom/\"}],\"docs\":true},{\"slug\":\"Skyhigh173/bigint\",\"id\":\"skyhigh173BigInt\",\"name\":\"BigInt\",\"description\":\"Math blocks that work on infinitely large integers (no decimals).\",\"image\":\"images/Skyhigh173/bigint.svg\",\"by\":[{\"name\":\"Skyhigh173\",\"link\":null}]},{\"slug\":\"utilities\",\"id\":\"utilities\",\"name\":\"Utilities\",\"description\":\"A bunch of interesting blocks.\",\"image\":\"images/utilities.svg\",\"original\":[{\"name\":\"Sheep_maker\",\"link\":\"https://scratch.mit.edu/users/Sheep_maker/\"}]},{\"slug\":\"sound\",\"id\":\"notSound\",\"name\":\"Sound\",\"description\":\"Play sounds from URLs.\",\"image\":\"images/sound.svg\"},{\"slug\":\"Lily/Video\",\"id\":\"lmsVideo\",\"name\":\"Video\",\"description\":\"Play videos from URLs.\",\"image\":\"images/Lily/Video.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"iframe\",\"id\":\"iframe\",\"name\":\"Iframe\",\"description\":\"Display webpages or HTML over the stage.\",\"image\":\"images/iframe.svg\"},{\"slug\":\"Xeltalliv/clippingblending\",\"id\":\"xeltallivclipblend\",\"name\":\"Clipping & Blending\",\"description\":\"Clipping outside of a specified rectangular area and additive color blending.\",\"image\":\"images/Xeltalliv/clippingblending.svg\",\"by\":[{\"name\":\"Vadik1\",\"link\":\"https://scratch.mit.edu/users/Vadik1/\"}]},{\"slug\":\"clipboard\",\"id\":\"clipboard\",\"name\":\"Clipboard\",\"description\":\"Read and write from the system clipboard.\",\"image\":\"images/clipboard.svg\"},{\"slug\":\"penplus\",\"id\":\"betterpen\",\"name\":\"Pen Plus\",\"description\":\"Advanced rendering capabilities.\",\"image\":\"images/penplus.svg\",\"by\":[{\"name\":\"ObviousAlexC\",\"link\":\"https://scratch.mit.edu/users/pinksheep2917/\"}]},{\"slug\":\"Lily/Skins\",\"id\":\"lmsSkins\",\"name\":\"Skins\",\"description\":\"Have your sprites render as other images or costumes.\",\"image\":\"images/Lily/Skins.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}],\"docs\":true},{\"slug\":\"obviousAlexC/SensingPlus\",\"id\":\"obviousalexsensing\",\"name\":\"Sensing Plus\",\"description\":\"An extension to the sensing category.\",\"image\":\"images/obviousAlexC/SensingPlus.svg\",\"by\":[{\"name\":\"ObviousAlexC\",\"link\":\"https://scratch.mit.edu/users/pinksheep2917/\"}]},{\"slug\":\"Lily/ClonesPlus\",\"id\":\"lmsclonesplus\",\"name\":\"Clones Plus\",\"description\":\"Expansion of Scratch's clone features.\",\"image\":\"images/Lily/ClonesPlus.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"Lily/LooksPlus\",\"id\":\"lmsLooksPlus\",\"name\":\"Looks Plus\",\"description\":\"Expands upon the looks category, allowing you to show/hide, get costume data and edit SVG skins on sprites.\",\"image\":\"images/Lily/LooksPlus.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"Lily/MoreEvents\",\"id\":\"lmsMoreEvents\",\"name\":\"More Events\",\"description\":\"Start your scripts in new ways.\",\"image\":\"images/Lily/MoreEvents.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"NexusKitten/moremotion\",\"id\":\"nkmoremotion\",\"name\":\"More Motion\",\"description\":\"More motion-related blocks.\",\"image\":\"images/NexusKitten/moremotion.svg\",\"by\":[{\"name\":\"NamelessCat\",\"link\":\"https://scratch.mit.edu/users/NamelessCat/\"}]},{\"slug\":\"CubesterYT/WindowControls\",\"id\":\"cubesterWindowControls\",\"name\":\"Window Controls\",\"description\":\"Move, resize, rename the window, enter fullscreen, get screen size, and more.\",\"image\":\"images/CubesterYT/WindowControls.svg\",\"by\":[{\"name\":\"CubesterYT\",\"link\":\"https://scratch.mit.edu/users/CubesterYT/\"}],\"original\":[{\"name\":\"BlueDome77\",\"link\":null}],\"docs\":true},{\"slug\":\"veggiecan/browserfullscreen\",\"id\":\"fullscreen0419\",\"name\":\"Browser Fullscreen\",\"description\":\"Enter and exit fullscreen mode.\",\"image\":\"images/veggiecan/browserfullscreen.png\",\"by\":[{\"name\":\"Veggiecan0419\",\"link\":null}]},{\"slug\":\"shreder95ua/resolution\",\"id\":\"shreder95resolution\",\"name\":\"Screen Resolution\",\"description\":\"Get the resolution of the primary screen.\",\"image\":\"images/shreder95ua/resolution.svg\",\"by\":[{\"name\":\"shreder95ua\",\"link\":\"https://scratch.mit.edu/users/shreder95ua/\"}]},{\"slug\":\"navigator\",\"id\":\"navigatorinfo\",\"name\":\"Navigator\",\"description\":\"Details about the user's browser and operating system.\",\"image\":\"images/navigator.svg\"},{\"slug\":\"battery\",\"id\":\"battery\",\"name\":\"Battery\",\"description\":\"Access information about the battery of phones or laptops. May not work on all devices and browsers.\",\"image\":\"images/battery.svg\"},{\"slug\":\"TheShovel/CustomStyles\",\"id\":\"shovelcss\",\"name\":\"Custom Styles\",\"description\":\"Customize the appearance of variable monitors and prompts in your project.\",\"image\":\"images/TheShovel/CustomStyles.svg\",\"by\":[{\"name\":\"TheShovel\",\"link\":null}]},{\"slug\":\"TheShovel/ColorPicker\",\"id\":\"shovelColorPicker\",\"name\":\"Color Picker\",\"description\":\"Access your system's color picker.\",\"image\":\"images/TheShovel/ColorPicker.svg\",\"by\":[{\"name\":\"TheShovel\",\"link\":null}]},{\"slug\":\"NexusKitten/controlcontrols\",\"id\":\"nkcontrols\",\"name\":\"Control Controls\",\"description\":\"Show and hide the project's controls.\",\"image\":\"images/NexusKitten/controlcontrols.svg\",\"by\":[{\"name\":\"NamelessCat\",\"link\":\"https://scratch.mit.edu/users/NexusKitten/\"}]},{\"slug\":\"mdwalters/notifications\",\"id\":\"mdwaltersnotifications\",\"name\":\"Notifications\",\"description\":\"Display notifications.\",\"image\":\"images/mdwalters/notifications.svg\"},{\"slug\":\"XeroName/Deltatime\",\"id\":\"dtbyxeroname\",\"name\":\"Deltatime\",\"description\":\"Precise delta timing blocks.\",\"image\":\"images/XeroName/Deltatime.svg\",\"by\":[{\"name\":\"XeroName\",\"link\":\"https://scratch.mit.edu/users/plant2014/\"}]},{\"slug\":\"ar\",\"id\":\"AR\",\"name\":\"Augmented Reality\",\"description\":\"Shows image from camera and performs motion tracking, allowing 3D projects to correctly overlay virtual objects on real world.\",\"image\":\"images/ar.svg\",\"by\":[{\"name\":\"Vadik1\",\"link\":\"https://scratch.mit.edu/users/Vadik1/\"}],\"docs\":true},{\"slug\":\"encoding\",\"id\":\"Encoding\",\"name\":\"Encoding\",\"description\":\"Encode and decode strings into their unicode numbers, base 64, or URLs.\",\"image\":\"images/encoding.svg\",\"by\":[{\"name\":\"-SIPC-\",\"link\":null}],\"samples\":[\"Base 64\"]},{\"slug\":\"Lily/SoundExpanded\",\"id\":\"lmsSoundExpanded\",\"name\":\"Sound Expanded\",\"description\":\"Adds more sound-related blocks.\",\"image\":\"images/Lily/SoundExpanded.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"Lily/TempVariables2\",\"id\":\"lmsTempVars2\",\"name\":\"Temporary Variables\",\"description\":\"Create disposable runtime or thread variables.\",\"image\":\"images/Lily/TempVariables2.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}],\"samples\":[\"Temporary Variables - Thread vs. Runtime\"]},{\"slug\":\"Lily/MoreTimers\",\"id\":\"lmsTimers\",\"name\":\"More Timers\",\"description\":\"Control several timers at once.\",\"image\":\"images/Lily/MoreTimers.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"clouddata-ping\",\"id\":\"clouddataping\",\"name\":\"Ping Cloud Data\",\"description\":\"Determine whether a cloud variable server is probably up.\",\"image\":\"images/clouddata-ping.svg\",\"original\":[{\"name\":\"TheShovel\",\"link\":null}]},{\"slug\":\"cloudlink\",\"id\":\"cloudlink\",\"name\":\"Cloudlink\",\"description\":\"Powerful WebSocket extension for Scratch 3.\",\"image\":\"images/cloudlink.svg\",\"by\":[{\"name\":\"MikeDEV\",\"link\":null}]},{\"slug\":\"true-fantom/network\",\"id\":\"truefantomnetwork\",\"name\":\"Network\",\"description\":\"Various blocks for interacting with the network.\",\"image\":\"images/true-fantom/network.svg\",\"by\":[{\"name\":\"TrueFantom\",\"link\":\"https://scratch.mit.edu/users/TrueFantom/\"}]},{\"slug\":\"true-fantom/math\",\"id\":\"truefantommath\",\"name\":\"Math\",\"description\":\"A lot of operators blocks, from exponentiation to trigonometric functions.\",\"image\":\"images/true-fantom/math.svg\",\"by\":[{\"name\":\"TrueFantom\",\"link\":\"https://scratch.mit.edu/users/TrueFantom/\"}]},{\"slug\":\"true-fantom/regexp\",\"id\":\"truefantomregexp\",\"name\":\"RegExp\",\"description\":\"Full interface for working with Regular Expressions.\",\"image\":\"images/true-fantom/regexp.svg\",\"by\":[{\"name\":\"TrueFantom\",\"link\":\"https://scratch.mit.edu/users/TrueFantom/\"}]},{\"slug\":\"true-fantom/couplers\",\"id\":\"truefantomcouplers\",\"name\":\"Couplers\",\"description\":\"A few adapter blocks.\",\"image\":\"images/true-fantom/couplers.svg\",\"by\":[{\"name\":\"TrueFantom\",\"link\":\"https://scratch.mit.edu/users/TrueFantom/\"}]},{\"slug\":\"Lily/AllMenus\",\"id\":\"lmsAllMenus\",\"name\":\"All Menus\",\"description\":\"Special category with every menu from every Scratch category and extensions.\",\"image\":\"images/Lily/AllMenus.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"Lily/HackedBlocks\",\"id\":\"lmsHackedBlocks\",\"name\":\"Hidden Block Collection\",\"description\":\"Various \\\"hacked blocks\\\" that work in Scratch but are not visible in the palette.\",\"image\":\"images/Lily/HackedBlocks.png\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"},{\"name\":\"pumpkinhasapatch\",\"link\":null}]},{\"slug\":\"Lily/Cast\",\"id\":\"lmsCast\",\"name\":\"Cast\",\"description\":\"Convert values between types.\",\"image\":\"images/Lily/Cast.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"-SIPC-/time\",\"id\":\"sipctime\",\"name\":\"Time\",\"description\":\"Blocks for interacting with unix timestamps and other date strings.\",\"image\":\"images/-SIPC-/time.svg\",\"by\":[{\"name\":\"-SIPC-\",\"link\":null}]},{\"slug\":\"-SIPC-/consoles\",\"id\":\"sipcconsole\",\"name\":\"Consoles\",\"description\":\"Blocks that interact the JavaScript console built in to your browser's developer tools.\",\"image\":\"images/-SIPC-/consoles.svg\",\"by\":[{\"name\":\"-SIPC-\",\"link\":null}]},{\"slug\":\"ZXMushroom63/searchApi\",\"id\":\"zxmushroom63searchparams\",\"name\":\"Search Params\",\"description\":\"Interact with URL search parameters: the part of the URL after a question mark.\",\"image\":\"images/ZXMushroom63/searchApi.svg\",\"by\":[{\"name\":\"ZXMushroom63\",\"link\":null}]},{\"slug\":\"TheShovel/ShovelUtils\",\"id\":\"ShovelUtils\",\"name\":\"ShovelUtils\",\"description\":\"A bunch of miscellaneous blocks.\",\"image\":\"images/TheShovel/ShovelUtils.png\",\"by\":[{\"name\":\"TheShovel\",\"link\":null}],\"docs\":true},{\"slug\":\"DNin/wake-lock\",\"id\":\"dninwakelock\",\"name\":\"Wake Lock\",\"description\":\"Prevent the computer from falling asleep.\",\"image\":\"images/DNin/wake-lock.svg\",\"by\":[{\"name\":\"D-ScratchNinja\",\"link\":\"https://scratch.mit.edu/users/D-ScratchNinja/\"}],\"docs\":true},{\"slug\":\"Skyhigh173/json\",\"id\":\"skyhigh173JSON\",\"name\":\"JSON\",\"description\":\"Handle JSON strings and arrays.\",\"image\":\"images/Skyhigh173/json.svg\",\"by\":[{\"name\":\"Skyhigh173\",\"link\":null}]},{\"slug\":\"cs2627883/numericalencoding\",\"id\":\"cs2627883NumericalEncoding\",\"name\":\"Numerical Encoding\",\"description\":\"Encode strings as numbers for cloud variables.\",\"image\":\"images/cs2627883/numericalencoding.svg\",\"by\":[{\"name\":\"cs2627883\",\"link\":\"https://scratch.mit.edu/users/cs2627883/\"}]},{\"slug\":\"DT/cameracontrols\",\"id\":\"DTcameracontrols\",\"name\":\"Camera Controls (Very Buggy)\",\"description\":\"Move the visible part of the stage.\",\"image\":\"images/DT/cameracontrols.svg\",\"by\":[{\"name\":\"DT\",\"link\":null}]},{\"slug\":\"TheShovel/CanvasEffects\",\"id\":\"theshovelcanvaseffects\",\"name\":\"Canvas Effects\",\"description\":\"Apply visual effects to the entire stage.\",\"image\":\"images/TheShovel/CanvasEffects.svg\",\"by\":[{\"name\":\"TheShovel\",\"link\":null}]},{\"slug\":\"Longboost/color_channels\",\"id\":\"lbdrawtest\",\"name\":\"RGB Channels\",\"description\":\"Only render or stamp certain RGB channels.\",\"image\":\"images/Longboost/color_channels.svg\",\"samples\":[\"Party Time\"]},{\"slug\":\"CST1229/zip\",\"id\":\"cst1229zip\",\"name\":\"Zip\",\"description\":\"Create and edit .zip format files, including .sb3 files.\",\"image\":\"images/CST1229/zip.svg\",\"by\":[{\"name\":\"CST1229\",\"link\":\"https://scratch.mit.edu/users/CST1229/\"}],\"docs\":true},{\"slug\":\"TheShovel/LZ-String\",\"id\":\"shovellzcompress\",\"name\":\"LZ Compress\",\"description\":\"Compress and decompress text using lz-string.\",\"image\":\"images/TheShovel/LZ-String.svg\"},{\"slug\":\"0832/rxFS2\",\"id\":\"0832rxfs2\",\"name\":\"rxFS\",\"description\":\"Blocks for interacting with a virtual in-memory filesystem.\",\"image\":\"images/0832/rxFS2.svg\",\"by\":[{\"name\":\"0832\",\"link\":null}]},{\"slug\":\"NexusKitten/sgrab\",\"id\":\"nexuskittensgrab\",\"name\":\"S-Grab\",\"description\":\"Get information about Scratch projects and Scratch users.\",\"image\":\"images/NexusKitten/sgrab.svg\",\"by\":[{\"name\":\"NamelessCat\",\"link\":\"https://scratch.mit.edu/users/NamelessCat/\"}]},{\"slug\":\"NOname-awa/graphics2d\",\"id\":\"nonameawagraph\",\"name\":\"Graphics 2D\",\"description\":\"Blocks to compute lengths, angles, and areas in two dimensions.\",\"image\":\"images/NOname-awa/graphics2d.svg\",\"by\":[{\"name\":\"NOname-awa\",\"link\":null}]},{\"slug\":\"NOname-awa/more-comparisons\",\"id\":\"nonameawacomparisons\",\"name\":\"More Comparisons\",\"description\":\"More comparison blocks.\",\"image\":\"images/NOname-awa/more-comparisons.svg\",\"by\":[{\"name\":\"NOname-awa\",\"link\":null}]},{\"slug\":\"JeremyGamer13/tween\",\"id\":\"jeremygamerTweening\",\"name\":\"Tween\",\"description\":\"Easing methods for smooth animations.\",\"image\":\"images/JeremyGamer13/tween.svg\",\"by\":[{\"name\":\"JeremyGamer13\",\"link\":\"https://scratch.mit.edu/users/JeremyGamer13/\"}],\"samples\":[\"Tweening\"]},{\"slug\":\"rixxyx\",\"id\":\"RixxyX\",\"name\":\"RixxyX\",\"description\":\"Various utility blocks.\",\"image\":\"images/rixxyx.svg\",\"by\":[{\"name\":\"RixTheTyrunt\",\"link\":\"https://scratch.mit.edu/users/RixTheTyrunt/\"}]},{\"slug\":\"Lily/lmsutils\",\"id\":\"lmsutilsblocks\",\"name\":\"Lily's Toolbox\",\"description\":\"Previously called LMS Utilities.\",\"image\":\"images/Lily/lmsutils.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"qxsck/data-analysis\",\"id\":\"qxsckdataanalysis\",\"name\":\"Data Analysis\",\"description\":\"Blocks to compute means, medians, maximums, minimums, variances, and modes.\",\"image\":\"images/qxsck/data-analysis.svg\",\"by\":[{\"name\":\"qxsck\",\"link\":null}]},{\"slug\":\"qxsck/var-and-list\",\"id\":\"qxsckvarandlist\",\"name\":\"Variable and list\",\"description\":\"More blocks related to variables and lists.\",\"image\":\"images/qxsck/var-and-list.svg\",\"by\":[{\"name\":\"qxsck\",\"link\":null}]},{\"slug\":\"vercte/dictionaries\",\"id\":\"verctedictionaries\",\"name\":\"Dictionaries\",\"description\":\"Use the power of dictionaries in your project.\",\"image\":\"images/vercte/dictionaries.svg\",\"by\":[{\"name\":\"Vercte\",\"link\":\"https://scratch.mit.edu/users/lolecksdeehaha/\"}]},{\"slug\":\"godslayerakp/http\",\"id\":\"gsaHTTPRequests\",\"name\":\"HTTP\",\"description\":\"Comprehensive extension for interacting with external websites.\",\"image\":\"images/godslayerakp/http.svg\",\"by\":[{\"name\":\"RedMan13\",\"link\":\"https://scratch.mit.edu/users/RedMan13/\"}]},{\"slug\":\"Lily/CommentBlocks\",\"id\":\"lmscomments\",\"name\":\"Comment Blocks\",\"description\":\"Annotate your scripts.\",\"image\":\"images/Lily/CommentBlocks.svg\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}]},{\"slug\":\"veggiecan/LongmanDictionary\",\"id\":\"longvegdictionary\",\"name\":\"Longman Dictionary\",\"description\":\"Get the definitions of words from the Longman Dictionary in your projects.\",\"image\":\"images/veggiecan/LongmanDictionary.png\",\"by\":[{\"name\":\"veggiecan0419\",\"link\":null}]},{\"slug\":\"CubesterYT/TurboHook\",\"id\":\"cubesterTurboHook\",\"name\":\"TurboHook\",\"description\":\"Allows you to use webhooks.\",\"image\":\"images/CubesterYT/TurboHook.svg\",\"by\":[{\"name\":\"CubesterYT\",\"link\":\"https://scratch.mit.edu/users/CubesterYT/\"}],\"docs\":true},{\"slug\":\"Alestore/nfcwarp\",\"id\":\"alestorenfc\",\"name\":\"NFCWarp\",\"description\":\"Allows reading data from NFC (NDEF) devices. Only works in Chrome on Android.\",\"image\":\"images/Alestore/nfcwarp.svg\",\"by\":[{\"name\":\"Alestore Games\",\"link\":\"https://scratch.mit.edu/users/aleb2005/\"}]},{\"slug\":\"itchio\",\"id\":\"itch\",\"name\":\"itch.io\",\"description\":\"Blocks that interact with the itch.io website. Unofficial.\",\"image\":\"images/itchio.svg\",\"by\":[{\"name\":\"softed\",\"link\":null}]},{\"slug\":\"gamejolt\",\"id\":\"GameJoltAPI\",\"name\":\"GameJolt\",\"description\":\"Blocks that allow games to interact with the GameJolt API. Unofficial.\",\"image\":\"images/gamejolt.png\",\"by\":[{\"name\":\"softed\",\"link\":\"https://scratch.mit.edu/users/softed/\"}]},{\"slug\":\"obviousAlexC/newgroundsIO\",\"id\":\"NGIO\",\"name\":\"Newgrounds\",\"description\":\"Blocks that allow games to interact with the Newgrounds API. Unofficial.\",\"image\":\"images/obviousAlexC/newgroundsIO.svg\",\"by\":[{\"name\":\"ObviousAlexC\",\"link\":\"https://scratch.mit.edu/users/pinksheep2917/\"}]},{\"slug\":\"Lily/McUtils\",\"id\":\"lmsmcutils\",\"name\":\"McUtils\",\"description\":\"Helpful utilities for any fast food employee.\",\"image\":\"images/Lily/McUtils.png\",\"by\":[{\"name\":\"LilyMakesThings\",\"link\":\"https://scratch.mit.edu/users/LilyMakesThings/\"}],\"samples\":[\"Ask for the manager\"]}]}");

/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/7eea42371f5ccb84b4fc7d0ba7331ea3.png";

/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/504d73be1b361b4b9ca7f655ce085dc6.svg";

/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/7679e8aa3b5a6b745823e00a7b950065.png";

/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/800f6f1573677d59954e8d3164602287.svg";

/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/a03436c2c26c934fc0a7997065971874.png";

/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5e8eccd5a576638f029a1ed2deb4784b.svg";

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/d6f130fb79e78e4dd351fd930e742bcc.png";

/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c7ffd288176b935f835311512a224d4b.svg";

/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/b6162ffbfe48d4b6c67f0b469f1615ae.png";

/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f40501ed87782097b1a4eec8747eb84a.png";

/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c30d6a0e73cf38ad6ea7f5e4fe0428a3.png";

/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/d61429ad96a25ec2917ebc77d900aae0.svg";

/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/4b6ca5259f1271d510f081867e746847.png";

/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/84a9455c54ab68ad8dcf8b6f6465ae71.svg";

/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/6608d56b3dce2738b2b137569d305d3b.png";

/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8e5e28b23ba596614a60d319d9c64165.svg";

/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f011f09e649e804c4c0c8275a7d1ba5b.png";

/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5f7a79af3db62e0f5b7306ac0bd5ebf9.svg";

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/7130491bf33852e50503dcb4024c0279.svg";

/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/bf3ee9d7d91a231cde773f88f6799425.png";

/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/73773f78bf2bfc449218fbaee1922964.svg";

/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/d92e74438d72c2223692825df66e026e.svg";

/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5a70df361bb00fa62b9338d89c92f377.png";

/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/60fc7acc624571cfa9d250d7d5cff041.svg";

/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/4d2b4af5075d8b7bf7cd7bf046458045.svg";

/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f23563cc410e49c8ae0d9f274b86b0b2.svg";

/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8b8faec67fa9e541f5db9010ef721976.png";

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/392edcad67b5eca3386645c7f1060d34.png";

/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/1a919329c8e7b792bdefa15231e00da6.png";

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/68541eba31f89052ba01b875c9bd0160.png";

/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/329e120aef155da5de819aeeb16d8003.png";

/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8bd832b0310c206d2e1229ce8a2d373b.png";

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/686fc401d1ae4235424b73238c03b8e8.png";

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/da818b420955cdedca553ef0b28de092.png";

/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/df2d4d5df5d707ef1795cb76d83a829b.png";

/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c4e5b8cfc4cd7a297b4af373d28fe125.png";

/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/7be791344ab74a153a62a8ab79c182f4.png";

/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/ba43bca2715721d8cb5ddbdb38267da0.png";

/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/d0a53858e0c079c8b99e85a652b4d1d9.png";

/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/9555313027acc79c9237f021f42824b4.png";

/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/68b5f19cf4d80e2800c7c899b4b0e70f.png";

/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5c828aeb565b6c6e9418647ffea320da.png";

/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/26b1e170bcbe3baa98a12547fee1c0a1.png";

/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f75d8ce5e25cf33786315ed10a05e6fa.png";

/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/4a5c89b15b53387bcbe0ddcea306fab7.png";

/***/ }),
/* 740 */,
/* 741 */
/***/ (function(module, exports) {

module.exports = "<svg version=\"1.1\" width=\"2\" height=\"2\" viewBox=\"-1 -1 2 2\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <!-- Exported by Scratch - http://scratch.mit.edu/ -->\n</svg>"

/***/ }),
/* 742 */
/***/ (function(module, exports) {

module.exports = "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"108.07961\" height=\"110.03593\" viewBox=\"0,0,108.07961,110.03593\"><g transform=\"translate(-186.13594,-124.62009)\"><g data-paper-data=\"{&quot;isPaintingLayer&quot;:true}\" fill-rule=\"nonzero\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-dasharray=\"\" stroke-dashoffset=\"0\" style=\"mix-blend-mode: normal\"><g data-paper-data=\"{&quot;index&quot;:null}\" fill=\"#949494\" stroke=\"#000000\" stroke-width=\"2\"><path d=\"M204.16115,199.07059c0,0 -6.64286,-11.93942 -3.49459,-18.64127c1.13169,-2.40908 0.89596,-2.59479 2.69679,-6.62759c0.64865,-1.4526 1.4419,-2.94082 2.25333,-4.68416c2.17592,-4.67491 4.48262,-9.71385 4.48262,-9.71385c0,0 12.8362,2.13774 17.33941,2.13774c0.4348,0 21.53684,0.47359 21.97571,0.47078c10.74117,-0.06885 7.24001,-0.23325 7.24001,-0.23325c0,0 5.00242,-3.25087 6.6278,-2.9405c3.12122,0.596 6.09658,-2.66377 7.77886,2.9894c0.7907,2.65709 0.61267,2.95203 0.96648,6.59672c0.51648,5.32044 0.7566,13.44454 -1.04569,18.83477c-2.4256,7.25441 -7.20167,11.09865 -7.20167,11.09865z\" stroke-linecap=\"butt\"/><path d=\"M227.39986,198.12034c0,0 9.15072,-8.9704 8.79967,-18.34394c-0.36124,-4.29476 -5.1374,-13.07136 -5.1374,-13.07136l-4.03795,-4.98805l3.32537,4.27547c0,0 4.10165,-0.47068 6.34937,-0.72861c2.54497,-0.29205 8.13973,-0.93407 8.13973,-0.93407l-0.23753,-1.66268\" stroke-linecap=\"round\"/><path d=\"M256.71493,169.31783c0,0 3.11779,0.51281 5.78238,2.15324c3.24758,1.99934 6.16789,5.44311 6.30116,8.77418c0.13219,3.30408 -0.67646,8.08355 -3.45338,11.01242c-3.42658,3.61409 -9.1053,5.03108 -10.76089,4.83995c-4.48955,-0.51829 -8.18307,-8.6525 -8.46709,-10.60669c-0.78231,-5.3826 1.63974,-12.17764 2.58871,-13.45012c1.76938,-2.37258 8.00911,-2.72298 8.00911,-2.72298\" stroke-linecap=\"round\"/><path d=\"M206.59695,182.38177c0,-4.91169 3.12479,-7.68761 7.2084,-9.39624c1.2606,-0.52746 4.06037,-1.52997 5.49925,-1.52997c6.09996,0 10.09486,4.7358 10.09486,11.16373c0,6.42793 -5.65758,12.58889 -11.75755,12.58889c-6.09997,0 -11.04497,-6.3985 -11.04497,-12.82642z\" stroke-linecap=\"butt\"/></g><path d=\"M251.75308,202.93334l-1.18763,-15.20168c0,0 0.05333,-5.51103 1.7352,-6.53118c0.95481,-0.57916 4.04298,-2.93281 6.09158,-3.27646c2.5653,-0.43031 4.54981,1.89493 5.66353,2.33741c0.48628,0.1932 1.71137,4.38239 1.71137,4.38239c0,0 -0.13387,3.43598 -0.22249,5.71047c-0.13152,3.37576 -0.49009,12.57905 -0.49009,12.57905z\" data-paper-data=\"{&quot;index&quot;:null}\" fill=\"#949494\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"butt\"/><path d=\"M209.06943,201.41739l0.94234,-15.21886c0,0 0.82078,-5.44982 2.6284,-6.22565c1.0262,-0.44046 4.41222,-2.3408 6.48872,-2.39562c2.60023,-0.06864 4.24135,2.51046 5.28255,3.10383c0.45461,0.25908 1.08398,4.57811 1.08398,4.57811c0,0 -0.61137,3.3838 -1.01608,5.62375c-0.60066,3.32449 -2.23822,12.38802 -2.23822,12.38802z\" data-paper-data=\"{&quot;index&quot;:null}\" fill=\"#949494\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"butt\"/><g><path d=\"M205.28242,204.89647l3.15488,-5.03075l4.22583,2.6501l-3.15488,5.03075z\" data-paper-data=\"{&quot;index&quot;:null}\" fill=\"#000000\" stroke=\"none\" stroke-width=\"0\" stroke-linecap=\"butt\"/><path d=\"M214.31712,215.10739l-2.13774,4.513l-1.42516,4.513l-3.80042,2.37526l3.32537,0.71258l1.90021,1.90021l1.42516,0.9501l1.42516,2.13774l-3.80042,1.18763l-9.9761,-0.47505l-1.42516,-0.9501l-2.85031,-2.37526l-0.23753,-9.73857l7.36331,-7.83837z\" fill=\"#949494\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"round\"/><path d=\"M203.86596,211.06945l-0.47505,-4.513l2.37526,-2.13774h3.56289l3.32537,3.80042l2.37526,4.98805l-0.71258,1.90021z\" fill=\"#242424\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"round\"/><path d=\"M211.70433,207.50656l0.23753,2.61279l-3.56289,3.08784\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"round\"/><path d=\"M200.77566,232.95366c0,0 -3.92696,-5.47951 -4.08977,-6.61339c-0.22225,-1.54792 0.2115,-5.15825 0.2115,-5.15825c0,0 3.48362,-4.38078 5.0501,-5.90844c1.09318,-1.06609 3.45076,-2.38177 3.45076,-2.38177l7.36026,2.63241l-2.56639,7.74899l-4.99894,3.51524z\" fill=\"#6e0000\" stroke=\"none\" stroke-width=\"NaN\" stroke-linecap=\"butt\"/><path d=\"M201.0151,214.69752l4.99187,-2.07857l7.06851,2.779l-1.36687,2.82857z\" fill=\"#e30000\" stroke=\"none\" stroke-width=\"NaN\" stroke-linecap=\"butt\"/><path d=\"M210.6758,233.07814l-11.25551,-1.28042l-1.125,-5.625l7.32322,0.03095l3.06964,1.34575l3.39558,0.69924l0.91506,1.00548l1.29651,2.41859z\" fill=\"#e30000\" stroke=\"none\" stroke-width=\"0\" stroke-linecap=\"butt\"/></g><g><path d=\"M263.9867,209.08468l-3.15488,-5.03075l4.22583,-2.6501l3.15488,5.03075z\" fill=\"#000000\" stroke=\"none\" stroke-width=\"0\" stroke-linecap=\"butt\"/><path d=\"M285.53927,229.80727c0,0 0.07825,1.26575 -0.9562,1.3386c-2.71067,0.1909 -15.90816,-0.15097 -15.90816,-0.15097c0,0 -2.92101,-4.24242 -4.49322,-6.52587c-1.73675,-2.52242 -5.48288,-7.96323 -5.48288,-7.96323c0,0 7.01669,-2.18114 9.74102,-3.31952c1.05692,-0.44164 8.0137,8.73896 8.80524,8.70022c0.82275,-0.04027 -1.60082,2.84679 -1.52667,3.65287c0.08371,0.91014 2.63353,-0.2451 3.17013,-0.2451c1.5119,0 4.27547,0.47505 4.27547,0.47505l2.37526,4.03795z\" fill=\"#949494\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"butt\"/><path d=\"M257.03612,215.55569l5.70063,-8.55094l2.9246,-0.58112l2.44228,0.83612l1.52138,2.35779l-0.23753,3.32537z\" fill=\"#242424\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"butt\"/><path d=\"M263.92438,214.13053l-1.90021,-0.9501l-0.71258,-2.13774\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"round\"/><path d=\"M273.90047,230.63861l1.90021,-5.70063\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2.5\" stroke-linecap=\"round\"/><path d=\"M269.47037,231.31425c0,0 -1.49804,-3.29988 -2.7312,-4.84852c-1.87773,-2.3581 -6.77205,-8.92312 -6.77205,-8.92312l9.12586,-4.54021l1.36026,3.00741l5.18466,6.38923z\" fill=\"#6e0000\" stroke=\"none\" stroke-width=\"NaN\" stroke-linecap=\"butt\"/><path d=\"M262.45981,220.55811l-2.25813,-3.20357l8.94351,-3.971l1.38313,3.20357z\" fill=\"#e30000\" stroke=\"none\" stroke-width=\"NaN\" stroke-linecap=\"butt\"/><path d=\"M269.74001,230.53331l3.75,-10.25l2.25,2l0.19822,4.28095l3.06964,-0.27925l3.39558,0.69924l0.91506,1.00548l1.2965,2.41859z\" fill=\"#e30000\" stroke=\"none\" stroke-width=\"0\" stroke-linecap=\"butt\"/></g><g data-paper-data=\"{&quot;index&quot;:null}\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\"><path d=\"M187.37347,155.05599c0,0 9.8184,-0.36242 15.18081,1.85015c2.30639,0.95163 4.85845,2.69326 5.58793,4.05c0.84697,1.57526 -0.34964,2.71436 -0.73406,2.79699c-2.59296,0.55736 -7.71539,-0.49528 -9.77452,-1.34734c-3.60936,-1.49353 -10.49769,-7.34981 -10.49769,-7.34981\" fill=\"#d8d8d8\"/><path d=\"M204.47533,157.66876l-1.66268,5.93816\" fill=\"none\"/></g><path d=\"M263.60216,168.89203c-3.81575,-2.46488 -5.47012,-7.49986 -3.69514,-11.24596c1.77499,-3.7461 6.30718,-4.78473 10.12293,-2.31986c3.81575,2.46488 5.47012,7.49986 3.69514,11.24596c-1.77499,3.7461 -6.30718,4.78473 -10.12293,2.31986z\" fill=\"none\" stroke=\"#b90000\" stroke-width=\"2.5\" stroke-linecap=\"butt\"/><g><g stroke=\"#000000\" stroke-width=\"2.5\"><path d=\"M261.48887,158.64721c0,0 0.38572,-1.48831 0.02088,-2.61271c-0.32634,-1.00569 -2.10731,-3.81738 -2.10731,-3.81738c0,0 -4.80181,-3.4026 -4.45048,-6.75239c0.03988,-0.38025 1.55492,-8.65615 6.39215,-13.30662c3.45744,-3.32395 10.46163,-3.61916 11.36288,-3.24656c0.69665,0.28802 5.09114,0.76773 9.14907,2.61307c5.71877,2.6006 11.008,6.50669 11.008,6.50669l-2.11548,13.60073l-20.88773,-0.2815l0.65373,7.36877z\" fill=\"#949494\" stroke-linecap=\"butt\"/><path d=\"M291.99943,145.35156l-13.04265,-2.71708l-3.29869,-3.35183l-3.24556,-10.00235l11.13491,3.65197l8.74834,5.05811z\" fill=\"#000000\" stroke-linecap=\"round\"/><path d=\"M276.35737,140.95097l-1.66263,-0.01328\" fill=\"none\" stroke-linecap=\"round\"/><path d=\"M273.72568,143.3053l2.37329,0.2565\" fill=\"none\" stroke-linecap=\"round\"/><path d=\"M274.41736,145.92371l-1.42322,-0.24891\" fill=\"none\" stroke-linecap=\"round\"/><path d=\"M289.09531,151.61574c0,0 -12.48808,-0.49576 -18.92009,0.01613c-1.58255,0.12595 -0.22818,1.97755 -1.21403,1.98057c-8.73479,0.02681 -9.62276,-2.02785 -10.42246,-3.02569c-1.98624,-2.47836 -4.15225,-5.78591 -4.04059,-6.36903c0.14359,-0.74982 1.88895,-2.49851 1.88895,-2.49851l3.91187,1.56639l5.44774,1.9438l5.69096,1.23314l9.97388,0.31723l8.04147,4.33986\" fill=\"#373737\" stroke-linecap=\"round\"/><path d=\"M288.74291,153.92669l-0.96905,2.36759l-12.35097,-0.09868l-2.60891,-0.49591l-0.93109,-2.38278l0.49022,-1.89635l1.19898,-1.41563l1.42132,0.48642l1.17621,1.4346l0.94058,1.19518z\" fill=\"#000000\" stroke-linecap=\"round\"/><path d=\"M265.53808,157.25438l0.2584,-2.61081\" fill=\"none\" stroke-linecap=\"round\"/><path d=\"M270.30743,154.91714l-8.54497,-0.78088\" fill=\"none\" stroke-linecap=\"round\"/><path d=\"M265.02289,132.54675l-1.20467,2.12818l0.45795,2.14147l-3.54759,-1.92862l0.27358,-4.51096l3.35563,-3.77373l1.40993,1.91154l0.21095,3.32716z\" fill=\"#151515\" stroke-linecap=\"round\"/><path d=\"M265.70602,136.23593l-3.32906,0.44847l-1.63606,-3.33855l0.96146,-1.41752l2.39226,-2.11869l1.90205,-0.22234l1.18,0.95956l1.1781,1.19708l0.45416,2.6165z\" fill=\"none\" stroke-linecap=\"round\"/></g><g fill=\"#54ff00\" stroke=\"none\" stroke-linecap=\"butt\"><path d=\"M286.68295,135.36055c2.56247,0.77602 3.1525,2.28665 2.72769,4.09277c-0.42481,1.80612 -2.33479,2.90204 -4.26607,2.44778c-1.93127,-0.45425 -3.1525,-2.28665 -2.72769,-4.09277c0.42481,-1.80612 1.62658,-3.24712 4.26607,-2.44778z\" stroke-width=\"0\"/><path d=\"M277.06215,137.38686c-0.99474,0.10249 -1.09723,-0.89225 -1.09723,-0.89225l-0.02355,-1.38205c0.61786,-1.50625 1.17388,-2.6614 2.3942,-3.75701c0,0 0.75269,-0.65837 1.41106,0.09433c0.65837,0.75269 -0.09433,1.41106 -0.09433,1.41106c-1.00404,0.8472 -1.37034,1.81004 -1.85999,3.00922l0.16206,0.41949c0,0 0.10249,0.99474 -0.89225,1.09723z\" stroke-width=\"0.5\"/></g></g></g></g></svg>"

/***/ }),
/* 743 */
/***/ (function(module, exports) {

module.exports = "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"415.33334\" height=\"28\" viewBox=\"0,0,415.33334,28\"><g transform=\"translate(-32.58333,-164.25)\"><g data-paper-data=\"{&quot;isPaintingLayer&quot;:true}\" fill=\"#9966ff\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-dasharray=\"\" stroke-dashoffset=\"0\" font-family=\"Sans Serif\" font-weight=\"normal\" font-size=\"40\" text-anchor=\"start\" style=\"mix-blend-mode: normal\"><text transform=\"translate(32.83333,186) scale(0.5,0.5)\" font-size=\"40\" xml:space=\"preserve\" fill=\"#9966ff\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-dasharray=\"\" stroke-dashoffset=\"0\" font-family=\"Sans Serif\" font-weight=\"normal\" text-anchor=\"start\" style=\"mix-blend-mode: normal\"><tspan x=\"0\" dy=\"0\">The project you tried to load does not exist.</tspan></text></g></g></svg>"

/***/ }),
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */,
/* 769 */,
/* 770 */,
/* 771 */,
/* 772 */,
/* 773 */,
/* 774 */,
/* 775 */,
/* 776 */,
/* 777 */,
/* 778 */,
/* 779 */,
/* 780 */,
/* 781 */,
/* 782 */,
/* 783 */,
/* 784 */,
/* 785 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1489);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 786 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/dd98971c2c185caf86144b6b5234d0fa.svg";

/***/ }),
/* 787 */,
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/ee54d776d2cda9a3c537ac7e8f144037.svg";

/***/ }),
/* 789 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/4b6100c9f591be6470cdfd4697de0b54.svg";

/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/df6a71244d4727d19c5a78d71677d2a6.svg";

/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/a4d91e3b83e7cbccaf4a4e2322b873f5.svg";

/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/dfe35552790fb5ff38c78a43f5e62f30.svg";

/***/ }),
/* 793 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/1bb0adb555e07593962e9fc28ec7566d.svg";

/***/ }),
/* 794 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1646);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 795 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5e460dab4dfda0fe34f93d3faf95b778.svg";

/***/ }),
/* 796 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c8481ea8e104d4d2bb6b340e0c90da26.svg";

/***/ }),
/* 797 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1652);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/10811a978de201353d564df7ba1ddb58.svg";

/***/ }),
/* 799 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/2a70b21aaaed0619bdfcdec91db1ebe8.svg";

/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8beb9da10f72d02b48baf0b24ac72449.svg";

/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/a5787bb7364d8131ed49a8f53037d7f4.svg";

/***/ }),
/* 802 */,
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/44e4859e354c81d66c73f741df2e5ec7.svg";

/***/ }),
/* 804 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c9528ee4be1a12380a6c9caf73bd99e9.svg";

/***/ }),
/* 805 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/9cc1e7a12b63848899055ddc982ab2ce.svg";

/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/57593d3aac258d2c0abf75a0b8ecbdaa.svg";

/***/ }),
/* 807 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/143a9041098d0e0724ed22c89e6558cc.svg";

/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/0dd03e5061d2865c0e8ac50cc75e9982.svg";

/***/ }),
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8ea23814ef4f6dc9f86859a028377a3a.svg";

/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/38a70367a21e2f1fb15aa59b7d367450.svg";

/***/ }),
/* 811 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/9ddae4f6c1aeaf0784007203d9d4ac9c.svg";

/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c80022cd3424a0dc9635de89433cf08e.svg";

/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/e214dc66bba3d014deaa931a2be33f53.svg";

/***/ }),
/* 814 */
/***/ (function(module, exports) {

module.exports = "/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAPAAA/+4AJkFkb2JlAGTAAAAAAQMAFQQDBgoNAAACZgAAAwoAAAPwAAAE/P/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8IAEQgAQABAAwERAAIRAQMRAf/EALAAAQADAQEBAAAAAAAAAAAAAAAEBQcGAgMBAQEBAQAAAAAAAAAAAAAAAAABAgMQAAEEAgICAwAAAAAAAAAAAAMBAgQFIBEQQDASYCQGEQACAQICBggHAAAAAAAAAAABAgMAESFBEDFRcRIEIDBhoSIyQhNAgZGxwWJTEgEAAAAAAAAAAAAAAAAAAABgEwEAAQIGAgIDAQAAAAAAAAABEQAhECAxQVFhQIEwcZGhsfD/2gAMAwEAAhEDEQAAAdUAAAAAIVk2UACFZz2pwvSa1x19ordLrNGVdsVNDvedjlXppXLQy7ril0He87GKzTSuWgKazOOudU5a9RWaXuaAAAAAAAB//9oACAEBAAEFAvGWbFE/E82KBZt8JGuc5zoa/SOdogV1myZzaKq2HE8b30lAX3ZW7BbcW4iMncTyuZSfnxeqV2z2/M2rjyWHjGAWMPUM8dpY9bWJD6X/2gAIAQIAAQUC6Ws0wXBMFx3hvpf/2gAIAQMAAQUC+Af/2gAIAQICBj8CAf/aAAgBAwIGPwIB/9oACAEBAQY/Aur9uSUK5y6VpZApOVFeV8Tn15D60WY3J1moCf5r9qabWFF8KYcPA6+m98O7TNfbphKnBFjLDaLVNyz4pa4G/A0I/wBmjOmQsMHN1OmEAedUUn5XqbmWwS3CD3mhJtZpD0DgElycfmvakXxZdu6oo5BqRQyndTw+UMLYZUzFuN2wv2fBf//aAAgBAQMBPyH4w+6y888e8wK/Yd2OYJamasJkfQXL6ikQPlLqtEOQX1+tJ6/x3VtNruFuMYphTp9AYwnOihP0s1zyk4sfdqu5Y7GJP6GLvTiVE2cZP3XRH9ointmkOrvq1QQW6QXf65Is2rxfoalPUHFc4PKtckUTcIiUEb+UburVx0sIgbb6+F//2gAIAQIDAT8h+OM0UYHBIx0YmuF0zDXC6ZCk04MvC//aAAgBAwMBPyHwpzuQyOQyxkjwv//aAAwDAQACEQMRAAAQkkkkkhkklIrEhkPEnkPEk6Pkkkkkkkkk/9oACAEBAwE/EPjj8Ql0GhYJP6UIgjI3EylYiQdlZgdxTFjQf2wHCn2aU4Yj6glVdVokAKqA31aJdngG0sDpd3oXX8WyOINm3HOLiiIlvAAejFrIbqFisawfSkBz6gD8RlZ90xKenkOY72Ng0hMc/A2cVHA50nk/5TSE7IQn4yF33UxR3IRz6DFBESRsjSwYJBTwiTd34oYrYAQuoCx6/tIGo6gKAkslIWGBBsIIQO1OlGBFumAquhfo8L//2gAIAQIDAT8Q+MTmE6Vy4amgljJtDF30N6vxK2JvpbVbkIUBJpXoYZ8Of//aAAgBAwMBPxD46zLTgNKWhnHVi6YDXHVi6YDXIypKKSiHhf/Z"

/***/ }),
/* 815 */,
/* 816 */,
/* 817 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/385aa4b73a425883b4f9e91501a52299.svg";

/***/ }),
/* 818 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/63e5827c1506216bd7c9927a4e5eb558.svg";

/***/ }),
/* 819 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/53ef96392ac2a92361884783808a02c9.svg";

/***/ }),
/* 820 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/9cfdd378e4cc977fe663ca932e530ec6.svg";

/***/ }),
/* 821 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/35c6867250ec4f430624bc9e2e7072d7.svg";

/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/993a0700d8a0972d309307b0a4688ed7.svg";

/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/21988681fa28c8ce37982ca26463a6f5.svg";

/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/26255153f92ea41df149a58d3c3fe2cf.svg";

/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/d889a872f3b0985b28fa872764172ef1.svg";

/***/ }),
/* 826 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/b5257afbe4bcf7953029ddb8f18b24fe.svg";

/***/ }),
/* 827 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/481fbac64b59203d7ddffa564a7537d8.svg";

/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f231056019ffe328e58432393f6102c5.svg";

/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/82605c2ddff77109d8fafc0e4cf997ed.svg";

/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8279ce395d0333b880b8be6d243fd111.svg";

/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/424371873bc8df88d6a305d8727157ab.svg";

/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/b2c44c738c9cbc1a99cd6edfd0c2b85b.svg";

/***/ }),
/* 833 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/3547fa1f2678a483a19f46852f36b426.svg";

/***/ }),
/* 834 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/199f58b4a80fa56c5d8e032d6da5e9c2.svg";

/***/ }),
/* 835 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/fb3f9fa9be421f5153cd0223c3b0cb87.svg";

/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/fe5afd6776eac0f7724b132a9ff5057d.svg";

/***/ }),
/* 837 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f22d5ea0ef6a46b2a4a174fed722c396.svg";

/***/ }),
/* 838 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/42428924171999cebe3efd5e70b7bc53.svg";

/***/ }),
/* 839 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/e21225ab4b675bc61eed30cfb510c288.svg";

/***/ }),
/* 840 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/193be3815628fb3d90d4d636a0e97f3a.svg";

/***/ }),
/* 841 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/516274ebe91f61197ef4c62d1dc2024a.svg";

/***/ }),
/* 842 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5306d1506a03db52b6f918de4c809ca7.svg";

/***/ }),
/* 843 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f0f9f818bc9fff5dc6f30f34cb1cc156.svg";

/***/ }),
/* 844 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/7bd7487b704797cb5ab3cb441486ea70.svg";

/***/ }),
/* 845 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/582b9f12ce60392a8ef736c5dfabb4ce.svg";

/***/ }),
/* 846 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/36fcc7dbca20720abcab01e49d4955f9.svg";

/***/ }),
/* 847 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f2457825850317e66ef2128504613c30.svg";

/***/ }),
/* 848 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1693);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 849 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/2d96b207399b06aa8fd389bb44cfbdb4.svg";

/***/ }),
/* 850 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/2e2faaf5753ac5ae1df6153ea2daf683.svg";

/***/ }),
/* 851 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/dd55f4c6c20f5d25e520b6f5bfb090c5.svg";

/***/ }),
/* 852 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1695);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/27f90bfa982840e56c3ad207561193fa.svg";

/***/ }),
/* 858 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1759);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 859 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/4da38973d5ffd15c54e80894d430288c.svg";

/***/ }),
/* 860 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/bbbd98ae6a34eac772e34a57aaa5f977.svg";

/***/ }),
/* 861 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f9dce53613d5f85b311ce9f84423c08b.svg";

/***/ }),
/* 862 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/ce5820b006d753e4133f46ae776f4d96.svg";

/***/ }),
/* 863 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/97926439955086f8ee4aabbd81580f17.png";

/***/ }),
/* 864 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/3e83d9d800459175308f0b45b117af16.png";

/***/ }),
/* 865 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1766);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 866 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1768);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 867 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1769);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 868 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1772);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 869 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/f8ff5dbef05bc3337cd3660fb956cffa.svg";

/***/ }),
/* 870 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/1319094a51748798730f01d1dc0972ac.svg";

/***/ }),
/* 871 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/74546102be38f592d24b4330a16a8639.svg";

/***/ }),
/* 872 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8bcd9c00e30a0af9d832735651fd9643.svg";

/***/ }),
/* 873 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1778);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 874 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/89a5687599f173f2b910aa5fcd862b42.svg";

/***/ }),
/* 875 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/76121b7f4eff7d7ca0d49a45479d3f3f.svg";

/***/ }),
/* 876 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/04e28ba12fe914cf4f131dcb85ae82d6.svg";

/***/ }),
/* 877 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/a3e689235188ba10c5cfd75730cb88a7.svg";

/***/ }),
/* 878 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/71655cde34ae75f48cb8820abf4b31e7.svg";

/***/ }),
/* 879 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8b8f2d052b4092ec47ad66c30c8b1642.svg";

/***/ }),
/* 880 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/05e05756b592740a3670417b4df19ca9.svg";

/***/ }),
/* 881 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(1789);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 882 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5f4208a6b7257c456c018d57efc8a7e9.svg";

/***/ }),
/* 883 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/5f85a3e5a04dd3de4271589dac82d45b.svg";

/***/ }),
/* 884 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/afc646fe671f2f43cf0deb3f2247b8bf.svg";

/***/ }),
/* 885 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/2ede3b1977411d39f0cc8ba0a973e25c.svg";

/***/ }),
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */,
/* 890 */,
/* 891 */,
/* 892 */,
/* 893 */,
/* 894 */,
/* 895 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable */
if (false) {}

/***/ }),
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */,
/* 916 */,
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/85205e7413b43256aed44754890eaf38.png";

/***/ }),
/* 945 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/68d308f22a29949fa7a1ce9a74445851.png";

/***/ }),
/* 946 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/0294d390ec3c5a58f3701b3098646770.png";

/***/ }),
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */,
/* 985 */,
/* 986 */,
/* 987 */,
/* 988 */,
/* 989 */,
/* 990 */,
/* 991 */,
/* 992 */,
/* 993 */,
/* 994 */,
/* 995 */,
/* 996 */,
/* 997 */,
/* 998 */,
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/9ec3449723269a806ec6eaba0f8f6cef.ttf";

/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/8996930d8e83f63cc3341172205df460.otf";

/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/64bcfe1f13fce38e2ea26280157ff2ce.ttf";

/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/3682b35e452a7f4a5a61167d1632e24a.ttf";

/***/ }),
/* 1003 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/eb64e706eb7a3b324ba50d3279a980b1.ttf";

/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/87a3a62c0627e925b92d3ede2f62b04f.ttf";

/***/ }),
/* 1005 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/bbc0dd79717bfa338a199bb26cdd780b.ttf";

/***/ }),
/* 1006 */,
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */,
/* 1090 */,
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */,
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */,
/* 1113 */,
/* 1114 */,
/* 1115 */,
/* 1116 */,
/* 1117 */,
/* 1118 */,
/* 1119 */,
/* 1120 */,
/* 1121 */,
/* 1122 */,
/* 1123 */,
/* 1124 */,
/* 1125 */,
/* 1126 */,
/* 1127 */,
/* 1128 */,
/* 1129 */,
/* 1130 */,
/* 1131 */,
/* 1132 */,
/* 1133 */,
/* 1134 */,
/* 1135 */,
/* 1136 */,
/* 1137 */,
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./-SIPC-/consoles.js": 1157,
	"./-SIPC-/recording.js": 1158,
	"./-SIPC-/time.js": 1159,
	"./0832/rxFS.js": 1160,
	"./0832/rxFS2.js": 1161,
	"./Alestore/nfcwarp.js": 1162,
	"./CST1229/images.js": 1163,
	"./CST1229/zip.js": 1164,
	"./CubesterYT/TurboHook.js": 1165,
	"./CubesterYT/WindowControls.js": 1166,
	"./DNin/wake-lock.js": 1167,
	"./DT/cameracontrols.js": 1168,
	"./JeremyGamer13/tween.js": 1169,
	"./Lily/AllMenus.js": 1170,
	"./Lily/Cast.js": 1171,
	"./Lily/ClonesPlus.js": 1172,
	"./Lily/CommentBlocks.js": 1173,
	"./Lily/HackedBlocks.js": 1174,
	"./Lily/LooksPlus.js": 1175,
	"./Lily/McUtils.js": 1176,
	"./Lily/MoreEvents.js": 1177,
	"./Lily/MoreTimers.js": 1178,
	"./Lily/Skins.js": 1179,
	"./Lily/SoundExpanded.js": 1180,
	"./Lily/TempVariables.js": 1181,
	"./Lily/TempVariables2.js": 1182,
	"./Lily/Video.js": 1183,
	"./Lily/lmsutils.js": 1184,
	"./Longboost/color_channels.js": 1185,
	"./Medericoder/textcase.js": 1186,
	"./NOname-awa/cn-number.js": 1187,
	"./NOname-awa/global-coordinate.js": 1188,
	"./NOname-awa/graphics2d.js": 1189,
	"./NOname-awa/math-and-string.js": 1190,
	"./NOname-awa/more-comparisons.js": 1191,
	"./NOname-awa/regular-expression.js": 1192,
	"./NOname-awa/sort-unique-words.js": 1193,
	"./NexusKitten/controlcontrols.js": 1194,
	"./NexusKitten/moremotion.js": 1195,
	"./NexusKitten/sgrab.js": 1196,
	"./Skyhigh173/bigint.js": 1197,
	"./Skyhigh173/json.js": 1198,
	"./TheShovel/CanvasEffects.js": 1199,
	"./TheShovel/ColorPicker.js": 1200,
	"./TheShovel/CustomStyles.js": 1201,
	"./TheShovel/LZ-String.js": 1202,
	"./TheShovel/ShovelUtils.js": 1203,
	"./TheShovel/profanity.js": 1204,
	"./TheShovel/profanityAPI.js": 1205,
	"./WP-Studio01/text2speech.js": 1206,
	"./Xeltalliv/clippingblending.js": 1207,
	"./XeroName/Deltatime.js": 1208,
	"./ZXMushroom63/searchApi.js": 1209,
	"./ar.js": 1210,
	"./battery.js": 1211,
	"./bitwise.js": 1212,
	"./box2d.js": 1213,
	"./clipboard.js": 1214,
	"./clouddata-ping.js": 1215,
	"./cloudlink.js": 1216,
	"./codeGIO/ExtraUtilities.js": 1217,
	"./cs2627883/numericalencoding.js": 1218,
	"./cursor.js": 1219,
	"./docs-examples/unsandboxed/block-utility-examples.js": 1220,
	"./docs-examples/unsandboxed/broadcast-1.js": 1221,
	"./docs-examples/unsandboxed/broadcast-2.js": 1222,
	"./docs-examples/unsandboxed/broadcast-3.js": 1223,
	"./docs-examples/unsandboxed/broadcast-4.js": 1224,
	"./docs-examples/unsandboxed/broadcast-5.js": 1225,
	"./docs-examples/unsandboxed/every-second.js": 1226,
	"./docs-examples/unsandboxed/hello-world-unsandboxed.js": 1227,
	"./docs-examples/unsandboxed/turbo-mode.js": 1228,
	"./docs-examples/unsandboxed/when-key-pressed-restart.js": 1229,
	"./docs-examples/unsandboxed/when-key-pressed-stage.js": 1230,
	"./docs-examples/unsandboxed/when-key-pressed.js": 1231,
	"./docs-examples/unsandboxed/when-space-key-pressed.js": 1232,
	"./docs-examples/unsandboxed/when.js": 1233,
	"./encoding.js": 1234,
	"./fetch.js": 1235,
	"./files.js": 1236,
	"./gamejolt.js": 1237,
	"./gamepad.js": 1238,
	"./godslayerakp/http.js": 1239,
	"./iframe.js": 1240,
	"./itchio.js": 1241,
	"./lab/text.js": 1242,
	"./local-storage.js": 1243,
	"./mdwalters/notifications.js": 1244,
	"./navigator.js": 1245,
	"./obviousAlexC/SensingPlus.js": 1246,
	"./obviousAlexC/newgroundsIO.js": 1247,
	"./penplus.js": 1248,
	"./pointerlock.js": 1249,
	"./qxsck/data-analysis.js": 1250,
	"./qxsck/var-and-list.js": 1251,
	"./rixxyx.js": 1252,
	"./runtime-options.js": 1253,
	"./shreder95ua/resolution.js": 1254,
	"./sound.js": 1255,
	"./stretch.js": 1256,
	"./text.js": 1257,
	"./true-fantom/base.js": 1258,
	"./true-fantom/couplers.js": 1259,
	"./true-fantom/math.js": 1260,
	"./true-fantom/network-m.js": 1261,
	"./true-fantom/network.js": 1262,
	"./true-fantom/regexp.js": 1263,
	"./turboloader/audiostream.js": 1264,
	"./utilities.js": 1265,
	"./veggiecan/LongmanDictionary.js": 1266,
	"./veggiecan/browserfullscreen.js": 1267,
	"./vercte/dictionaries.js": 1268
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 1156;

/***/ }),
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */,
/* 1176 */,
/* 1177 */,
/* 1178 */,
/* 1179 */,
/* 1180 */,
/* 1181 */,
/* 1182 */,
/* 1183 */,
/* 1184 */,
/* 1185 */,
/* 1186 */,
/* 1187 */,
/* 1188 */,
/* 1189 */,
/* 1190 */,
/* 1191 */,
/* 1192 */,
/* 1193 */,
/* 1194 */,
/* 1195 */,
/* 1196 */,
/* 1197 */,
/* 1198 */,
/* 1199 */,
/* 1200 */,
/* 1201 */,
/* 1202 */,
/* 1203 */,
/* 1204 */,
/* 1205 */,
/* 1206 */,
/* 1207 */,
/* 1208 */,
/* 1209 */,
/* 1210 */,
/* 1211 */,
/* 1212 */,
/* 1213 */,
/* 1214 */,
/* 1215 */,
/* 1216 */,
/* 1217 */,
/* 1218 */,
/* 1219 */,
/* 1220 */,
/* 1221 */,
/* 1222 */,
/* 1223 */,
/* 1224 */,
/* 1225 */,
/* 1226 */,
/* 1227 */,
/* 1228 */,
/* 1229 */,
/* 1230 */,
/* 1231 */,
/* 1232 */,
/* 1233 */,
/* 1234 */,
/* 1235 */,
/* 1236 */,
/* 1237 */,
/* 1238 */,
/* 1239 */,
/* 1240 */,
/* 1241 */,
/* 1242 */,
/* 1243 */,
/* 1244 */,
/* 1245 */,
/* 1246 */,
/* 1247 */,
/* 1248 */,
/* 1249 */,
/* 1250 */,
/* 1251 */,
/* 1252 */,
/* 1253 */,
/* 1254 */,
/* 1255 */,
/* 1256 */,
/* 1257 */,
/* 1258 */,
/* 1259 */,
/* 1260 */,
/* 1261 */,
/* 1262 */,
/* 1263 */,
/* 1264 */,
/* 1265 */,
/* 1266 */,
/* 1267 */,
/* 1268 */,
/* 1269 */,
/* 1270 */,
/* 1271 */,
/* 1272 */,
/* 1273 */,
/* 1274 */,
/* 1275 */,
/* 1276 */,
/* 1277 */,
/* 1278 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 1279 */,
/* 1280 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 1281 */,
/* 1282 */,
/* 1283 */,
/* 1284 */,
/* 1285 */,
/* 1286 */,
/* 1287 */,
/* 1288 */,
/* 1289 */,
/* 1290 */,
/* 1291 */,
/* 1292 */,
/* 1293 */,
/* 1294 */,
/* 1295 */,
/* 1296 */,
/* 1297 */,
/* 1298 */,
/* 1299 */,
/* 1300 */,
/* 1301 */,
/* 1302 */,
/* 1303 */,
/* 1304 */,
/* 1305 */,
/* 1306 */,
/* 1307 */,
/* 1308 */,
/* 1309 */,
/* 1310 */,
/* 1311 */,
/* 1312 */,
/* 1313 */,
/* 1314 */,
/* 1315 */,
/* 1316 */,
/* 1317 */,
/* 1318 */,
/* 1319 */,
/* 1320 */,
/* 1321 */,
/* 1322 */,
/* 1323 */,
/* 1324 */,
/* 1325 */,
/* 1326 */,
/* 1327 */,
/* 1328 */,
/* 1329 */,
/* 1330 */,
/* 1331 */,
/* 1332 */,
/* 1333 */,
/* 1334 */,
/* 1335 */,
/* 1336 */,
/* 1337 */,
/* 1338 */,
/* 1339 */,
/* 1340 */,
/* 1341 */,
/* 1342 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 1343 */,
/* 1344 */,
/* 1345 */,
/* 1346 */,
/* 1347 */,
/* 1348 */,
/* 1349 */,
/* 1350 */,
/* 1351 */,
/* 1352 */,
/* 1353 */,
/* 1354 */,
/* 1355 */,
/* 1356 */,
/* 1357 */,
/* 1358 */,
/* 1359 */,
/* 1360 */,
/* 1361 */,
/* 1362 */,
/* 1363 */,
/* 1364 */,
/* 1365 */,
/* 1366 */,
/* 1367 */,
/* 1368 */,
/* 1369 */,
/* 1370 */,
/* 1371 */,
/* 1372 */,
/* 1373 */,
/* 1374 */,
/* 1375 */,
/* 1376 */,
/* 1377 */,
/* 1378 */,
/* 1379 */,
/* 1380 */,
/* 1381 */,
/* 1382 */,
/* 1383 */,
/* 1384 */,
/* 1385 */,
/* 1386 */,
/* 1387 */,
/* 1388 */,
/* 1389 */,
/* 1390 */,
/* 1391 */,
/* 1392 */,
/* 1393 */,
/* 1394 */,
/* 1395 */,
/* 1396 */,
/* 1397 */,
/* 1398 */,
/* 1399 */,
/* 1400 */,
/* 1401 */,
/* 1402 */,
/* 1403 */,
/* 1404 */,
/* 1405 */,
/* 1406 */,
/* 1407 */,
/* 1408 */,
/* 1409 */,
/* 1410 */,
/* 1411 */,
/* 1412 */,
/* 1413 */,
/* 1414 */,
/* 1415 */,
/* 1416 */,
/* 1417 */,
/* 1418 */,
/* 1419 */,
/* 1420 */,
/* 1421 */,
/* 1422 */,
/* 1423 */,
/* 1424 */,
/* 1425 */,
/* 1426 */,
/* 1427 */,
/* 1428 */,
/* 1429 */,
/* 1430 */,
/* 1431 */,
/* 1432 */,
/* 1433 */,
/* 1434 */,
/* 1435 */,
/* 1436 */,
/* 1437 */,
/* 1438 */,
/* 1439 */,
/* 1440 */,
/* 1441 */,
/* 1442 */,
/* 1443 */,
/* 1444 */,
/* 1445 */,
/* 1446 */,
/* 1447 */,
/* 1448 */,
/* 1449 */,
/* 1450 */
/***/ (function(module, exports, __webpack_require__) {

var gui = __webpack_require__(495);
window.GUIModule = gui;
var tw = __webpack_require__(34);
window.TWModule = tw;
var vm = __webpack_require__(335);
window.VMModule = vm;

/***/ }),
/* 1451 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 1452 */,
/* 1453 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 1454 */,
/* 1455 */,
/* 1456 */,
/* 1457 */,
/* 1458 */,
/* 1459 */,
/* 1460 */,
/* 1461 */,
/* 1462 */,
/* 1463 */,
/* 1464 */,
/* 1465 */,
/* 1466 */,
/* 1467 */,
/* 1468 */,
/* 1469 */,
/* 1470 */,
/* 1471 */,
/* 1472 */,
/* 1473 */,
/* 1474 */,
/* 1475 */,
/* 1476 */,
/* 1477 */,
/* 1478 */,
/* 1479 */,
/* 1480 */,
/* 1481 */,
/* 1482 */,
/* 1483 */,
/* 1484 */,
/* 1485 */,
/* 1486 */,
/* 1487 */,
/* 1488 */,
/* 1489 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, ".box_box_tWy-0 {\n}\n", ""]);

// exports
exports.locals = {
	"box": "box_box_tWy-0"
};

/***/ }),
/* 1490 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n} h2 {\n    font-size: 1.5rem;\n    font-weight: bold;\n} p {\n    font-size: 1rem;\n    line-height: 1.5em;\n} .crash-message_crash-wrapper_15SLi {\n    background-color: hsla(30, 100%, 65%, 1);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n} [theme=\"dark\"] .crash-message_crash-wrapper_15SLi {\n    background-color: #333;\n} .crash-message_body_3OO__ {\n    width: 50%;\n    color: white;\n    text-align: center;\n} .crash-message_reloadButton_35TdL {\n    border: 1px solid hsla(30, 100%, 65%, 1);\n    border-radius: 0.25rem;\n    padding: 0.5rem 2rem;\n    background: white;\n    color: hsla(30, 100%, 65%, 1);\n    font-weight: bold;\n    font-size: 0.875rem;\n    cursor: pointer;\n} .crash-message_header_CnM8i {\n    font-size: 1.5em;\n    font-weight: bold;\n} .crash-message_error-message_2oNef {\n    font-family: monospace;\n}\n", ""]);

// exports
exports.locals = {
	"crash-wrapper": "crash-message_crash-wrapper_15SLi",
	"crashWrapper": "crash-message_crash-wrapper_15SLi",
	"body": "crash-message_body_3OO__",
	"reloadButton": "crash-message_reloadButton_35TdL",
	"header": "crash-message_header_CnM8i",
	"error-message": "crash-message_error-message_2oNef",
	"errorMessage": "crash-message_error-message_2oNef"
};

/***/ }),
/* 1491 */,
/* 1492 */,
/* 1493 */,
/* 1494 */,
/* 1495 */,
/* 1496 */,
/* 1497 */,
/* 1498 */,
/* 1499 */,
/* 1500 */,
/* 1501 */,
/* 1502 */,
/* 1503 */,
/* 1504 */,
/* 1505 */,
/* 1506 */,
/* 1507 */,
/* 1508 */,
/* 1509 */,
/* 1510 */,
/* 1511 */,
/* 1512 */,
/* 1513 */,
/* 1514 */,
/* 1515 */,
/* 1516 */,
/* 1517 */,
/* 1518 */,
/* 1519 */,
/* 1520 */,
/* 1521 */,
/* 1522 */,
/* 1523 */,
/* 1524 */,
/* 1525 */,
/* 1526 */,
/* 1527 */,
/* 1528 */,
/* 1529 */,
/* 1530 */,
/* 1531 */,
/* 1532 */,
/* 1533 */,
/* 1534 */,
/* 1535 */,
/* 1536 */,
/* 1537 */,
/* 1538 */,
/* 1539 */,
/* 1540 */,
/* 1541 */,
/* 1542 */,
/* 1543 */,
/* 1544 */,
/* 1545 */,
/* 1546 */,
/* 1547 */,
/* 1548 */,
/* 1549 */,
/* 1550 */,
/* 1551 */,
/* 1552 */,
/* 1553 */,
/* 1554 */,
/* 1555 */,
/* 1556 */,
/* 1557 */,
/* 1558 */,
/* 1559 */,
/* 1560 */,
/* 1561 */,
/* 1562 */,
/* 1563 */,
/* 1564 */,
/* 1565 */,
/* 1566 */,
/* 1567 */,
/* 1568 */,
/* 1569 */,
/* 1570 */,
/* 1571 */,
/* 1572 */,
/* 1573 */,
/* 1574 */,
/* 1575 */,
/* 1576 */,
/* 1577 */,
/* 1578 */,
/* 1579 */,
/* 1580 */,
/* 1581 */,
/* 1582 */,
/* 1583 */,
/* 1584 */,
/* 1585 */,
/* 1586 */,
/* 1587 */,
/* 1588 */,
/* 1589 */,
/* 1590 */,
/* 1591 */,
/* 1592 */,
/* 1593 */,
/* 1594 */,
/* 1595 */,
/* 1596 */,
/* 1597 */,
/* 1598 */,
/* 1599 */,
/* 1600 */,
/* 1601 */,
/* 1602 */,
/* 1603 */,
/* 1604 */,
/* 1605 */,
/* 1606 */,
/* 1607 */,
/* 1608 */,
/* 1609 */,
/* 1610 */,
/* 1611 */,
/* 1612 */,
/* 1613 */,
/* 1614 */,
/* 1615 */,
/* 1616 */,
/* 1617 */,
/* 1618 */,
/* 1619 */,
/* 1620 */,
/* 1621 */,
/* 1622 */,
/* 1623 */,
/* 1624 */,
/* 1625 */,
/* 1626 */,
/* 1627 */,
/* 1628 */,
/* 1629 */,
/* 1630 */,
/* 1631 */,
/* 1632 */,
/* 1633 */,
/* 1634 */,
/* 1635 */,
/* 1636 */,
/* 1637 */,
/* 1638 */,
/* 1639 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n.button_outlined-button_2f510 {\n    cursor: pointer;\n    border-radius: calc(0.5rem / 2);\n    font-weight: bold;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding-left: .75rem;\n    padding-right: .75rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n.button_icon_JhCuM {\n    height: 1.5rem;\n}\n\n[dir=\"ltr\"] .button_icon_JhCuM {\n    margin-right: .5rem;\n}\n\n[dir=\"rtl\"] .button_icon_JhCuM {\n    margin-left: .5rem;\n}\n\n.button_content_3y79K {\n    white-space: nowrap;\n}\n", ""]);

// exports
exports.locals = {
	"outlined-button": "button_outlined-button_2f510",
	"outlinedButton": "button_outlined-button_2f510",
	"icon": "button_icon_JhCuM",
	"content": "button_content_3y79K"
};

/***/ }),
/* 1640 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .close-button_close-button_t5jqt {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    overflow: hidden;  /* Mask the icon animation */\n    background-color: hsla(0, 0%, 0%, 0.15);\n    border-radius: 50%;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: pointer;\n    transition: all 0.15s ease-out;\n} .close-button_close-button_t5jqt.close-button_large_2cCrv:hover {\n    transform: scale(1.1, 1.1);\n    box-shadow: 0 0 0 4px hsla(0, 0%, 0%, 0.15);\n} .close-button_close-button_t5jqt.close-button_large_2cCrv.close-button_orange_1V-p9:hover {\n    transform: scale(1.1, 1.1);\n    box-shadow: 0px 0px 0px 4px hsla(29, 100%, 54%, 0.2);\n} .close-button_small_1L9aM {\n    width: 0.825rem;\n    height: 0.825rem;\n    background-color: hsla(30, 100%, 65%, 1);\n    color: hsla(0, 100%, 100%, 1);\n} .close-button_large_2cCrv {\n    width: 1.75rem;\n    height: 1.75rem;\n    box-shadow: 0 0 0 2px hsla(0, 0%, 0%, 0.15);\n} .close-button_large_2cCrv.close-button_orange_1V-p9 {\n    background-color: hsla(29, 100%, 54%, 0.2);\n    box-shadow: 0px 0px 0px 2px hsla(29, 100%, 54%, 0.2);\n} .close-button_close-icon_ywCI5 {\n    position: relative;\n    margin: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    transform-origin: 50%;\n    transform: rotate(45deg);\n} .close-button_close-icon_ywCI5.close-button_orange_1V-p9 {\n    transform: rotate(45deg);\n    transform: scale(1.4);\n} .close-button_small_1L9aM .close-button_close-icon_ywCI5 {\n    width: 50%;\n} .close-button_large_2cCrv .close-button_close-icon_ywCI5 {\n    width: 0.75rem;\n    height: 0.75rem;\n} .close-button_back-icon_1J1uF {\n  position: relative;\n  margin: 0.25rem;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n} .close-button_small_1L9aM .close-button_back-icon_1J1uF {\n    width: 50%;\n} .close-button_large_2cCrv .close-button_back-icon_1J1uF {\n    width: 2rem;\n    height: 2rem;\n}\n", ""]);

// exports
exports.locals = {
	"close-button": "close-button_close-button_t5jqt",
	"closeButton": "close-button_close-button_t5jqt",
	"large": "close-button_large_2cCrv",
	"orange": "close-button_orange_1V-p9",
	"small": "close-button_small_1L9aM",
	"close-icon": "close-button_close-icon_ywCI5",
	"closeIcon": "close-button_close-icon_ywCI5",
	"back-icon": "close-button_back-icon_1J1uF",
	"backIcon": "close-button_back-icon_1J1uF"
};

/***/ }),
/* 1641 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .modal_modal-overlay_2_Dgx {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 510;\n    background-color: hsla(215, 100%, 65%, 0.9);\n} .modal_modal-content_3brCX * {\n    box-sizing: border-box;\n} .modal_modal-content_3brCX {\n    margin: 100px auto;\n    outline: none;\n    border: 4px solid hsla(0, 100%, 100%, 0.25);\n    padding: 0;\n    border-radius: 0.5rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: hsla(225, 15%, 40%, 1);\n    overflow: hidden;\n} .modal_modal-content_3brCX.modal_full-screen_3yXCG {\n    position: absolute;\n\n    display: flex;\n    height: 100%;\n    width: 100%;\n\n    overflow-y: auto;\n    -webkit-overflow-scrolling: 'touch';\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n\n    background-color: hsla(215, 75%, 95%, 1);\n\n    /* Default modal resets */\n    margin: 0;\n    border: none;\n    border-radius: 0;\n} /*\n    Modal header has 3 items:\n    |filter     title       x|\n\n    Use the same width for both side item containers,\n    so that title remains centered\n*/ .modal_header_1dNxf {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    height: 3.125rem;\n\n    box-sizing: border-box;\n    width: 100%;\n    background-color: hsla(30, 100%, 65%, 1);\n    \n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 1rem;\n    font-weight: normal;\n} [theme=\"dark\"] .modal_header_1dNxf {\n    background-color: #333;\n} [theme=\"dark\"] .modal_full-screen_3yXCG .modal_header_1dNxf {\n    background-color: hsla(30, 100%, 65%, 1);\n} .modal_header-item_1WbOm {\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    text-decoration: none;\n    color: hsla(0, 100%, 100%, 1);\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} [dir=\"ltr\"] .modal_header-image_2c-LK {\n    margin-right: 0.5rem;\n} [dir=\"rtl\"] .modal_header-image_2c-LK {\n    margin-left: 0.5rem;\n} .modal_header-item-filter_slKwM {\n    display: flex;\n    flex-basis: 20rem;\n    justify-content: flex-start;\n} .modal_header-item-title_1N2BE {\n    flex-grow: 1;\n    flex-shrink: 0;\n    justify-content: center;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    letter-spacing: 0.4px;\n    cursor: default;\n} [dir=\"ltr\"] .modal_header-item-title_1N2BE {\n    margin: 0 -20rem 0 0;\n} [dir=\"rtl\"] .modal_header-item-title_1N2BE {\n    margin: 0 0 0 -20rem;\n} .modal_full-screen_3yXCG [dir=\"ltr\"] .modal_header-item-title_1N2BE {\n    margin: 0 0 0 -20rem;\n} .modal_full-screen_3yXCG [dir=\"rtl\"] .modal_header-item-title_1N2BE {\n    margin: 0 -20rem 0 0;\n} .modal_header-item-close_4akWi {\n    flex-basis: 20rem;\n    justify-content: flex-end;\n    z-index: 1;\n} .modal_full-screen_3yXCG .modal_header-item-close_4akWi {\n    order: -1;\n    justify-content: flex-start;\n} .modal_back-button_3HvWm {\n    font-weight: normal;\n    padding-right: 0;\n    padding-left: 0;\n} [dir=\"rtl\"] .modal_back-button_3HvWm img {\n    transform: scaleX(-1);\n} .modal_header-item-help_2F4to {\n    padding: 0;\n    z-index: 1;\n} [dir=\"ltr\"] .modal_header-item-help_2F4to {\n    margin-right: -4.75rem;\n} [dir=\"rtl\"] .modal_header-item-help_2F4to {\n    margin-left: -4.75rem;\n} .modal_help-button_1F4rs {\n    font-weight: normal;\n    font-size: 0.75rem;\n} [dir=\"ltr\"] .modal_help-button_1F4rs {\n    padding-right: 0;\n} [dir=\"rtl\"] .modal_help-button_1F4rs {\n    padding-left: 0;\n}\n", ""]);

// exports
exports.locals = {
	"modal-overlay": "modal_modal-overlay_2_Dgx",
	"modalOverlay": "modal_modal-overlay_2_Dgx",
	"modal-content": "modal_modal-content_3brCX",
	"modalContent": "modal_modal-content_3brCX",
	"full-screen": "modal_full-screen_3yXCG",
	"fullScreen": "modal_full-screen_3yXCG",
	"header": "modal_header_1dNxf",
	"header-item": "modal_header-item_1WbOm",
	"headerItem": "modal_header-item_1WbOm",
	"header-image": "modal_header-image_2c-LK",
	"headerImage": "modal_header-image_2c-LK",
	"header-item-filter": "modal_header-item-filter_slKwM",
	"headerItemFilter": "modal_header-item-filter_slKwM",
	"header-item-title": "modal_header-item-title_1N2BE",
	"headerItemTitle": "modal_header-item-title_1N2BE",
	"header-item-close": "modal_header-item-close_4akWi",
	"headerItemClose": "modal_header-item-close_4akWi",
	"back-button": "modal_back-button_3HvWm",
	"backButton": "modal_back-button_3HvWm",
	"header-item-help": "modal_header-item-help_2F4to",
	"headerItemHelp": "modal_header-item-help_2F4to",
	"help-button": "modal_help-button_1F4rs",
	"helpButton": "modal_help-button_1F4rs"
};

/***/ }),
/* 1642 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .prompt_modal-content_35gRS {\n    width: 360px;\n} .prompt_body_Vgt8G {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n} [theme=\"dark\"] .prompt_body_Vgt8G {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} .prompt_body_Vgt8G input[type=\"checkbox\"],\n.prompt_body_Vgt8G input[type=\"radio\"] {\n    margin: 3px;\n} .prompt_label_3jR00 {\n    font-weight: 500;\n    margin: 0 0 0.75rem;\n} .prompt_disabled-label_fduJB {\n    opacity: 0.5;\n} .prompt_variable-name-text-input_36E65 {\n    margin-bottom: 1.5rem;\n    width: 100%;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 5px;\n    padding: 0 1rem;\n    height: 3rem;\n    color: hsla(225, 15%, 40%, 0.75);\n    font-size: .875rem;\n} [theme=\"dark\"] .prompt_variable-name-text-input_36E65 {\n    background: hsla(215, 75%, 95%, 1);\n    color: white;\n} .prompt_info-message_370zD {\n    font-weight: normal;\n    font-size: .875rem;\n    margin-bottom: 1.5rem;\n    text-align: center;\n} .prompt_options-row_33OgT {\n    display: flex;\n    font-weight: normal;\n    justify-content: space-between;\n    margin-bottom: 1.5rem;\n} .prompt_button-row_34Zss {\n    font-weight: bolder;\n    text-align: right;\n} .prompt_button-row_34Zss button {\n    padding: 0.75rem 1rem;\n    border-radius: 0.25rem;\n    background: white;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    font-weight: 600;\n    font-size: 0.85rem;\n} .prompt_button-row_34Zss button.prompt_ok-button_1xjNu {\n    background: hsla(30, 100%, 65%, 1);\n    border: hsla(30, 100%, 65%, 1);\n    color: white;\n} [dir=\"ltr\"] .prompt_button-row_34Zss button + button {\n    margin-left: 0.5rem;\n} [dir=\"rtl\"] .prompt_button-row_34Zss button + button {\n    margin-right: 0.5rem;\n} .prompt_cloud-option_1Fo4I {\n    display:flex;\n    border-top: 1px dashed hsla(0, 0%, 0%, .25);\n    overflow: visible;\n    padding: 1rem 0;\n    text-align: center;\n    width: 100%;\n    margin: 0 auto;\n} [theme=\"dark\"] .prompt_cloud-option_1Fo4I {\n    border-color: rgba(255, 255, 255, .25);\n} .prompt_cloud-option-text_2I5zG {\n    opacity: .5;\n} .prompt_cancel-button_3CsOb {\n    color: black;\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "prompt_modal-content_35gRS",
	"modalContent": "prompt_modal-content_35gRS",
	"body": "prompt_body_Vgt8G",
	"label": "prompt_label_3jR00",
	"disabled-label": "prompt_disabled-label_fduJB",
	"disabledLabel": "prompt_disabled-label_fduJB",
	"variable-name-text-input": "prompt_variable-name-text-input_36E65",
	"variableNameTextInput": "prompt_variable-name-text-input_36E65",
	"info-message": "prompt_info-message_370zD",
	"infoMessage": "prompt_info-message_370zD",
	"options-row": "prompt_options-row_33OgT",
	"optionsRow": "prompt_options-row_33OgT",
	"button-row": "prompt_button-row_34Zss",
	"buttonRow": "prompt_button-row_34Zss",
	"ok-button": "prompt_ok-button_1xjNu",
	"okButton": "prompt_ok-button_1xjNu",
	"cloud-option": "prompt_cloud-option_1Fo4I",
	"cloudOption": "prompt_cloud-option_1Fo4I",
	"cloud-option-text": "prompt_cloud-option-text_2I5zG",
	"cloudOptionText": "prompt_cloud-option-text_2I5zG",
	"cancel-button": "prompt_cancel-button_3CsOb",
	"cancelButton": "prompt_cancel-button_3CsOb"
};

/***/ }),
/* 1643 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.blocks_blocks_2LOZ2 {\n    height: 100%;\n}\n\n.blocks_drag-over_QI1Mw:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0.75;\n    background-color: hsla(215, 100%, 77%, 1);\n    transition: all 0.25s ease;\n}\n\n.blocks_blocks_2LOZ2 .injectionDiv{\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-top-right-radius: 0.5rem;\n    border-bottom-right-radius: 0.5rem;\n}\n\n[dir=\"rtl\"] .blocks_blocks_2LOZ2 .injectionDiv {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-top-left-radius: 0.5rem;\n    border-bottom-left-radius: 0.5rem;\n}\n\n.blocks_blocks_2LOZ2 .blocklyMainBackground {\n    stroke: none;\n}\n\n.blocks_blocks_2LOZ2 .blocklyToolboxDiv {\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-bottom: 1px solid hsla(0, 0%, 0%, 0.15);\n    box-sizing: content-box;\n    height: calc(100% - 3.25rem) !important;\n    overflow-x: hidden;\n\n    /*\n        For now, the layout cannot support scrollbars in the category menu.\n        The line below works for Edge, the `::-webkit-scrollbar` line\n        below that is for webkit browsers. It isn't possible to do the\n        same for Firefox, so a different solution may be needed for them.\n    */\n    -ms-overflow-style: none;\n}\n\n[dir=\"rtl\"] .blocks_blocks_2LOZ2 .blocklyToolboxDiv {\n    border-right: none;\n    border-left: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n\n.blocks_blocks_2LOZ2 .blocklyToolboxDiv::-webkit-scrollbar {\n    display: none;\n}\n\n.blocks_blocks_2LOZ2 .blocklyFlyout {\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n    box-sizing: content-box;\n}\n\n[dir=\"rtl\"] .blocks_blocks_2LOZ2 .blocklyFlyout {\n    border-right: none;\n    border-left: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n\n.blocks_blocks_2LOZ2 .blocklyBlockDragSurface {\n    /*\n        Fix an issue where the drag surface was preventing hover events for sharing blocks.\n        This does not prevent user interaction on the blocks themselves.\n    */\n    pointer-events: none;\n    z-index: 1000; /* make blocks match gui drag layer */\n}\n\n/*\n    Shrink category font to fit \"My Blocks\" for now.\n    Probably will need different solutions for language support later, so\n    make the change here instead of in scratch-blocks.\n*/\n\n.blocks_blocks_2LOZ2 .scratchCategoryMenuItemLabel {\n    font-size: 0.65rem;\n}\n\n.blocks_blocks_2LOZ2 .blocklyMinimalBody {\n    min-width: auto;\n    min-height: auto;\n}\n", ""]);

// exports
exports.locals = {
	"blocks": "blocks_blocks_2LOZ2",
	"drag-over": "blocks_drag-over_QI1Mw",
	"dragOver": "blocks_drag-over_QI1Mw"
};

/***/ }),
/* 1644 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .play-button_play-button_cXELI {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    overflow: hidden;  /* Mask the icon animation */\n    width: 2.5rem;\n    height: 2.5rem;\n    background-color: hsla(300, 53%, 60%, 1);\n    color: hsla(0, 100%, 100%, 1);\n    border-radius: 50%;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: pointer;\n    transition: all 0.15s ease-out;\n} .play-button_play-button_cXELI {\n    position: absolute;\n    top: .5rem;\n    z-index: auto;\n} .play-button_play-button_cXELI:focus {\n    outline: none;\n} .play-button_play-icon_33XpJ {\n  width: 50%;\n} [dir=\"ltr\"] .play-button_play-button_cXELI {\n    right: .5rem;\n} [dir=\"rtl\"] .play-button_play-button_cXELI {\n    left: .5rem;\n}\n", ""]);

// exports
exports.locals = {
	"play-button": "play-button_play-button_cXELI",
	"playButton": "play-button_play-button_cXELI",
	"play-icon": "play-button_play-icon_33XpJ",
	"playIcon": "play-button_play-icon_33XpJ"
};

/***/ }),
/* 1645 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .library-item_library-item_1nZBu {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    flex-basis: 160px;\n    position: relative;\n    height: 160px;\n    max-width: 160px;\n    margin: 0.5rem;\n    padding: 1rem 1rem 0 1rem;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: hsla(225, 15%, 40%, 1);\n    background: white;\n    border-width: 2px;\n    border-style: solid;\n    border-color: hsla(0, 0%, 0%, 0.15);\n    border-radius: 0.5rem;\n    text-align: center;\n    cursor: pointer;\n} [theme=\"dark\"] .library-item_library-item_1nZBu {\n    background: hsla(215, 100%, 95%, 1);\n} .library-item_library-item-extension_wHgEE {\n    align-self: stretch;\n} .library-item_library-item_1nZBu:hover {\n    border-width: 2px;\n    border-color: hsla(30, 100%, 65%, 1);\n} .library-item_hidden_qWfvV {\n    display: none;\n} .library-item_disabled_udvIX {\n    opacity: .5;\n    cursor: auto;\n} .library-item_disabled_udvIX:hover {\n    border-color: hsla(0, 0%, 0%, 0.15);\n} .library-item_library-item-image-container-wrapper_3TFcU {\n    height: 100px;\n    width: 100%;\n    position: relative;\n} .library-item_library-item-image-container_1VgKJ {\n    position: absolute;\n    height: 100px;\n    width: 100%;\n} .library-item_library-item-inset-image-container_2oGku {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: -2.5rem;\n    align-self: flex-start;\n    background-color: hsla(163, 85%, 40%, 1);\n    width: 3.5rem;\n    height: 3.5rem;\n    border-radius: 0.5rem;\n    border: 0.25rem solid hsla(0, 100%, 100%, 1);\n} [dir=\"ltr\"] .library-item_library-item-inset-image-container_2oGku {\n    margin-left: 1rem;\n} [dir=\"rtl\"] .library-item_library-item-inset-image-container_2oGku {\n    margin-right: 1rem;\n} .library-item_library-item-image_3G7nd {\n    max-width: 100%;\n    max-height: 100%;\n} .library-item_library-item-inset-image_qk3QS {\n    width: 2.5rem;\n} .library-item_library-item-name_35ftf {\n    width: 80%;\n    margin: 0.25rem 0;\n    text-align: center;\n\n    /*\n        For truncating overflowing text gracefully\n        Min-width is for a bug: https://css-tricks.com/flexbox-truncated-text\n    */\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    min-width: 0;\n} .library-item_featured-item_3dHDW {\n    flex-basis: 300px;\n    max-width: 300px;\n    height: auto;\n    overflow: hidden;\n    padding: 0;\n} .library-item_featured-image-container_2x7jE {\n    position: relative;\n} .library-item_featured-image_1rsDU {\n    width: 100%;\n} .library-item_featured-text_xD5Ve {\n    font-weight: bold;\n    padding: 10px;\n    /* height: 140px; */\n    width: 300px;\n} [dir=\"ltr\"] .library-item_featured-extension-text_2sSn4 {\n    text-align: left;\n    padding-left: 1.25rem;\n} [dir=\"rtl\"] .library-item_featured-extension-text_2sSn4 {\n    text-align: right;\n    padding-right: 1.25rem;\n} .library-item_featured-description_1hGaH {\n    display: block;\n    font-weight: normal;\n    line-height: 1.375rem;\n    padding-top: .3125rem;\n    padding-bottom: .25rem;\n} .library-item_featured-extension-metadata_24DYi {\n    width: 100%;\n    padding: 0 1.25rem 1rem 1.25rem;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    font-size: 12px;\n    color: hsla(225, 15%, 40%, 1);\n    opacity: 0.75;\n} [dir=\"ltr\"] .library-item_featured-extension-metadata_24DYi {\n    text-align: left;\n} [dir=\"rtl\"] .library-item_featured-extension-metadata_24DYi {\n    text-align: right;\n} .library-item_featured-extension-requirement_30Ghz {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n} .library-item_featured-extension-collaboration_13t7u {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n} .library-item_featured-extension-metadata-detail_2kvJn {\n    height: 100%;\n    padding-top: 0.4rem;\n    font-weight: bold;\n} .library-item_featured-extension-metadata-detail_2kvJn img{\n    margin-right: 0.25rem;\n} .library-item_coming-soon-text_ZcFGD {\n    position: absolute;\n    background-color: hsl(55, 1%, 85%);\n    border-radius: 1rem;\n    box-shadow: 0 0 .5rem hsla(0, 0%, 0%, .25);\n    padding: .5rem 1rem;\n    font-size: .875rem;\n    font-weight: bold;\n    color: hsla(0, 100%, 100%, 1);\n} [dir=\"ltr\"] .library-item_coming-soon-text_ZcFGD {\n    transform: translate(calc(2 * 0.5rem), calc(2 * 0.5rem));\n} [dir=\"rtl\"] .library-item_coming-soon-text_ZcFGD {\n    transform: translate(calc(-2 * 0.5rem), calc(2 * 0.5rem));\n}\n", ""]);

// exports
exports.locals = {
	"library-item": "library-item_library-item_1nZBu",
	"libraryItem": "library-item_library-item_1nZBu",
	"library-item-extension": "library-item_library-item-extension_wHgEE",
	"libraryItemExtension": "library-item_library-item-extension_wHgEE",
	"hidden": "library-item_hidden_qWfvV",
	"disabled": "library-item_disabled_udvIX",
	"library-item-image-container-wrapper": "library-item_library-item-image-container-wrapper_3TFcU",
	"libraryItemImageContainerWrapper": "library-item_library-item-image-container-wrapper_3TFcU",
	"library-item-image-container": "library-item_library-item-image-container_1VgKJ",
	"libraryItemImageContainer": "library-item_library-item-image-container_1VgKJ",
	"library-item-inset-image-container": "library-item_library-item-inset-image-container_2oGku",
	"libraryItemInsetImageContainer": "library-item_library-item-inset-image-container_2oGku",
	"library-item-image": "library-item_library-item-image_3G7nd",
	"libraryItemImage": "library-item_library-item-image_3G7nd",
	"library-item-inset-image": "library-item_library-item-inset-image_qk3QS",
	"libraryItemInsetImage": "library-item_library-item-inset-image_qk3QS",
	"library-item-name": "library-item_library-item-name_35ftf",
	"libraryItemName": "library-item_library-item-name_35ftf",
	"featured-item": "library-item_featured-item_3dHDW",
	"featuredItem": "library-item_featured-item_3dHDW",
	"featured-image-container": "library-item_featured-image-container_2x7jE",
	"featuredImageContainer": "library-item_featured-image-container_2x7jE",
	"featured-image": "library-item_featured-image_1rsDU",
	"featuredImage": "library-item_featured-image_1rsDU",
	"featured-text": "library-item_featured-text_xD5Ve",
	"featuredText": "library-item_featured-text_xD5Ve",
	"featured-extension-text": "library-item_featured-extension-text_2sSn4",
	"featuredExtensionText": "library-item_featured-extension-text_2sSn4",
	"featured-description": "library-item_featured-description_1hGaH",
	"featuredDescription": "library-item_featured-description_1hGaH",
	"featured-extension-metadata": "library-item_featured-extension-metadata_24DYi",
	"featuredExtensionMetadata": "library-item_featured-extension-metadata_24DYi",
	"featured-extension-requirement": "library-item_featured-extension-requirement_30Ghz",
	"featuredExtensionRequirement": "library-item_featured-extension-requirement_30Ghz",
	"featured-extension-collaboration": "library-item_featured-extension-collaboration_13t7u",
	"featuredExtensionCollaboration": "library-item_featured-extension-collaboration_13t7u",
	"featured-extension-metadata-detail": "library-item_featured-extension-metadata-detail_2kvJn",
	"featuredExtensionMetadataDetail": "library-item_featured-extension-metadata-detail_2kvJn",
	"coming-soon-text": "library-item_coming-soon-text_ZcFGD",
	"comingSoonText": "library-item_coming-soon-text_ZcFGD"
};

/***/ }),
/* 1646 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .divider_divider_2uUWW {\n    border-right: 1px dashed hsla(0, 0%, 0%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"divider": "divider_divider_2uUWW"
};

/***/ }),
/* 1647 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.filter_filter_3ERdM {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n\n    background: hsla(0, 100%, 100%, 1);\n    border-radius: 10rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    height: 2.5rem;\n\n    position: relative;\n}\n\n[theme=\"dark\"] .filter_filter_3ERdM {\n    background: hsla(215, 100%, 95%, 1);\n}\n\n.filter_filter-icon_2b5SH {\n    position: absolute;\n    top: 0;\n\n    height: 1rem;\n    width: 1rem;\n}\n\n[dir=\"ltr\"] .filter_filter-icon_2b5SH {\n    left: 0;\n    margin: 0.75rem 0.75rem 0.75rem 1rem;\n}\n\n[dir=\"rtl\"] .filter_filter-icon_2b5SH {\n    right: 0;\n    margin: 0.75rem 1rem 0.75rem 0.75rem;\n    transform: scaleX(-1);\n}\n\n.filter_filter_3ERdM:focus-within {\n    box-shadow: 0 0 0 .25rem hsla(30, 100%, 65%, 0.35);\n}\n\n/*\n    Hidden state\n*/\n\n.filter_x-icon-wrapper_3u3wB {\n    opacity: 0;\n    position: absolute;\n    top: 0;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    overflow: hidden;  /* Mask the icon animation */\n    height: 1.25rem;\n    width: 1.25rem;\n    margin: 0.625rem;\n\n    border-radius: 50%;\n    pointer-events: none;\n    cursor: default;\n    transition: opacity 0.05s linear;\n}\n\n[dir=\"ltr\"] .filter_x-icon-wrapper_3u3wB {\n    right: 0;\n}\n\n[dir=\"rtl\"] .filter_x-icon-wrapper_3u3wB {\n    left: 0;\n}\n\n/*\n    Shown state\n*/\n\n.filter_filter_3ERdM.filter_is-active_2vZjc .filter_x-icon-wrapper_3u3wB {\n    pointer-events: auto;\n    cursor: pointer;\n    opacity: 1;\n    transition: opacity 0.05s linear;\n}\n\n.filter_filter_3ERdM.filter_is-active_2vZjc .filter_x-icon-wrapper_3u3wB:hover {\n    transform: scale(1.2, 1.2);\n}\n\n/*\n    Hidden state\n*/\n\n.filter_x-icon_P0M2o {\n    position: relative;\n    margin: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    transform: translateX(0.5rem);\n    transition: transform 0.085s cubic-bezier(0.78, 1, 1, 1);\n}\n\n/*\n    Shown state\n*/\n\n.filter_filter_3ERdM.filter_is-active_2vZjc .filter_x-icon-wrapper_3u3wB .filter_x-icon_P0M2o {\n    transform: translateX(0);\n}\n\n.filter_filter-input_3aL2D {\n    flex-grow: 1;\n    height: 2.5rem;\n    background-color: transparent;\n    -webkit-appearance: none;\n    outline: none;\n    border: 0;\n    color: hsla(225, 15%, 40%, 1);\n    font-size: 0.75rem;\n    letter-spacing: 0.15px;\n    cursor: text;\n}\n\n[dir=\"ltr\"] .filter_filter-input_3aL2D {\n    padding: .625rem 2rem .625rem 3rem;\n}\n\n[dir=\"rtl\"] .filter_filter-input_3aL2D {\n    padding: .625rem 3rem .625rem 2rem;\n}\n\n.filter_filter-input_3aL2D::-ms-input-placeholder {\n    opacity: .5;\n    color: hsla(225, 15%, 40%, 1);\n    font-size: 0.875rem;\n    letter-spacing: 0.15px;\n}\n\n.filter_filter-input_3aL2D::placeholder {\n    opacity: .5;\n    color: hsla(225, 15%, 40%, 1);\n    font-size: 0.875rem;\n    letter-spacing: 0.15px;\n}\n\n[dir=\"ltr\"] .filter_filter-input_3aL2D::-ms-input-placeholder {\n    padding: 0 0 0 0.25rem;\n}\n\n[dir=\"ltr\"] .filter_filter-input_3aL2D::placeholder {\n    padding: 0 0 0 0.25rem;\n}\n\n[dir=\"rtl\"] .filter_filter-input_3aL2D::-ms-input-placeholder {\n    padding: 0 0.25rem 0 0;\n}\n\n[dir=\"rtl\"] .filter_filter-input_3aL2D::placeholder {\n    padding: 0 0.25rem 0 0;\n}\n", ""]);

// exports
exports.locals = {
	"filter": "filter_filter_3ERdM",
	"filter-icon": "filter_filter-icon_2b5SH",
	"filterIcon": "filter_filter-icon_2b5SH",
	"x-icon-wrapper": "filter_x-icon-wrapper_3u3wB",
	"xIconWrapper": "filter_x-icon-wrapper_3u3wB",
	"is-active": "filter_is-active_2vZjc",
	"isActive": "filter_is-active_2vZjc",
	"x-icon": "filter_x-icon_P0M2o",
	"xIcon": "filter_x-icon_P0M2o",
	"filter-input": "filter_filter-input_3aL2D",
	"filterInput": "filter_filter-input_3aL2D"
};

/***/ }),
/* 1648 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .tag-button_tag-button_3MxU5 {\n    padding: .625rem 1rem;\n    background: hsla(30, 100%, 65%, 1);\n    border-radius: 1.375rem;\n    color: hsla(0, 100%, 100%, 1);\n    height: 2.5rem;\n} .tag-button_tag-button-icon_3VB4Q {\n    max-width: 1rem;\n    max-height: 1rem;\n} .tag-button_active_1IIH9 {\n    background: hsl(55, 1%, 85%);\n}\n", ""]);

// exports
exports.locals = {
	"tag-button": "tag-button_tag-button_3MxU5",
	"tagButton": "tag-button_tag-button_3MxU5",
	"tag-button-icon": "tag-button_tag-button-icon_3VB4Q",
	"tagButtonIcon": "tag-button_tag-button-icon_3VB4Q",
	"active": "tag-button_active_1IIH9"
};

/***/ }),
/* 1649 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .spinner_spinner_2cI8K {\n    width: 1.25rem;\n    height: 1.25rem;\n    display: inline-block;\n    position: relative;\n    border-radius: 50%;\n    border-width: .1875rem;\n    border-style: solid;\n    border-color: hsla(0, 100%, 100%, 0.25);\n    box-sizing: content-box;\n} .spinner_spinner_2cI8K::before, .spinner_spinner_2cI8K::after {\n    width: 1.25rem;\n    height: 1.25rem;\n    content: '';\n    border-radius: 50%;\n    display: block;\n} .spinner_spinner_2cI8K::after {\n    position: absolute;\n    top: -.1875rem;\n    left: -.1875rem;\n    border: .1875rem solid transparent;\n    border-top-color: hsla(0, 100%, 100%, 1);\n    animation: spinner_spin_23oBt 1.5s cubic-bezier(0.4, 0.1, 0.4, 1) infinite;\n} .spinner_small_3zDcs {\n    width: .5rem;\n    height: .5rem;\n} .spinner_small_3zDcs::before, .spinner_small_3zDcs::after {\n    width: .5rem;\n    height: .5rem;\n} .spinner_large_HL-hN {\n    width: 2.5rem;\n    height: 2.5rem;\n} .spinner_large_HL-hN::before, .spinner_large_HL-hN::after {\n    width: 2.5rem;\n    height: 2.5rem;\n} @keyframes spinner_spin_23oBt {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n} .spinner_spinner_2cI8K.spinner_success_OfY7K {\n    border-color: #ff794d;\n} .spinner_spinner_2cI8K.spinner_success_OfY7K::after {\n    border-top-color: #ff794d;\n} .spinner_spinner_2cI8K.spinner_warn_6cVNT {\n    border-color: hsla(30, 100%, 55%, 0.25);\n} .spinner_spinner_2cI8K.spinner_warn_6cVNT::after {\n    border-top-color: hsla(30, 100%, 55%, 1);\n} .spinner_spinner_2cI8K.spinner_info_2Oc6P {\n    border-color: hsla(0, 100%, 100%, 0.25);\n} .spinner_spinner_2cI8K.spinner_info_2Oc6P::after {\n    border-top-color: hsla(0, 100%, 100%, 1);\n} .spinner_spinner_2cI8K.spinner_primary_2zFm4 {\n    border-color: #ff794d;\n} .spinner_spinner_2cI8K.spinner_primary_2zFm4::after {\n    border-top-color: #ff794d;\n}\n", ""]);

// exports
exports.locals = {
	"spinner": "spinner_spinner_2cI8K",
	"spin": "spinner_spin_23oBt",
	"small": "spinner_small_3zDcs",
	"large": "spinner_large_HL-hN",
	"success": "spinner_success_OfY7K",
	"warn": "spinner_warn_6cVNT",
	"info": "spinner_info_2Oc6P",
	"primary": "spinner_primary_2zFm4"
};

/***/ }),
/* 1650 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.library_library-scroll-grid_7xk1I {\n    display: flex;\n    justify-content: flex-start;\n    align-content: flex-start;\n    align-items: flex-start;\n    background: hsla(215, 75%, 95%, 1);\n    flex-grow: 1;\n    flex-wrap: wrap;\n    overflow-y: auto;\n    height: auto;\n    padding: 0.5rem;\n    height: calc(100% - 3.125rem);\n}\n\n.library_library-scroll-grid_7xk1I.library_withFilterBar_G4Jc2 {\n    height: calc(100% - 3.125rem - 2.5rem - 2rem);\n}\n\n.library_filter-bar_8xrjd {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    height: calc(2.5rem + 2rem); /* padding */\n    background-color: hsla(30, 100%, 65%, 0.35);\n    padding: 0 1rem;\n    font-size: .875rem;\n}\n\n.library_filter-bar-item_1eoVo {\n    margin-right: .75rem;\n}\n\n.library_filter_1E2FK {\n    flex-grow: 0;\n}\n\n.library_filter-input_3U79K {\n    width: 11.5rem;\n    transition: .2s;\n}\n\n.library_filter-input_3U79K:focus,\n.library_filter-input_3U79K:not([value=\"\"]) {\n    width: 18.75rem;\n}\n\n.library_divider_3gNN2 {\n    transform: scaleY(1.39);\n    height: 2.5rem;\n}\n\n.library_tag-wrapper_3hrLl {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    height: 2.5rem;\n    overflow: hidden;\n}\n\n.library_spinner-wrapper_zSF8e {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n", ""]);

// exports
exports.locals = {
	"library-scroll-grid": "library_library-scroll-grid_7xk1I",
	"libraryScrollGrid": "library_library-scroll-grid_7xk1I",
	"withFilterBar": "library_withFilterBar_G4Jc2",
	"filter-bar": "library_filter-bar_8xrjd",
	"filterBar": "library_filter-bar_8xrjd",
	"filter-bar-item": "library_filter-bar-item_1eoVo",
	"filterBarItem": "library_filter-bar-item_1eoVo",
	"filter": "library_filter_1E2FK",
	"filter-input": "library_filter-input_3U79K",
	"filterInput": "library_filter-input_3U79K",
	"divider": "library_divider_3gNN2",
	"tag-wrapper": "library_tag-wrapper_3hrLl",
	"tagWrapper": "library_tag-wrapper_3hrLl",
	"spinner-wrapper": "library_spinner-wrapper_zSF8e",
	"spinnerWrapper": "library_spinner-wrapper_zSF8e"
};

/***/ }),
/* 1651 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.alert_alert_2I8f0 {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n    justify-content: flex-start;\n    border-radius: 0.5rem;\n    padding-top: .875rem;\n    padding-bottom: .875rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    margin-bottom: 7px;\n    min-height: 1.5rem;\n    pointer-events: all;\n}\n\n.alert_alert_2I8f0.alert_warn_3EqUn {\n    background: #FFF0DF;\n    border: 1px solid #FF8C1A;\n    box-shadow: 0px 0px 0px 2px rgba(255, 140, 26, 0.25);\n}\n\n.alert_alert_2I8f0.alert_success_1bP9- {\n    /* tw: hardcode these colors because we change extensions-* colors to be something that looks weird here */\n    background: hsla(163, 57%, 85%, 1);\n    border: 1px solid hsla(163, 85%, 30%, 1);\n    box-shadow: 0px 0px 0px 2px hsla(163, 57%, 85%, 1);\n}\n\n.alert_alert-spinner_1VBcO {\n    self-align: center;\n}\n\n.alert_icon-section_NZU2D {\n    min-width: 1.25rem;\n    min-height: 1.25rem;\n    display: flex;\n    padding-right: 1rem;\n}\n\n.alert_alert-icon_Vk3t4 {\n    vertical-align: middle;\n}\n\n.alert_alert-message_1UEAd {\n    color: #555;\n    font-weight: bold;\n    font-size: .8125rem;\n    line-height: .875rem;\n    display: flex;\n    align-items: center;\n    padding-right: .5rem;\n}\n\n.alert_alert-buttons_13goQ {\n    display: flex;\n    flex-direction: row;\n}\n\n.alert_alert-close-button_3XYnj {\n    outline-style:none;\n}\n\n.alert_alert-close-button-container_4C-UN {\n    outline-style: none;\n    width: 30px;\n    height: 30px;\n    align-self: center;\n}\n\n.alert_alert-connection-button_2zcTP {\n    min-height: 2rem;\n    width: 6.5rem;\n    padding: 0.55rem 0.9rem;\n    border-radius: 0.35rem;\n    background: #FF8C1A;\n    color: white;\n    font-weight: 700;\n    font-size: 0.77rem;\n    border: none;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: stretch;\n    outline-style:none;\n}\n\n[dir=\"ltr\"] .alert_alert-connection-button_2zcTP {\n    margin-right: 13px;\n}\n\n[dir=\"rtl\"] .alert_alert-connection-button_2zcTP {\n    margin-left: 13px;\n}\n\n/* prevent last button in list from too much margin to edge of alert */\n\n.alert_alert-buttons_13goQ > :last-child {\n    margin-left: 0;\n    margin-right: 0;\n}\n", ""]);

// exports
exports.locals = {
	"alert": "alert_alert_2I8f0",
	"warn": "alert_warn_3EqUn",
	"success": "alert_success_1bP9-",
	"alert-spinner": "alert_alert-spinner_1VBcO",
	"alertSpinner": "alert_alert-spinner_1VBcO",
	"icon-section": "alert_icon-section_NZU2D",
	"iconSection": "alert_icon-section_NZU2D",
	"alert-icon": "alert_alert-icon_Vk3t4",
	"alertIcon": "alert_alert-icon_Vk3t4",
	"alert-message": "alert_alert-message_1UEAd",
	"alertMessage": "alert_alert-message_1UEAd",
	"alert-buttons": "alert_alert-buttons_13goQ",
	"alertButtons": "alert_alert-buttons_13goQ",
	"alert-close-button": "alert_alert-close-button_3XYnj",
	"alertCloseButton": "alert_alert-close-button_3XYnj",
	"alert-close-button-container": "alert_alert-close-button-container_4C-UN",
	"alertCloseButtonContainer": "alert_alert-close-button-container_4C-UN",
	"alert-connection-button": "alert_alert-connection-button_2zcTP",
	"alertConnectionButton": "alert_alert-connection-button_2zcTP"
};

/***/ }),
/* 1652 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, ".alerts_alerts-inner-container_h6dBI {\n    min-width: 200px;\n    max-width: 548px;\n}\n", ""]);

// exports
exports.locals = {
	"alerts-inner-container": "alerts_alerts-inner-container_h6dBI",
	"alertsInnerContainer": "alerts_alerts-inner-container_h6dBI"
};

/***/ }),
/* 1653 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .custom-procedures_modal-content_1wJuI {\n    width: 700px;\n    margin: 50px auto; /* This modal is taller than most, reduce top margin */\n} .custom-procedures_body_1H7Iq {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n} [theme=\"dark\"] .custom-procedures_body_1H7Iq {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 75%, 95%, 1);\n} .custom-procedures_body_1H7Iq input[type=\"checkbox\"],\n.custom-procedures_body_1H7Iq input[type=\"radio\"] {\n    margin: 3px;\n} /* Blocks workspace for custom procedure declaration editor */ .custom-procedures_workspace_2fBw7 {\n    min-height: 200px;\n    position: relative;\n} .custom-procedures_workspace_2fBw7 .injectionDiv{\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n} .custom-procedures_workspace_2fBw7 .blocklySvg {\n    background-color: hsla(215, 100%, 95%, 1);\n} /* Row of \"card\" buttons for modifying custom procedures */ .custom-procedures_options-row_2qj-y {\n    display: flex;\n    justify-content: space-between;\n} .custom-procedures_option-card_1Gtvt {\n    background: white;\n    border: 2px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 0.5rem;\n    padding: calc(0.5rem * 2);\n    text-align: center;\n    flex-grow: 1;\n    cursor: pointer;\n    transition: all 0.2s;\n    flex-basis: 100px;\n} [theme=\"dark\"] .custom-procedures_option-card_1Gtvt {\n    background: hsla(215, 50%, 90%, 1);\n} .custom-procedures_option-card_1Gtvt:hover {\n    border: 2px solid hsla(30, 100%, 65%, 1);\n    box-shadow: 0px 0px 0px 4px hsla(30, 100%, 65%, 0.35);\n} .custom-procedures_option-card_1Gtvt + .custom-procedures_option-card_1Gtvt {\n    margin-left: 1rem;\n} .custom-procedures_option-icon_1q0dQ {\n    max-height: 48px;\n    margin-bottom: 0.5rem;\n} .custom-procedures_option-title_21_2M {\n    font-weight: bold;\n} /* \"Run without screen refresh\" row */ .custom-procedures_checkbox-row_x0PwF {\n    margin-top: 1rem;\n} /* Confirmation buttons at the bottom of the modal */ .custom-procedures_button-row_3EJDk {\n    margin-top: 1rem;\n    font-weight: bolder;\n    text-align: right;\n} .custom-procedures_button-row_3EJDk button {\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 0.25rem;\n    padding: 0.75rem 1rem;\n    background: white;\n    font-weight: bold;\n    font-size: 0.85rem;\n} .custom-procedures_button-row_3EJDk button.custom-procedures_ok-button_3XcwO {\n    background: hsla(30, 100%, 65%, 1);\n    border: hsla(30, 100%, 65%, 1);\n    color: white;\n} [dir=\"ltr\"] .custom-procedures_button-row_3EJDk button + button {\n    margin-left: 0.5rem;\n} [dir=\"rtl\"] .custom-procedures_button-row_3EJDk button + button {\n    margin-right: 0.5rem;\n} .custom-procedures_cancel-button_HKBG7 {\n    color: black;\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "custom-procedures_modal-content_1wJuI",
	"modalContent": "custom-procedures_modal-content_1wJuI",
	"body": "custom-procedures_body_1H7Iq",
	"workspace": "custom-procedures_workspace_2fBw7",
	"options-row": "custom-procedures_options-row_2qj-y",
	"optionsRow": "custom-procedures_options-row_2qj-y",
	"option-card": "custom-procedures_option-card_1Gtvt",
	"optionCard": "custom-procedures_option-card_1Gtvt",
	"option-icon": "custom-procedures_option-icon_1q0dQ",
	"optionIcon": "custom-procedures_option-icon_1q0dQ",
	"option-title": "custom-procedures_option-title_21_2M",
	"optionTitle": "custom-procedures_option-title_21_2M",
	"checkbox-row": "custom-procedures_checkbox-row_x0PwF",
	"checkboxRow": "custom-procedures_checkbox-row_x0PwF",
	"button-row": "custom-procedures_button-row_3EJDk",
	"buttonRow": "custom-procedures_button-row_3EJDk",
	"ok-button": "custom-procedures_ok-button_3XcwO",
	"okButton": "custom-procedures_ok-button_3XcwO",
	"cancel-button": "custom-procedures_cancel-button_HKBG7",
	"cancelButton": "custom-procedures_cancel-button_HKBG7"
};

/***/ }),
/* 1654 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .spinner_container_-o2Vc {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n} .spinner_spinner_2EFkd {\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n    border: 6px solid;\n    border-color: #ff794d transparent #ff794d transparent;\n    animation: spinner_spinner_2EFkd 1.2s linear infinite;\n} [theme=\"dark\"] .spinner_spinner_2EFkd {\n    border-color: #ff794d transparent #ff794d transparent;\n} @keyframes spinner_spinner_2EFkd {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n", ""]);

// exports
exports.locals = {
	"container": "spinner_container_-o2Vc",
	"spinner": "spinner_spinner_2EFkd"
};

/***/ }),
/* 1655 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /* wrapper to allow for touch slop if we decide to add it */ .delete-button_delete-button_JjOIx {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: pointer;\n    transition: all 0.15s ease-out;\n} .delete-button_delete-button-visible_mAZdj {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;  /* Mask the icon animation */\n  width: 1.75rem;\n  height: 1.75rem;\n  box-shadow: 0px 0px 0px 2px hsla(30, 100%, 65%, 0.35);\n  background-color: hsla(30, 100%, 65%, 1);\n  color: hsla(0, 100%, 100%, 1);\n  border-radius: 50%;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n  transition: all 0.15s ease-out;\n} .delete-button_delete-icon_2tDWR {\n    position: relative;\n    margin: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    transform-origin: 50%;\n}\n", ""]);

// exports
exports.locals = {
	"delete-button": "delete-button_delete-button_JjOIx",
	"deleteButton": "delete-button_delete-button_JjOIx",
	"delete-button-visible": "delete-button_delete-button-visible_mAZdj",
	"deleteButtonVisible": "delete-button_delete-button-visible_mAZdj",
	"delete-icon": "delete-button_delete-icon_2tDWR",
	"deleteIcon": "delete-button_delete-icon_2tDWR"
};

/***/ }),
/* 1656 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/* @todo: refactor this class name, and component: `sprite-selector` to `sprite` */\n\n.sprite-selector-item_sprite-selector-item_3c9Kl {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    position: relative;\n\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 0.8rem;\n    color: hsla(225, 15%, 40%, 1);\n    border-width: 2px;\n    border-style: solid;\n    border-color: hsla(0, 0%, 0%, 0.15);\n    border-radius: 0.5rem;\n\n    text-align: center;\n    cursor: pointer;\n\n    -webkit-user-select: none;\n\n       -moz-user-select: none;\n\n        -ms-user-select: none;\n\n            user-select: none;\n}\n\n.sprite-selector-item_sprite-selector-item_3c9Kl.sprite-selector-item_is-selected_EE4jo {\n    box-shadow: 0px 0px 0px 4px hsla(30, 100%, 65%, 0.35);\n    border: 2px solid hsla(30, 100%, 65%, 1);\n    background: hsla(0, 100%, 100%, 1);\n}\n\n[theme=\"dark\"] .sprite-selector-item_sprite-selector-item_3c9Kl.sprite-selector-item_is-selected_EE4jo {\n    background: hsla(215, 100%, 95%, 1);\n}\n\n.sprite-selector-item_sprite-selector-item_3c9Kl:hover {\n    border: 2px solid hsla(30, 100%, 65%, 1);\n    background: hsla(0, 100%, 100%, 1);\n}\n\n[theme=\"dark\"] .sprite-selector-item_sprite-selector-item_3c9Kl:hover {\n    background: hsla(215, 100%, 95%, 1);\n}\n\n.sprite-selector-item_sprite-selector-item_3c9Kl:hover .sprite-selector-item_sprite-image_1uVIo, .sprite-selector-item_is-selected_EE4jo .sprite-selector-item_sprite-image_1uVIo {\n    filter: drop-shadow(0px 0px 2px  hsla(0, 0%, 0%, 0.15));\n}\n\n/* Outer/Inner chicanery is to prevent layouts when sprite image changes */\n\n.sprite-selector-item_sprite-image-outer_1P6nT {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    transform: translateZ(0);\n}\n\n.sprite-selector-item_sprite-image-inner_x0FPK {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.sprite-selector-item_sprite-image_1uVIo {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    pointer-events: none;\n    max-width: 32px;\n    max-height: 32px;\n}\n\n.sprite-selector-item_sprite-info_RsbR2 {\n    padding: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem;\n\n    font-size: 0.625rem;\n    color: hsla(225, 15%, 40%, 1);\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n.sprite-selector-item_sprite-name_3gG3r, .sprite-selector-item_sprite-details_XPpRw {\n    /*\n        For truncating overflowing text gracefully\n        Min-width is for a bug: https://css-tricks.com/flexbox-truncated-text\n    */\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    min-width: 0;\n}\n\n.sprite-selector-item_sprite-details_XPpRw {\n    margin-top: 0.125rem;\n    font-size: 0.5rem;\n}\n\n.sprite-selector-item_is-selected_EE4jo .sprite-selector-item_sprite-info_RsbR2 {\n    background: hsla(30, 100%, 65%, 1);\n    color: hsla(0, 100%, 100%, 1);\n}\n\n.sprite-selector-item_delete-button_1V2xC {\n    position: absolute;\n    top: -.625rem;\n    z-index: auto;\n}\n\n[dir=\"ltr\"] .sprite-selector-item_delete-button_1V2xC {\n    right: -.625rem;\n}\n\n[dir=\"rtl\"] .sprite-selector-item_delete-button_1V2xC {\n    left: -.625rem;\n}\n\n.sprite-selector-item_number_PKBcU {\n    position: absolute;\n    top: 0.15rem;\n    font-size: 0.625rem;\n    font-weight: bold;\n    z-index: 2;\n}\n\n[dir=\"ltr\"] .sprite-selector-item_number_PKBcU {\n    left: 0.15rem;\n}\n\n[dir=\"rtl\"] .sprite-selector-item_number_PKBcU {\n    right: 0.15rem;\n}\n", ""]);

// exports
exports.locals = {
	"sprite-selector-item": "sprite-selector-item_sprite-selector-item_3c9Kl",
	"spriteSelectorItem": "sprite-selector-item_sprite-selector-item_3c9Kl",
	"is-selected": "sprite-selector-item_is-selected_EE4jo",
	"isSelected": "sprite-selector-item_is-selected_EE4jo",
	"sprite-image": "sprite-selector-item_sprite-image_1uVIo",
	"spriteImage": "sprite-selector-item_sprite-image_1uVIo",
	"sprite-image-outer": "sprite-selector-item_sprite-image-outer_1P6nT",
	"spriteImageOuter": "sprite-selector-item_sprite-image-outer_1P6nT",
	"sprite-image-inner": "sprite-selector-item_sprite-image-inner_x0FPK",
	"spriteImageInner": "sprite-selector-item_sprite-image-inner_x0FPK",
	"sprite-info": "sprite-selector-item_sprite-info_RsbR2",
	"spriteInfo": "sprite-selector-item_sprite-info_RsbR2",
	"sprite-name": "sprite-selector-item_sprite-name_3gG3r",
	"spriteName": "sprite-selector-item_sprite-name_3gG3r",
	"sprite-details": "sprite-selector-item_sprite-details_XPpRw",
	"spriteDetails": "sprite-selector-item_sprite-details_XPpRw",
	"delete-button": "sprite-selector-item_delete-button_1V2xC",
	"deleteButton": "sprite-selector-item_delete-button_1V2xC",
	"number": "sprite-selector-item_number_PKBcU"
};

/***/ }),
/* 1657 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .context-menu_context-menu_3Ahoz {\n    min-width: 130px;\n    padding: 5px 0; /* The white strip at the top and bottom of the menu */\n    margin: 2px 0 0; /* To keep the menu below the cursor comfortably */\n    font-size: 0.85rem;\n    text-align: left;\n    background-color: hsla(0, 100%, 100%, 1);\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: calc(0.5rem / 2);\n    box-shadow: 0px 0px 5px 1px hsla(0, 0%, 0%, 0.15);\n    pointer-events: none;\n    transition: opacity 0.2s ease;\n    z-index: 10000;\n} [theme=\"dark\"] .context-menu_context-menu_3Ahoz {\n    background-color: hsla(215, 100%, 95%, 1);\n} .context-menu_menu-item_2ReLI {\n    padding: 8px 12px;\n    white-space: nowrap;\n    cursor: pointer;\n    transition: 0.1s ease;\n} .context-menu_menu-item_2ReLI:hover {\n    background: #ffa64d;\n    color: white;\n} .context-menu_menu-item-bordered_13kR6 {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.15);\n} [theme=\"dark\"] .context-menu_menu-item-bordered_13kR6 {\n    border-color: hsla(215, 50%, 90%, 1);\n} .context-menu_menu-item-danger_mMyy6:hover {\n    background: hsla(30, 100%, 55%, 1);\n}\n", ""]);

// exports
exports.locals = {
	"context-menu": "context-menu_context-menu_3Ahoz",
	"contextMenu": "context-menu_context-menu_3Ahoz",
	"menu-item": "context-menu_menu-item_2ReLI",
	"menuItem": "context-menu_menu-item_2ReLI",
	"menu-item-bordered": "context-menu_menu-item-bordered_13kR6",
	"menuItemBordered": "context-menu_menu-item-bordered_13kR6",
	"menu-item-danger": "context-menu_menu-item-danger_mMyy6",
	"menuItemDanger": "context-menu_menu-item-danger_mMyy6"
};

/***/ }),
/* 1658 */,
/* 1659 */,
/* 1660 */,
/* 1661 */,
/* 1662 */,
/* 1663 */,
/* 1664 */,
/* 1665 */,
/* 1666 */,
/* 1667 */,
/* 1668 */,
/* 1669 */,
/* 1670 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .action-menu_menu-container_2bnPG {\n    display: flex;\n    flex-direction: column-reverse;\n    transition: 0.2s;\n    position: relative;\n    pointer-events: auto;\n} .action-menu_button_31je5 {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    background: hsla(30, 100%, 65%, 1);\n    outline: none;\n    border: none;\n    transition: background-color 0.2s;\n} button::-moz-focus-inner {\n    border: 0;\n} .action-menu_button_31je5:hover {\n    background: #e066ff;\n} .action-menu_button_31je5:active {\n    padding: inherit;\n} .action-menu_button_31je5.action-menu_coming-soon_ljJAN:hover {\n    background: hsl(55, 1%, 85%);\n} .action-menu_main-button_2m3TE {\n    border-radius: 100%;\n    width: 2.75rem;\n    height: 2.75rem;\n    box-shadow: 0 0 0 4px hsla(30, 100%, 65%, 0.35);\n    z-index: 46;\n    transition: transform, box-shadow 0.5s;\n} .action-menu_main-button_2m3TE:hover {\n  transform: scale(1.1);\n  box-shadow: 0 0 0 6px hsla(30, 100%, 65%, 0.35);\n} .action-menu_main-icon_A7K5D {\n    width: calc(2.75rem - 1rem);\n    height: calc(2.75rem - 1rem);\n} [dir=\"rtl\"] .action-menu_main-icon_A7K5D {\n    transform: scaleX(-1);\n} .action-menu_more-buttons-outer_1tVn_ {\n    /*\n        Need to use two divs to set different overflow x/y\n        which is needed to get animation to look right while\n        allowing the tooltips to be visible.\n    */\n    overflow-y: hidden;\n\n    background: hsla(30, 60%, 50%, 1);\n    border-top-left-radius: 2.25rem;\n    border-top-right-radius: 2.25rem;\n    width: 2.25rem;\n    margin-left: calc((2.75rem - 2.25rem) / 2);\n    margin-right: calc((2.75rem - 2.25rem) / 2);\n\n    position: absolute;\n    bottom: calc(2.75rem);\n\n    margin-bottom: calc(2.75rem / -2);\n    padding-bottom: calc(2.75rem / 2);\n} .action-menu_more-buttons_39RLQ {\n    max-height: 0;\n    transition: max-height 1s;\n    overflow-x: visible;\n    display: flex;\n    flex-direction: column;\n    z-index: 10; /* @todo justify */\n} .action-menu_file-input_rJdU0 {\n    display: none;\n} .action-menu_expanded_SjWya .action-menu_more-buttons_39RLQ {\n    max-height: 1000px; /* Arbitrary, needs to be a value in order for animation to run */\n} .action-menu_force-hidden_2bzzZ .action-menu_more-buttons_39RLQ {\n    display: none; /* This property does not animate */\n} .action-menu_more-buttons_39RLQ:first-child { /* Round off top button */\n    border-top-right-radius: 2.25rem;\n    border-top-left-radius: 2.25rem;\n} .action-menu_more-button_FdlvY {\n    width: 2.25rem;\n    height: 2.25rem;\n    background: hsla(30, 60%, 50%, 1);\n} .action-menu_more-icon_3wj6o {\n    width: calc(2.25rem - 1rem);\n    height: calc(2.25rem - 1rem);\n} .action-menu_coming-soon_ljJAN .action-menu_more-icon_3wj6o {\n    opacity: 0.5;\n} /*\n    @todo needs to be refactored with coming soon tooltip overrides.\n    The \"!important\"s are for the same reason as with coming soon, the library\n    is not very easy to style.\n*/ .action-menu_tooltip_1YpkD {\n    background-color: #e066ff !important;\n    opacity: 1 !important;\n    border: 1px solid hsla(0, 0%, 0%, .1) !important;\n    box-shadow: 0 0 .5rem hsla(0, 0%, 0%, .25) !important;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif !important;\n} .action-menu_tooltip_1YpkD:after {\n    background-color: #e066ff;\n} .action-menu_coming-soon-tooltip_1Hk4Q {\n    background-color: hsl(55, 1%, 85%) !important;\n} .action-menu_coming-soon-tooltip_1Hk4Q:after {\n    background-color: hsl(55, 1%, 85%) !important;\n} .action-menu_tooltip_1YpkD {\n    border: 1px solid hsla(0, 0%, 0%, .1) !important;\n    border-radius: calc(0.5rem / 2) !important;\n    box-shadow: 0 0 .5rem hsla(0, 0%, 0%, .25) !important;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif !important;\n    z-index: 47 !important;\n} .action-menu_tooltip_1YpkD:after {\n    content: \"\";\n    border-top: 1px solid hsla(0, 0%, 0%, .1) !important;\n    border-left: 0 !important;\n    border-bottom: 0 !important;\n    border-right: 1px solid hsla(0, 0%, 0%, .1) !important;\n    border-radius: 0.125rem;\n    height: 0.5rem !important;\n    width: 0.5rem !important;\n} .action-menu_tooltip_1YpkD.place-left:after {\n    margin-top: -0.25rem !important;\n    right: -0.25rem !important;\n    transform: rotate(45deg) !important;\n} .action-menu_tooltip_1YpkD.place-right:after {\n    margin-top: -0.25rem !important;\n    left: -0.25rem !important;\n    transform: rotate(-135deg) !important;\n} .action-menu_tooltip_1YpkD.place-top:after {\n    margin-right: -0.25rem !important;\n    bottom: -0.25rem !important;\n    transform: rotate(135deg) !important;\n} .action-menu_tooltip_1YpkD.place-bottom:after {\n    margin-left: -0.25rem !important;\n    top: -0.25rem !important;\n    transform: rotate(-45deg) !important;\n}\n", ""]);

// exports
exports.locals = {
	"menu-container": "action-menu_menu-container_2bnPG",
	"menuContainer": "action-menu_menu-container_2bnPG",
	"button": "action-menu_button_31je5",
	"coming-soon": "action-menu_coming-soon_ljJAN",
	"comingSoon": "action-menu_coming-soon_ljJAN",
	"main-button": "action-menu_main-button_2m3TE",
	"mainButton": "action-menu_main-button_2m3TE",
	"main-icon": "action-menu_main-icon_A7K5D",
	"mainIcon": "action-menu_main-icon_A7K5D",
	"more-buttons-outer": "action-menu_more-buttons-outer_1tVn_",
	"moreButtonsOuter": "action-menu_more-buttons-outer_1tVn_",
	"more-buttons": "action-menu_more-buttons_39RLQ",
	"moreButtons": "action-menu_more-buttons_39RLQ",
	"file-input": "action-menu_file-input_rJdU0",
	"fileInput": "action-menu_file-input_rJdU0",
	"expanded": "action-menu_expanded_SjWya",
	"force-hidden": "action-menu_force-hidden_2bzzZ",
	"forceHidden": "action-menu_force-hidden_2bzzZ",
	"more-button": "action-menu_more-button_FdlvY",
	"moreButton": "action-menu_more-button_FdlvY",
	"more-icon": "action-menu_more-icon_3wj6o",
	"moreIcon": "action-menu_more-icon_3wj6o",
	"tooltip": "action-menu_tooltip_1YpkD",
	"coming-soon-tooltip": "action-menu_coming-soon-tooltip_1Hk4Q",
	"comingSoonTooltip": "action-menu_coming-soon-tooltip_1Hk4Q"
};

/***/ }),
/* 1671 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .selector_wrapper_1v6kq {\n    width: 150px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background: hsla(215, 50%, 90%, 1);\n} .selector_new-buttons_2iXR0 {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    padding: 0.75rem 0;\n    color: hsla(30, 100%, 65%, 1);\n    text-align: center;\n    background: none;\n    pointer-events: none;\n} .selector_new-buttons_2iXR0:before {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right:0;\n    background: linear-gradient(rgba(232,237,241, 0),rgba(232,237,241, 1));\n    height: 100px;\n    width: 100%;\n    pointer-events: none;\n} [theme=\"dark\"] .selector_new-buttons_2iXR0:before {\n    background: linear-gradient(rgba(94, 96, 97, 0),rgb(59, 59, 59));\n} .selector_new-buttons_2iXR0 > button + button {\n    margin-top: 0.75rem;\n} .selector_list-area_2Lh0T {\n    /* Must have some height (recalculated by flex-grow) in order to scroll */\n    height: 0;\n    flex-grow: 1;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n} .selector_list-area_2Lh0T:after {\n    /* Make sure there is room to scroll beyond the last tile */\n    content: '';\n    display: block;\n    height: 70px;\n    width: 100%;\n    flex-shrink: 0;\n    order: 99999999;\n} .selector_list-item_2s63_ {\n    width: 5rem;\n    height: 5rem;\n    margin: 0.5rem auto;\n} @media only screen and (max-width: 1249px) {\n    .selector_wrapper_1v6kq {\n        width: 80px;\n    }\n\n    .selector_list-item_2s63_ {\n        width: 4rem;\n    }\n} .selector_list-item_2s63_.selector_placeholder_1MsBA {\n    background: white;\n    filter: opacity(15%) brightness(0%);\n}\n", ""]);

// exports
exports.locals = {
	"wrapper": "selector_wrapper_1v6kq",
	"new-buttons": "selector_new-buttons_2iXR0",
	"newButtons": "selector_new-buttons_2iXR0",
	"list-area": "selector_list-area_2Lh0T",
	"listArea": "selector_list-area_2Lh0T",
	"list-item": "selector_list-item_2s63_",
	"listItem": "selector_list-item_2s63_",
	"placeholder": "selector_placeholder_1MsBA"
};

/***/ }),
/* 1672 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.asset-panel_wrapper_26zMp {\n    display: flex;\n    flex-grow: 1;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    background: white;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 0.85rem;\n}\n\n[theme=\"dark\"] .asset-panel_wrapper_26zMp {\n    background: hsla(215, 100%, 95%, 1);\n}\n\n[dir=\"ltr\"] .asset-panel_wrapper_26zMp {\n    border-top-right-radius: 0.5rem;\n    border-bottom-right-radius: 0.5rem;\n}\n\n[dir=\"rtl\"] .asset-panel_wrapper_26zMp {\n    border-top-left-radius: 0.5rem;\n    border-bottom-left-radius: 0.5rem;\n}\n\n.asset-panel_detail-area_3eEbw {\n    display: flex;\n    flex-grow: 1;\n    flex-shrink: 1;\n    overflow: visible;\n}\n\n[dir=\"ltr\"] .asset-panel_detail-area_3eEbw {\n    border-left: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n\n[dir=\"rtl\"] .asset-panel_detail-area_3eEbw {\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"wrapper": "asset-panel_wrapper_26zMp",
	"detail-area": "asset-panel_detail-area_3eEbw",
	"detailArea": "asset-panel_detail-area_3eEbw"
};

/***/ }),
/* 1673 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.label_input-group_3U1bG {\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.label_input-group-column_UfEsB {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.label_input-group-column_UfEsB span {\n    margin-bottom: .25rem;\n}\n\n.label_input-label_3WQec, .label_input-label-secondary_2TwJI {\n    font-size: 0.625rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: default;\n\n    white-space: nowrap;\n}\n\n[dir=\"ltr\"] .label_input-label_3WQec, [dir=\"ltr\"] .label_input-label-secondary_2TwJI {\n    margin-right: .5rem;\n}\n\n[dir=\"rtl\"] .label_input-label_3WQec, [dir=\"rtl\"] .label_input-label-secondary_2TwJI {\n    margin-left: .5rem;\n}\n\n.label_input-label_3WQec {\n    font-weight: bold;\n}\n", ""]);

// exports
exports.locals = {
	"input-group": "label_input-group_3U1bG",
	"inputGroup": "label_input-group_3U1bG",
	"input-group-column": "label_input-group-column_UfEsB",
	"inputGroupColumn": "label_input-group-column_UfEsB",
	"input-label": "label_input-label_3WQec",
	"inputLabel": "label_input-label_3WQec",
	"input-label-secondary": "label_input-label-secondary_2TwJI",
	"inputLabelSecondary": "label_input-label-secondary_2TwJI"
};

/***/ }),
/* 1674 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.input_input-form_2EIqD {\n    height: 2rem;\n    padding: 0 0.75rem;\n\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 0.625rem;\n    font-weight: bold;\n    color: hsla(225, 15%, 40%, 1);\n\n    border-width: 1px;\n    border-style: solid;\n    border-color: hsla(0, 0%, 0%, 0.15);\n    border-radius: 2rem;\n\n    outline: none;\n    cursor: text;\n    transition: 0.25s ease-out; /* @todo: standardize with var */\n    box-shadow: none;\n\n    /*\n        For truncating overflowing text gracefully\n        Min-width is for a bug: https://css-tricks.com/flexbox-truncated-text\n        @todo: move this out into a mixin or a helper component\n    */\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    min-width: 0;\n}\n\n[theme=\"dark\"] .input_input-form_2EIqD {\n    background: hsla(215, 75%, 95%, 1);\n}\n\n.input_input-form_2EIqD:hover {\n    border-color: hsla(30, 100%, 65%, 1);\n}\n\n[theme=\"dark\"] .input_input-form_2EIqD:hover {\n    border-color: #333;\n}\n\n.input_input-form_2EIqD:focus {\n    border-color: hsla(30, 100%, 65%, 1);\n    box-shadow: 0 0 0 0.25rem hsla(30, 100%, 65%, 0.35);\n}\n\n[theme=\"dark\"] .input_input-form_2EIqD:focus {\n    border-color: #333;\n}\n\n.input_input-small_1bkbs {\n    width: 3rem;\n    padding: 0 0.5rem;\n    text-overflow: clip;\n    text-align: center;\n}\n", ""]);

// exports
exports.locals = {
	"input-form": "input_input-form_2EIqD",
	"inputForm": "input_input-form_2EIqD",
	"input-small": "input_input-small_1bkbs",
	"inputSmall": "input_input-small_1bkbs"
};

/***/ }),
/* 1675 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .dial_container_1JhHX {\n    padding: 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} .dial_dial-container_33mkQ {\n    position: relative;\n} .dial_dial-face_2aWlr, .dial_dial-handle_1OHhg, .dial_gauge_3bwaY {\n    position: absolute;\n    top: 0;\n    left: 0;\n    overflow: visible;\n} .dial_dial-face_2aWlr {\n    width: 100%;\n} .dial_dial-handle_1OHhg {\n    cursor: pointer;\n    width: 40px;\n    height: 40px;\n    /* Use margin to make positioning via top/left easier */\n    margin-left: calc(40px / -2);\n    margin-top: calc(40px / -2);\n} .dial_gauge-path_VQesE {\n    fill: hsla(30, 100%, 65%, 0.35);\n    stroke: hsla(30, 100%, 65%, 1);\n    stroke-width: 1px;\n}\n", ""]);

// exports
exports.locals = {
	"container": "dial_container_1JhHX",
	"dial-container": "dial_dial-container_33mkQ",
	"dialContainer": "dial_dial-container_33mkQ",
	"dial-face": "dial_dial-face_2aWlr",
	"dialFace": "dial_dial-face_2aWlr",
	"dial-handle": "dial_dial-handle_1OHhg",
	"dialHandle": "dial_dial-handle_1OHhg",
	"gauge": "dial_gauge_3bwaY",
	"gauge-path": "dial_gauge-path_VQesE",
	"gaugePath": "dial_gauge-path_VQesE"
};

/***/ }),
/* 1676 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* Copied from scratch-paint color-picker.css. */ .Popover-body {\n    background: white;\n    border: 1px solid #ddd;\n    padding: 4px;\n    border-radius: 4px;\n    padding: 4px;\n    box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, .3);\n} .Popover-tipShape {\n    fill: white;\n    stroke: #ddd;\n} .direction-picker_button-row_33xQd {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n} .direction-picker_icon-button_xjdG3 {\n    margin: 0.25rem;\n    border: none;\n    background: none;\n    outline: none;\n    cursor: pointer;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} .direction-picker_icon-button_xjdG3:active > img {\n    width: 20px;\n    height: 20px;\n    transform: scale(1.15);\n} .direction-picker_icon-button_xjdG3 > img {\n    transition: transform 0.1s;\n    filter: grayscale(100%);\n} .direction-picker_icon-button_xjdG3.direction-picker_active_1Fso_ > img {\n    filter: none;\n}\n", ""]);

// exports
exports.locals = {
	"button-row": "direction-picker_button-row_33xQd",
	"buttonRow": "direction-picker_button-row_33xQd",
	"icon-button": "direction-picker_icon-button_xjdG3",
	"iconButton": "direction-picker_icon-button_xjdG3",
	"active": "direction-picker_active_1Fso_"
};

/***/ }),
/* 1677 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.sprite-info_sprite-info_2qOXw {\n    padding: 0.75rem;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    background-color: white;\n    color: hsla(225, 15%, 40%, 1);\n    border-top-left-radius: 0.5rem;\n    border-top-right-radius: 0.5rem;\n    border-bottom: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n\n[theme=\"dark\"] .sprite-info_sprite-info_2qOXw {\n    background-color: hsla(215, 100%, 95%, 1);\n}\n\n.sprite-info_row_1J2d3 {\n    display: flex;\n    justify-content: space-between;\n}\n\n.sprite-info_row-primary_2Sk7Q {\n    margin-bottom: 0.5rem;\n}\n\n.sprite-info_label_PWLUC { opacity: 0.8; }\n\n.sprite-info_group_-xfiq {\n    display: inline-flex;\n    flex-direction: row; /* makes columns, for each label/form group */\n    align-items: center;\n}\n\n.sprite-info_column_232AG {\n    display: inline-flex;\n    flex-direction: column; /* put label above input */\n    align-items: flex-start;\n}\n\n.sprite-info_column_232AG span {\n    margin-bottom: .25rem;\n}\n\n.sprite-info_icon-wrapper_1fbXG {\n    display: inline-block;\n    width: calc(2rem + 2px);\n    height: calc(2rem + 2px);\n    padding: 0.5rem;\n    outline: none;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n.sprite-info_icon_3o-TD {\n    width: 100%;\n    height: 100%;\n}\n\n/* @todo: refactor radio divs to input */\n\n.sprite-info_radio-wrapper_3U5_F {\n    white-space: nowrap; /* make sure visibilty buttons don't wrap */\n}\n\n.sprite-info_radio_3rYDe {\n    filter: saturate(0);\n    cursor: pointer;\n}\n\n.sprite-info_radio_3rYDe.sprite-info_is-active_1iGNv {\n    filter: none;\n}\n\n.sprite-info_radio_3rYDe.sprite-info_is-disabled_3dAtr {\n    cursor: default;\n}\n\n.sprite-info_radio-first_1ROI1 {\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n\n[dir=\"ltr\"] .sprite-info_radio-first_1ROI1 {\n    border-top-left-radius: calc(0.5rem / 2);\n    border-bottom-left-radius: calc(0.5rem / 2);\n}\n\n[dir=\"rtl\"] .sprite-info_radio-first_1ROI1 {\n    border-top-right-radius: calc(0.5rem / 2);\n    border-bottom-right-radius: calc(0.5rem / 2);\n}\n\n.sprite-info_radio-first_1ROI1:focus {\n    border-color: hsla(30, 100%, 65%, 1);\n    box-shadow: inset 0 0 0 -2px hsla(0, 0%, 0%, 0.15);\n}\n\n.sprite-info_radio-last_3VIe7 {\n    border-bottom: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-top: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n\n[dir=\"ltr\"] .sprite-info_radio-last_3VIe7 {\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-left: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-top-right-radius: calc(0.5rem / 2);\n    border-bottom-right-radius: calc(0.5rem / 2);\n}\n\n[dir=\"rtl\"] .sprite-info_radio-last_3VIe7 {\n    border-left: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-top-left-radius: calc(0.5rem / 2);\n    border-bottom-left-radius: calc(0.5rem / 2);\n}\n\n.sprite-info_radio-last_3VIe7:focus {\n    border-color: hsla(30, 100%, 65%, 1);\n    box-shadow: inset 0 0 0 -2px hsla(0, 0%, 0%, 0.15);\n}\n\n.sprite-info_icon_3o-TD {\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n}\n\n.sprite-info_rotation-select_2Fbo2 {\n    width: 100%;\n    height: 1.85rem;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    outline: none;\n}\n\n.sprite-info_rotation-select_2Fbo2:focus {\n    border-color: hsla(30, 100%, 65%, 1);\n    box-shadow: inset 0 0 0 1px hsla(0, 0%, 0%, 0.15));\n}\n\n.sprite-info_larger-input_2sT6m input {\n    width: 4rem;\n}\n\n.sprite-info_sprite-input_IL2gd {\n    width: 8rem;\n}\n", ""]);

// exports
exports.locals = {
	"sprite-info": "sprite-info_sprite-info_2qOXw",
	"spriteInfo": "sprite-info_sprite-info_2qOXw",
	"row": "sprite-info_row_1J2d3",
	"row-primary": "sprite-info_row-primary_2Sk7Q",
	"rowPrimary": "sprite-info_row-primary_2Sk7Q",
	"label": "sprite-info_label_PWLUC",
	"group": "sprite-info_group_-xfiq",
	"column": "sprite-info_column_232AG",
	"icon-wrapper": "sprite-info_icon-wrapper_1fbXG",
	"iconWrapper": "sprite-info_icon-wrapper_1fbXG",
	"icon": "sprite-info_icon_3o-TD",
	"radio-wrapper": "sprite-info_radio-wrapper_3U5_F",
	"radioWrapper": "sprite-info_radio-wrapper_3U5_F",
	"radio": "sprite-info_radio_3rYDe",
	"is-active": "sprite-info_is-active_1iGNv",
	"isActive": "sprite-info_is-active_1iGNv",
	"is-disabled": "sprite-info_is-disabled_3dAtr",
	"isDisabled": "sprite-info_is-disabled_3dAtr",
	"radio-first": "sprite-info_radio-first_1ROI1",
	"radioFirst": "sprite-info_radio-first_1ROI1",
	"radio-last": "sprite-info_radio-last_3VIe7",
	"radioLast": "sprite-info_radio-last_3VIe7",
	"rotation-select": "sprite-info_rotation-select_2Fbo2",
	"rotationSelect": "sprite-info_rotation-select_2Fbo2",
	"larger-input": "sprite-info_larger-input_2sT6m",
	"largerInput": "sprite-info_larger-input_2sT6m",
	"sprite-input": "sprite-info_sprite-input_IL2gd",
	"spriteInput": "sprite-info_sprite-input_IL2gd"
};

/***/ }),
/* 1678 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .sprite-selector_sprite-selector_1s2N2 {\n    flex-grow: 1;\n    position: relative;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    margin-right: calc(0.5rem / 2);\n    background-color: hsla(215, 75%, 95%, 1);\n    border-top-right-radius: 0.5rem;\n    border-top-left-radius: 0.5rem;\n    border-color: hsla(0, 0%, 0%, 0.15);\n    border-width: 1px;\n    border-style: solid;\n    border-bottom: 0;\n} .sprite-selector_sprite-wrapper_1CrRS {\n    /*\n        Our goal is to fit sprites evenly in a row without leftover space.\n        Flexbox's `space between` property gets us close, but doesn't flow\n        well when the # of items per row > 1 and less than the max per row.\n\n        Solving by explicitly calc'ing the width of each sprite. Setting\n        `border-box` simplifies things, because content, padding and\n        border-width all are included in the width, leaving us only to subtract\n        the left + right margins.\n\n        @todo: make room for the scrollbar\n    */\n    box-sizing: border-box;\n    width: calc((100% / 5 ) - 0.5rem);\n    max-width: 6rem;\n    min-width: 4rem;\n    min-height: 4rem; /* @todo: calc height same as width */\n    margin: calc(0.5rem / 2);\n} .sprite-selector_sprite_uquo4 {\n    height: 100%;\n} .sprite-selector_scroll-wrapper_3qlZ7 {\n    /*\n       Sets the sprite-selector items as a scrollable pane\n\n        @todo: Safari: pane doesn't stretch to fill height;\n        @todo: Adding `position: relative` still doesn't fix Safari scrolling pane, and\n              also introduces a new bug in Chrome when vertically resizing window down,\n              then back up, introduces white space in the outside the page container.\n    */\n    height: calc(100% - 6rem);\n    overflow-y: auto;\n} .sprite-selector_scroll-wrapper-dragging_2tIRk {\n    background-color: hsla(215, 100%, 77%, 1);\n} .sprite-selector_items-wrapper_17MEf {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n\n    padding-top: calc(0.5rem / 2);\n    padding-left: calc(0.5rem / 2);\n    padding-right: calc(0.5rem / 2);\n    padding-bottom: 0.5rem;\n\n    overflow: hidden;\n} .sprite-selector_add-button_13cFJ {\n    position: absolute;\n    bottom: 0.75rem;\n} [dir=\"ltr\"] .sprite-selector_add-button_13cFJ {\n    right: 1rem;\n} [dir=\"rtl\"] .sprite-selector_add-button_13cFJ {\n    left: 1rem;\n} .sprite-selector_raised_hptEE {\n    background-color: hsla(215, 100%, 77%, 1);\n    transition: all 0.25s ease;\n} .sprite-selector_raised_hptEE:hover {\n    background-color: hsla(215, 100%, 77%, 1);\n    transform: scale(1.05);\n} .sprite-selector_raised_hptEE:hover {\n    animation-name: sprite-selector_wiggle_3VXHB;\n    animation-duration: 500ms;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-in-out;\n    background-color: hsla(215, 100%, 77%, 1);\n} @keyframes sprite-selector_wiggle_3VXHB {\n    0% {transform: rotate(3deg) scale(1.05);}\n    25% {transform: rotate(-3deg) scale(1.05);}\n    50% {transform: rotate(5deg) scale(1.05);}\n    75% {transform: rotate(-2deg) scale(1.05);}\n    100% {transform: rotate(0deg) scale(1.05);}\n} .sprite-selector_receivedBlocks_3hqzt {\n    animation: sprite-selector_glowing_1Uyz7 250ms;\n} @keyframes sprite-selector_glowing_1Uyz7 {\n    10% { box-shadow: 0 0 10px #7fff1e; }\n    90% { box-shadow: 0 0 10px #7fff1e; }\n    100% { box-shadow: none; }\n} .sprite-selector_placeholder_qVnyI > .sprite-selector_sprite_uquo4 {\n    background: black;\n    filter: opacity(15%) brightness(0%);\n}\n", ""]);

// exports
exports.locals = {
	"sprite-selector": "sprite-selector_sprite-selector_1s2N2",
	"spriteSelector": "sprite-selector_sprite-selector_1s2N2",
	"sprite-wrapper": "sprite-selector_sprite-wrapper_1CrRS",
	"spriteWrapper": "sprite-selector_sprite-wrapper_1CrRS",
	"sprite": "sprite-selector_sprite_uquo4",
	"scroll-wrapper": "sprite-selector_scroll-wrapper_3qlZ7",
	"scrollWrapper": "sprite-selector_scroll-wrapper_3qlZ7",
	"scroll-wrapper-dragging": "sprite-selector_scroll-wrapper-dragging_2tIRk",
	"scrollWrapperDragging": "sprite-selector_scroll-wrapper-dragging_2tIRk",
	"items-wrapper": "sprite-selector_items-wrapper_17MEf",
	"itemsWrapper": "sprite-selector_items-wrapper_17MEf",
	"add-button": "sprite-selector_add-button_13cFJ",
	"addButton": "sprite-selector_add-button_13cFJ",
	"raised": "sprite-selector_raised_hptEE",
	"wiggle": "sprite-selector_wiggle_3VXHB",
	"receivedBlocks": "sprite-selector_receivedBlocks_3hqzt",
	"glowing": "sprite-selector_glowing_1Uyz7",
	"placeholder": "sprite-selector_placeholder_qVnyI"
};

/***/ }),
/* 1679 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.stage-selector_stage-selector_2gOfn {\n    background-clip: padding-box;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative; /* For the add backdrop button */\n    flex-grow: 1;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    background-color: hsla(0, 100%, 100%, 1);\n    color: hsla(225, 15%, 40%, 1);\n    border-top-left-radius: 0.5rem;\n    border-top-right-radius: 0.5rem;\n    border-color: hsla(0, 0%, 0%, 0.15);\n    border-width: 1px;\n    border-style: solid;\n    border-bottom: 0;\n    cursor: pointer;\n    transition: all 0.25s ease;\n}\n\n[theme=\"dark\"] .stage-selector_stage-selector_2gOfn {\n    background-color: hsla(215, 75%, 95%, 1);\n}\n\n.stage-selector_stage-selector_2gOfn.stage-selector_is-selected_1hK41 {\n    border-top-left-radius: .625rem;\n    border-top-right-radius: .625rem;\n    border-color: hsla(30, 100%, 65%, 1);\n    box-shadow: 0px 0px 0px 4px hsla(30, 100%, 65%, 0.35);\n}\n\n.stage-selector_stage-selector_2gOfn:hover {\n    border-color: hsla(30, 100%, 65%, 1);\n}\n\n.stage-selector_header_Q8vgs {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: calc(2.75rem - 2px);\n    background-color: white;\n    color: hsla(225, 15%, 40%, 1);\n    border-top-left-radius: 0.5rem;\n    border-top-right-radius: 0.5rem;\n    border-bottom: 1px solid hsla(0, 0%, 0%, 0.15);\n    width: 100%;\n    transition: background-color 0.25s ease;\n}\n\n[theme=\"dark\"] .stage-selector_header_Q8vgs {\n    background-color: hsla(215, 75%, 95%, 1);\n}\n\n.stage-selector_header-title_31bX- {\n    font-size: 0.625rem;\n    font-weight: bold;\n    color: hsla(225, 15%, 40%, 1);\n\n    /* @todo: make this a mixin for all UI text labels */\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    transition: color 0.25s ease;\n}\n\n.stage-selector_stage-selector_2gOfn.stage-selector_is-selected_1hK41 .stage-selector_header_Q8vgs {\n    background-color: hsla(30, 100%, 65%, 1);\n}\n\n.stage-selector_stage-selector_2gOfn.stage-selector_is-selected_1hK41 .stage-selector_header-title_31bX- {\n    color: hsla(0, 100%, 100%, 1);\n}\n\n.stage-selector_count_R71ju {\n    padding: 0.3rem 0.75rem;\n    font-size: 0.625rem;\n    color: hsla(225, 15%, 40%, 1);\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n.stage-selector_label_XZ-2e {\n    margin: 0.75rem 0 0.25rem;\n    font-size: 0.6rem;\n    color: hsla(225, 15%, 40%, 1);\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    text-align: center;\n}\n\n.stage-selector_costume-canvas_2UktB {\n    display: block;\n    margin-top: .25rem;\n    width: 100%;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: .25rem;\n    box-shadow: inset 0 0 4px hsla(0, 0%, 0%, 0.15);\n    max-width: 64px;\n    max-height: 48px;\n}\n\n.stage-selector_add-button_oXPPX {\n    position: absolute;\n    bottom: 0.75rem;\n}\n\n.stage-selector_stage-selector_2gOfn.stage-selector_raised_3yRmS, .stage-selector_stage-selector_2gOfn.stage-selector_raised_3yRmS .stage-selector_header_Q8vgs {\n    background-color: hsla(215, 100%, 77%, 1);\n    transition: all 0.25s ease;\n}\n\n.stage-selector_raised_3yRmS:hover {\n    transform: scale(1.05);\n}\n\n.stage-selector_receivedBlocks_27hDS {\n    animation: stage-selector_glowing_24P3U 250ms;\n}\n\n@keyframes stage-selector_glowing_24P3U {\n    10% { box-shadow: 0 0 10px #7fff1e; }\n    90% { box-shadow: 0 0 10px #7fff1e; }\n    100% { box-shadow: none; }\n}\n", ""]);

// exports
exports.locals = {
	"stage-selector": "stage-selector_stage-selector_2gOfn",
	"stageSelector": "stage-selector_stage-selector_2gOfn",
	"is-selected": "stage-selector_is-selected_1hK41",
	"isSelected": "stage-selector_is-selected_1hK41",
	"header": "stage-selector_header_Q8vgs",
	"header-title": "stage-selector_header-title_31bX-",
	"headerTitle": "stage-selector_header-title_31bX-",
	"count": "stage-selector_count_R71ju",
	"label": "stage-selector_label_XZ-2e",
	"costume-canvas": "stage-selector_costume-canvas_2UktB",
	"costumeCanvas": "stage-selector_costume-canvas_2UktB",
	"add-button": "stage-selector_add-button_oXPPX",
	"addButton": "stage-selector_add-button_oXPPX",
	"raised": "stage-selector_raised_3yRmS",
	"receivedBlocks": "stage-selector_receivedBlocks_27hDS",
	"glowing": "stage-selector_glowing_24P3U"
};

/***/ }),
/* 1680 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n.target-pane_target-pane_2ZTsJ {\n    /* Makes columns for the sprite library selector + and the stage selector */\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n}\n\n.target-pane_stage-selector-wrapper_2LIOy {\n    display: flex;\n    flex-basis: 72px;\n    flex-shrink: 0;\n}\n\n[dir=\"ltr\"] .target-pane_stage-selector-wrapper_2LIOy {\n    margin-left: calc(0.5rem / 2);\n}\n\n[dir=\"rtl\"] .target-pane_stage-selector-wrapper_2LIOy {\n    margin-right: calc(0.5rem / 2);\n}\n", ""]);

// exports
exports.locals = {
	"target-pane": "target-pane_target-pane_2ZTsJ",
	"targetPane": "target-pane_target-pane_2ZTsJ",
	"stage-selector-wrapper": "target-pane_stage-selector-wrapper_2LIOy",
	"stageSelectorWrapper": "target-pane_stage-selector-wrapper_2LIOy"
};

/***/ }),
/* 1681 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .meter_green_1TDyl {\n    fill: rgb(171, 220, 170);\n    stroke: rgb(174, 211, 168);\n} .meter_yellow_YVGHr {\n    fill: rgb(251, 219, 130);\n    stroke: rgb(239, 212, 134);\n} .meter_red_S3fdX {\n    fill: rgb(251, 194, 142);\n    stroke: rgb(235, 189, 142);\n} .meter_mask-container_m3uVt {\n    position: relative;\n} .meter_mask_1s9vE {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transform-origin: top;\n    will-change: transform;\n    background: hsla(215, 100%, 95%, 1);\n    opacity: 0.75;\n}\n", ""]);

// exports
exports.locals = {
	"green": "meter_green_1TDyl",
	"yellow": "meter_yellow_YVGHr",
	"red": "meter_red_S3fdX",
	"mask-container": "meter_mask-container_m3uVt",
	"maskContainer": "meter_mask-container_m3uVt",
	"mask": "meter_mask_1s9vE"
};

/***/ }),
/* 1682 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .waveform_container_243I7 {\n    width: 100%;\n} .waveform_waveform-path_2LeiM {\n    /*\n        This color is lighter than sound-primary, but\n        cannot use alpha because of overlapping elements.\n    */\n    fill: hsl(300, 54%, 72%);\n    stroke: hsla(300, 48%, 50%, 1);\n} .waveform_baseline_2hE-m {\n    stroke: hsla(300, 48%, 50%, 1);\n}\n", ""]);

// exports
exports.locals = {
	"container": "waveform_container_243I7",
	"waveform-path": "waveform_waveform-path_2LeiM",
	"waveformPath": "waveform_waveform-path_2LeiM",
	"baseline": "waveform_baseline_2hE-m"
};

/***/ }),
/* 1683 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .record-modal_modal-content_2_5Zs {\n    width: 600px;\n} .record-modal_body_3oKwC {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n} [theme=\"dark\"] .record-modal_body_3oKwC {\n    background: hsla(215, 75%, 95%, 1);\n} .record-modal_visualization-container_1QsU5 {\n    display: flex;\n    justify-content: space-around;\n} .record-modal_meter-container_3vpbL, .record-modal_waveform-container_1d_a5 {\n    background: hsla(215, 100%, 95%, 1);\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 5px;\n    padding: 3px;\n    /* Force these to be on their own render layer because they update often */\n    transform: translateZ(0);\n} .record-modal_meter-container_3vpbL {\n    margin-right: 5px;\n    height: 180px;\n} .record-modal_waveform-container_1d_a5 {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 180px;\n    position: relative;\n} .record-modal_help-text_hQoTW {\n    margin: 10px auto 0;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: rgb(167, 170, 181);\n    font-size: 0.95rem;\n    font-weight: 500;\n} .record-modal_playing-text_20o4n {\n    color: hsla(30, 100%, 65%, 1);\n} .record-modal_recording-text_3AD3U {\n    color: hsla(20, 100%, 55%, 1);\n} .record-modal_main-button-row_3Vifq {\n    display: flex;\n    justify-content: space-around;\n    margin-top: 15px;\n} .record-modal_main-button-row_3Vifq button {\n    padding: 0.5rem 0.75rem;\n    border-radius: 0.25rem;\n    background: transparent;\n    border: none;\n} .record-modal_main-button-row_3Vifq button:disabled {\n    opacity: 0.25;\n} .record-modal_main-button-row_3Vifq button:active, .record-modal_main-button-row_3Vifq button:focus {\n    outline: none;\n} .record-modal_button-row_3qJ_b {\n    font-weight: bolder;\n    text-align: right;\n    display: flex;\n    justify-content: space-between;\n} .record-modal_button-row_3qJ_b button {\n    padding: 0.75rem 1rem;\n    border-radius: 0.25rem;\n    background: white;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    font-weight: 600;\n    font-size: 0.85rem;\n    color: hsla(30, 100%, 65%, 1);\n} .record-modal_button-row_3qJ_b button.record-modal_ok-button_CoeuZ {\n    background: hsla(30, 100%, 65%, 1);\n    border: hsla(30, 100%, 65%, 1);\n    color: white;\n} .record-modal_button-row_3qJ_b button + button {\n    margin-left: 0.5rem;\n} .record-modal_main-button_3eLhw {\n    text-align: center;\n} .record-modal_record-button_1Lapz {\n    overflow: visible;\n} .record-modal_record-button-circle_Cr04k {\n    fill: hsla(20, 100%, 55%, 1);\n    stroke: hsla(20, 100%, 45%, 1);\n} .record-modal_record-button-circle-outline_2nUeJ {\n    fill: hsla(20, 100%, 55%, 1);\n    opacity: 0.2;\n    transition: 0.1s;\n} [dir=\"rtl\"] .record-modal_rerecord-button_3JZP1 img {\n    transform: scaleX(-1);\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "record-modal_modal-content_2_5Zs",
	"modalContent": "record-modal_modal-content_2_5Zs",
	"body": "record-modal_body_3oKwC",
	"visualization-container": "record-modal_visualization-container_1QsU5",
	"visualizationContainer": "record-modal_visualization-container_1QsU5",
	"meter-container": "record-modal_meter-container_3vpbL",
	"meterContainer": "record-modal_meter-container_3vpbL",
	"waveform-container": "record-modal_waveform-container_1d_a5",
	"waveformContainer": "record-modal_waveform-container_1d_a5",
	"help-text": "record-modal_help-text_hQoTW",
	"helpText": "record-modal_help-text_hQoTW",
	"playing-text": "record-modal_playing-text_20o4n",
	"playingText": "record-modal_playing-text_20o4n",
	"recording-text": "record-modal_recording-text_3AD3U",
	"recordingText": "record-modal_recording-text_3AD3U",
	"main-button-row": "record-modal_main-button-row_3Vifq",
	"mainButtonRow": "record-modal_main-button-row_3Vifq",
	"button-row": "record-modal_button-row_3qJ_b",
	"buttonRow": "record-modal_button-row_3qJ_b",
	"ok-button": "record-modal_ok-button_CoeuZ",
	"okButton": "record-modal_ok-button_CoeuZ",
	"main-button": "record-modal_main-button_3eLhw",
	"mainButton": "record-modal_main-button_3eLhw",
	"record-button": "record-modal_record-button_1Lapz",
	"recordButton": "record-modal_record-button_1Lapz",
	"record-button-circle": "record-modal_record-button-circle_Cr04k",
	"recordButtonCircle": "record-modal_record-button-circle_Cr04k",
	"record-button-circle-outline": "record-modal_record-button-circle-outline_2nUeJ",
	"recordButtonCircleOutline": "record-modal_record-button-circle-outline_2nUeJ",
	"rerecord-button": "record-modal_rerecord-button_3JZP1",
	"rerecordButton": "record-modal_rerecord-button_3JZP1"
};

/***/ }),
/* 1684 */,
/* 1685 */,
/* 1686 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .audio-trimmer_absolute_1slrG {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n\n    /* Force the browser to paint separately to avoid composite cost with waveform */\n    transform: translateZ(0);\n} .audio-trimmer_selector_UDd9z {\n    cursor: pointer;\n} .audio-trimmer_trim-background_MidSN {\n    cursor: pointer;\n    touch-action: none;\n} .audio-trimmer_trim-background-mask_1AUPs {\n    border: 1px solid hsla(20, 100%, 45%, 1);\n    opacity: 0.5;\n\n    background: repeating-linear-gradient(\n        45deg,\n        hsla(20, 100%, 55%, 1),\n        hsla(20, 100%, 55%, 1) 10px,\n        hsla(20, 100%, 45%, 1) 10px,\n        hsla(20, 100%, 45%, 1) calc(2 * 10px)\n    );\n} .audio-trimmer_selection-background_28rcO {\n    background: hsla(30, 100%, 65%, 1);\n    opacity: 0.5;\n} .audio-trimmer_start-trim-background_1AI_1 .audio-trimmer_trim-background-mask_1AUPs {\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n} .audio-trimmer_end-trim-background_3P7V_ .audio-trimmer_trim-background-mask_1AUPs {\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n} .audio-trimmer_trim-line_3PC6A {\n    position: absolute;\n    top: 0;\n    width: 0px;\n    height: 100%;\n    border: 1px solid hsla(20, 100%, 45%, 1);\n} .audio-trimmer_selector_UDd9z .audio-trimmer_trim-line_3PC6A {\n    border: 1px solid hsla(30, 60%, 50%, 1);\n} .audio-trimmer_playhead-container_Louu9 {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n} .audio-trimmer_playhead_3CwOH {\n    /*\n        Even though playhead is just a line, it is 100% width (the width of the waveform)\n        so that we can use transform: translateX() using percentages.\n    */\n    width: 100%;\n    height: 100%;\n    border-left: 1px solid hsla(30, 100%, 65%, 1);\n    border-top: none;\n    border-bottom: none;\n    border-right: none;\n} .audio-trimmer_right-handle_3gcG9 {\n    transform: scaleX(-1);\n} .audio-trimmer_selector_UDd9z .audio-trimmer_left-handle_1qrCu {\n    left: -1px\n} .audio-trimmer_selector_UDd9z .audio-trimmer_right-handle_3gcG9 {\n    right: -1px\n} .audio-trimmer_trimmer_3g1Ji .audio-trimmer_left-handle_1qrCu {\n    right: -1px\n} .audio-trimmer_trimmer_3g1Ji .audio-trimmer_right-handle_3gcG9 {\n    left: -1px\n} .audio-trimmer_trim-handle_2yTDR {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    right: 0;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} .audio-trimmer_trimmer_3g1Ji .audio-trimmer_trim-handle_2yTDR {\n    filter: hue-rotate(150deg);\n} .audio-trimmer_trim-handle_2yTDR img {\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    left: calc(3px * 1.5);\n\n    /* Make sure image dragging isn't triggered */\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    user-drag: none;\n    -webkit-user-drag: none; /* Autoprefixer doesn't seem to work for this */\n\n    transition: 0.2s;\n} .audio-trimmer_top-trim-handle_1CMHx {\n    top: calc(-30px + 3px);\n} .audio-trimmer_bottom-trim-handle_3ZW0o {\n    bottom: calc(-30px + 3px);\n} .audio-trimmer_top-trim-handle_1CMHx img {\n    transform: scaleY(-1);\n}\n", ""]);

// exports
exports.locals = {
	"absolute": "audio-trimmer_absolute_1slrG",
	"selector": "audio-trimmer_selector_UDd9z",
	"trim-background": "audio-trimmer_trim-background_MidSN",
	"trimBackground": "audio-trimmer_trim-background_MidSN",
	"trim-background-mask": "audio-trimmer_trim-background-mask_1AUPs",
	"trimBackgroundMask": "audio-trimmer_trim-background-mask_1AUPs",
	"selection-background": "audio-trimmer_selection-background_28rcO",
	"selectionBackground": "audio-trimmer_selection-background_28rcO",
	"start-trim-background": "audio-trimmer_start-trim-background_1AI_1",
	"startTrimBackground": "audio-trimmer_start-trim-background_1AI_1",
	"end-trim-background": "audio-trimmer_end-trim-background_3P7V_",
	"endTrimBackground": "audio-trimmer_end-trim-background_3P7V_",
	"trim-line": "audio-trimmer_trim-line_3PC6A",
	"trimLine": "audio-trimmer_trim-line_3PC6A",
	"playhead-container": "audio-trimmer_playhead-container_Louu9",
	"playheadContainer": "audio-trimmer_playhead-container_Louu9",
	"playhead": "audio-trimmer_playhead_3CwOH",
	"right-handle": "audio-trimmer_right-handle_3gcG9",
	"rightHandle": "audio-trimmer_right-handle_3gcG9",
	"left-handle": "audio-trimmer_left-handle_1qrCu",
	"leftHandle": "audio-trimmer_left-handle_1qrCu",
	"trimmer": "audio-trimmer_trimmer_3g1Ji",
	"trim-handle": "audio-trimmer_trim-handle_2yTDR",
	"trimHandle": "audio-trimmer_trim-handle_2yTDR",
	"top-trim-handle": "audio-trimmer_top-trim-handle_1CMHx",
	"topTrimHandle": "audio-trimmer_top-trim-handle_1CMHx",
	"bottom-trim-handle": "audio-trimmer_bottom-trim-handle_3ZW0o",
	"bottomTrimHandle": "audio-trimmer_bottom-trim-handle_3ZW0o"
};

/***/ }),
/* 1687 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .icon-button_container_Vz-T6 {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    cursor: pointer;\n    font-size: 0.75rem;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: hsla(30, 100%, 65%, 1);\n    border-radius: 0.5rem;\n} .icon-button_container_Vz-T6 + .icon-button_container_Vz-T6 {\n    margin-top: 1.25rem;\n} .icon-button_title_3_47t {\n    margin-top: 0.5rem;\n    text-align: center;\n} .icon-button_disabled_14mfd {\n    opacity: 0.5;\n    pointer-events: none;\n} .icon-button_container_Vz-T6:active {\n    background-color: hsla(30, 100%, 65%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"container": "icon-button_container_Vz-T6",
	"title": "icon-button_title_3_47t",
	"disabled": "icon-button_disabled_14mfd"
};

/***/ }),
/* 1688 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .sound-editor_editor-container_3jiU9 {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    padding: calc(2 * 0.5rem);\n} .sound-editor_row_1WmTk {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n} [dir=\"rtl\"] .sound-editor_row-reverse_28RND {\n    flex-direction: row-reverse;\n} .sound-editor_row_1WmTk + .sound-editor_row_1WmTk {\n    margin-top: calc(2 * 0.5rem);\n} .sound-editor_input-group_2pRFc {\n    display: flex;\n    flex-direction: row;\n} [dir=\"ltr\"] .sound-editor_input-group_2pRFc + .sound-editor_input-group_2pRFc {\n    margin-left: calc(2 * 0.5rem);\n} [dir=\"rtl\"] .sound-editor_input-group_2pRFc + .sound-editor_input-group_2pRFc {\n    margin-right: calc(2 * 0.5rem);\n} [dir=\"ltr\"] .sound-editor_input-group_2pRFc {\n    padding-right: calc(2 * 0.5rem);\n    border-right: 1px dashed hsla(0, 0%, 0%, 0.15);\n} [dir=\"rtl\"] .sound-editor_input-group_2pRFc {\n    padding-left: calc(2 * 0.5rem);\n    border-left: 1px dashed hsla(0, 0%, 0%, 0.15);\n} [dir=\"rtl\"] .sound-editor_row-reverse_28RND > .sound-editor_input-group_2pRFc {\n    padding-left: 0;\n    padding-right: calc(2 * 0.5rem);\n    border-left: none;\n    border-right: 1px dashed hsla(0, 0%, 0%, 0.15);\n} .sound-editor_waveform-container_18kSV {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n\n    position: relative;\n\n    background: hsla(300, 53%, 60%, 0.15);\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 5px;\n\n    margin-top: 20px;\n    margin-bottom: 20px;\n} .sound-editor_button_28oLj {\n    height: 2rem;\n    padding: 0.35rem;\n    outline: none;\n    background: white;\n    border-radius: 0.25rem;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    cursor: pointer;\n    font-size: 0.85rem;\n    transition: 0.2s;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    margin: 0px;\n} [theme=\"dark\"] .sound-editor_button_28oLj {\n    background-color: hsla(215, 100%, 95%, 1);\n} .sound-editor_button_28oLj > img {\n    flex-grow: 1;\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 1.25rem;\n} .sound-editor_round-button_3rlXm {\n    height: 3rem;\n    width: 3rem;\n    outline: none;\n    background: hsla(30, 100%, 65%, 1);\n    border-radius: 100%;\n    border: 4px solid hsla(0, 100%, 100%, 0.75);\n    cursor: pointer;\n    padding: 0.75rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} [theme=\"dark\"] .sound-editor_round-button_3rlXm {\n    border-color: transparent;\n} .sound-editor_round-button_3rlXm > img {\n    flex-grow: 1;\n    max-width: 100%;\n    max-height: 100%;\n    /*min-width: 1.5rem;*/\n} [dir=\"rtl\"] .sound-editor_undo-icon_3EU8L, [dir=\"rtl\"] .sound-editor_redo-icon_38hFn {\n    transform: scaleX(-1);\n} .sound-editor_trim-button_ZHKTA {\n    display: flex;\n    align-items: center;\n    color: hsla(225, 15%, 40%, 1);\n    font-size: 0.625rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n\n} [dir=\"ltr\"] .sound-editor_trim-button_ZHKTA {\n    margin-left: 1rem;\n} [dir=\"rtl\"] .sound-editor_trim-button_ZHKTA {\n    margin-right: 1rem;\n} .sound-editor_trim-button_ZHKTA > img {\n    width: 1.25rem;\n} .sound-editor_effect-button_2rpzQ {\n    flex-basis: 60px;\n    color: hsla(225, 15%, 40%, 1);\n    font-size: 0.625rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    padding: 0.25rem 0;\n} .sound-editor_effect-button_2rpzQ + .sound-editor_effect-button_2rpzQ {\n    margin: 0;\n} .sound-editor_effect-button_2rpzQ img {\n    width: 1.25rem;\n    height: 1.25rem;\n    margin-bottom: -0.375rem;\n} .sound-editor_tool-button_2WOCS {\n    flex-basis: 60px;\n    color: hsla(225, 15%, 40%, 1);\n    font-size: 0.625rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    padding: 0.25rem 0;\n} .sound-editor_tool-button_2WOCS + .sound-editor_tool-button_2WOCS {\n    margin: 0;\n} .sound-editor_tool-button_2WOCS img {\n    width: 4rem;\n    height: 1.5rem;\n    margin-bottom: -0.375rem;\n} [dir=\"rtl\"] .sound-editor_flip-in-rtl_2pijE img {\n    transform: scaleX(-1);\n} [dir=\"ltr\"] .sound-editor_button-group_3TC6- {\n    margin-left: 1rem;\n} [dir=\"rtl\"] .sound-editor_button-group_3TC6- {\n    margin-right: 1rem;\n} .sound-editor_button-group_3TC6- {\n    display: flex;\n} .sound-editor_button-group_3TC6- .sound-editor_button_28oLj {\n    border-radius: 0;\n} [dir=\"ltr\"] .sound-editor_button-group_3TC6- .sound-editor_button_28oLj {\n    border-left: none;\n} [dir=\"rtl\"] .sound-editor_button-group_3TC6- .sound-editor_button_28oLj {\n    border-right: none;\n} [dir=\"ltr\"] .sound-editor_button-group_3TC6- .sound-editor_button_28oLj:last-of-type {\n    border-top-right-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem;\n} [dir=\"ltr\"] .sound-editor_button-group_3TC6- .sound-editor_button_28oLj:first-of-type {\n    border-left: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-top-left-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n} [dir=\"rtl\"] .sound-editor_button-group_3TC6- .sound-editor_button_28oLj:last-of-type {\n    border-top-left-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n} [dir=\"rtl\"] .sound-editor_button-group_3TC6- .sound-editor_button_28oLj:first-of-type {\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-top-right-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem;\n} .sound-editor_button_28oLj:disabled > img {\n    opacity: 0.25;\n}\n", ""]);

// exports
exports.locals = {
	"editor-container": "sound-editor_editor-container_3jiU9",
	"editorContainer": "sound-editor_editor-container_3jiU9",
	"row": "sound-editor_row_1WmTk",
	"row-reverse": "sound-editor_row-reverse_28RND",
	"rowReverse": "sound-editor_row-reverse_28RND",
	"input-group": "sound-editor_input-group_2pRFc",
	"inputGroup": "sound-editor_input-group_2pRFc",
	"waveform-container": "sound-editor_waveform-container_18kSV",
	"waveformContainer": "sound-editor_waveform-container_18kSV",
	"button": "sound-editor_button_28oLj",
	"round-button": "sound-editor_round-button_3rlXm",
	"roundButton": "sound-editor_round-button_3rlXm",
	"undo-icon": "sound-editor_undo-icon_3EU8L",
	"undoIcon": "sound-editor_undo-icon_3EU8L",
	"redo-icon": "sound-editor_redo-icon_38hFn",
	"redoIcon": "sound-editor_redo-icon_38hFn",
	"trim-button": "sound-editor_trim-button_ZHKTA",
	"trimButton": "sound-editor_trim-button_ZHKTA",
	"effect-button": "sound-editor_effect-button_2rpzQ",
	"effectButton": "sound-editor_effect-button_2rpzQ",
	"tool-button": "sound-editor_tool-button_2WOCS",
	"toolButton": "sound-editor_tool-button_2WOCS",
	"flip-in-rtl": "sound-editor_flip-in-rtl_2pijE",
	"flipInRtl": "sound-editor_flip-in-rtl_2pijE",
	"button-group": "sound-editor_button-group_3TC6-",
	"buttonGroup": "sound-editor_button-group_3TC6-"
};

/***/ }),
/* 1689 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .green-flag_green-flag_mk1Vo {\n    width: 2rem;\n    height: 2rem;\n    padding: 0.375rem;\n    border-radius: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    user-drag: none;\n    cursor: pointer;\n} .green-flag_green-flag_mk1Vo:hover {\n    background-color: hsla(30, 100%, 65%, 0.15);\n} .green-flag_green-flag_mk1Vo.green-flag_is-active_17xP9 {\n    background-color: hsla(30, 100%, 65%, 0.35);\n}\n", ""]);

// exports
exports.locals = {
	"green-flag": "green-flag_green-flag_mk1Vo",
	"greenFlag": "green-flag_green-flag_mk1Vo",
	"is-active": "green-flag_is-active_17xP9",
	"isActive": "green-flag_is-active_17xP9"
};

/***/ }),
/* 1690 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .stop-all_stop-all_15h2t {\n    width: 2rem;\n    height: 2rem;\n    padding: 0.375rem;\n    border-radius: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: pointer;\n} .stop-all_stop-all_15h2t:hover {\n    background-color: hsla(30, 100%, 65%, 0.15);\n} .stop-all_stop-all_15h2t {\n    opacity: 0.5;\n} .stop-all_stop-all_15h2t.stop-all_is-active_PEgCP {\n    opacity: 1;\n}\n", ""]);

// exports
exports.locals = {
	"stop-all": "stop-all_stop-all_15h2t",
	"stopAll": "stop-all_stop-all_15h2t",
	"is-active": "stop-all_is-active_PEgCP",
	"isActive": "stop-all_is-active_PEgCP"
};

/***/ }),
/* 1691 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .turbo-mode_turbo-container_1qQFO {\n    display: flex;\n    align-items: center;\n    padding: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} .turbo-mode_turbo-icon_A_vJA {\n    margin: 0.25rem;\n} .turbo-mode_turbo-label_1v23d {\n    font-size: 0.625rem;\n    font-weight: bold;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: hsla(38, 100%, 55%, 1);\n    white-space: nowrap;\n}\n", ""]);

// exports
exports.locals = {
	"turbo-container": "turbo-mode_turbo-container_1qQFO",
	"turboContainer": "turbo-mode_turbo-container_1qQFO",
	"turbo-icon": "turbo-mode_turbo-icon_A_vJA",
	"turboIcon": "turbo-mode_turbo-icon_A_vJA",
	"turbo-label": "turbo-mode_turbo-label_1v23d",
	"turboLabel": "turbo-mode_turbo-label_1v23d"
};

/***/ }),
/* 1692 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .framerate-indicator_framerate-container_3JPah {\n    display: flex;\n    align-items: center;\n    padding: 0.25rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n} .framerate-indicator_framerate-label_39miY {\n    font-size: 0.625rem;\n    font-weight: bold;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: hsla(38, 100%, 55%, 1);\n    white-space: nowrap;\n}\n", ""]);

// exports
exports.locals = {
	"framerate-container": "framerate-indicator_framerate-container_3JPah",
	"framerateContainer": "framerate-indicator_framerate-container_3JPah",
	"framerate-label": "framerate-indicator_framerate-label_39miY",
	"framerateLabel": "framerate-indicator_framerate-label_39miY"
};

/***/ }),
/* 1693 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, ".controls_controls-container_3ZRI_ {\n    display: flex;\n}\n", ""]);

// exports
exports.locals = {
	"controls-container": "controls_controls-container_3ZRI_",
	"controlsContainer": "controls_controls-container_3ZRI_"
};

/***/ }),
/* 1694 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.stage-header_stage-header-wrapper_8psPs {\n    position: relative;\n}\n\n.stage-header_stage-header-wrapper-overlay_7uuff {\n    position: fixed;\n    background-color: rgb(232, 237, 241);\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 5000;\n}\n\n/* tw: support dark mode */\n\n[theme=\"dark\"] .stage-header_stage-header-wrapper-overlay_7uuff {\n    background-color: #111;\n}\n\n/* tw: do not show color in header when embedded */\n\n.stage-header_embedded_j6-4O {\n    background-color: transparent;\n}\n\n.stage-header_stage-menu-wrapper_28MSs {\n    display: flex;\n    margin: auto;\n    justify-content: space-between;\n    flex-shrink: 0;\n    align-items: center;\n    height: 2.75rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n}\n\n.stage-header_embed-scratch-logo_3TP67 img {\n    height:  1.6rem;\n    vertical-align: middle;\n    opacity: .6;\n}\n\n.stage-header_stage-size-row_1F3iv {\n    display: flex;\n}\n\n.stage-header_stage-size-toggle-group_np08Q {\n    display: flex;\n}\n\n[dir=\"ltr\"] .stage-header_stage-size-toggle-group_np08Q {\n    margin-right: .2rem;\n}\n\n[dir=\"rtl\"] .stage-header_stage-size-toggle-group_np08Q {\n    margin-left: .2rem;\n}\n\n.stage-header_stage-button_4qxON {\n    display: block;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: calc(0.5rem / 2);\n    width: calc(2rem + 2px);\n    height: calc(2rem + 2px);\n    background: hsla(0, 100%, 100%, 1);\n    padding: 0.375rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: pointer;\n}\n\n[theme=\"dark\"] .stage-header_stage-button_4qxON {\n    background: hsla(215, 75%, 95%, 1);\n}\n\n.stage-header_stage-button-icon_1SHv0 {\n    width: 100%;\n    height: 100%;\n}\n\n[dir=\"rtl\"] .stage-header_stage-button-icon_1SHv0 {\n    transform: scaleX(-1);\n}\n\n[dir=\"ltr\"] .stage-header_stage-button-first_2a2U3 {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n}\n\n[dir=\"ltr\"] .stage-header_stage-button-last_36cZh {\n    border-left: none;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n}\n\n[dir=\"rtl\"] .stage-header_stage-button-first_2a2U3 {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n}\n\n[dir=\"rtl\"] .stage-header_stage-button-last_36cZh {\n    border-right: none;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n}\n\n.stage-header_stage-button-toggled-off_2oOpw {\n    filter: saturate(0);\n}\n\n[theme=\"dark\"] .stage-header_stage-button-toggled-off_2oOpw img {\n    filter: brightness(0) invert(1) opacity(0.7);\n}\n\n[theme=\"dark\"] .stage-header_stage-button_4qxON:not(.stage-header_stage-button-first_2a2U3):not(.stage-header_stage-button-last_36cZh) img {\n    filter: brightness(0) invert(1) opacity(0.8);\n}\n", ""]);

// exports
exports.locals = {
	"stage-header-wrapper": "stage-header_stage-header-wrapper_8psPs",
	"stageHeaderWrapper": "stage-header_stage-header-wrapper_8psPs",
	"stage-header-wrapper-overlay": "stage-header_stage-header-wrapper-overlay_7uuff",
	"stageHeaderWrapperOverlay": "stage-header_stage-header-wrapper-overlay_7uuff",
	"embedded": "stage-header_embedded_j6-4O",
	"stage-menu-wrapper": "stage-header_stage-menu-wrapper_28MSs",
	"stageMenuWrapper": "stage-header_stage-menu-wrapper_28MSs",
	"embed-scratch-logo": "stage-header_embed-scratch-logo_3TP67",
	"embedScratchLogo": "stage-header_embed-scratch-logo_3TP67",
	"stage-size-row": "stage-header_stage-size-row_1F3iv",
	"stageSizeRow": "stage-header_stage-size-row_1F3iv",
	"stage-size-toggle-group": "stage-header_stage-size-toggle-group_np08Q",
	"stageSizeToggleGroup": "stage-header_stage-size-toggle-group_np08Q",
	"stage-button": "stage-header_stage-button_4qxON",
	"stageButton": "stage-header_stage-button_4qxON",
	"stage-button-icon": "stage-header_stage-button-icon_1SHv0",
	"stageButtonIcon": "stage-header_stage-button-icon_1SHv0",
	"stage-button-first": "stage-header_stage-button-first_2a2U3",
	"stageButtonFirst": "stage-header_stage-button-first_2a2U3",
	"stage-button-last": "stage-header_stage-button-last_36cZh",
	"stageButtonLast": "stage-header_stage-button-last_36cZh",
	"stage-button-toggled-off": "stage-header_stage-button-toggled-off_2oOpw",
	"stageButtonToggledOff": "stage-header_stage-button-toggled-off_2oOpw"
};

/***/ }),
/* 1695 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .loupe_color-picker_1hE1x {\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-radius: 100%;\n    border: 4px solid hsla(0, 0%, 0%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"color-picker": "loupe_color-picker_1hE1x",
	"colorPicker": "loupe_color-picker_1hE1x"
};

/***/ }),
/* 1696 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.monitor_monitor-container_BKHcx {\n    position: absolute;\n    background: hsla(215, 100%, 95%, 1); /* tw: do not look different in dark mode */\n    z-index: 48;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: calc(0.5rem / 2);\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 0.75rem;\n    transition: box-shadow 0.2s;\n    pointer-events: all;\n    overflow: hidden;\n    color: #575e75; /* tw: explicitly set color to match Scratch */\n}\n\n.monitor_monitor_1DS0_:hover {\n    cursor: pointer;\n}\n\n.monitor_dragging_1m_Kt {\n    z-index: 1010;\n    box-shadow: 3px 3px 5px #888888;\n}\n\n.monitor_default-monitor_2KHFc {\n    display: flex;\n    flex-direction: column;\n    padding: 3px;\n}\n\n.monitor_label_1Jx1h {\n    font-weight: bold;\n    text-align: center;\n    margin: 0 5px;\n}\n\n.monitor_value_2DN5C {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 40px;\n    text-align: center;\n    color: white;\n    margin: 0 5px;\n    border-radius: calc(0.5rem / 2);\n    padding: 0 2px;\n    white-space: pre-wrap;\n    transform: translateZ(0); /* Fixes flickering in Safari */\n}\n\n.monitor_large-value_3DIcK {\n    min-height: 1.4rem;\n    min-width: 3rem;\n    padding: 0.1rem 0.25rem;\n    text-align: center;\n    color: white;\n    font-size: 1rem;\n    white-space: pre-wrap;\n    transform: translateZ(0); /* Fixes flickering in Safari */\n}\n\n.monitor_row_3kEbv {\n    display: flex;\n    flex-direction: row;\n}\n\n.monitor_slider_18owZ {\n    width: 100%;\n    transform: translateZ(0); /* Fixes flickering in Safari */\n}\n\n.monitor_list-monitor_2sZXc {\n    display: flex;\n    flex-direction: column;\n}\n\n.monitor_list-header_2fGXP {\n    background: hsla(0, 100%, 100%, 1);\n    border-bottom: 1px solid hsla(0, 0%, 0%, 0.15);\n    text-align: center;\n    padding: 3px;\n    font-size: 0.75rem;\n    font-weight: bold;\n    color: hsla(225, 15%, 40%, 1); /* tw: do not look different in dark mode */\n    width: 100%;\n}\n\n.monitor_list-body_3Yq5K {\n    background: hsla(215, 100%, 95%, 1); /* tw: do not look different in dark mode */\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    height: calc(100% - 44px);\n}\n\n.monitor_list-row_1nPeY {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    padding: 2px;\n    flex-shrink: 0;\n    transform: translateZ(0); /* Keep sharp when scaled */\n}\n\n.monitor_list-index_1h6b3 {\n    font-weight: bold;\n    color: hsla(225, 15%, 40%, 1); /* tw: do not look different in dark mode */\n    margin: 0 3px;\n}\n\n.monitor_list-value_2Ui8b {\n    min-width: 40px;\n    text-align: left;\n    color: white;\n    margin: 0 3px;\n    border-radius: calc(0.5rem / 2);\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    flex-grow: 1;\n    height: 22px;\n}\n\n.monitor_list-footer_28WLY {\n    background: hsla(0, 100%, 100%, 1);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 3px;\n    font-size: 0.75rem;\n    font-weight: bold;\n    color: hsla(225, 15%, 40%, 1); /* tw: do not look different in dark mode */\n}\n\n.monitor_list-empty_kM_Oc {\n    text-align: center;\n    width: 100%;\n    padding: 5px;\n}\n\n.monitor_input-wrapper_22rQF {\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    background: rgba(0, 0, 0, 0.1);\n}\n\n.monitor_value-inner_2B2eT {\n    padding: 3px 5px;\n    min-height: 22px;\n    overflow: hidden; /* Don't let long values escape container */\n    text-overflow: ellipsis;\n    -webkit-user-select: text;\n       -moz-user-select: text;\n        -ms-user-select: text;\n            user-select: text; /* Allow selecting list values for 2.0 compatibility, only relevant in player */\n    white-space: pre;\n}\n\n.monitor_list-input_NzzdG {\n    padding: 3px 5px;\n    border: 0;\n    background: none;\n    color: hsla(0, 100%, 100%, 1);\n    outline: none;\n    font-size: 0.75rem;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    /* Workaround for Firefox */\n    width: 0;\n    flex: 1 1 auto;\n}\n\n.monitor_remove-button_2PY5T {\n    padding: 0;\n    padding-right: 5px;\n    cursor: pointer;\n    color: hsla(0, 100%, 100%, 1);\n}\n\n.monitor_add-button_3djmW {\n    cursor: pointer;\n    margin-right: 3px;\n}\n\n.monitor_resize-handle_1DCXV {\n    cursor: nwse-resize;\n    margin-left: 3px;\n}\n\n.monitor_footer-length_1SD4W {\n    text-align: center;\n}\n", ""]);

// exports
exports.locals = {
	"monitor-container": "monitor_monitor-container_BKHcx",
	"monitorContainer": "monitor_monitor-container_BKHcx",
	"monitor": "monitor_monitor_1DS0_",
	"dragging": "monitor_dragging_1m_Kt",
	"default-monitor": "monitor_default-monitor_2KHFc",
	"defaultMonitor": "monitor_default-monitor_2KHFc",
	"label": "monitor_label_1Jx1h",
	"value": "monitor_value_2DN5C",
	"large-value": "monitor_large-value_3DIcK",
	"largeValue": "monitor_large-value_3DIcK",
	"row": "monitor_row_3kEbv",
	"slider": "monitor_slider_18owZ",
	"list-monitor": "monitor_list-monitor_2sZXc",
	"listMonitor": "monitor_list-monitor_2sZXc",
	"list-header": "monitor_list-header_2fGXP",
	"listHeader": "monitor_list-header_2fGXP",
	"list-body": "monitor_list-body_3Yq5K",
	"listBody": "monitor_list-body_3Yq5K",
	"list-row": "monitor_list-row_1nPeY",
	"listRow": "monitor_list-row_1nPeY",
	"list-index": "monitor_list-index_1h6b3",
	"listIndex": "monitor_list-index_1h6b3",
	"list-value": "monitor_list-value_2Ui8b",
	"listValue": "monitor_list-value_2Ui8b",
	"list-footer": "monitor_list-footer_28WLY",
	"listFooter": "monitor_list-footer_28WLY",
	"list-empty": "monitor_list-empty_kM_Oc",
	"listEmpty": "monitor_list-empty_kM_Oc",
	"input-wrapper": "monitor_input-wrapper_22rQF",
	"inputWrapper": "monitor_input-wrapper_22rQF",
	"value-inner": "monitor_value-inner_2B2eT",
	"valueInner": "monitor_value-inner_2B2eT",
	"list-input": "monitor_list-input_NzzdG",
	"listInput": "monitor_list-input_NzzdG",
	"remove-button": "monitor_remove-button_2PY5T",
	"removeButton": "monitor_remove-button_2PY5T",
	"add-button": "monitor_add-button_3djmW",
	"addButton": "monitor_add-button_3djmW",
	"resize-handle": "monitor_resize-handle_1DCXV",
	"resizeHandle": "monitor_resize-handle_1DCXV",
	"footer-length": "monitor_footer-length_1SD4W",
	"footerLength": "monitor_footer-length_1SD4W"
};

/***/ }),
/* 1697 */,
/* 1698 */,
/* 1699 */,
/* 1700 */,
/* 1701 */,
/* 1702 */,
/* 1703 */,
/* 1704 */,
/* 1705 */,
/* 1706 */,
/* 1707 */,
/* 1708 */,
/* 1709 */,
/* 1710 */,
/* 1711 */,
/* 1712 */,
/* 1713 */,
/* 1714 */,
/* 1715 */,
/* 1716 */,
/* 1717 */,
/* 1718 */,
/* 1719 */,
/* 1720 */,
/* 1721 */,
/* 1722 */,
/* 1723 */,
/* 1724 */,
/* 1725 */,
/* 1726 */,
/* 1727 */,
/* 1728 */,
/* 1729 */,
/* 1730 */,
/* 1731 */,
/* 1732 */,
/* 1733 */,
/* 1734 */,
/* 1735 */,
/* 1736 */,
/* 1737 */,
/* 1738 */,
/* 1739 */,
/* 1740 */,
/* 1741 */,
/* 1742 */,
/* 1743 */,
/* 1744 */,
/* 1745 */,
/* 1746 */,
/* 1747 */,
/* 1748 */,
/* 1749 */,
/* 1750 */,
/* 1751 */,
/* 1752 */,
/* 1753 */,
/* 1754 */,
/* 1755 */,
/* 1756 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .slider-prompt_modal-content_m3ASz {\n    width: 360px;\n} .slider-prompt_body_fslhG {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n} [theme=\"dark\"] .slider-prompt_body_fslhG {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} .slider-prompt_label_YNsvF {\n    font-weight: 500;\n    margin: 0 0 0.75rem;\n} .slider-prompt_min-input_2KCOC, .slider-prompt_max-input_2iIHC {\n    margin-bottom: 1.5rem;\n    width: 100%;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 5px;\n    padding: 0 1rem;\n    height: 3rem;\n    color: hsla(225, 15%, 40%, 0.75);\n    font-size: .875rem;\n} [theme=\"dark\"] .slider-prompt_min-input_2KCOC, [theme=\"dark\"] .slider-prompt_max-input_2iIHC {\n    background: hsla(215, 75%, 95%, 1);\n    color: white;\n} .slider-prompt_button-row_-JDyB {\n    font-weight: bolder;\n    text-align: right;\n} .slider-prompt_button-row_-JDyB button {\n    padding: 0.75rem 1rem;\n    border-radius: 0.25rem;\n    background: white;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    font-weight: 600;\n    font-size: 0.85rem;\n} .slider-prompt_button-row_-JDyB button.slider-prompt_ok-button_1Ptk- {\n    background: hsla(30, 100%, 65%, 1);\n    border: hsla(30, 100%, 65%, 1);\n    color: white;\n} [dir=\"ltr\"] .slider-prompt_button-row_-JDyB button + button {\n    margin-left: 0.5rem;\n} [dir=\"rtl\"] .slider-prompt_button-row_-JDyB button + button {\n    margin-right: 0.5rem;\n} .slider-prompt_cancel-button_3L-TO {\n    color: black;\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "slider-prompt_modal-content_m3ASz",
	"modalContent": "slider-prompt_modal-content_m3ASz",
	"body": "slider-prompt_body_fslhG",
	"label": "slider-prompt_label_YNsvF",
	"min-input": "slider-prompt_min-input_2KCOC",
	"minInput": "slider-prompt_min-input_2KCOC",
	"max-input": "slider-prompt_max-input_2iIHC",
	"maxInput": "slider-prompt_max-input_2iIHC",
	"button-row": "slider-prompt_button-row_-JDyB",
	"buttonRow": "slider-prompt_button-row_-JDyB",
	"ok-button": "slider-prompt_ok-button_1Ptk-",
	"okButton": "slider-prompt_ok-button_1Ptk-",
	"cancel-button": "slider-prompt_cancel-button_3L-TO",
	"cancelButton": "slider-prompt_cancel-button_3L-TO"
};

/***/ }),
/* 1757 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, ".monitor-list_monitor-list_aXinQ {\n    /* Width/height are set by the component, margin: auto centers in fullscreen */\n    margin: auto;\n    pointer-events: none;\n    overflow: hidden;\n}\n\n.monitor-list_monitor-list-scaler_1jxP7 {\n    /* Scaling for monitors should happen from the top left */\n    transform-origin: left top;\n}\n\n::-ms-clear { display: none; }\n", ""]);

// exports
exports.locals = {
	"monitor-list": "monitor-list_monitor-list_aXinQ",
	"monitorList": "monitor-list_monitor-list_aXinQ",
	"monitor-list-scaler": "monitor-list_monitor-list-scaler_1jxP7",
	"monitorListScaler": "monitor-list_monitor-list-scaler_1jxP7"
};

/***/ }),
/* 1758 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.question_question-container_26Z9Q {\n    margin: 0.5rem;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 0.5rem;\n    border-width: 2px;\n    padding: 1rem;\n    background: white;\n}\n\n.question_question-label_1SgY7 {\n    font-size: 0.75rem;\n    font-weight: bold;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    color: hsla(225, 15%, 40%, 1);\n    padding-bottom: 0.5rem;\n}\n\n.question_question-input_Bvy05 {\n    display: flex; /* Keeps the input from going outside this container */\n    position: relative;\n}\n\n/* tw: input should not look different in dark mode */\n\n[theme=\"dark\"] .question_question-input_Bvy05 input {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 75%, 95%, 1);\n    border-color: hsla(215, 50%, 90%, 1);\n}\n\n[theme=\"dark\"] .question_question-input_Bvy05 input:hover,\n[theme=\"dark\"] .question_question-input_Bvy05 input:focus {\n    border-color: hsla(30, 100%, 65%, 1);\n}\n\n.question_question-submit-button_1zp3B {\n    position: absolute;\n    top: calc(0.5rem / 2);\n\n    width: calc(2rem - 0.5rem);\n    height: calc(2rem - 0.5rem);\n\n    border: none;\n    border-radius: 100%;\n\n    color: white;\n    background: hsla(30, 100%, 65%, 1);\n}\n\n[dir=\"ltr\"] .question_question-submit-button_1zp3B {\n    right: calc(0.5rem / 2);\n}\n\n[dir=\"rtl\"] .question_question-submit-button_1zp3B {\n    left: calc(0.5rem / 2);\n}\n\n/* Input overrides: width, font-weight, focus outline and padding */\n\n.question_question-input_Bvy05 > input {\n    width: 100%;\n    font-weight: normal;\n}\n\n[dir=\"ltr\"] .question_question-input_Bvy05 > input {\n    padding: 0 2rem 0 .75rem; /* To make room for the submit button */\n}\n\n[dir=\"rtl\"] .question_question-input_Bvy05 > input {\n    padding: 0 .75rem 0 2rem; /* To make room for the submit button */\n}\n\n.question_question-input_Bvy05 > input:focus {\n    box-shadow: 0px 0px 0px 3px hsla(30, 100%, 65%, 0.35);\n}\n\n.question_question-submit-button-icon_3E4g- {\n    width: calc(2rem - 0.5rem);\n    height: calc(2rem - 0.5rem);\n    position: relative;\n    right: -7px;\n    left: -7px;\n}\n", ""]);

// exports
exports.locals = {
	"question-container": "question_question-container_26Z9Q",
	"questionContainer": "question_question-container_26Z9Q",
	"question-label": "question_question-label_1SgY7",
	"questionLabel": "question_question-label_1SgY7",
	"question-input": "question_question-input_Bvy05",
	"questionInput": "question_question-input_Bvy05",
	"question-submit-button": "question_question-submit-button_1zp3B",
	"questionSubmitButton": "question_question-submit-button_1zp3B",
	"question-submit-button-icon": "question_question-submit-button-icon_3E4g-",
	"questionSubmitButtonIcon": "question_question-submit-button-icon_3E4g-"
};

/***/ }),
/* 1759 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "@keyframes mic-indicator_popIn_11qHK {\n    from {transform: scale(0.5)}\n    to {transform: scale(1)}\n}\n\n.mic-indicator_mic-img_3cs6_ {\n    margin: 10px;\n    transform-origin: center;\n    animation: mic-indicator_popIn_11qHK 0.1s ease-in-out;\n}\n", ""]);

// exports
exports.locals = {
	"mic-img": "mic-indicator_mic-img_3cs6_",
	"micImg": "mic-indicator_mic-img_3cs6_",
	"popIn": "mic-indicator_popIn_11qHK"
};

/***/ }),
/* 1760 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.stage_stage_DTWo5 {\n    /*\n        Fixes a few extra pixels of margin/padding, that adds on to the bottom\n        of the element, which messes up the chrome padding consistency\n    */\n    display: block;\n\n    border-radius: 0.5rem;\n    border: 0.0625rem solid hsla(0, 0%, 0%, 0.15);\n    overflow: hidden;\n\n    /* @todo: This is for overriding the value being set somewhere. Where is it being set? */\n    background-color: transparent;\n\n    /* Allow custom touch handling to prevent scrolling on Edge */\n    touch-action: none;\n\n    /* Make sure border is not included in size calculation */\n    box-sizing: content-box !important;\n\n    /* enforce overflow + reset position of absolutely-positioned children */\n    position: relative;\n\n    /* anything in the stage such as monitor scrollbars should always use light theme */\n    color-scheme: light;\n}\n\n.stage_stage_DTWo5.stage_full-screen_aqa2I {\n    /* tw: remove fullscreen border */\n}\n\n.stage_with-color-picker_27XHm {\n    cursor: none;\n    z-index: 2010;\n}\n\n.stage_color-picker-background_2HBlI {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.55);\n    display: block;\n    z-index: 2000;\n    top: 0;\n    left: 0;\n}\n\n.stage_stage-wrapper_35Uar {\n    position: relative;\n}\n\n/* we want stage overlays to all be positioned in the same spot as the stage, but can't put them inside the border\nbecause we want their overflow to be visible, and the bordered element must have overflow: hidden set so that the\nstage doesn't \"spill\" out from under its rounded corners. instead, shift these over by the border width. */\n\n.stage_stage-overlays_295lE {\n    position: absolute;\n    top: 0.0625rem;\n    left: 0.0625rem;\n\n    /* the overlay itself should not capture pointer events; only its child elements can do that */\n    pointer-events: none;\n}\n\n.stage_stage-overlays_295lE.stage_full-screen_aqa2I {\n    top: 0.1875rem;\n    left: 0.1875rem;\n}\n\n.stage_monitor-wrapper_2hZ-i,\n.stage_frame-wrapper_iYJos,\n.stage_green-flag-overlay-wrapper_3bCO- {\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n}\n\n.stage_custom-overlays_24Vwt {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.stage_dragging-sprite_2rRMx {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1020;\n    filter: drop-shadow(5px 5px 5px hsla(0, 0%, 0%, 0.15));\n}\n\n.stage_stage-bottom-wrapper_fnczd {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    top: 0;\n    left: 0;\n    overflow: hidden;\n    pointer-events: none;\n}\n\n.stage_mic-indicator_2hH2H {\n    transform-origin: bottom right;\n    z-index: 45;\n    pointer-events: none;\n    align-self: flex-end;\n}\n\n.stage_question-wrapper_3Sii9 {\n    z-index: 49;\n    pointer-events: auto;\n}\n\n.stage_frame_1-hsB {\n    background: hsla(30, 100%, 65%, 0.35);\n    border: 2px solid hsla(30, 100%, 65%, 1);\n    border-radius: 0.5rem;\n    animation-name: stage_flash_3LJh5;\n    animation-duration: 0.75s;\n    animation-fill-mode: forwards; /* Leave at 0 opacity after animation */\n}\n\n.stage_green-flag-overlay-wrapper_3bCO- {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(0,0,0,0.25);\n    border-radius: 0.5rem;\n    pointer-events: all;\n    cursor: pointer;\n}\n\n.stage_green-flag-overlay_219KT {\n    padding: 1rem;\n    border-radius: 100%;\n    background: rgba(255,255,255,0.75);\n    border: 3px solid hsla(0, 100%, 100%, 1);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    width: 5rem;\n    height: 5rem;\n}\n\n.stage_green-flag-overlay_219KT > img {\n    width: 100%;\n    object-fit: contain;\n}\n\n@keyframes stage_flash_3LJh5 {\n    0% { opacity: 1; }\n    100% { opacity: 0; }\n}\n", ""]);

// exports
exports.locals = {
	"stage": "stage_stage_DTWo5",
	"full-screen": "stage_full-screen_aqa2I",
	"fullScreen": "stage_full-screen_aqa2I",
	"with-color-picker": "stage_with-color-picker_27XHm",
	"withColorPicker": "stage_with-color-picker_27XHm",
	"color-picker-background": "stage_color-picker-background_2HBlI",
	"colorPickerBackground": "stage_color-picker-background_2HBlI",
	"stage-wrapper": "stage_stage-wrapper_35Uar",
	"stageWrapper": "stage_stage-wrapper_35Uar",
	"stage-overlays": "stage_stage-overlays_295lE",
	"stageOverlays": "stage_stage-overlays_295lE",
	"monitor-wrapper": "stage_monitor-wrapper_2hZ-i",
	"monitorWrapper": "stage_monitor-wrapper_2hZ-i",
	"frame-wrapper": "stage_frame-wrapper_iYJos",
	"frameWrapper": "stage_frame-wrapper_iYJos",
	"green-flag-overlay-wrapper": "stage_green-flag-overlay-wrapper_3bCO-",
	"greenFlagOverlayWrapper": "stage_green-flag-overlay-wrapper_3bCO-",
	"custom-overlays": "stage_custom-overlays_24Vwt",
	"customOverlays": "stage_custom-overlays_24Vwt",
	"dragging-sprite": "stage_dragging-sprite_2rRMx",
	"draggingSprite": "stage_dragging-sprite_2rRMx",
	"stage-bottom-wrapper": "stage_stage-bottom-wrapper_fnczd",
	"stageBottomWrapper": "stage_stage-bottom-wrapper_fnczd",
	"mic-indicator": "stage_mic-indicator_2hH2H",
	"micIndicator": "stage_mic-indicator_2hH2H",
	"question-wrapper": "stage_question-wrapper_3Sii9",
	"questionWrapper": "stage_question-wrapper_3Sii9",
	"frame": "stage_frame_1-hsB",
	"flash": "stage_flash_3LJh5",
	"green-flag-overlay": "stage_green-flag-overlay_219KT",
	"greenFlagOverlay": "stage_green-flag-overlay_219KT"
};

/***/ }),
/* 1761 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .loader_background_1-Rwn {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 490;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #ff794d;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    text-align: center;\n    color: white;\n} [theme=\"dark\"] .loader_background_1-Rwn {\n    background-color: #753722;\n} .loader_fullscreen_tNbvL {\n    /* Break out of the layout using position: fixed to cover the whole screen */\n    position: fixed;\n    /* Use the fullscreen stage z-index to allow covering full-screen mode */\n    z-index: 5000;\n} .loader_block-animation_2EgCQ {\n    width: 125px;\n    height: 150px;\n    margin: 50px auto 0px;\n} .loader_block-animation_2EgCQ img {\n    display: block;\n    position: relative;\n    height: 30%;\n    margin-top: -4px;\n} .loader_top-block_1-yuR {\n    animation: loader_top-slide-in_3hScI 1.5s ease infinite;\n} .loader_middle-block_2ma0T {\n    animation: loader_middle-slide-in_3GSy9 1.5s ease infinite;\n} .loader_bottom-block_ABwSu {\n    animation: loader_bottom-slide-in_8euy_ 1.5s ease infinite;\n} [dir=\"rtl\"] .loader_top-block_1-yuR {\n    animation: loader_top-slide-in-rtl_1iaUP 1.5s ease infinite;\n} [dir=\"rtl\"] .loader_middle-block_2ma0T {\n    animation: loader_middle-slide-in-rtl_1Ve0h 1.5s ease infinite;\n} [dir=\"rtl\"] .loader_bottom-block_ABwSu {\n    animation: loader_bottom-slide-in-rtl_2hnAN 1.5s ease infinite;\n} @keyframes loader_top-slide-in_3hScI {\n  0% {\n    transform: translateY(50px);\n    opacity: 0;\n  }\n\n  33% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n} @keyframes loader_middle-slide-in_3GSy9 {\n  0% {\n    transform: translateY(50px);\n    opacity: 0;\n  }\n\n  33% {\n    transform: translateY(50px);\n    opacity: 0;\n  }\n\n  66% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n} @keyframes loader_bottom-slide-in_8euy_ {\n  0% {\n    transform: translateY(50px);\n    opacity: 0;\n  }\n\n  66% {\n    transform: translateY(50px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n} @keyframes loader_top-slide-in-rtl_1iaUP {\n  0% {\n    transform: translateY(50px) scaleX(-1);\n    opacity: 0;\n  }\n\n  33% {\n    transform: translateY(0px) scaleX(-1);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(0px) scaleX(-1);\n    opacity: 1;\n  }\n} @keyframes loader_middle-slide-in-rtl_1Ve0h {\n  0% {\n    transform: translateY(50px) scaleX(-1);\n    opacity: 0;\n  }\n\n  33% {\n    transform: translateY(50px) scaleX(-1);\n    opacity: 0;\n  }\n\n  66% {\n    transform: translateY(0px) scaleX(-1);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(0px) scaleX(-1);\n    opacity: 1;\n  }\n} @keyframes loader_bottom-slide-in-rtl_2hnAN {\n  0% {\n    transform: translateY(50px) scaleX(-1);\n    opacity: 0;\n  }\n\n  66% {\n    transform: translateY(50px) scaleX(-1);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateY(0px) scaleX(-1);\n    opacity: 1;\n  }\n} .loader_title_28GDz {\n    font-size: 2rem;\n    font-weight: bold;\n    margin: 0.75rem 0;\n} .loader_message-container-outer_oYjTv {\n    height: 30px;\n    overflow: hidden;\n} .loader_message-container-inner_3ck0d {\n    transition: transform 0.5s;\n} .loader_message_rvm_w {\n    height: 20px;\n    margin: 5px 0;\n} .loader_tw-progress-outer_ugXeu {\n    position: relative;\n    width: 250px;\n    height: 5px;\n    border: 1px solid white;\n    margin: auto;\n} .loader_tw-progress-inner_gS7mQ {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 0;\n    background-color: white;\n}\n", ""]);

// exports
exports.locals = {
	"background": "loader_background_1-Rwn",
	"fullscreen": "loader_fullscreen_tNbvL",
	"block-animation": "loader_block-animation_2EgCQ",
	"blockAnimation": "loader_block-animation_2EgCQ",
	"top-block": "loader_top-block_1-yuR",
	"topBlock": "loader_top-block_1-yuR",
	"top-slide-in": "loader_top-slide-in_3hScI",
	"topSlideIn": "loader_top-slide-in_3hScI",
	"middle-block": "loader_middle-block_2ma0T",
	"middleBlock": "loader_middle-block_2ma0T",
	"middle-slide-in": "loader_middle-slide-in_3GSy9",
	"middleSlideIn": "loader_middle-slide-in_3GSy9",
	"bottom-block": "loader_bottom-block_ABwSu",
	"bottomBlock": "loader_bottom-block_ABwSu",
	"bottom-slide-in": "loader_bottom-slide-in_8euy_",
	"bottomSlideIn": "loader_bottom-slide-in_8euy_",
	"top-slide-in-rtl": "loader_top-slide-in-rtl_1iaUP",
	"topSlideInRtl": "loader_top-slide-in-rtl_1iaUP",
	"middle-slide-in-rtl": "loader_middle-slide-in-rtl_1Ve0h",
	"middleSlideInRtl": "loader_middle-slide-in-rtl_1Ve0h",
	"bottom-slide-in-rtl": "loader_bottom-slide-in-rtl_2hnAN",
	"bottomSlideInRtl": "loader_bottom-slide-in-rtl_2hnAN",
	"title": "loader_title_28GDz",
	"message-container-outer": "loader_message-container-outer_oYjTv",
	"messageContainerOuter": "loader_message-container-outer_oYjTv",
	"message-container-inner": "loader_message-container-inner_3ck0d",
	"messageContainerInner": "loader_message-container-inner_3ck0d",
	"message": "loader_message_rvm_w",
	"tw-progress-outer": "loader_tw-progress-outer_ugXeu",
	"twProgressOuter": "loader_tw-progress-outer_ugXeu",
	"tw-progress-inner": "loader_tw-progress-inner_gS7mQ",
	"twProgressInner": "loader_tw-progress-inner_gS7mQ"
};

/***/ }),
/* 1762 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n/* tw: this changes the loading screen to be contained to the stage */\n\n.stage-wrapper_stage-wrapper_3k56F {\n    position: relative;\n}\n\n.stage-wrapper_stage-wrapper_3k56F * {\n    box-sizing: border-box;\n}\n\n.stage-wrapper_stage-canvas-wrapper_n2Q5r {\n    /* Hides negative space between edge of rounded corners + container, when selected */\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n.stage-wrapper_stage-wrapper_3k56F.stage-wrapper_full-screen_3WIKP {\n    position: fixed;\n    top: 2.75rem;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 5000;\n    background-color: hsla(0, 100%, 100%, 1);\n    /* spacing between stage and control bar (on the top), or between\n    stage and window edges (on left/right/bottom) */\n    padding: 0.1875rem;\n\n    /* this centers the stage */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n/* tw: support dark mode */\n\n[theme=\"dark\"] .stage-wrapper_stage-wrapper_3k56F.stage-wrapper_full-screen_3WIKP {\n    background-color: #111;\n}\n\n/* tw: do not show color in embeds */\n\n.stage-wrapper_stage-wrapper_3k56F.stage-wrapper_embedded_qKq7D {\n    background-color: transparent;\n}\n", ""]);

// exports
exports.locals = {
	"stage-wrapper": "stage-wrapper_stage-wrapper_3k56F",
	"stageWrapper": "stage-wrapper_stage-wrapper_3k56F",
	"stage-canvas-wrapper": "stage-wrapper_stage-canvas-wrapper_n2Q5r",
	"stageCanvasWrapper": "stage-wrapper_stage-canvas-wrapper_n2Q5r",
	"full-screen": "stage-wrapper_full-screen_3WIKP",
	"fullScreen": "stage-wrapper_full-screen_3WIKP",
	"embedded": "stage-wrapper_embedded_qKq7D"
};

/***/ }),
/* 1763 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .community-button_community-button_20Q0O {\n    box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.15);\n} .community-button_community-button-icon_WReZ5 {\n    height: 1.25rem;\n}\n", ""]);

// exports
exports.locals = {
	"community-button": "community-button_community-button_20Q0O",
	"communityButton": "community-button_community-button_20Q0O",
	"community-button-icon": "community-button_community-button-icon_WReZ5",
	"communityButtonIcon": "community-button_community-button-icon_WReZ5"
};

/***/ }),
/* 1764 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .share-button_share-button_36Wbh {\n    background: hsl(55, 1%, 85%);\n} .share-button_share-button-is-shared_2QzeZ {\n    background: hsla(0, 0%, 0%, 0.15);\n    cursor: default;\n}\n", ""]);

// exports
exports.locals = {
	"share-button": "share-button_share-button_36Wbh",
	"shareButton": "share-button_share-button_36Wbh",
	"share-button-is-shared": "share-button_share-button-is-shared_2QzeZ",
	"shareButtonIsShared": "share-button_share-button-is-shared_2QzeZ"
};

/***/ }),
/* 1765 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/*\n * NOTE: the copious use of `important` is needed to overwrite\n * the default tooltip styling, and is required by the 3rd party\n * library being used, `react-tooltip`\n */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.coming-soon_coming-soon_1vQL2 {\n    background-color: hsl(55, 1%, 85%) !important;\n    border: 1px solid hsla(0, 0%, 0%, 0.15) !important;\n    border-radius: calc(0.5rem / 2) !important;\n    box-shadow: 0 0 .5rem hsla(0, 0%, 0%, 0.15) !important;\n    padding: .75rem 1rem !important;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif !important;\n    font-size: 1rem !important;\n    line-height: 1.25rem !important;\n    z-index: 47 !important;\n}\n\n.coming-soon_coming-soon_1vQL2:after {\n    content: \"\";\n    border-top: 1px solid hsla(0, 0%, 0%, 0.15) !important;\n    border-left: 0 !important;\n    border-bottom: 0 !important;\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15) !important;\n    border-radius: calc(0.5rem / 2);\n    background-color: hsl(55, 1%, 85%) !important;\n    height: 1rem !important;\n    width: 1rem !important;\n}\n\n.coming-soon_show_1nq_9,\n.coming-soon_show_1nq_9:before,\n.coming-soon_show_1nq_9:after {\n    opacity: 1 !important;\n}\n\n.coming-soon_left_1GGpa:after {\n    margin-top: -.5rem !important;\n    right: -.5rem !important;\n    transform: rotate(45deg) !important;\n}\n\n.coming-soon_right_1V8UL:after {\n    margin-top: -.5rem !important;\n    left: -.5rem !important;\n    transform: rotate(-135deg) !important;\n}\n\n.coming-soon_top_16kkJ:after {\n    margin-right: -.5rem !important;\n    bottom: -.5rem !important;\n    transform: rotate(135deg) !important;\n}\n\n.coming-soon_bottom_1hhH7:after {\n    margin-left: -.5rem !important;\n    top: -.5rem !important;\n    transform: rotate(-45deg) !important;\n}\n\n.coming-soon_coming-soon-image_2YdWF {\n    width: 1.25rem;\n    height: 1.25rem;\n    vertical-align: middle;\n}\n\n[dir=\"ltr\"] .coming-soon_coming-soon-image_2YdWF {\n    margin-left: .125rem;\n}\n\n[dir=\"rtl\"] .coming-soon_coming-soon-image_2YdWF {\n    margin-right: .125rem;\n}\n", ""]);

// exports
exports.locals = {
	"coming-soon": "coming-soon_coming-soon_1vQL2",
	"comingSoon": "coming-soon_coming-soon_1vQL2",
	"show": "coming-soon_show_1nq_9",
	"left": "coming-soon_left_1GGpa",
	"right": "coming-soon_right_1V8UL",
	"top": "coming-soon_top_16kkJ",
	"bottom": "coming-soon_bottom_1hhH7",
	"coming-soon-image": "coming-soon_coming-soon-image_2YdWF",
	"comingSoonImage": "coming-soon_coming-soon-image_2YdWF"
};

/***/ }),
/* 1766 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /* Position the language select over the language icon, and make it transparent */ .language-selector_language-select_1h0tC {\n    position: absolute;\n    width: 3rem;\n    height: 3rem;\n    opacity: 0;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: .875rem;\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(0, 100%, 100%, 1);\n} [theme=\"dark\"] .language-selector_language-select_1h0tC {\n    color: hsla(0, 100%, 100%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} [dir=\"ltr\"] .language-selector_language-select_1h0tC {\n    right: 0;\n} [dir=\"rtl\"] .language-selector_language-select_1h0tC {\n    left: 0;\n} .language-selector_language-select_1h0tC option {\n    opacity: 1;\n} .language-selector_language-select_1h0tC:focus {\n    border: 1px solid white;\n}\n", ""]);

// exports
exports.locals = {
	"language-select": "language-selector_language-select_1h0tC",
	"languageSelect": "language-selector_language-select_1h0tC"
};

/***/ }),
/* 1767 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .menu_menu_1rWB9 {\n    position: absolute;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 0 0 8px 8px;\n    background-color: hsla(30, 100%, 65%, 1);\n    padding: 0;\n    margin: 0;\n    min-width: 186px;\n    /* tw: no max width */\n    /* max-width: 260px; */\n    overflow: visible;\n    color: hsla(0, 100%, 100%, 1);\n    box-shadow: 0 8px 8px 0 hsla(0, 0%, 0%, 0.15);\n} [theme=\"dark\"] .menu_menu_1rWB9 {\n    background-color: #333;\n} .menu_menu_1rWB9.menu_left_1Zl7K {\n    right: 0;\n} .menu_menu_1rWB9.menu_right_12vPx {\n    left: 0;\n} .menu_menu-item_3ELPx {\n    display: block;\n    line-height: 34px;\n    white-space: nowrap;\n    padding: 0 10px;\n    font-size: .75rem;\n    margin: 0;\n    font-weight: bold;\n} .menu_menu-item_3ELPx.menu_active_7GxsI,\n.menu_menu-item_3ELPx:hover {\n    background-color: hsla(0, 0%, 0%, 0.15);\n} .menu_menu-item_3ELPx.menu_hoverable_3mGWm {\n    cursor: pointer;\n} .menu_menu-section_1ai_E {\n    border-top: 1px solid hsla(0, 0%, 0%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"menu": "menu_menu_1rWB9",
	"left": "menu_left_1Zl7K",
	"right": "menu_right_12vPx",
	"menu-item": "menu_menu-item_3ELPx",
	"menuItem": "menu_menu-item_3ELPx",
	"active": "menu_active_7GxsI",
	"hoverable": "menu_hoverable_3mGWm",
	"menu-section": "menu_menu-section_1ai_E",
	"menuSection": "menu_menu-section_1ai_E"
};

/***/ }),
/* 1768 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ /*\nIf project-title-input.jsx is part of a menu bar say menu-bar.jsx, it can have additional css classes that\ncan set a width for example or what it should do in a flex box (eg. grow).\n*/ .project-title-input_title-field_13MIs {\n    border: 1px dashed hsla(0, 0%, 0%, 0.15);\n    border-radius: calc(0.5rem / 2);\n    -webkit-border-radius: calc(0.5rem / 2);\n    -moz-border-radius: calc(0.5rem / 2);\n    background-color: hsla(0, 100%, 100%, 0.25);\n    background-clip: padding-box;\n    -webkit-background-clip: padding-box;\n    height: auto;\n    padding: .5rem;\n} .project-title-input_title-field_13MIs {\n    color: hsla(0, 100%, 100%, 1);\n    font-weight: bold;\n    font-size: .8rem;\n} .project-title-input_title-field_13MIs::-ms-input-placeholder {\n    color: hsla(0, 100%, 100%, 1);\n    font-weight: normal;\n    font-size: .8rem;\n    font-style: italic;\n} .project-title-input_title-field_13MIs::placeholder {\n    color: hsla(0, 100%, 100%, 1);\n    font-weight: normal;\n    font-size: .8rem;\n    font-style: italic;\n} .project-title-input_title-field_13MIs:hover {\n    background-color: hsla(0, 100%, 100%, 0.5);\n} [theme=\"dark\"] .project-title-input_title-field_13MIs:hover {\n    background-color: rgba(0, 0, 0, 0.5);\n} .project-title-input_title-field_13MIs:focus {\n    outline:none;\n    border: 1px solid hsla(0, 100%, 100%, 0);\n    box-shadow: 0 0 0 calc(0.5rem * .5) hsla(0, 100%, 100%, 0.25);\n    background-color: hsla(0, 100%, 100%, 1);\n    color: hsla(225, 15%, 40%, 1);\n} [theme=\"dark\"] .project-title-input_title-field_13MIs:focus {\n    background-color: rgba(0, 0, 0, 0.3);\n}\n", ""]);

// exports
exports.locals = {
	"title-field": "project-title-input_title-field_13MIs",
	"titleField": "project-title-input_title-field_13MIs"
};

/***/ }),
/* 1769 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .user-avatar_user-thumbnail_IwOnc {\n    width: 2rem;\n    height: 2rem;\n    border-radius: calc(0.5rem / 2);\n    vertical-align: middle;\n    box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"user-thumbnail": "user-avatar_user-thumbnail_IwOnc",
	"userThumbnail": "user-avatar_user-thumbnail_IwOnc"
};

/***/ }),
/* 1770 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .author-info_author-info__Auzh {\n    color: hsla(0, 100%, 100%, 1);\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    cursor: default;\n} .author-info_avatar_1EtPD {\n    margin-right: .5625rem;\n} .author-info_project-title_3abqH {\n    max-width: 12rem;\n    display: block;\n    overflow: hidden;\n    font-size: 0.875rem;\n    font-weight: bold;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: 0;\n    padding: 0;\n} .author-info_username-line_30Olt {\n    max-width: 12rem;\n    font-size: 0.75rem;\n    display: block;\n    overflow: hidden;\n    font-weight: normal;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n} .author-info_username_3V5C- {\n    font-weight: bold;\n} .author-info_link_2G8-F {\n    text-decoration: none;\n    color: hsla(0, 100%, 100%, 1) !important;\n} .author-info_link_2G8-F:hover {\n    text-decoration: underline;\n} .author-info_link_2G8-F .author-info_author-info__Auzh {\n    cursor: pointer;\n}\n", ""]);

// exports
exports.locals = {
	"author-info": "author-info_author-info__Auzh",
	"authorInfo": "author-info_author-info__Auzh",
	"avatar": "author-info_avatar_1EtPD",
	"project-title": "author-info_project-title_3abqH",
	"projectTitle": "author-info_project-title_3abqH",
	"username-line": "author-info_username-line_30Olt",
	"usernameLine": "author-info_username-line_30Olt",
	"username": "author-info_username_3V5C-",
	"link": "author-info_link_2G8-F"
};

/***/ }),
/* 1771 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .inline-message_inline-message_3EzKK {\n    color: hsla(0, 100%, 100%, 1);\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    font-size: .8125rem;\n} .inline-message_success_1HE_O {\n    color: hsla(0, 100%, 100%, 0.75);\n} .inline-message_info_8Giql {\n    color: hsla(0, 100%, 100%, 1);\n} .inline-message_warn_3ryT7 {\n    color: hsla(30, 100%, 70%, 1);\n} .inline-message_spinner_H-tr3 {\n    margin-right: 0.5rem;\n}\n", ""]);

// exports
exports.locals = {
	"inline-message": "inline-message_inline-message_3EzKK",
	"inlineMessage": "inline-message_inline-message_3EzKK",
	"success": "inline-message_success_1HE_O",
	"info": "inline-message_info_8Giql",
	"warn": "inline-message_warn_3ryT7",
	"spinner": "inline-message_spinner_H-tr3"
};

/***/ }),
/* 1772 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, ".save-status_save-now_1Blzi {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    cursor: pointer;\n}\n", ""]);

// exports
exports.locals = {
	"save-now": "save-status_save-now_1Blzi",
	"saveNow": "save-status_save-now_1Blzi"
};

/***/ }),
/* 1773 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .menu-bar_menu-bar_1gLUp {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n\n    /*\n        For most things, we shouldn't explicitly set height, and let the\n        content push the element to whatever fits. Using a fixed height\n        instead, will help us subtract the value we assign from the body,\n        adding up to a perfect 100%. This means we don't need to set\n        overflow: hidden, which makes it hard to debug. border-box\n        simplifies by all of this by removing padding from the equation.\n    */\n    box-sizing: border-box;\n    height: 3rem;\n\n    /*\n        @todo: This adds ~20px in Chrome, when scrolling to the right,\n        but fixes [FFx + Safari] [resize window down + scroll to the right] bug.\n        width: 100%;\n    */\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 0.75rem;\n    font-weight: bold;\n    background-color: #ff794d;\n    color: hsla(0, 100%, 100%, 1);\n} [theme=\"dark\"] .menu-bar_menu-bar_1gLUp {\n    background-color: #753722;\n} .menu-bar_main-menu_EyCGw {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: nowrap;\n    align-items: center;\n    flex-grow: 1;\n} .menu-bar_scratch-logo_7D20g {\n    height:  1.6rem;\n    vertical-align: middle;\n} .menu-bar_scratch-logo_7D20g.menu-bar_clickable_26k4z {\n    cursor: pointer;\n} .menu-bar_language-icon_3BGzu {\n    height:  1.5rem;\n    vertical-align: middle;\n} .menu-bar_language-caret_UUIbv {\n    margin: 0 .125rem;\n} .menu-bar_language-menu_3aW5d {\n    box-sizing: border-box;\n    display: inline-flex;\n    width: 3rem;\n} .menu-bar_menu-bar-item_264qQ {\n    display: flex;\n    padding: 0 0.25rem;\n    text-decoration: none;\n    color: hsla(0, 100%, 100%, 1);\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    align-self: center;\n    position: relative;\n    align-items: center;\n    white-space: nowrap;\n    height: 3rem;\n} .menu-bar_menu-bar-item_264qQ.menu-bar_hoverable_2sbwj {\n    cursor: pointer;\n} .menu-bar_menu-bar-item_264qQ.menu-bar_active_qDap3,\n.menu-bar_menu-bar-item_264qQ.menu-bar_hoverable_2sbwj:hover {\n    background-color: hsla(0, 0%, 0%, 0.15);\n} .menu-bar_menu-bar-item_264qQ.menu-bar_growable_gzAFf {\n    max-width: 12rem;\n    flex: 1;\n} .menu-bar_title-field-growable_2DAmE {\n    flex-grow: 1;\n    width: 2rem;\n} .menu-bar_file-group_Ofb7F {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n} .menu-bar_file-group_Ofb7F .menu-bar_menu-bar-item_264qQ {\n    padding: 0 0.75rem;\n} .menu-bar_menu-bar-item_264qQ.menu-bar_language-menu_3aW5d {\n    padding: 0 0.5rem;\n} .menu-bar_menu-bar-menu_3M6v8 {\n    margin-top: 3rem;\n    z-index: 491;\n} .menu-bar_feedback-link_2Op70 {\n    color: hsla(30, 100%, 65%, 1) !important;\n    text-decoration: none;\n} [theme=\"dark\"] .menu-bar_feedback-link_2Op70 {\n    color: #333 !important;\n} .menu-bar_feedback-button_2XhjA {\n    background-color: hsla(0, 100%, 100%, 1);\n    height: 34px;\n} .menu-bar_divider_2bLcv {\n    margin: 0 .5rem;\n    height: 34px;\n} .menu-bar_author-info_3H1M3 {\n    margin-left: .25rem;\n    margin-right: .6875rem;\n} .menu-bar_menu-bar-button_45YjE {\n    height: 2rem;\n} .menu-bar_remix-button_22R_5 {\n    background-color: hsla(163, 85%, 40%, 1)\n} .menu-bar_remix-button-icon_120Az {\n    height: 1.25rem;\n} .menu-bar_coming-soon_1mxZx >:not(.menu-bar_coming-soon-tooltip_3ikkK) {\n    opacity: 0.5;\n} .menu-bar_account-info-group_1CTpL {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n} .menu-bar_account-info-group_1CTpL .menu-bar_menu-bar-item_264qQ {\n    padding: 0 0.75rem;\n} .menu-bar_mystuff-icon_1f8Re {\n    margin: 0 .25rem;\n    height: 1rem;\n} .menu-bar_help-icon_ieE_q {\n    margin-right: 0.35rem;\n} .menu-bar_account-nav-menu_1ts18, .menu-bar_mystuff-button_3aa9D {\n    padding: 0 .25rem;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n} .menu-bar_profile-icon_9WA-H {\n    margin: 0 .25rem;\n    width: 2rem;\n    border-radius: calc(0.5rem / 2);\n} .menu-bar_dropdown-caret-icon_3aBkY {\n    width: 0.5rem;\n    height: 0.5rem;\n} [dir=\"ltr\"] .menu-bar_dropdown-caret-icon_3aBkY {\n    margin-left: .5rem;\n} [dir=\"rtl\"] .menu-bar_dropdown-caret-icon_3aBkY {\n    margin-right: .5rem;\n} .menu-bar_disabled_rGGrp {\n    opacity: 0.5;\n} .menu-bar_mystuff_gxcZo > a {\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 45%;\n  padding-right: 10px;\n  padding-left: 10px;\n  width: 30px;\n  overflow: hidden;\n  text-indent: 50px;\n  white-space: nowrap;\n} .menu-bar_mystuff_gxcZo > a:hover {\n  background-size: 50%;\n} .menu-bar_mystuff_gxcZo > a {\n  background-image: url(\"/images/mystuff.png\");\n} .menu-bar_about-icon_16Env {\n    height: 1.25rem;\n    margin: 0.5rem;\n    vertical-align: middle;\n} /* tw: styles to override <a> styles */ .menu-bar_menu-item-link_1-4xZ {\n    color: hsla(0, 100%, 100%, 1) !important;\n    text-decoration: none;\n}\n", ""]);

// exports
exports.locals = {
	"menu-bar": "menu-bar_menu-bar_1gLUp",
	"menuBar": "menu-bar_menu-bar_1gLUp",
	"main-menu": "menu-bar_main-menu_EyCGw",
	"mainMenu": "menu-bar_main-menu_EyCGw",
	"scratch-logo": "menu-bar_scratch-logo_7D20g",
	"scratchLogo": "menu-bar_scratch-logo_7D20g",
	"clickable": "menu-bar_clickable_26k4z",
	"language-icon": "menu-bar_language-icon_3BGzu",
	"languageIcon": "menu-bar_language-icon_3BGzu",
	"language-caret": "menu-bar_language-caret_UUIbv",
	"languageCaret": "menu-bar_language-caret_UUIbv",
	"language-menu": "menu-bar_language-menu_3aW5d",
	"languageMenu": "menu-bar_language-menu_3aW5d",
	"menu-bar-item": "menu-bar_menu-bar-item_264qQ",
	"menuBarItem": "menu-bar_menu-bar-item_264qQ",
	"hoverable": "menu-bar_hoverable_2sbwj",
	"active": "menu-bar_active_qDap3",
	"growable": "menu-bar_growable_gzAFf",
	"title-field-growable": "menu-bar_title-field-growable_2DAmE",
	"titleFieldGrowable": "menu-bar_title-field-growable_2DAmE",
	"file-group": "menu-bar_file-group_Ofb7F",
	"fileGroup": "menu-bar_file-group_Ofb7F",
	"menu-bar-menu": "menu-bar_menu-bar-menu_3M6v8",
	"menuBarMenu": "menu-bar_menu-bar-menu_3M6v8",
	"feedback-link": "menu-bar_feedback-link_2Op70",
	"feedbackLink": "menu-bar_feedback-link_2Op70",
	"feedback-button": "menu-bar_feedback-button_2XhjA",
	"feedbackButton": "menu-bar_feedback-button_2XhjA",
	"divider": "menu-bar_divider_2bLcv",
	"author-info": "menu-bar_author-info_3H1M3",
	"authorInfo": "menu-bar_author-info_3H1M3",
	"menu-bar-button": "menu-bar_menu-bar-button_45YjE",
	"menuBarButton": "menu-bar_menu-bar-button_45YjE",
	"remix-button": "menu-bar_remix-button_22R_5",
	"remixButton": "menu-bar_remix-button_22R_5",
	"remix-button-icon": "menu-bar_remix-button-icon_120Az",
	"remixButtonIcon": "menu-bar_remix-button-icon_120Az",
	"coming-soon": "menu-bar_coming-soon_1mxZx",
	"comingSoon": "menu-bar_coming-soon_1mxZx",
	"coming-soon-tooltip": "menu-bar_coming-soon-tooltip_3ikkK",
	"comingSoonTooltip": "menu-bar_coming-soon-tooltip_3ikkK",
	"account-info-group": "menu-bar_account-info-group_1CTpL",
	"accountInfoGroup": "menu-bar_account-info-group_1CTpL",
	"mystuff-icon": "menu-bar_mystuff-icon_1f8Re",
	"mystuffIcon": "menu-bar_mystuff-icon_1f8Re",
	"help-icon": "menu-bar_help-icon_ieE_q",
	"helpIcon": "menu-bar_help-icon_ieE_q",
	"account-nav-menu": "menu-bar_account-nav-menu_1ts18",
	"accountNavMenu": "menu-bar_account-nav-menu_1ts18",
	"mystuff-button": "menu-bar_mystuff-button_3aa9D",
	"mystuffButton": "menu-bar_mystuff-button_3aa9D",
	"profile-icon": "menu-bar_profile-icon_9WA-H",
	"profileIcon": "menu-bar_profile-icon_9WA-H",
	"dropdown-caret-icon": "menu-bar_dropdown-caret-icon_3aBkY",
	"dropdownCaretIcon": "menu-bar_dropdown-caret-icon_3aBkY",
	"disabled": "menu-bar_disabled_rGGrp",
	"mystuff": "menu-bar_mystuff_gxcZo",
	"about-icon": "menu-bar_about-icon_16Env",
	"aboutIcon": "menu-bar_about-icon_16Env",
	"menu-item-link": "menu-bar_menu-item-link_1-4xZ",
	"menuItemLink": "menu-bar_menu-item-link_1-4xZ"
};

/***/ }),
/* 1774 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/e764d9d9a7a12892e0845b11cd4202df.png";

/***/ }),
/* 1775 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/52797b48d511ecdd8e938684cee7638e.png";

/***/ }),
/* 1776 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/90e939d170002c61a50116ed55763b19.svg";

/***/ }),
/* 1777 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* this class must contain \"see-inside-button\" somewhere for the s3 dev tools to be able to reinject itself */ /* https://github.com/griffpatch/Scratch3-Dev-Tools/blob/0.2.4/inject3.js#L1804-L1807 */ .tw-see-inside_see-inside-button_1fSk6 {\n    box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.15);\n} .tw-see-inside_see-inside-button-icon_UKAVj {\n    height: 1.25rem;\n}\n", ""]);

// exports
exports.locals = {
	"see-inside-button": "tw-see-inside_see-inside-button_1fSk6",
	"seeInsideButton": "tw-see-inside_see-inside-button_1fSk6",
	"see-inside-button-icon": "tw-see-inside_see-inside-button-icon_UKAVj",
	"seeInsideButtonIcon": "tw-see-inside_see-inside-button-icon_UKAVj"
};

/***/ }),
/* 1778 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "\n.watermark_sprite-image_3vILs {\n    margin: auto;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    max-width: 48px;\n    max-height: 48px;\n    opacity: 0.35;\n}\n", ""]);

// exports
exports.locals = {
	"sprite-image": "watermark_sprite-image_3vILs",
	"spriteImage": "watermark_sprite-image_3vILs"
};

/***/ }),
/* 1779 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n.backpack_backpack-container_2HPPV {\n    flex-shrink: 1;\n    position: relative;\n}\n\n.backpack_backpack-header_Vteeu {\n    margin-top: 0.5rem;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    background: hsla(0, 100%, 100%, 1);\n    padding: 0.25rem;\n    text-align: center;\n    font-size: 0.85rem;\n    color: hsla(225, 15%, 40%, 1);\n    transition: 0.2s;\n    cursor: pointer;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n[theme=\"dark\"] .backpack_backpack-header_Vteeu {\n    background: hsla(215, 100%, 95%, 1);\n}\n\n[dir=\"ltr\"] .backpack_backpack-header_Vteeu {\n    border-top-right-radius: 0.5rem;\n}\n\n[dir=\"rtl\"] .backpack_backpack-header_Vteeu {\n    border-top-left-radius: 0.5rem;\n}\n\n.backpack_backpack-list_17cX_ {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border-right: 1px solid hsla(0, 0%, 0%, 0.15);\n    min-height: 5.5rem;\n}\n\n/* Absolute position the inner list to allow scrolling inside flex sized container */\n\n.backpack_backpack-list-inner_1OOGg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    overflow-x: auto;\n}\n\n.backpack_drag-over_3ptWa:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0.75;\n    background-color: hsla(215, 100%, 77%, 1);\n    transition: all 0.25s ease;\n}\n\n.backpack_status-message_1RNp6 {\n    width: 100%;\n    text-align: center;\n    font-size: 0.85rem;\n    color: hsla(225, 15%, 40%, 1);\n}\n\n.backpack_backpack-item_2qZLR {\n    width: 4rem;\n    height: 4.5rem;\n    margin: 0 0.25rem;\n    flex-shrink: 0;\n\n    /* Need to hide overflow because of background setting below */\n    overflow: hidden;\n}\n\n.backpack_backpack-item_2qZLR > div {\n    /* Need to set the background to get blend-mode below to work */\n    background: hsla(215, 100%, 95%, 1);\n}\n\n.backpack_backpack-item_2qZLR img {\n    mix-blend-mode: multiply; /* Make white transparent for thumnbnails */\n}\n\n[theme=\"dark\"] .backpack_backpack-item_2qZLR img {\n    mix-blend-mode: normal;\n}\n\n.backpack_more_2MpF0 {\n    background: hsla(30, 100%, 65%, 1);\n    color: hsla(0, 100%, 100%, 1);\n    border: none;\n    outline: none;\n    font-weight: bold;\n    border-radius: 0.5rem;\n    font-size: 0.85rem;\n    padding: 0.5rem;\n    margin: 0.5rem;\n    cursor: pointer;\n}\n", ""]);

// exports
exports.locals = {
	"backpack-container": "backpack_backpack-container_2HPPV",
	"backpackContainer": "backpack_backpack-container_2HPPV",
	"backpack-header": "backpack_backpack-header_Vteeu",
	"backpackHeader": "backpack_backpack-header_Vteeu",
	"backpack-list": "backpack_backpack-list_17cX_",
	"backpackList": "backpack_backpack-list_17cX_",
	"backpack-list-inner": "backpack_backpack-list-inner_1OOGg",
	"backpackListInner": "backpack_backpack-list-inner_1OOGg",
	"drag-over": "backpack_drag-over_3ptWa",
	"dragOver": "backpack_drag-over_3ptWa",
	"status-message": "backpack_status-message_1RNp6",
	"statusMessage": "backpack_status-message_1RNp6",
	"backpack-item": "backpack_backpack-item_2qZLR",
	"backpackItem": "backpack_backpack-item_2qZLR",
	"more": "backpack_more_2MpF0"
};

/***/ }),
/* 1780 */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(208);
exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n} h2 {\n    font-size: 1.5rem;\n    font-weight: bold;\n} p {\n    font-size: 1rem;\n    line-height: 1.5em;\n} /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .webgl-modal_modal-overlay_1LUzP {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 510;\n    background-color: hsla(215, 100%, 65%, 0.9);\n} .webgl-modal_modal-content_1K8Sj {\n    margin: 100px auto;\n    outline: none;\n    border: .25rem solid hsla(0, 100%, 100%, 0.25);\n    padding: 0;\n    border-radius: 0.5rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    width: 500px;\n\n    color: hsla(225, 15%, 40%, 1);\n    overflow: hidden;\n} .webgl-modal_illustration_2bkJ4 {\n    width: 100%;\n    height: 208px;\n    background-color: hsla(30, 100%, 65%, 1);\n    background-image: url(" + escape(__webpack_require__(1781)) + ");\n    background-size: cover;\n} [dir=\"rtl\"] .webgl-modal_illustration_2bkJ4 {\n    transform: scaleX(-1);\n} .webgl-modal_body_DOSJW {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n    text-align: center;\n} [theme=\"dark\"] .webgl-modal_body_DOSJW {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} /* Confirmation buttons at the bottom of the modal */ .webgl-modal_button-row_3YGec {\n    margin: 1.5rem 0;\n    font-weight: bolder;\n    text-align: right;\n    display: flex;\n    justify-content: center;\n} .webgl-modal_button-row_3YGec button {\n    border: 1px solid hsla(30, 100%, 65%, 1);\n    border-radius: 0.25rem;\n    padding: 0.5rem 2rem;\n    background: hsla(30, 100%, 65%, 1);\n    color: white;\n    font-weight: bold;\n    font-size: 0.875rem;\n} .webgl-modal_faq-link-text_1VN13 {\n    margin: 2rem 0 .5rem 0;\n    font-size: .875rem;\n    color: hsla(225, 15%, 40%, 1);\n} .webgl-modal_faq-link_3t7-v {\n    color: hsla(30, 100%, 65%, 1);\n    text-decoration: none;\n}\n", ""]);

// exports
exports.locals = {
	"modal-overlay": "webgl-modal_modal-overlay_1LUzP",
	"modalOverlay": "webgl-modal_modal-overlay_1LUzP",
	"modal-content": "webgl-modal_modal-content_1K8Sj",
	"modalContent": "webgl-modal_modal-content_1K8Sj",
	"illustration": "webgl-modal_illustration_2bkJ4",
	"body": "webgl-modal_body_DOSJW",
	"button-row": "webgl-modal_button-row_3YGec",
	"buttonRow": "webgl-modal_button-row_3YGec",
	"faq-link-text": "webgl-modal_faq-link-text_1VN13",
	"faqLinkText": "webgl-modal_faq-link-text_1VN13",
	"faq-link": "webgl-modal_faq-link_3t7-v",
	"faqLink": "webgl-modal_faq-link_3t7-v"
};

/***/ }),
/* 1781 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/905aaa5ec7fca7cf364f5e74bcb10be1.png";

/***/ }),
/* 1782 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n} h2 {\n    font-size: 1.5rem;\n    font-weight: bold;\n} p {\n    font-size: 1rem;\n    line-height: 1.5em;\n} /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ .browser-modal_modal-overlay_3n1Lc {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 510;\n    background-color: hsla(215, 100%, 65%, 0.9);\n} .browser-modal_modal-content_3udAD {\n    margin: 100px auto;\n    outline: none;\n    border: .25rem solid hsla(0, 100%, 100%, 0.25);\n    padding: 0;\n    border-radius: 0.5rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    width: 500px;\n\n    color: hsla(225, 15%, 40%, 1);\n    overflow: hidden;\n} .browser-modal_illustration_ZJXEu {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100px;\n    background-color: hsla(38, 100%, 55%, 1);\n} [dir=\"rtl\"] .browser-modal_illustration_ZJXEu {\n    transform: scaleX(-1);\n} .browser-modal_illustration_ZJXEu img {\n    height: 80%;\n    width: auto;\n} .browser-modal_body_3XY4U {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n    text-align: center;\n} /* Confirmation buttons at the bottom of the modal */ .browser-modal_button-row_1PZ7z {\n    margin: 1.5rem 0;\n    font-weight: bolder;\n    text-align: right;\n    display: flex;\n    justify-content: center;\n} .browser-modal_button-row_1PZ7z button {\n    border: 1px solid hsla(30, 100%, 65%, 1);\n    border-radius: 0.25rem;\n    padding: 0.5rem 2rem;\n    background: hsla(30, 100%, 65%, 1);\n    color: white;\n    font-weight: bold;\n    font-size: 0.875rem;\n    cursor: pointer;\n} .browser-modal_faq-link-text_q9yuQ {\n    margin: 2rem 0 .5rem 0;\n    font-size: .875rem;\n    color: hsla(225, 15%, 40%, 1);\n} .browser-modal_faq-link_3LV5o {\n    color: hsla(30, 100%, 65%, 1);\n    text-decoration: none;\n} .browser-modal_body_3XY4U p {\n    margin-bottom: 1em;\n}\n", ""]);

// exports
exports.locals = {
	"modal-overlay": "browser-modal_modal-overlay_3n1Lc",
	"modalOverlay": "browser-modal_modal-overlay_3n1Lc",
	"modal-content": "browser-modal_modal-content_3udAD",
	"modalContent": "browser-modal_modal-content_3udAD",
	"illustration": "browser-modal_illustration_ZJXEu",
	"body": "browser-modal_body_3XY4U",
	"button-row": "browser-modal_button-row_1PZ7z",
	"buttonRow": "browser-modal_button-row_1PZ7z",
	"faq-link-text": "browser-modal_faq-link-text_q9yuQ",
	"faqLinkText": "browser-modal_faq-link-text_q9yuQ",
	"faq-link": "browser-modal_faq-link_3LV5o",
	"faqLink": "browser-modal_faq-link_3LV5o"
};

/***/ }),
/* 1783 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.card_card-container-overlay_2QacE {\n    position: fixed;\n    pointer-events: none;\n    z-index: 480;\n}\n\n.card_card-container_3CTj3 {\n    position:absolute;\n    pointer-events: auto;\n    z-index: 480;\n    margin: 0.5rem 2rem;\n    min-width: 468px;\n}\n\n.card_left-card_37wEj, .card_right-card_IuwCX {\n    height: 90%;\n    position: absolute;\n    top: 5%;\n    background: hsla(0, 100%, 100%, 1);\n    border: 1px solid hsla(215, 50%, 90%, 1);\n    width: .75rem;\n    z-index: 10;\n    opacity: 0.9;\n    overflow: hidden;\n}\n\n.card_left-card_37wEj {\n    left: -.75rem;\n    border-right: 0;\n    border-top-left-radius: 0.75rem;\n    border-bottom-left-radius: 0.75rem;\n}\n\n.card_right-card_IuwCX {\n    right: -.75rem;\n    border-left: 0;\n    border-top-right-radius: 0.75rem;\n    border-bottom-right-radius: 0.75rem;\n}\n\n.card_left-card_37wEj::after, .card_right-card_IuwCX::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 2.5rem;\n    width: 100%;\n    background: #e066ff;\n}\n\n.card_left-button_qn4Sw, .card_right-button_1SJvV {\n    position: absolute;\n    top: 50%;\n    margin-top: -15px;\n    z-index: 20;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    cursor: pointer;\n    background: #e066ff;\n    box-shadow: 0 0 0 4px #cc00cc;\n    height: 44px;\n    width: 44px;\n    border-radius: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.25s ease;\n}\n\n.card_left-button_qn4Sw:hover, .card_right-button_1SJvV:hover {\n    box-shadow: 0 0 0 6px #cc00cc;\n    transform: scale(1.125);\n}\n\n.card_left-button_qn4Sw img, .card_right-button_1SJvV img{\n    width: 1.75rem;\n}\n\n.card_left-button_qn4Sw {\n    left: -27px;\n}\n\n.card_right-button_1SJvV {\n    right: -27px;\n}\n\n.card_card_2Y01J {\n    border: 1px solid hsla(215, 50%, 90%, 1);\n    border-radius: 0.75rem;\n    display: flex;\n    flex-direction: column;\n    cursor: move;\n    z-index: 20;\n    overflow: hidden;\n    box-shadow: 0px 5px 25px 5px hsla(0, 0%, 0%, 0.15);\n    align-items: center;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.card_header-buttons_po2iq {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background: #e066ff;\n    border-bottom: 1px solid #7a0099;\n    font-size: 0.625rem;\n    font-weight: bold;\n}\n\n.card_header-buttons-hidden_3djQN {\n    border-bottom: 0px;\n}\n\n.card_header-buttons-right_2gg8P {\n    display: flex;\n    flex-direction: row;\n}\n\n.card_header-buttons_po2iq img {\n    margin-bottom: 2px;\n}\n\n.card_shrink-expand-button_1ptQQ {\n    cursor: pointer;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0.75rem;\n}\n\n.card_shrink-expand-button_1ptQQ:hover, .card_all-button_lbA2Z:hover {\n    background-color: hsla(0, 0%, 0%, 0.15);\n}\n\n.card_remove-button_3_tlz, .card_all-button_lbA2Z {\n    cursor: pointer;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0.75rem;\n}\n\n.card_remove-button_3_tlz:hover, .card_all-button_lbA2Z:hover {\n    background-color: hsla(0, 0%, 0%, 0.15);\n}\n\n.card_step-title_1okGu {\n    font-size: 0.9rem;\n    margin: 0.9rem;\n    text-align: center;\n    font-weight: bold;\n    color: hsla(225, 15%, 40%, 1);\n}\n\n.card_step-body_2bEry {\n    width: 100%;\n    background: hsla(0, 100%, 100%, 1);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    text-align: center;\n\n    /* Min height prevents layout changing when images change */\n    min-height: 256px;\n}\n\n.card_step-video_3htRC {\n    height: 256px;\n}\n\n.card_step-image_3A9ui {\n    max-width: 450px;\n    max-height: 200px;\n    object-fit: contain;\n    background: #F9F9F9;\n    border: 1px solid #ddd;\n    border-radius: 0.5rem;\n    overflow: hidden;\n    margin: 0 0.5rem 0.5rem;\n}\n\n.card_decks_122D_ {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    padding: 0 1rem 0.5rem;\n}\n\n.card_deck_3W7vN {\n    display: flex;\n    flex-direction: column;\n    margin: 0 8px 8px;\n    cursor: pointer;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 0.25rem;\n    overflow: hidden;\n}\n\n.card_deck-image_k0nPx {\n    width: 200px;\n    height: 100px;\n    object-fit: cover;\n}\n\n.card_deck-name_1qY_0 {\n    color: hsla(30, 100%, 65%, 1);\n    font-weight: bold;\n    font-size: 0.85rem;\n    margin: .625rem 0px;\n    text-align: center;\n    font-weight: bold;\n    text-align: center;\n    max-width: 200px;\n}\n\n.card_help-icon_MqDLJ {\n    height: 1.25rem;\n}\n\n.card_close-icon_1qu7W {\n    height: 1.25rem;\n    margin: .125rem 0; /* To offset the .25rem difference in icon size */\n}\n\n[dir=\"ltr\"] .card_help-icon_MqDLJ {\n    margin-right: 0.25rem;\n}\n\n[dir=\"rtl\"] .card_help-icon_MqDLJ {\n    margin-left: 0.25rem;\n}\n\n[dir=\"ltr\"] .card_close-icon_1qu7W {\n    margin-left: 0.25rem;\n}\n\n[dir=\"rtl\"] .card_close-icon_1qu7W {\n    margin-right: 0.25rem;\n}\n\n.card_see-all_3a1cU {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    width: 100%;\n    padding: 0.5rem;\n}\n\n.card_see-all-button_3is7d {\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    background-color: hsla(30, 100%, 65%, 1);\n    color: white;\n    font-weight: bold;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    color: hsla(0, 100%, 100%, 1);\n    font-size: .75rem;\n    font-weight: bold;\n    line-height: 1rem;\n    text-align: center;\n}\n\n[dir=\"ltr\"] .card_see-all-button_3is7d img {\n    margin-left: 0.5rem;\n}\n\n[dir=\"rtl\"] .card_see-all-button_3is7d img {\n    margin-right: 0.5rem;\n}\n\n.card_steps-list_3djjp {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.card_active-step-pip_3R5x2, .card_inactiveStepPip_2yqeE {\n    width: 0.5rem;\n    height: 0.5rem;\n    margin: 0 0.25rem;\n    border-radius: 100%;\n    background: hsla(0, 100%, 100%, 0.25);\n}\n\n.card_active-step-pip_3R5x2 {\n    background: hsla(0, 100%, 100%, 1);\n    box-shadow: 0px 0px 0px 2px hsla(0, 0%, 0%, 0.15);\n}\n\n.card_hidden_10Vrd {\n    display: none;\n}\n", ""]);

// exports
exports.locals = {
	"card-container-overlay": "card_card-container-overlay_2QacE",
	"cardContainerOverlay": "card_card-container-overlay_2QacE",
	"card-container": "card_card-container_3CTj3",
	"cardContainer": "card_card-container_3CTj3",
	"left-card": "card_left-card_37wEj",
	"leftCard": "card_left-card_37wEj",
	"right-card": "card_right-card_IuwCX",
	"rightCard": "card_right-card_IuwCX",
	"left-button": "card_left-button_qn4Sw",
	"leftButton": "card_left-button_qn4Sw",
	"right-button": "card_right-button_1SJvV",
	"rightButton": "card_right-button_1SJvV",
	"card": "card_card_2Y01J",
	"header-buttons": "card_header-buttons_po2iq",
	"headerButtons": "card_header-buttons_po2iq",
	"header-buttons-hidden": "card_header-buttons-hidden_3djQN",
	"headerButtonsHidden": "card_header-buttons-hidden_3djQN",
	"header-buttons-right": "card_header-buttons-right_2gg8P",
	"headerButtonsRight": "card_header-buttons-right_2gg8P",
	"shrink-expand-button": "card_shrink-expand-button_1ptQQ",
	"shrinkExpandButton": "card_shrink-expand-button_1ptQQ",
	"all-button": "card_all-button_lbA2Z",
	"allButton": "card_all-button_lbA2Z",
	"remove-button": "card_remove-button_3_tlz",
	"removeButton": "card_remove-button_3_tlz",
	"step-title": "card_step-title_1okGu",
	"stepTitle": "card_step-title_1okGu",
	"step-body": "card_step-body_2bEry",
	"stepBody": "card_step-body_2bEry",
	"step-video": "card_step-video_3htRC",
	"stepVideo": "card_step-video_3htRC",
	"step-image": "card_step-image_3A9ui",
	"stepImage": "card_step-image_3A9ui",
	"decks": "card_decks_122D_",
	"deck": "card_deck_3W7vN",
	"deck-image": "card_deck-image_k0nPx",
	"deckImage": "card_deck-image_k0nPx",
	"deck-name": "card_deck-name_1qY_0",
	"deckName": "card_deck-name_1qY_0",
	"help-icon": "card_help-icon_MqDLJ",
	"helpIcon": "card_help-icon_MqDLJ",
	"close-icon": "card_close-icon_1qu7W",
	"closeIcon": "card_close-icon_1qu7W",
	"see-all": "card_see-all_3a1cU",
	"seeAll": "card_see-all_3a1cU",
	"see-all-button": "card_see-all-button_3is7d",
	"seeAllButton": "card_see-all-button_3is7d",
	"steps-list": "card_steps-list_3djjp",
	"stepsList": "card_steps-list_3djjp",
	"active-step-pip": "card_active-step-pip_3R5x2",
	"activeStepPip": "card_active-step-pip_3R5x2",
	"inactiveStepPip": "card_inactiveStepPip_2yqeE",
	"hidden": "card_hidden_10Vrd"
};

/***/ }),
/* 1784 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.drag-layer_drag-layer_3RGNn {\n    position: fixed;\n    pointer-events: none;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    direction: ltr;\n}\n\n.drag-layer_image-wrapper_3G0af {\n    /* Absolute allows wrapper to snuggly fit image */\n    position: absolute;\n}\n\n.drag-layer_image_2PHUm {\n    max-width: 80px;\n    max-height: 80px;\n    min-width: 50px;\n    min-height: 50px;\n\n    /* Center the dragging image on the given position */\n    margin-left: -50%;\n    margin-top: -50%;\n\n    padding: 0.25rem;\n    border: 2px solid hsla(30, 100%, 65%, 1);\n    background: hsla(0, 100%, 100%, 1);\n    border-radius: 0.5rem;\n\n    /* Use the same drop shadow as stage dragging */\n    box-shadow: 5px 5px 5px hsla(0, 0%, 0%, 0.15);\n}\n", ""]);

// exports
exports.locals = {
	"drag-layer": "drag-layer_drag-layer_3RGNn",
	"dragLayer": "drag-layer_drag-layer_3RGNn",
	"image-wrapper": "drag-layer_image-wrapper_3G0af",
	"imageWrapper": "drag-layer_image-wrapper_3G0af",
	"image": "drag-layer_image_2PHUm"
};

/***/ }),
/* 1785 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ .connection-modal_modal-content_znApD {\n    width: 480px;\n} .connection-modal_header_12IsA {\n    background-color: hsla(163, 85%, 40%, 1);\n} .connection-modal_body_2K6g8 {\n    background: hsla(0, 100%, 100%, 1);\n} .connection-modal_label_1aIgw {\n    font-weight: 500;\n    margin: 0 0 0.75rem;\n} .connection-modal_centered-row_1aluq {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n} .connection-modal_peripheral-tile-pane_1Yvvr {\n    overflow-y: auto;\n    width: 100%;\n    height: 100%;\n} .connection-modal_peripheral-tile_1uEjE {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    background-color: hsla(0, 100%, 100%, 1);\n    border-radius: 0.25rem;\n    padding: 10px;\n    width: 100%;\n    height: 55px;\n    margin-bottom: 0.5rem;\n} .connection-modal_peripheral-tile-name_FWRcO {\n    display: flex;\n    align-items: center;\n} [dir=\"ltr\"] .connection-modal_peripheral-tile-image_fsr_J {\n    margin-right: 0.5rem;\n} [dir=\"rtl\"] .connection-modal_peripheral-tile-image_fsr_J {\n    margin-left: 0.5rem;\n} .connection-modal_peripheral-tile-name-wrapper_2xNWg {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n} .connection-modal_peripheral-tile-name-label_1tXxJ {\n    font-weight: bold;\n    font-size: 0.625rem;\n} .connection-modal_peripheral-tile-name-text_1GANU {\n    font-size: 0.875rem;\n} .connection-modal_peripheral-tile_1uEjE button {\n    padding: 0.6rem 0.75rem;\n    border: none;\n    border-radius: 0.25rem;\n    font-weight: 600;\n    font-size: 0.85rem;\n    background: hsla(30, 100%, 65%, 1);\n    border: hsla(30, 100%, 65%, 1);\n    color: white;\n    cursor: pointer;\n} .connection-modal_signal-strength-meter_2gsno {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    width: 22px;\n    height: 16px;\n} [dir=\"ltr\"] .connection-modal_signal-strength-meter_2gsno {\n    margin-right: 1rem;\n} [dir=\"rtl\"] .connection-modal_signal-strength-meter_2gsno {\n    margin-left: 1rem;\n} .connection-modal_signal-bar_2tjmP {\n    width: 4px;\n    border-radius: 4px;\n    background-color: #DBDBDB;\n} .connection-modal_signal-bar_2tjmP:nth-of-type(1) { height: 25%; } .connection-modal_signal-bar_2tjmP:nth-of-type(2) { height: 50%; } .connection-modal_signal-bar_2tjmP:nth-of-type(3) { height: 75%; } .connection-modal_signal-bar_2tjmP:nth-of-type(4) { height: 100%; } .connection-modal_green-bar_1aoqx {\n    background-color: hsla(163, 85%, 40%, 1);\n} .connection-modal_radar-small_3aU1r {\n    width: 40px;\n    height: 40px;\n} [dir=\"ltr\"] .connection-modal_radar-small_3aU1r {\n    margin-right: 0.5rem;\n} [dir=\"rtl\"] .connection-modal_radar-small_3aU1r {\n    margin-left: 0.5rem;\n} .connection-modal_radar-big_2N6j7 {\n    width: 120px;\n    height: 120px;\n} .connection-modal_radar-spin_3EJdF {\n    animation: connection-modal_spin_1PyQc 4s linear infinite;\n} [dir=\"ltr\"] .connection-modal_radar_1rdrv {\n    margin-right: .5rem;\n} [dir=\"rtl\"] .connection-modal_radar_1rdrv {\n    margin-left: .5rem;\n} @keyframes connection-modal_spin_1PyQc {\n    100% {\n        transform: rotate(360deg);\n    }\n} .connection-modal_peripheral-activity_2cL0Z {\n    position: relative;\n} .connection-modal_peripheral-activity-icon_2OJ-L {\n    /* width: 80px;\n    height: 80px; */\n} .connection-modal_connection-tip-icon_1HcJH {\n    position: absolute;\n} .connection-modal_bluetooth-connecting-icon_2OEDp {\n    position: absolute;\n    top: -5px;\n    right: -15px;\n    left: -15px;\n    padding: 5px 5px;\n    background-color: hsla(30, 100%, 65%, 1);\n    border-radius: 100%;\n    box-shadow: 0px 0px 0px 4px hsla(30, 100%, 65%, 0.35);\n    /* animation: pulse-blue-ring 1s infinite ease-in-out alternate; */\n    animation: connection-modal_wiggle_27ALc 0.5s infinite ease-in-out alternate;\n\n} @keyframes connection-modal_pulse-blue-ring_3LY8c {\n    100% {\n        box-shadow: 0px 0px 0px 8px hsla(30, 100%, 65%, 0.15);\n    }\n} .connection-modal_bluetooth-connected-icon_2zqfa {\n    position: absolute;\n    top: -5px;\n    right: -15px;\n    left: -15px;\n    padding: 5px 5px;\n    background-color: hsla(163, 85%, 40%, 1);\n    border-radius: 100%;\n    box-shadow: 0px 0px 0px 4px hsla(163, 85%, 40%, 0.25);\n} @keyframes connection-modal_wiggle_27ALc {\n    0% {transform: rotate(3deg) scale(1.05);}\n    25% {transform: rotate(-3deg) scale(1.05);}\n    50% {transform: rotate(5deg) scale(1.05);}\n    75% {transform: rotate(-2deg) scale(1.05);}\n    100% {transform: rotate(0deg) scale(1.05);}\n} .connection-modal_bluetooth-centered-icon_1ewY1 {\n    position: absolute;\n    padding: 5px 5px;\n    background-color: hsla(30, 100%, 65%, 1);\n    border-radius: 100%;\n    box-shadow: 0px 0px 0px 2px hsla(30, 100%, 65%, 0.35);\n} .connection-modal_peripheral-tile-widgets_29jGg {\n    display: flex;\n    align-items: center;\n} .connection-modal_activityArea_PqYoO {\n    height: 165px;\n    background-color: hsla(30, 100%, 65%, 0.15);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: .5rem;\n} .connection-modal_scratch-link-help_THXi8 {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 100%;\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n} .connection-modal_scratch-link-help-step_3T_WN {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n} [dir=\"ltr\"] .connection-modal_scratch-link-help-step_3T_WN {\n    margin-left: 2.5rem;\n} [dir=\"rtl\"] .connection-modal_scratch-link-help-step_3T_WN {\n    margin-right: 2.5rem;\n} .connection-modal_scratch-link-icon_2-yyq {\n    max-width: 50px;\n} [dir=\"ltr\"] .connection-modal_help-step-image_3AZcE {\n    margin-right: 0.5rem;\n} [dir=\"rtl\"] .connection-modal_help-step-image_3AZcE {\n    margin-left: 0.5rem;\n} .connection-modal_help-step-number_20y3d {\n    background: hsla(163, 85%, 40%, 1);\n    border-radius: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: hsla(0, 100%, 100%, 1);\n    font-weight: bold;\n    min-width: 2rem;\n    height: 2rem;\n} [dir=\"ltr\"] .connection-modal_help-step-number_20y3d {\n    margin-right: 0.5rem;\n} [dir=\"rtl\"] .connection-modal_help-step-number_20y3d {\n    margin-left: 0.5rem;\n} .connection-modal_button-row_xsdb5 {\n    font-weight: bolder;\n    text-align: center;\n    display: flex;\n} .connection-modal_abort-connecting-icon_2LN4n {\n    width: 10px;\n    transform: rotate(45deg);\n} .connection-modal_connection-button_QekSE {\n    padding: 0.6rem 0.75rem;\n    border-radius: 0.5rem;\n    background: hsla(30, 100%, 65%, 1);\n    color: white;\n    font-weight: 600;\n    font-size: 0.85rem;\n    margin: 0.25rem;\n    border: none;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n} .connection-modal_connection-button_QekSE:disabled {\n    background: hsla(30, 100%, 65%, 0.35);\n} .connection-modal_segmented-button_3aETV {\n    display: flex;\n} .connection-modal_segmented-button_3aETV .connection-modal_connection-button_QekSE:first-of-type {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    margin-right: 0;\n} .connection-modal_segmented-button_3aETV .connection-modal_connection-button_QekSE:last-of-type {\n    margin-left: 1px;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n} [dir=\"ltr\"] .connection-modal_button-icon-right_1mnlx {\n    margin-left: 0.5rem;\n} [dir=\"rtl\"] .connection-modal_button-icon-right_1mnlx {\n    margin-right: 0.5rem;\n} [dir=\"ltr\"] .connection-modal_button-icon-left_19wwl {\n    margin-right: 0.5rem;\n} [dir=\"rtl\"] .connection-modal_button-icon-left_19wwl {\n    margin-left: 0.5rem;\n} /* reverse back arrow icon for RTL, don't reverse other connection icons */ [dir=\"rtl\"] .connection-modal_button-icon-back_1Y3FL {\n    transform: scaleX(-1);\n} .connection-modal_red-button_343CG {\n    background: hsla(20, 100%, 55%, 1);\n} .connection-modal_corner-buttons_W5WN5 {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding: 0 1rem;\n} .connection-modal_bottom-area_2LH2k {\n    background-color: hsla(0, 100%, 100%, 1);\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 1rem;\n    padding-bottom: .75rem;\n    padding-left: .75rem;\n    padding-right: .75rem;\n} .connection-modal_bottom-area_2LH2k .connection-modal_bottom-area-item_2LoAa+.connection-modal_bottom-area-item_2LoAa {\n    margin-top: 1rem;\n} .connection-modal_instructions_1Y3Rz {\n    text-align: center;\n} .connection-modal_dots-row_dl-ID {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n} .connection-modal_dots-holder_1Cysu {\n    display: flex;\n    padding: 0.25rem 0.1rem;\n    border-radius: 1rem;\n    background: hsla(30, 100%, 65%, 0.15);\n} .connection-modal_dots-holder-success_33Q32 {\n    background: hsla(163, 85%, 40%, 0.25);\n} .connection-modal_dots-holder-error_3iTvC {\n    background: hsla(30, 100%, 55%, 0.25);\n} .connection-modal_dot_x_s6W {\n    width: 0.5rem;\n    height: 0.5rem;\n    margin: 0 0.3rem;\n    border-radius: 100%;\n} .connection-modal_inactive-step-dot_1MAPP {\n    background: hsla(30, 100%, 65%, 0.35);\n} .connection-modal_active-step-dot_18wW5 {\n    background: hsla(30, 100%, 65%, 1);\n} .connection-modal_success-dot_ecbdV {\n    background: hsla(163, 85%, 40%, 1);\n} .connection-modal_error-dot_3e9VW {\n    background: hsla(30, 100%, 55%, 1);\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "connection-modal_modal-content_znApD",
	"modalContent": "connection-modal_modal-content_znApD",
	"header": "connection-modal_header_12IsA",
	"body": "connection-modal_body_2K6g8",
	"label": "connection-modal_label_1aIgw",
	"centered-row": "connection-modal_centered-row_1aluq",
	"centeredRow": "connection-modal_centered-row_1aluq",
	"peripheral-tile-pane": "connection-modal_peripheral-tile-pane_1Yvvr",
	"peripheralTilePane": "connection-modal_peripheral-tile-pane_1Yvvr",
	"peripheral-tile": "connection-modal_peripheral-tile_1uEjE",
	"peripheralTile": "connection-modal_peripheral-tile_1uEjE",
	"peripheral-tile-name": "connection-modal_peripheral-tile-name_FWRcO",
	"peripheralTileName": "connection-modal_peripheral-tile-name_FWRcO",
	"peripheral-tile-image": "connection-modal_peripheral-tile-image_fsr_J",
	"peripheralTileImage": "connection-modal_peripheral-tile-image_fsr_J",
	"peripheral-tile-name-wrapper": "connection-modal_peripheral-tile-name-wrapper_2xNWg",
	"peripheralTileNameWrapper": "connection-modal_peripheral-tile-name-wrapper_2xNWg",
	"peripheral-tile-name-label": "connection-modal_peripheral-tile-name-label_1tXxJ",
	"peripheralTileNameLabel": "connection-modal_peripheral-tile-name-label_1tXxJ",
	"peripheral-tile-name-text": "connection-modal_peripheral-tile-name-text_1GANU",
	"peripheralTileNameText": "connection-modal_peripheral-tile-name-text_1GANU",
	"signal-strength-meter": "connection-modal_signal-strength-meter_2gsno",
	"signalStrengthMeter": "connection-modal_signal-strength-meter_2gsno",
	"signal-bar": "connection-modal_signal-bar_2tjmP",
	"signalBar": "connection-modal_signal-bar_2tjmP",
	"green-bar": "connection-modal_green-bar_1aoqx",
	"greenBar": "connection-modal_green-bar_1aoqx",
	"radar-small": "connection-modal_radar-small_3aU1r",
	"radarSmall": "connection-modal_radar-small_3aU1r",
	"radar-big": "connection-modal_radar-big_2N6j7",
	"radarBig": "connection-modal_radar-big_2N6j7",
	"radar-spin": "connection-modal_radar-spin_3EJdF",
	"radarSpin": "connection-modal_radar-spin_3EJdF",
	"spin": "connection-modal_spin_1PyQc",
	"radar": "connection-modal_radar_1rdrv",
	"peripheral-activity": "connection-modal_peripheral-activity_2cL0Z",
	"peripheralActivity": "connection-modal_peripheral-activity_2cL0Z",
	"peripheral-activity-icon": "connection-modal_peripheral-activity-icon_2OJ-L",
	"peripheralActivityIcon": "connection-modal_peripheral-activity-icon_2OJ-L",
	"connection-tip-icon": "connection-modal_connection-tip-icon_1HcJH",
	"connectionTipIcon": "connection-modal_connection-tip-icon_1HcJH",
	"bluetooth-connecting-icon": "connection-modal_bluetooth-connecting-icon_2OEDp",
	"bluetoothConnectingIcon": "connection-modal_bluetooth-connecting-icon_2OEDp",
	"wiggle": "connection-modal_wiggle_27ALc",
	"bluetooth-connected-icon": "connection-modal_bluetooth-connected-icon_2zqfa",
	"bluetoothConnectedIcon": "connection-modal_bluetooth-connected-icon_2zqfa",
	"bluetooth-centered-icon": "connection-modal_bluetooth-centered-icon_1ewY1",
	"bluetoothCenteredIcon": "connection-modal_bluetooth-centered-icon_1ewY1",
	"peripheral-tile-widgets": "connection-modal_peripheral-tile-widgets_29jGg",
	"peripheralTileWidgets": "connection-modal_peripheral-tile-widgets_29jGg",
	"activityArea": "connection-modal_activityArea_PqYoO",
	"scratch-link-help": "connection-modal_scratch-link-help_THXi8",
	"scratchLinkHelp": "connection-modal_scratch-link-help_THXi8",
	"scratch-link-help-step": "connection-modal_scratch-link-help-step_3T_WN",
	"scratchLinkHelpStep": "connection-modal_scratch-link-help-step_3T_WN",
	"scratch-link-icon": "connection-modal_scratch-link-icon_2-yyq",
	"scratchLinkIcon": "connection-modal_scratch-link-icon_2-yyq",
	"help-step-image": "connection-modal_help-step-image_3AZcE",
	"helpStepImage": "connection-modal_help-step-image_3AZcE",
	"help-step-number": "connection-modal_help-step-number_20y3d",
	"helpStepNumber": "connection-modal_help-step-number_20y3d",
	"button-row": "connection-modal_button-row_xsdb5",
	"buttonRow": "connection-modal_button-row_xsdb5",
	"abort-connecting-icon": "connection-modal_abort-connecting-icon_2LN4n",
	"abortConnectingIcon": "connection-modal_abort-connecting-icon_2LN4n",
	"connection-button": "connection-modal_connection-button_QekSE",
	"connectionButton": "connection-modal_connection-button_QekSE",
	"segmented-button": "connection-modal_segmented-button_3aETV",
	"segmentedButton": "connection-modal_segmented-button_3aETV",
	"button-icon-right": "connection-modal_button-icon-right_1mnlx",
	"buttonIconRight": "connection-modal_button-icon-right_1mnlx",
	"button-icon-left": "connection-modal_button-icon-left_19wwl",
	"buttonIconLeft": "connection-modal_button-icon-left_19wwl",
	"button-icon-back": "connection-modal_button-icon-back_1Y3FL",
	"buttonIconBack": "connection-modal_button-icon-back_1Y3FL",
	"red-button": "connection-modal_red-button_343CG",
	"redButton": "connection-modal_red-button_343CG",
	"corner-buttons": "connection-modal_corner-buttons_W5WN5",
	"cornerButtons": "connection-modal_corner-buttons_W5WN5",
	"bottom-area": "connection-modal_bottom-area_2LH2k",
	"bottomArea": "connection-modal_bottom-area_2LH2k",
	"bottom-area-item": "connection-modal_bottom-area-item_2LoAa",
	"bottomAreaItem": "connection-modal_bottom-area-item_2LoAa",
	"instructions": "connection-modal_instructions_1Y3Rz",
	"dots-row": "connection-modal_dots-row_dl-ID",
	"dotsRow": "connection-modal_dots-row_dl-ID",
	"dots-holder": "connection-modal_dots-holder_1Cysu",
	"dotsHolder": "connection-modal_dots-holder_1Cysu",
	"dots-holder-success": "connection-modal_dots-holder-success_33Q32",
	"dotsHolderSuccess": "connection-modal_dots-holder-success_33Q32",
	"dots-holder-error": "connection-modal_dots-holder-error_3iTvC",
	"dotsHolderError": "connection-modal_dots-holder-error_3iTvC",
	"dot": "connection-modal_dot_x_s6W",
	"inactive-step-dot": "connection-modal_inactive-step-dot_1MAPP",
	"inactiveStepDot": "connection-modal_inactive-step-dot_1MAPP",
	"active-step-dot": "connection-modal_active-step-dot_18wW5",
	"activeStepDot": "connection-modal_active-step-dot_18wW5",
	"success-dot": "connection-modal_success-dot_ecbdV",
	"successDot": "connection-modal_success-dot_ecbdV",
	"error-dot": "connection-modal_error-dot_3e9VW",
	"errorDot": "connection-modal_error-dot_3e9VW",
	"pulse-blue-ring": "connection-modal_pulse-blue-ring_3LY8c",
	"pulseBlueRing": "connection-modal_pulse-blue-ring_3LY8c"
};

/***/ }),
/* 1786 */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(208);
exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */ /* layout contants from `layout-constants.js` */ body {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n} h2 {\n    font-size: 1.5rem;\n    font-weight: bold;\n} p {\n    font-size: 1rem;\n    line-height: 1.5em;\n} /*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/ /* Toolbox z-index: 40; set in scratch-blocks */ /* tooltips should go over add buttons if they overlap */ /* monitors go over add buttons */ /* \"ask\" block text input goes above monitors */ /* menu-bar should go over monitors, alerts and tutorials */ /* tw: show below menu bar normally */ /* Block drag z-index: 1000; default 50 is overriden in blocks.css */ /* so it is draggable into other panes */ /* in most interfaces, the context menu is always on top */ /* from scratch-www */ .telemetry-modal_modal-overlay_SDoFR {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 510;\n    background-color: hsla(215, 100%, 65%, 0.9);\n} .telemetry-modal_modal-content_16B4g {\n    margin: 100px auto;\n    outline: none;\n    border: .25rem solid hsla(0, 100%, 100%, 0.25);\n    padding: 0;\n    border-radius: 0.5rem;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    width: 640px;\n\n    color: hsla(225, 15%, 40%, 1);\n    overflow: hidden;\n} .telemetry-modal_illustration_1Xxcy {\n    width: 100%;\n    height: 123px;\n    background-color: hsla(30, 100%, 65%, 1);\n    background-image: url(" + escape(__webpack_require__(1787)) + ");\n    background-size: cover;\n} .telemetry-modal_body_2Gocn {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n} .telemetry-modal_privacy-policy-link_18tcE {\n    color: hsla(30, 100%, 65%, 1);\n    text-decoration: none;\n} /* stack the radio buttons vertically, not horizontally */ .telemetry-modal_radio-buttons_1Tkl7 label {\n    display: block;\n    margin: 0.5rem;\n    transition: all .125s ease;\n    background-color: hsla(0, 0%, 95%, 1);\n    border-radius: .5rem;\n    margin: 0 auto 0.375rem;\n    align-items: center;\n    padding: 1rem 0;\n    vertical-align: middle;\n} .telemetry-modal_radio-buttons_1Tkl7 label:hover {\n    background-color: hsla(215, 100%, 65%, .1);\n} .telemetry-modal_radio-buttons_1Tkl7 label.telemetry-modal_label-selected_NsTZr,\n.telemetry-modal_radio-buttons_1Tkl7 label.telemetry-modal_label-selected_NsTZr:hover {\n    background-color: hsla(215, 100%, 65%, .25);\n} .telemetry-modal_radio-buttons_1Tkl7 input[type=\"radio\"] {\n    margin: -1px 0.75rem 1px;\n    border: 1px solid hsla(0, 0%, 0%, .1);\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    background-color: hsla(0, 100%, 100%, 1);\n    vertical-align: middle;\n} .telemetry-modal_radio-buttons_1Tkl7 input[type=\"radio\"]:checked,\n.telemetry-modal_radio-buttons_1Tkl7 input[type=\"radio\"]:focus {\n    box-shadow: 0 0 0 2px hsla(215, 100%, 65%, .25);\n    outline: none;\n} .telemetry-modal_radio-buttons_1Tkl7 input[type=\"radio\"]:checked {\n    transition: all .25s ease;\n    background-color: hsla(0, 100%, 100%, 1);\n    border: 1px solid hsla(30, 100%, 65%, 1);\n} .telemetry-modal_radio-buttons_1Tkl7 input[type=\"radio\"]:checked::after {\n    display: block;\n    margin: 0.125rem;\n    border-radius: 50%;\n    background-color: hsla(30, 100%, 65%, 1);\n    width: .625rem;\n    height: .625rem;\n    content: \"\";\n} /* Confirmation buttons at the bottom of the modal */ .telemetry-modal_button-row_1DOWD {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: baseline;\n\n    margin: 1.5rem 0;\n    font-weight: bolder;\n} @keyframes telemetry-modal_fade-out_5Xhoq {\n    0% {opacity: 1}\n    100% {opacity: 0}\n} .telemetry-modal_setting-was-updated_3U6oM {\n    animation: telemetry-modal_fade-out_5Xhoq 3s ease-out;\n    color: #e066ff;\n} .telemetry-modal_button-row_1DOWD button {\n    border: 1px solid hsla(30, 100%, 65%, 1);\n    border-radius: 0.25rem;\n    padding: 0.5rem 1.5rem;\n    color: white;\n    background: hsla(30, 100%, 65%, 1);\n    font-weight: bold;\n    font-size: .875rem;\n    cursor: pointer;\n} .telemetry-modal_button-row_1DOWD button:hover {\n    background: #e066ff;\n    box-shadow: 0 0 0 6px hsla(30, 100%, 65%, 0.35);\n} .telemetry-modal_button-row_1DOWD button:disabled {\n    background: hsla(225, 15%, 40%, 1);\n    border-color: hsla(0, 0%, 0%, 0.15);\n    box-shadow: none;\n    opacity: 0.25;\n} @media screen and (max-height: 660px) {\n    .telemetry-modal_modal-content_16B4g {\n        margin: 5vh auto;\n        width: 90%;\n    }\n} @media screen and (max-height: 540px) {\n    .telemetry-modal_illustration_1Xxcy {\n        display: none;\n    }\n}\n", ""]);

// exports
exports.locals = {
	"modal-overlay": "telemetry-modal_modal-overlay_SDoFR",
	"modalOverlay": "telemetry-modal_modal-overlay_SDoFR",
	"modal-content": "telemetry-modal_modal-content_16B4g",
	"modalContent": "telemetry-modal_modal-content_16B4g",
	"illustration": "telemetry-modal_illustration_1Xxcy",
	"body": "telemetry-modal_body_2Gocn",
	"privacy-policy-link": "telemetry-modal_privacy-policy-link_18tcE",
	"privacyPolicyLink": "telemetry-modal_privacy-policy-link_18tcE",
	"radio-buttons": "telemetry-modal_radio-buttons_1Tkl7",
	"radioButtons": "telemetry-modal_radio-buttons_1Tkl7",
	"label-selected": "telemetry-modal_label-selected_NsTZr",
	"labelSelected": "telemetry-modal_label-selected_NsTZr",
	"button-row": "telemetry-modal_button-row_1DOWD",
	"buttonRow": "telemetry-modal_button-row_1DOWD",
	"setting-was-updated": "telemetry-modal_setting-was-updated_3U6oM",
	"settingWasUpdated": "telemetry-modal_setting-was-updated_3U6oM",
	"fade-out": "telemetry-modal_fade-out_5Xhoq",
	"fadeOut": "telemetry-modal_fade-out_5Xhoq"
};

/***/ }),
/* 1787 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/fb356e819d8ab210a241ce81b9bac33c.png";

/***/ }),
/* 1788 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .username-modal_modal-content_2AuAG {\n    width: 400px;\n} .username-modal_body_3Vuvu {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n} [theme=\"dark\"] .username-modal_body_3Vuvu {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} .username-modal_body_3Vuvu input[type=\"checkbox\"],\n.username-modal_body_3Vuvu input[type=\"radio\"] {\n    margin: 3px;\n} .username-modal_text-input_1gGP7 {\n    margin-bottom: 1.5rem;\n    width: 100%;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    border-radius: 5px;\n    padding: 0 1rem;\n    height: 3rem;\n    color: hsla(225, 15%, 40%, 0.75);\n    font-size: .875rem;\n} [theme=\"dark\"] .username-modal_text-input_1gGP7 {\n    background: hsla(215, 75%, 95%, 1);\n    color: white;\n} .username-modal_button-row_HCDS0 {\n    font-weight: bolder;\n    text-align: right;\n} .username-modal_button-row_HCDS0 button {\n    padding: 0.75rem 1rem;\n    border-radius: 0.25rem;\n    background: white;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n    font-weight: 600;\n    font-size: 0.85rem;\n} .username-modal_button-row_HCDS0 button[disabled] {\n    opacity: 0.5;\n} [dir=\"ltr\"] .username-modal_button-row_HCDS0 button + button {\n    margin-left: 0.5rem;\n} [dir=\"rtl\"] .username-modal_button-row_HCDS0 button + button {\n    margin-right: 0.5rem;\n} .username-modal_button-row_HCDS0 button.username-modal_ok-button_3Ig9c {\n    background: hsla(30, 100%, 65%, 1);\n    border: hsla(30, 100%, 65%, 1);\n    color: white;\n} .username-modal_button-row_HCDS0 button.username-modal_cancel-button_GTsd- {\n    color: black;\n} .username-modal_help-text_3Rb6d {\n    margin-bottom: 1.5rem;\n} .username-modal_must-change_3SKT6 {\n    font-weight: bold;\n} .username-modal_reset-link_37lrN {\n    cursor: pointer;\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "username-modal_modal-content_2AuAG",
	"modalContent": "username-modal_modal-content_2AuAG",
	"body": "username-modal_body_3Vuvu",
	"text-input": "username-modal_text-input_1gGP7",
	"textInput": "username-modal_text-input_1gGP7",
	"button-row": "username-modal_button-row_HCDS0",
	"buttonRow": "username-modal_button-row_HCDS0",
	"ok-button": "username-modal_ok-button_3Ig9c",
	"okButton": "username-modal_ok-button_3Ig9c",
	"cancel-button": "username-modal_cancel-button_GTsd-",
	"cancelButton": "username-modal_cancel-button_GTsd-",
	"help-text": "username-modal_help-text_3Rb6d",
	"helpText": "username-modal_help-text_3Rb6d",
	"must-change": "username-modal_must-change_3SKT6",
	"mustChange": "username-modal_must-change_3SKT6",
	"reset-link": "username-modal_reset-link_37lrN",
	"resetLink": "username-modal_reset-link_37lrN"
};

/***/ }),
/* 1789 */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(208);
exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .checkbox_checkbox_1UwGU {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n    transition: .2s;\n    background-color: white;\n    transition-property: background-color;\n    background-size: 100%;\n    border: 1px solid rgb(92, 92, 92);\n    outline: none;\n} .checkbox_checkbox_1UwGU:hover, .checkbox_checkbox_1UwGU:focus, .checkbox_checkbox_1UwGU:active, .checkbox_checkbox_1UwGU:checked {\n    border-color: hsla(30, 100%, 65%, 1);\n} .checkbox_checkbox_1UwGU:focus, .checkbox_checkbox_1UwGU:active {\n    box-shadow: 0 0 0 3px hsla(30, 100%, 65%, 0.35);\n} .checkbox_checkbox_1UwGU:checked {\n    background-color: hsla(30, 100%, 65%, 1);\n    background-image: url(" + escape(__webpack_require__(1790)) + ");\n} [theme=\"dark\"] .checkbox_checkbox_1UwGU {\n    border-color: transparent;\n}\n", ""]);

// exports
exports.locals = {
	"checkbox": "checkbox_checkbox_1UwGU"
};

/***/ }),
/* 1790 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/620f707d6d9dcd512ec6604b0eda2cb3.svg";

/***/ }),
/* 1791 */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(208);
exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .settings-modal_modal-content_14XGC {\n    max-width: 750px;\n} .settings-modal_body_2_OnB {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n    min-height: 150px;\n    max-height: calc(100vh - 250px);\n    overflow-y: auto;\n} [theme=\"dark\"] .settings-modal_body_2_OnB {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} .settings-modal_setting_3KFrK {\n    display: flex;\n    flex-direction: column;\n    padding: 0.5rem 1rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n} .settings-modal_setting_3KFrK.settings-modal_active_1Tl18 {\n    background: #dbebff;\n} .settings-modal_setting_3KFrK:hover,\n.settings-modal_setting_3KFrK:focus-within {\n    background: #cadef5;\n} [theme=\"dark\"] .settings-modal_setting_3KFrK.settings-modal_active_1Tl18 {\n    background: #16202c;\n} [theme=\"dark\"] .settings-modal_setting_3KFrK:hover,\n[theme=\"dark\"] .settings-modal_setting_3KFrK:focus-within {\n    background: #202f41;\n} .settings-modal_label_21R3L {\n    height: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n} .settings-modal_setting_3KFrK table {\n    border-collapse: collapse;\n} .settings-modal_setting_3KFrK tr,\n.settings-modal_setting_3KFrK td,\n.settings-modal_setting_3KFrK th {\n    padding: 0;\n    margin: 0;\n    border: 1px solid hsla(215, 50%, 90%, 1);\n} .settings-modal_checkbox_3KZcV {\n    margin-right: 0.5rem;\n} .settings-modal_help-icon__QQqI {\n    border: 0;\n    background-color: transparent;\n    background-image: url(" + escape(__webpack_require__(1792)) + ");\n    width: 20px;\n    height: 20px;\n    background-size: 100%;\n    margin-left: 0.5rem;\n    cursor: pointer;\n} [theme=\"dark\"] .settings-modal_help-icon__QQqI {\n    background-image: url(" + escape(__webpack_require__(1793)) + ");\n} .settings-modal_custom-stage-size_dr_Qv > * {\n    margin-right: 0.5rem;\n} .settings-modal_info_Ce_iV {\n    margin-bottom: 0.25rem;\n} .settings-modal_header_112iQ {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin: 0.5rem 0 0 0;\n    font-weight: bold;\n} .settings-modal_divider_3K8K_ {\n    flex-grow: 1;\n    margin-left: 1rem;\n    border-top: 1px dashed hsla(215, 50%, 90%, 1);\n} .settings-modal_button_ACn0P {\n    font-family: inherit;\n    font-size: 14px;\n    background-color: hsla(30, 100%, 65%, 1);\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    border-radius: 4px;\n    cursor: pointer;\n    font-family: inherit;\n    font-weight: bold;\n} .settings-modal_button_ACn0P:active, .settings-modal_button_ACn0P:focus-within {\n    box-shadow: 0 0 0 3px hsla(30, 100%, 65%, 0.35);\n} .settings-modal_warning_3UmRm {\n    padding: 0.5rem 1rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    background: rgb(233, 233, 53);\n} [theme=\"dark\"] .settings-modal_warning_3UmRm {\n    background: rgb(114, 102, 0);\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "settings-modal_modal-content_14XGC",
	"modalContent": "settings-modal_modal-content_14XGC",
	"body": "settings-modal_body_2_OnB",
	"setting": "settings-modal_setting_3KFrK",
	"active": "settings-modal_active_1Tl18",
	"label": "settings-modal_label_21R3L",
	"checkbox": "settings-modal_checkbox_3KZcV",
	"help-icon": "settings-modal_help-icon__QQqI",
	"helpIcon": "settings-modal_help-icon__QQqI",
	"custom-stage-size": "settings-modal_custom-stage-size_dr_Qv",
	"customStageSize": "settings-modal_custom-stage-size_dr_Qv",
	"info": "settings-modal_info_Ce_iV",
	"header": "settings-modal_header_112iQ",
	"divider": "settings-modal_divider_3K8K_",
	"button": "settings-modal_button_ACn0P",
	"warning": "settings-modal_warning_3UmRm"
};

/***/ }),
/* 1792 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/c4c75827d7f30081f493963fadec60a1.svg";

/***/ }),
/* 1793 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "static/assets/171fbf8ebb9d7127d4c59a04568e2af4.svg";

/***/ }),
/* 1794 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* #ffa587 */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* opt-in theme overrides */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /*#ff794d*/ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ /*Trying to match the colors of the orignal*/ /* #E5F0FF */ /* #E9F1FC */ /* #D9E3F2 */ /* 90% transparent version of motion-primary */ /* #FFFFFF */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 25% transparent version of ui-white */ /* 15% transparent version of black */ /* #575E75 */ /* #4C97FF */ /* #3373CC */ /* 35% transparent version of motion-primary */ /* 15% transparent version of motion-primary */ /* #FF661A */ /* #E64D00 */ /* #CF63CF */ /* #BD42BD */ /* #FFAB19 */ /* #FF8C1A */ /* #0FBD8C */ /* #0FBD8C */ /* #FF8C1A */ /* #FFB366 */ /* #FF8C1A */ /* #0FBD8C */ /* #0B8E69 */ /* 35% transparent version of extensions-primary */ /* opaque version of extensions-transparent, on white bg */ /* lighter than motion-primary */ .gm2-custom-extension_modal-content_2c-tw {\n    max-width: 750px;\n} .gm2-custom-extension_body_3ONcy {\n    background: hsla(0, 100%, 100%, 1);\n    padding: 1.5rem 2.25rem;\n    min-height: 150px;\n    max-height: calc(100vh - 250px);\n    overflow-y: auto;\n} [theme=\"dark\"] .gm2-custom-extension_body_3ONcy {\n    color: hsla(225, 15%, 40%, 1);\n    background: hsla(215, 100%, 95%, 1);\n} .gm2-custom-extension_setting_2etMs {\n    display: flex;\n    flex-direction: column;\n    padding: 0.5rem 1rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n} .gm2-custom-extension_setting_2etMs.gm2-custom-extension_active_42STd {\n    background: #dbebff;\n} .gm2-custom-extension_setting_2etMs:hover,\n.gm2-custom-extension_setting_2etMs:focus-within {\n    background: #cadef5;\n} [theme=\"dark\"] .gm2-custom-extension_setting_2etMs.gm2-custom-extension_active_42STd {\n    background: #16202c;\n} [theme=\"dark\"] .gm2-custom-extension_setting_2etMs:hover,\n[theme=\"dark\"] .gm2-custom-extension_setting_2etMs:focus-within {\n    background: #202f41;\n} .gm2-custom-extension_label_1qDve {\n    height: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n} .gm2-custom-extension_setting_2etMs table {\n    border-collapse: collapse;\n} .gm2-custom-extension_setting_2etMs tr,\n.gm2-custom-extension_setting_2etMs td,\n.gm2-custom-extension_setting_2etMs th {\n    padding: 0;\n    margin: 0;\n    border: 1px solid hsla(215, 50%, 90%, 1);\n} .gm2-custom-extension_checkbox_313BL {\n    margin-right: 0.5rem;\n} .gm2-custom-extension_help-icon_7Az4E {\n    border: 0;\n    background-color: transparent;\n    width: 20px;\n    height: 20px;\n    background-size: 100%;\n    margin-left: 0.5rem;\n    cursor: pointer;\n} [theme=\"dark\"] .gm2-custom-extension_help-icon_7Az4E {\n} .gm2-custom-extension_custom-stage-size_1YXdT > * {\n    margin-right: 0.5rem;\n} .gm2-custom-extension_info_2s3Ng {\n    margin-bottom: 0.25rem;\n} .gm2-custom-extension_header_1KYBH {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    margin: 0.5rem 0 0 0;\n    font-weight: bold;\n} .gm2-custom-extension_divider_126rp {\n    flex-grow: 1;\n    margin-left: 1rem;\n    border-top: 1px dashed hsla(215, 50%, 90%, 1);\n} .gm2-custom-extension_button_1y9dK {\n    font-family: inherit;\n    font-size: 14px;\n    background-color: hsla(30, 100%, 65%, 1);\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    border-radius: 4px;\n    cursor: pointer;\n    font-family: inherit;\n    font-weight: bold;\n} .gm2-custom-extension_button_1y9dK:active, .gm2-custom-extension_button_1y9dK:focus-within {\n    box-shadow: 0 0 0 3px hsla(30, 100%, 65%, 0.35);\n} .gm2-custom-extension_warning_2qQE6 {\n    padding: 0.5rem 1rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    background: rgb(233, 233, 53);\n} [theme=\"dark\"] .gm2-custom-extension_warning_2qQE6 {\n    background: rgb(114, 102, 0);\n}\n", ""]);

// exports
exports.locals = {
	"modal-content": "gm2-custom-extension_modal-content_2c-tw",
	"modalContent": "gm2-custom-extension_modal-content_2c-tw",
	"body": "gm2-custom-extension_body_3ONcy",
	"setting": "gm2-custom-extension_setting_2etMs",
	"active": "gm2-custom-extension_active_42STd",
	"label": "gm2-custom-extension_label_1qDve",
	"checkbox": "gm2-custom-extension_checkbox_313BL",
	"help-icon": "gm2-custom-extension_help-icon_7Az4E",
	"helpIcon": "gm2-custom-extension_help-icon_7Az4E",
	"custom-stage-size": "gm2-custom-extension_custom-stage-size_1YXdT",
	"customStageSize": "gm2-custom-extension_custom-stage-size_1YXdT",
	"info": "gm2-custom-extension_info_2s3Ng",
	"header": "gm2-custom-extension_header_1KYBH",
	"divider": "gm2-custom-extension_divider_126rp",
	"button": "gm2-custom-extension_button_1y9dK",
	"warning": "gm2-custom-extension_warning_2qQE6"
};

/***/ }),
/* 1795 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(false);
// imports


// module
exports.push([module.i, "/* make sure to keep these in sync with other constants,\ne.g. STAGE_DIMENSION_DEFAULTS in lib/screen-utils.js */\n\n/* layout contants from `layout-constants.js` */\n\n/* #ffa587 */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* opt-in theme overrides */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/*#ff794d*/\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*Trying to match the colors of the orignal*/\n\n/* #E5F0FF */\n\n/* #E9F1FC */\n\n/* #D9E3F2 */\n\n/* 90% transparent version of motion-primary */\n\n/* #FFFFFF */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 25% transparent version of ui-white */\n\n/* 15% transparent version of black */\n\n/* #575E75 */\n\n/* #4C97FF */\n\n/* #3373CC */\n\n/* 35% transparent version of motion-primary */\n\n/* 15% transparent version of motion-primary */\n\n/* #FF661A */\n\n/* #E64D00 */\n\n/* #CF63CF */\n\n/* #BD42BD */\n\n/* #FFAB19 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0FBD8C */\n\n/* #FF8C1A */\n\n/* #FFB366 */\n\n/* #FF8C1A */\n\n/* #0FBD8C */\n\n/* #0B8E69 */\n\n/* 35% transparent version of extensions-primary */\n\n/* opaque version of extensions-transparent, on white bg */\n\n/* lighter than motion-primary */\n\n/*\n    Contains constants for the z-index values of elements that are part of the global stack context.\n    In other words, z-index values that are \"inside\" a component are not added here.\n    This prevents conflicts between identical z-index values in different components.\n*/\n\n/* Toolbox z-index: 40; set in scratch-blocks */\n\n/* tooltips should go over add buttons if they overlap */\n\n/* monitors go over add buttons */\n\n/* \"ask\" block text input goes above monitors */\n\n/* menu-bar should go over monitors, alerts and tutorials */\n\n/* tw: show below menu bar normally */\n\n/* Block drag z-index: 1000; default 50 is overriden in blocks.css */\n\n/* so it is draggable into other panes */\n\n/* in most interfaces, the context menu is always on top */\n\n.gui_page-wrapper_r7IhT {\n    height: 100%;\n}\n\n.gui_body-wrapper_1T2l7 {\n    height: calc(100% - 3rem);\n    background-color: hsla(215, 100%, 95%, 1);\n}\n\n.gui_body-wrapper_1T2l7 * {\n    box-sizing: border-box;\n}\n\n.gui_flex-wrapper_2AgdD {\n    display: flex;\n\n    /*\n        Make 2 columns:\n        a) for the blocks + workspace panes, and\n        b) for combined stage menu + stage + sprite/stage selectors\n    */\n    flex-direction: row;\n    height: 100%;\n\n    /*\n        Stop scrollbar popping in and out from scratch-blocks border issue\n        https://github.com/LLK/scratch-gui/issues/318\n    */\n    overflow: hidden;\n}\n\n.gui_editor-wrapper_WspaC {\n    /*\n        This is carefully balanced--  the minimum width at which the GUI will be displayed is 1024px.\n        At that size, the stage pane is 408px wide, with $space of padding to each side.\n        However, we must also add the border width to the stage pane. All-in-all, the stage pane's final width is\n        408px + ($space + $stage-standard-border-width * 2) (one border & padding per left/right side).\n\n        @todo This is in place to prevent \"doubling up\" of horizontal scrollbars in narrow windows, but there are likely\n        much better ways to solve that (e.g. undo #2124, remove this flex-basis entirely). However, they run their own\n        risks of breaking things, so let's just leave this as-is for the time being.\n    */\n    flex-basis: calc(1024px - 408px - ((0.5rem + 0.0625rem) * 2));\n    flex-grow: 1;\n    flex-shrink: 0;\n    position: relative;\n\n    display: flex;\n    flex-direction: column;\n}\n\n.gui_tab-list_3r8RB {\n    height: 2.75rem;\n    width: 250px; /* Match width of the toolbox */\n    display: flex;\n    align-items: flex-end;\n    flex-shrink: 0;\n\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-weight: 500;\n    font-size: 0.80rem;\n\n    /* Overrides for react-tabs styling */\n    margin: 0 !important;\n    border-bottom: 0 !important;\n}\n\n.gui_tab_3k_DV {\n    flex-grow: 1;\n    height: 80%;\n    margin-bottom: 0;\n\n    border-radius: 1rem 1rem 0 0;\n    border: 1px solid hsla(0, 0%, 0%, 0.15);\n\n    padding: 0.125rem 1.25rem 0;\n    font-size: 0.75rem;\n\n    background-color: hsla(215, 50%, 90%, 1);\n    color: hsla(225, 15%, 40%, 0.75);\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    -webkit-user-select: none;\n\n       -moz-user-select: none;\n\n        -ms-user-select: none;\n\n            user-select: none;\n    white-space: nowrap;\n}\n\n[theme=\"dark\"] .gui_tab_3k_DV {\n    color: hsla(225, 15%, 40%, 1);\n}\n\n[dir=\"ltr\"] .gui_tab_3k_DV {\n    margin-left: -0.5rem;\n}\n\n[dir=\"rtl\"] .gui_tab_3k_DV {\n    margin-right: -0.5rem;\n}\n\n[dir=\"ltr\"] .gui_tab_3k_DV:nth-of-type(1) {\n    margin-left: 0;\n}\n\n[dir=\"rtl\"] .gui_tab_3k_DV:nth-of-type(1) {\n    margin-right: 0;\n}\n\n/* Use z-indices to force left-on-top for tabs */\n\n.gui_tab_3k_DV:nth-of-type(1) {\n    z-index: 3;\n}\n\n.gui_tab_3k_DV:nth-of-type(2) {\n    z-index: 2;\n}\n\n.gui_tab_3k_DV:nth-of-type(3) {\n    z-index: 1;\n}\n\n.gui_tab_3k_DV:hover {\n  background-color: hsla(215, 100%, 95%, 1);\n}\n\n[theme=\"dark\"] .gui_tab_3k_DV:hover {\n    background-color: hsla(215, 75%, 95%, 1);\n}\n\n.gui_tab_3k_DV.gui_is-selected_3nXL3 {\n    height: 90%;\n    color: hsla(30, 100%, 65%, 1);\n    background-color: hsla(0, 100%, 100%, 1);\n    z-index: 4; /* Make sure selected is always above */\n}\n\n[theme=\"dark\"] .gui_tab_3k_DV.gui_is-selected_3nXL3 {\n    background-color: hsla(215, 75%, 95%, 1);\n}\n\n.gui_tab_3k_DV img {\n    width: 1.375rem;\n    filter: grayscale(100%);\n}\n\n[dir=\"ltr\"] .gui_tab_3k_DV img {\n    margin-right: 0.125rem;\n}\n\n[dir=\"rtl\"] .gui_tab_3k_DV img {\n    margin-left: 0.125rem;\n}\n\n/* mirror blocks and sound tab icons */\n\n[dir=\"rtl\"] .gui_tab_3k_DV:nth-of-type(1) img {\n    transform: scaleX(-1);\n}\n\n[dir=\"rtl\"] .gui_tab_3k_DV:nth-of-type(3) img {\n    transform: scaleX(-1);\n}\n\n.gui_tab_3k_DV.gui_is-selected_3nXL3 img {\n    filter: none;\n}\n\n/* Tab style overrides from react-tabs */\n\n.gui_tab_3k_DV.gui_is-selected_3nXL3:after {\n    display: none;\n}\n\n.gui_tab_3k_DV.gui_is-selected_3nXL3:focus {\n    outline: none;\n    box-shadow: none;\n    border-color: hsla(0, 0%, 0%, 0.15);\n}\n\n.gui_tab_3k_DV.gui_is-selected_3nXL3:focus:after {\n    display: none;\n}\n\n/* Body of the tabs */\n\n.gui_tabs_3Cns4 {\n    position: relative;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.gui_tab-panel_12yVw {\n    position: relative;\n    flex-grow: 1;\n    display: none;\n}\n\n.gui_tab-panel_12yVw.gui_is-selected_3nXL3 {\n    display: flex;\n}\n\n.gui_blocks-wrapper_oRY_r {\n    flex-grow: 1;\n    position: relative;\n}\n\n.gui_stage-and-target-wrapper_2TUbW {\n    /*\n        Makes rows for children:\n          1) stage menu\n          2) stage\n          3) sprite/stage selectors\n        Only reason we need this, is so .targetWrapper, which holds the selectors,\n        goes to full vertical height of the window\n    */\n    display: flex;\n    flex-direction: column;\n    /* pad entire wrapper to the left and right; allow children to fill width */\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n\n    /* this will only ever be as wide as the stage */\n    flex-basis: 0;\n}\n\n.gui_target-wrapper_2YpM2 {\n    display: flex;\n    flex-grow: 1;\n    flex-basis: 0;\n\n    padding-top: 0.5rem;\n    min-height: 0; /* this makes it work in Firefox */\n\n    /*\n        For making the sprite-selector a scrollable pane\n        @todo: Not working in Safari\n    */\n    /* TODO this also breaks the thermometer menu */\n    /* overflow: hidden; */\n}\n\n.gui_extension-button-container_sM98M {\n    width: 3.75rem;\n    height: 3.25rem;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 42;\n    background: hsla(30, 100%, 65%, 1);\n\n    border: 1px solid hsla(30, 100%, 65%, 1);\n    box-sizing: content-box; /* To match scratch-block vertical toolbox borders */\n}\n\n.gui_extension-button-container_sM98M:before {\n    content: \"\";\n    position: absolute;\n    top: calc(calc(-1 * 15px) - 1px);\n    left: -1px;\n    background: linear-gradient(rgba(0, 0, 0, 0),rgba(0, 0, 0, 0.15));\n    height: 15px;\n    width: calc(100% + 0.5px);\n}\n\n.gui_extension-button_3Z58M {\n    background: none;\n    border: none;\n    outline: none;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n}\n\n.gui_extension-button-icon_3lDFf {\n    width: 1.75rem;\n    height: 1.75rem;\n}\n\n[dir=\"rtl\"] .gui_extension-button-icon_3lDFf {\n    transform: scaleX(-1);\n}\n\n.gui_extension-button_3Z58M > div {\n    margin-top: 0;\n}\n\n/* Sprite Selection Watermark */\n\n.gui_watermark_3oGgV {\n    position: absolute;\n    top: 1.25rem;\n    pointer-events: none;\n}\n\n[dir=\"ltr\"] .gui_watermark_3oGgV {\n    right: 1.25rem;\n}\n\n[dir=\"rtl\"] .gui_watermark_3oGgV {\n    left: 1.25rem;\n}\n\n/* Menu */\n\n.gui_menu-bar-position_6ejza {\n    position: relative;\n    z-index: 491;\n}\n\n/* Alerts */\n\n.gui_alerts-container_2cnr7 {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    z-index: 490;\n    position: absolute;\n    margin-top: 53px;\n    pointer-events: none;\n}\n\n/*\n    Make the (background) page not scrollable when modals are open\n    This CSS class is automatically added to the body when react-modal is open\n*/\n\n.ReactModal__Body--open {\n    overflow: hidden;\n}\n\n/* tw: tw: when window is fullscreen, put a solid white background behind the stage */\n\n.gui_fullscreen-background_2RW_a {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: white;\n}\n", ""]);

// exports
exports.locals = {
	"page-wrapper": "gui_page-wrapper_r7IhT",
	"pageWrapper": "gui_page-wrapper_r7IhT",
	"body-wrapper": "gui_body-wrapper_1T2l7",
	"bodyWrapper": "gui_body-wrapper_1T2l7",
	"flex-wrapper": "gui_flex-wrapper_2AgdD",
	"flexWrapper": "gui_flex-wrapper_2AgdD",
	"editor-wrapper": "gui_editor-wrapper_WspaC",
	"editorWrapper": "gui_editor-wrapper_WspaC",
	"tab-list": "gui_tab-list_3r8RB",
	"tabList": "gui_tab-list_3r8RB",
	"tab": "gui_tab_3k_DV",
	"is-selected": "gui_is-selected_3nXL3",
	"isSelected": "gui_is-selected_3nXL3",
	"tabs": "gui_tabs_3Cns4",
	"tab-panel": "gui_tab-panel_12yVw",
	"tabPanel": "gui_tab-panel_12yVw",
	"blocks-wrapper": "gui_blocks-wrapper_oRY_r",
	"blocksWrapper": "gui_blocks-wrapper_oRY_r",
	"stage-and-target-wrapper": "gui_stage-and-target-wrapper_2TUbW",
	"stageAndTargetWrapper": "gui_stage-and-target-wrapper_2TUbW",
	"target-wrapper": "gui_target-wrapper_2YpM2",
	"targetWrapper": "gui_target-wrapper_2YpM2",
	"extension-button-container": "gui_extension-button-container_sM98M",
	"extensionButtonContainer": "gui_extension-button-container_sM98M",
	"extension-button": "gui_extension-button_3Z58M",
	"extensionButton": "gui_extension-button_3Z58M",
	"extension-button-icon": "gui_extension-button-icon_3lDFf",
	"extensionButtonIcon": "gui_extension-button-icon_3lDFf",
	"watermark": "gui_watermark_3oGgV",
	"menu-bar-position": "gui_menu-bar-position_6ejza",
	"menuBarPosition": "gui_menu-bar-position_6ejza",
	"alerts-container": "gui_alerts-container_2cnr7",
	"alertsContainer": "gui_alerts-container_2cnr7",
	"fullscreen-background": "gui_fullscreen-background_2RW_a",
	"fullscreenBackground": "gui_fullscreen-background_2RW_a"
};

/***/ })
]]);